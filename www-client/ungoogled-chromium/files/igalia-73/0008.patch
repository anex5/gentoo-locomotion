--- a/ui/aura/screen_ozone.cc	2019-04-05 03:50:07.000000000 +0300
+++ b/ui/aura/screen_ozone.cc	2019-05-17 18:57:25.632000000 +0300
@@ -4,6 +4,7 @@
 
 #include "ui/aura/screen_ozone.h"
 
+#include "ui/aura/client/screen_position_client.h"
 #include "ui/aura/window.h"
 #include "ui/aura/window_tree_host.h"
 #include "ui/display/display.h"
@@ -30,7 +31,18 @@
 
   aura::WindowTreeHost* host =
       aura::WindowTreeHost::GetForAcceleratedWidget(widget);
-  return host ? host->window() : nullptr;
+  if (!host)
+    return nullptr;
+
+  gfx::NativeWindow window = host->window();
+  gfx::Point local_point = point;
+
+  aura::client::ScreenPositionClient* position_client =
+      aura::client::GetScreenPositionClient(window);
+  if (position_client)
+    position_client->ConvertPointFromScreen(window, &local_point);
+
+  return window->GetEventHandlerForPoint(local_point);
 }
 
 int ScreenOzone::GetNumDisplays() const {
--- a/ui/base/BUILD.gn	2019-04-05 03:50:07.000000000 +0300
+++ b/ui/base/BUILD.gn	2019-05-17 18:57:25.644000000 +0300
@@ -876,7 +876,6 @@
   if (build_ime) {
     sources += [
       "ime/candidate_window_unittest.cc",
-      "ime/chromeos/character_composer_unittest.cc",
       "ime/chromeos/extension_ime_util_unittest.cc",
       "ime/chromeos/ime_keyboard_unittest.cc",
       "ime/chromeos/input_method_util_unittest.cc",
@@ -898,6 +897,11 @@
     if (use_x11) {
       sources += [ "ime/composition_text_util_pango_unittest.cc" ]
     }
+    if (is_chromeos || use_ozone) {
+      sources += [
+        "ime/character_composer_unittest.cc",
+      ]
+    }
   }
 
   deps = [
--- a/ui/base/clipboard/BUILD.gn	2019-04-05 03:50:07.000000000 +0300
+++ b/ui/base/clipboard/BUILD.gn	2019-05-17 18:57:25.648000000 +0300
@@ -84,7 +84,14 @@
 
   if (use_aura) {
     # Aura clipboard.
-    if (use_x11 && is_desktop_linux) {
+    # Chromecast uses clipboard_aura now.
+    if (is_desktop_linux && !is_chromecast) {
+      if (use_ozone) {
+        sources += [
+          "clipboard_ozone.cc",
+          "clipboard_ozone.h",
+        ]
+      } else if (use_x11) {
       sources += [
         "clipboard_aurax11.cc",
         "clipboard_aurax11.h",
@@ -95,6 +102,7 @@
         "//ui/base/x",
         "//ui/gfx/x",
       ]
+      }
     } else if (!is_win) {
       # This file is used for all non-X11, non-Windows aura Builds.
       sources += [
@@ -115,6 +123,10 @@
       "CoreFoundation.framework",
     ]
   }
+
+  if (use_ozone) {
+    deps += [ "//ui/ozone" ]
+  }
 }
 
 jumbo_source_set("clipboard_test_support") {
--- a/ui/base/clipboard/clipboard_test_template.h	2019-04-05 03:50:07.000000000 +0300
+++ b/ui/base/clipboard/clipboard_test_template.h	2019-05-17 18:57:25.652000000 +0300
@@ -189,8 +189,8 @@
   EXPECT_EQ(rtf, result);
 }
 
-// TODO(dnicoara) Enable test once Ozone implements clipboard support:
-// crbug.com/361707
+// TODO(msisov, tonikitoo): Enable test once ClipboardOzone implements
+// selection support. https://crbug.com/911992
 #if defined(OS_LINUX) && !defined(OS_CHROMEOS) && !defined(USE_OZONE)
 TYPED_TEST(ClipboardTest, MultipleBufferTest) {
   base::string16 text(ASCIIToUTF16("Standard")), text_result;
@@ -376,8 +376,10 @@
   this->clipboard().ReadAsciiText(CLIPBOARD_TYPE_COPY_PASTE, &ascii_text);
   EXPECT_EQ(UTF16ToUTF8(url), ascii_text);
 
+// TODO(tonikitoo, msisov): enable back for ClipboardOzone implements
+// selection support. https://crbug.com/911992
 #if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_ANDROID) && \
-    !defined(OS_CHROMEOS)
+    !defined(OS_CHROMEOS) && !defined(USE_OZONE)
   ascii_text.clear();
   this->clipboard().ReadAsciiText(CLIPBOARD_TYPE_SELECTION, &ascii_text);
   EXPECT_EQ(UTF16ToUTF8(url), ascii_text);
--- a/ui/base/clipboard/DEPS	2019-04-05 03:50:07.000000000 +0300
+++ b/ui/base/clipboard/DEPS	2019-05-17 18:57:25.648000000 +0300
@@ -1,4 +1,7 @@
 include_rules = [
+  "-ui/ozone/*",
   "+jni",
   "+third_party/mozilla",
+  "+ui/ozone/public/ozone_platform.h",
+  "+ui/ozone/public/platform_clipboard.h",
 ]
--- a/ui/base/ime/BUILD.gn	2019-04-05 03:50:07.000000000 +0300
+++ b/ui/base/ime/BUILD.gn	2019-05-17 18:57:25.672000000 +0300
@@ -41,6 +41,18 @@
     ":text_input_types",
     "//skia",
   ]
+
+  if (is_chromeos || use_ozone) {
+    sources += [
+      "character_composer.cc",
+      "character_composer.h",
+    ]
+    deps += [
+      "//ui/events:dom_keycode_converter",
+      "//ui/events:events",
+      "//ui/events:events_base",
+    ]
+  }
 }
 
 jumbo_component("ime") {
@@ -98,8 +110,6 @@
 
   if (is_chromeos) {
     sources += [
-      "chromeos/character_composer.cc",
-      "chromeos/character_composer.h",
       "chromeos/component_extension_ime_manager.cc",
       "chromeos/component_extension_ime_manager.h",
       "chromeos/extension_ime_util.cc",
@@ -190,7 +200,6 @@
       "//services/ws/public/cpp/input_devices",
       "//ui/base/ime/chromeos/public/interfaces",
       "//ui/chromeos/strings",
-      "//ui/events:dom_keycode_converter",
     ]
     sources += [
       "chromeos/ime_keyboard_mus.cc",
--- a/ui/base/ime/input_method_chromeos.h	2019-04-05 03:50:07.000000000 +0300
+++ b/ui/base/ime/input_method_chromeos.h	2019-05-17 18:57:25.684000000 +0300
@@ -15,7 +15,7 @@
 #include "base/compiler_specific.h"
 #include "base/macros.h"
 #include "base/memory/weak_ptr.h"
-#include "ui/base/ime/chromeos/character_composer.h"
+#include "ui/base/ime/character_composer.h"
 #include "ui/base/ime/composition_text.h"
 #include "ui/base/ime/ime_input_context_handler_interface.h"
 #include "ui/base/ime/input_method_base.h"
--- a/ui/chromeos/events/event_rewriter_chromeos.cc	2019-04-05 03:50:07.000000000 +0300
+++ b/ui/chromeos/events/event_rewriter_chromeos.cc	2019-05-17 18:57:25.720000000 +0300
@@ -270,6 +270,30 @@
 
 }  // namespace
 
+///////////////////////////////////////////////////////////////////////////////
+
+EventRewriterChromeOS::MutableKeyState::MutableKeyState()
+    : MutableKeyState(0, ui::DomCode::NONE, 0, ui::KeyboardCode::VKEY_NONAME) {}
+
+EventRewriterChromeOS::MutableKeyState::MutableKeyState(
+    const ui::KeyEvent* key_event)
+    : MutableKeyState(key_event->flags(),
+                      key_event->code(),
+                      key_event->GetDomKey(),
+                      key_event->key_code()) {}
+
+EventRewriterChromeOS::MutableKeyState::MutableKeyState(
+    int input_flags,
+    ui::DomCode input_code,
+    ui::DomKey::Base input_key,
+    ui::KeyboardCode input_key_code)
+    : flags(input_flags),
+      code(input_code),
+      key(input_key),
+      key_code(input_key_code) {}
+
+///////////////////////////////////////////////////////////////////////////////
+
 EventRewriterChromeOS::EventRewriterChromeOS(
     Delegate* delegate,
     ui::EventRewriter* sticky_keys_controller)
@@ -350,8 +374,11 @@
     std::unique_ptr<ui::Event>* rewritten_event) {
   if ((event.type() == ui::ET_KEY_PRESSED) ||
       (event.type() == ui::ET_KEY_RELEASED)) {
-    return RewriteKeyEvent(static_cast<const ui::KeyEvent&>(event),
-                           rewritten_event);
+    ui::EventRewriteStatus status =
+        RewriteKeyEvent(*((&event)->AsKeyEvent()), rewritten_event);
+    RewriteKeyEventInContext(*((&event)->AsKeyEvent()), rewritten_event,
+                             &status);
+    return status;
   }
   if ((event.type() == ui::ET_MOUSE_PRESSED) ||
       (event.type() == ui::ET_MOUSE_RELEASED)) {
@@ -377,6 +404,15 @@
 ui::EventRewriteStatus EventRewriterChromeOS::NextDispatchEvent(
     const ui::Event& last_event,
     std::unique_ptr<ui::Event>* new_event) {
+  if (dispatched_key_events_.size()) {
+    *new_event = std::move(dispatched_key_events_.back());
+    dispatched_key_events_.pop_back();
+
+    if (dispatched_key_events_.size())
+      return ui::EVENT_REWRITE_DISPATCH_ANOTHER;
+    return ui::EVENT_REWRITE_REWRITTEN;
+  }
+
   if (sticky_keys_controller_) {
     // In the case of sticky keys, we know what the events obtained here are:
     // modifier key releases that match the ones previously discarded. So, we
@@ -1203,6 +1239,123 @@
   return ui::EF_NONE;
 }
 
+void EventRewriterChromeOS::RewriteKeyEventInContext(
+    const ui::KeyEvent& key_event,
+    std::unique_ptr<ui::Event>* rewritten_event,
+    ui::EventRewriteStatus* status) {
+  DCHECK(status);
+
+  if (*status == EventRewriteStatus::EVENT_REWRITE_DISCARD)
+    return;
+
+  MutableKeyState current_key_state;
+  auto key_state_comparator =
+      [&current_key_state](
+          const std::pair<MutableKeyState, MutableKeyState>& key_state) {
+        return (current_key_state.code == key_state.first.code) &&
+               (current_key_state.key == key_state.first.key) &&
+               (current_key_state.key_code == key_state.first.key_code);
+      };
+
+  const int mapped_flag = ModifierDomKeyToEventFlag(key_event.GetDomKey());
+
+  if (key_event.type() == ET_KEY_PRESSED) {
+    current_key_state = MutableKeyState(
+        rewritten_event->get()
+            ? static_cast<const ui::KeyEvent*>(rewritten_event->get())
+            : &key_event);
+    MutableKeyState original_key_state(&key_event);
+    auto iter = std::find_if(pressed_key_states_.begin(),
+                             pressed_key_states_.end(), key_state_comparator);
+
+    // When a key is pressed, store |current_key_state| if it is not stored
+    // before.
+    if (iter == pressed_key_states_.end()) {
+      pressed_key_states_.push_back(
+          std::make_pair(current_key_state, original_key_state));
+    }
+
+    return;
+  }
+
+  DCHECK_EQ(key_event.type(), ET_KEY_RELEASED);
+
+  if (mapped_flag != EF_NONE) {
+    // The released key is a modifier
+
+    DomKey::Base current_key = key_event.GetDomKey();
+    auto key_state_iter = pressed_key_states_.begin();
+    int event_flags = rewritten_event->get() ? (*rewritten_event)->flags()
+                                             : key_event.flags();
+    rewritten_event->reset();
+
+    // Iterate the keys being pressed. Release the key events which satisfy one
+    // of the following conditions:
+    // (1) the key event's original key code (before key event rewriting if
+    // any) is the same with the key to be released.
+    // (2) the key event is rewritten and its original flags are influenced by
+    // the key to be released.
+    // Example: Press the Launcher button, Press the Up Arrow button, Release
+    // the Launcher button. When Launcher is released: the key event whose key
+    // code is Launcher should be released because it satisfies the condition 1;
+    // the key event whose key code is PageUp should be released because it
+    // satisfies the condition 2.
+    while (key_state_iter != pressed_key_states_.end()) {
+      const bool is_rewritten =
+          (key_state_iter->first.key != key_state_iter->second.key);
+      const bool flag_affected = key_state_iter->second.flags & mapped_flag;
+      const bool should_release = key_state_iter->second.key == current_key ||
+                                  (flag_affected && is_rewritten);
+
+      if (should_release) {
+        // If the key should be released, create a key event for it.
+        std::unique_ptr<ui::KeyEvent> dispatched_event =
+            std::make_unique<ui::KeyEvent>(
+                key_event.type(), key_state_iter->first.key_code,
+                key_state_iter->first.code, event_flags,
+                key_state_iter->first.key, key_event.time_stamp());
+        if (!rewritten_event->get())
+          *rewritten_event = std::move(dispatched_event);
+        else
+          dispatched_key_events_.push_back(std::move(dispatched_event));
+
+        key_state_iter = pressed_key_states_.erase(key_state_iter);
+        continue;
+      }
+      key_state_iter++;
+    }
+
+    if (dispatched_key_events_.empty()) {
+      *status = rewritten_event->get()
+                    ? EventRewriteStatus::EVENT_REWRITE_REWRITTEN
+                    : EventRewriteStatus::EVENT_REWRITE_DISCARD;
+    } else {
+      *status = EventRewriteStatus::EVENT_REWRITE_DISPATCH_ANOTHER;
+    }
+  } else {
+    // The released key is not a modifier
+
+    current_key_state = MutableKeyState(
+        rewritten_event->get()
+            ? static_cast<const ui::KeyEvent*>(rewritten_event->get())
+            : &key_event);
+    auto iter = std::find_if(pressed_key_states_.begin(),
+                             pressed_key_states_.end(), key_state_comparator);
+    if (iter != pressed_key_states_.end()) {
+      pressed_key_states_.erase(iter);
+    } else {
+      // Event rewriting may create a meaningless key event.
+      // For example: press the Up Arrow button, press the Launcher button,
+      // release the Up Arrow. When the Up Arrow button is released, key event
+      // rewriting happens. However, the rewritten event is not among
+      // |pressed_key_states_|. So it should be blocked and the original event
+      // should be propagated.
+      rewritten_event->reset();
+      *status = EventRewriteStatus::EVENT_REWRITE_CONTINUE;
+    }
+  }
+}
+
 void EventRewriterChromeOS::KeyboardDeviceAddedInternal(
     int device_id,
     DeviceType type,
--- a/ui/chromeos/events/event_rewriter_chromeos.h	2019-04-05 03:50:07.000000000 +0300
+++ b/ui/chromeos/events/event_rewriter_chromeos.h	2019-05-17 18:57:25.720000000 +0300
@@ -5,10 +5,13 @@
 #ifndef UI_CHROMEOS_EVENTS_EVENT_REWRITER_CHROMEOS_H_
 #define UI_CHROMEOS_EVENTS_EVENT_REWRITER_CHROMEOS_H_
 
+#include <list>
 #include <map>
 #include <memory>
 #include <set>
 #include <string>
+#include <utility>
+#include <vector>
 
 #include "base/files/file_path.h"
 #include "base/macros.h"
@@ -64,6 +67,13 @@
 
   // Things that keyboard-related rewriter phases can change about an Event.
   struct MutableKeyState {
+    MutableKeyState();
+    explicit MutableKeyState(const ui::KeyEvent* key_event);
+    MutableKeyState(int input_flags,
+                    ui::DomCode input_code,
+                    ui::DomKey::Base input_key,
+                    ui::KeyboardCode input_key_code);
+
     int flags;
     ui::DomCode code;
     ui::DomKey::Base key;
@@ -208,6 +218,13 @@
   void RewriteLocatedEvent(const ui::Event& event, int* flags);
   int RewriteModifierClick(const ui::MouseEvent& event, int* flags);
 
+  // Take the keys being pressed into consideration, in contrast to
+  // RewriteKeyEvent which computes the rewritten event and event rewrite status
+  // in stateless way.
+  void RewriteKeyEventInContext(const ui::KeyEvent& event,
+                                std::unique_ptr<ui::Event>* rewritten_event,
+                                ui::EventRewriteStatus* status);
+
   // A set of device IDs whose press event has been rewritten.
   // This is to ensure that press and release events are rewritten consistently.
   std::set<int> pressed_device_ids_;
@@ -222,6 +239,14 @@
 
   Delegate* const delegate_;
 
+  // For each pair, the first element is the rewritten key state and the second
+  // one is the original key state. If no key event rewriting happens, the first
+  // element and the second element are identical.
+  std::list<std::pair<MutableKeyState, MutableKeyState>> pressed_key_states_;
+
+  // Store key events when there are more than one key events to be dispatched.
+  std::vector<std::unique_ptr<ui::KeyEvent>> dispatched_key_events_;
+
   // The sticky keys controller is not owned here;
   // at time of writing it is a singleton in ash::Shell.
   ui::EventRewriter* const sticky_keys_controller_;
--- a/ui/events/keycodes/keyboard_code_conversion.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/events/keycodes/keyboard_code_conversion.cc	2019-05-17 18:57:25.896000000 +0300
@@ -263,4 +263,34 @@
       DomCodeToUsLayoutKeyboardCode(dom_code));
 }
 
+int ModifierDomKeyToEventFlag(DomKey key) {
+  switch (key) {
+    case DomKey::ALT:
+      return EF_ALT_DOWN;
+    case DomKey::ALT_GRAPH:
+      return EF_ALTGR_DOWN;
+    case DomKey::CAPS_LOCK:
+      return EF_CAPS_LOCK_ON;
+    case DomKey::CONTROL:
+      return EF_CONTROL_DOWN;
+    case DomKey::META:
+      return EF_COMMAND_DOWN;
+    case DomKey::SHIFT:
+      return EF_SHIFT_DOWN;
+    case DomKey::SHIFT_LEVEL5:
+      return EF_MOD3_DOWN;
+    default:
+      return EF_NONE;
+  }
+  // Not represented:
+  //   DomKey::ACCEL
+  //   DomKey::FN
+  //   DomKey::FN_LOCK
+  //   DomKey::HYPER
+  //   DomKey::NUM_LOCK
+  //   DomKey::SCROLL_LOCK
+  //   DomKey::SUPER
+  //   DomKey::SYMBOL_LOCK
+}
+
 }  // namespace ui
--- a/ui/events/keycodes/keyboard_code_conversion.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/events/keycodes/keyboard_code_conversion.h	2019-05-17 18:57:25.896000000 +0300
@@ -107,6 +107,10 @@
 EVENTS_BASE_EXPORT KeyboardCode
 DomCodeToUsLayoutNonLocatedKeyboardCode(DomCode dom_code);
 
+// Returns the ui::EventFlags value associated with a modifier key,
+// or 0 (EF_NONE) if the key is not a modifier.
+EVENTS_BASE_EXPORT int ModifierDomKeyToEventFlag(DomKey key);
+
 }  // namespace ui
 
 #endif  // UI_EVENTS_KEYCODES_KEYBOARD_CODE_CONVERSION_H_
--- a/ui/events/ozone/BUILD.gn	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/events/ozone/BUILD.gn	2019-05-17 18:57:25.900000000 +0300
@@ -188,8 +188,6 @@
     "layout/keyboard_layout_engine.h",
     "layout/keyboard_layout_engine_manager.cc",
     "layout/keyboard_layout_engine_manager.h",
-    "layout/layout_util.cc",
-    "layout/layout_util.h",
     "layout/no/no_keyboard_layout_engine.cc",
     "layout/no/no_keyboard_layout_engine.h",
     "layout/stub/stub_keyboard_layout_engine.cc",
--- a/ui/events/ozone/evdev/keyboard_evdev.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/events/ozone/evdev/keyboard_evdev.cc	2019-05-17 18:57:25.908000000 +0300
@@ -12,10 +12,10 @@
 #include "ui/events/event_utils.h"
 #include "ui/events/keycodes/dom/dom_code.h"
 #include "ui/events/keycodes/dom/keycode_converter.h"
+#include "ui/events/keycodes/keyboard_code_conversion.h"
 #include "ui/events/ozone/evdev/keyboard_util_evdev.h"
 #include "ui/events/ozone/layout/keyboard_layout_engine.h"
 #include "ui/events/ozone/layout/keyboard_layout_engine_manager.h"
-#include "ui/events/ozone/layout/layout_util.h"
 
 namespace ui {
 
--- a/ui/events/ozone/evdev/keyboard_util_evdev.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/events/ozone/evdev/keyboard_util_evdev.h	2019-05-17 18:57:25.908000000 +0300
@@ -5,10 +5,12 @@
 #ifndef UI_EVENTS_OZONE_EVDEV_KEYBOARD_UTIL_EVDEV_H_
 #define UI_EVENTS_OZONE_EVDEV_KEYBOARD_UTIL_EVDEV_H_
 
+#include "ui/events/ozone/evdev/events_ozone_evdev_export.h"
+
 namespace ui {
 
-int NativeCodeToEvdevCode(int native_code);
-int EvdevCodeToNativeCode(int evdev_code);
+int EVENTS_OZONE_EVDEV_EXPORT NativeCodeToEvdevCode(int native_code);
+int EVENTS_OZONE_EVDEV_EXPORT EvdevCodeToNativeCode(int evdev_code);
 
 }  // namespace ui
 
--- a/ui/events/ozone/layout/stub/stub_keyboard_layout_engine.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/events/ozone/layout/stub/stub_keyboard_layout_engine.cc	2019-05-17 18:57:25.916000000 +0300
@@ -8,7 +8,6 @@
 #include "ui/events/keycodes/dom/dom_code.h"
 #include "ui/events/keycodes/dom/dom_key.h"
 #include "ui/events/keycodes/keyboard_code_conversion.h"
-#include "ui/events/ozone/layout/layout_util.h"
 
 namespace ui {
 
--- a/ui/events/ozone/layout/xkb/xkb_keyboard_layout_engine.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/events/ozone/layout/xkb/xkb_keyboard_layout_engine.cc	2019-05-17 18:57:25.916000000 +0300
@@ -8,6 +8,7 @@
 #include <xkbcommon/xkbcommon-names.h>
 
 #include <algorithm>
+#include <utility>
 
 #include "base/bind.h"
 #include "base/location.h"
@@ -823,26 +824,31 @@
                {ui::EF_COMMAND_DOWN, XKB_MOD_NAME_LOGO},
                {ui::EF_ALTGR_DOWN, "Mod5"},
                {ui::EF_MOD3_DOWN, "Mod3"},
-               {ui::EF_CAPS_LOCK_ON, XKB_MOD_NAME_CAPS}};
+               {ui::EF_CAPS_LOCK_ON, XKB_MOD_NAME_CAPS},
+               {ui::EF_NUM_LOCK_ON, XKB_MOD_NAME_NUM}};
   xkb_flag_map_.clear();
   xkb_flag_map_.reserve(base::size(flags));
+  xkb_mod_mask_t num_lock_mask = 0;
   for (size_t i = 0; i < base::size(flags); ++i) {
     xkb_mod_index_t index = xkb_keymap_mod_get_index(keymap, flags[i].xkb_name);
     if (index == XKB_MOD_INVALID) {
       DVLOG(3) << "XKB keyboard layout does not contain " << flags[i].xkb_name;
     } else {
       xkb_mod_mask_t flag = static_cast<xkb_mod_mask_t>(1) << index;
-      XkbFlagMapEntry e = {flags[i].ui_flag, flag};
+      XkbFlagMapEntry e = {flags[i].ui_flag, flag, index};
       xkb_flag_map_.push_back(e);
+      if (flags[i].ui_flag == EF_NUM_LOCK_ON)
+        num_lock_mask = flag;
     }
   }
+  layout_index_ = 0;
 
+#if defined(OS_CHROMEOS)
   // Update num lock mask.
-  num_lock_mod_mask_ = 0;
-  xkb_mod_index_t num_mod_index =
-      xkb_keymap_mod_get_index(keymap, XKB_MOD_NAME_NUM);
-  if (num_mod_index != XKB_MOD_INVALID)
-    num_lock_mod_mask_ = static_cast<xkb_mod_mask_t>(1) << num_mod_index;
+  num_lock_mod_mask_ = num_lock_mask;
+#endif
+  shift_mod_mask_ = EventFlagsToXkbFlags(ui::EF_SHIFT_DOWN);
+  altgr_mod_mask_ = EventFlagsToXkbFlags(ui::EF_ALTGR_DOWN);
 }
 
 xkb_mod_mask_t XkbKeyboardLayoutEngine::EventFlagsToXkbFlags(
@@ -852,11 +858,31 @@
     if (ui_flags & entry.ui_flag)
       xkb_flags |= entry.xkb_flag;
   }
-  // NumLock is always on.
+#if defined(OS_CHROMEOS)
+  // In ChromeOS NumLock is always on.
   xkb_flags |= num_lock_mod_mask_;
+#endif
   return xkb_flags;
 }
 
+int XkbKeyboardLayoutEngine::UpdateModifiers(uint32_t depressed,
+                                             uint32_t latched,
+                                             uint32_t locked,
+                                             uint32_t group) {
+  auto* state = xkb_state_.get();
+  xkb_state_update_mask(state, depressed, latched, locked, 0, 0, group);
+  auto component = static_cast<xkb_state_component>(XKB_STATE_MODS_DEPRESSED |
+                                                    XKB_STATE_MODS_LATCHED |
+                                                    XKB_STATE_MODS_LOCKED);
+  int ui_flags = 0;
+  for (const auto& entry : xkb_flag_map_) {
+    if (xkb_state_mod_index_is_active(state, entry.xkb_index, component))
+      ui_flags |= entry.ui_flag;
+  }
+  layout_index_ = group;
+  return ui_flags;
+}
+
 bool XkbKeyboardLayoutEngine::XkbLookup(xkb_keycode_t xkb_keycode,
                                         xkb_mod_mask_t xkb_flags,
                                         xkb_keysym_t* xkb_keysym,
@@ -865,11 +891,14 @@
     LOG(ERROR) << "No current XKB state";
     return false;
   }
-  xkb_state_update_mask(xkb_state_.get(), xkb_flags, 0, 0, 0, 0, 0);
-  *xkb_keysym = xkb_state_key_get_one_sym(xkb_state_.get(), xkb_keycode);
+
+  auto* state = xkb_state_.get();
+  xkb_state_update_mask(state, xkb_flags, 0, 0, 0, 0, layout_index_);
+  *xkb_keysym = xkb_state_key_get_one_sym(state, xkb_keycode);
+
   if (*xkb_keysym == XKB_KEY_NoSymbol)
     return false;
-  *character = xkb_state_key_get_utf32(xkb_state_.get(), xkb_keycode);
+  *character = xkb_state_key_get_utf32(state, xkb_keycode);
   return true;
 }
 
@@ -914,7 +943,7 @@
       if (multi->subtable[i].test_shift) {
         if (shift_character == kNonCharacter) {
           shift_character = XkbSubCharacter(xkb_keycode, xkb_flags, character,
-                                            ui::EF_SHIFT_DOWN);
+                                            shift_mod_mask_);
         }
         if (shift_character != multi->subtable[i].shift_character)
           continue;
@@ -922,7 +951,7 @@
       if (multi->subtable[i].test_altgr) {
         if (altgr_character == kNonCharacter) {
           altgr_character = XkbSubCharacter(xkb_keycode, xkb_flags, character,
-                                            ui::EF_ALTGR_DOWN);
+                                            altgr_mod_mask_);
         }
         if (altgr_character != multi->subtable[i].altgr_character)
           continue;
@@ -948,8 +977,7 @@
     xkb_keycode_t xkb_keycode,
     xkb_mod_mask_t base_flags,
     base::char16 base_character,
-    int ui_flags) const {
-  xkb_mod_mask_t flags = EventFlagsToXkbFlags(ui_flags);
+    xkb_mod_mask_t flags) const {
   if (flags == base_flags)
     return base_character;
   xkb_keysym_t keysym;
--- a/ui/events/ozone/layout/xkb/xkb_keyboard_layout_engine.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/events/ozone/layout/xkb/xkb_keyboard_layout_engine.h	2019-05-17 18:57:25.916000000 +0300
@@ -9,6 +9,7 @@
 #include <xkbcommon/xkbcommon.h>
 
 #include <memory>
+#include <string>
 #include <vector>
 
 #include "base/memory/free_deleter.h"
@@ -26,7 +27,7 @@
 class EVENTS_OZONE_LAYOUT_EXPORT XkbKeyboardLayoutEngine
     : public KeyboardLayoutEngine {
  public:
-  XkbKeyboardLayoutEngine(const XkbKeyCodeConverter& converter);
+  explicit XkbKeyboardLayoutEngine(const XkbKeyCodeConverter& converter);
   ~XkbKeyboardLayoutEngine() override;
 
   // KeyboardLayoutEngine:
@@ -45,6 +46,11 @@
               DomKey* dom_key,
               KeyboardCode* key_code) const override;
 
+  int UpdateModifiers(uint32_t depressed,
+                      uint32_t latched,
+                      uint32_t locked,
+                      uint32_t group);
+
   static void ParseLayoutName(const std::string& layout_name,
                               std::string* layout_id,
                               std::string* layout_variant);
@@ -54,11 +60,16 @@
   struct XkbFlagMapEntry {
     int ui_flag;
     xkb_mod_mask_t xkb_flag;
+    xkb_mod_index_t xkb_index;
   };
   std::vector<XkbFlagMapEntry> xkb_flag_map_;
 
-  // Flag mask for num lock, which is always considered enabled.
+#if defined(OS_CHROMEOS)
+  // Flag mask for num lock, which is always considered enabled in ChromeOS.
   xkb_mod_mask_t num_lock_mod_mask_ = 0;
+#endif
+  xkb_mod_mask_t shift_mod_mask_ = 0;
+  xkb_mod_mask_t altgr_mod_mask_ = 0;
 
   // Determines the Windows-based KeyboardCode (VKEY) for a character key,
   // accounting for non-US layouts. May return VKEY_UNKNOWN, in which case the
@@ -105,7 +116,7 @@
   base::char16 XkbSubCharacter(xkb_keycode_t xkb_keycode,
                                xkb_mod_mask_t base_flags,
                                base::char16 base_character,
-                               int ui_flags) const;
+                               xkb_mod_mask_t flags) const;
 
   // Callback when keymap file is loaded complete.
   void OnKeymapLoaded(const std::string& layout_name,
@@ -115,6 +126,8 @@
 
   std::string current_layout_name_;
 
+  xkb_layout_index_t layout_index_ = 0;
+
   // Support weak pointers for attach & detach callbacks.
   base::WeakPtrFactory<XkbKeyboardLayoutEngine> weak_ptr_factory_;
 };
--- a/ui/ozone/common/linux/gbm_wrapper.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/common/linux/gbm_wrapper.cc	2019-05-17 18:57:26.156000000 +0300
@@ -5,6 +5,10 @@
 #include "ui/ozone/common/linux/gbm_wrapper.h"
 
 #include <gbm.h>
+#if !defined(MINIGBM)
+#include <fcntl.h>
+#include <xf86drm.h>
+#endif
 
 #include "base/posix/eintr_wrapper.h"
 #include "third_party/skia/include/core/SkSurface.h"
@@ -17,9 +21,57 @@
 
 namespace {
 
-// Temporary defines while we migrate to GBM_BO_IMPORT_FD_MODIFIER.
-#define GBM_BO_IMPORT_FD_PLANAR_5504 0x5504
-#define GBM_BO_IMPORT_FD_PLANAR_5505 0x5505
+int GetPlaneFdForBo(gbm_bo* bo, size_t plane) {
+#if defined(MINIGBM)
+  return gbm_bo_get_plane_fd(bo, plane);
+#else
+  const int plane_count = gbm_bo_get_plane_count(bo);
+  DCHECK(plane_count > 0 && plane < static_cast<size_t>(plane_count));
+
+  // System linux gbm (or Mesa gbm) does not provide fds per plane basis. Thus,
+  // get plane handle and use drm ioctl to get a prime fd out of it avoid having
+  // two different branches for minigbm and Mesa gbm here.
+  gbm_device* gbm_dev = gbm_bo_get_device(bo);
+  int dev_fd = gbm_device_get_fd(gbm_dev);
+  DCHECK_GE(dev_fd, 0);
+
+  const uint32_t plane_handle = gbm_bo_get_handle_for_plane(bo, plane).u32;
+  int fd = -1;
+  int ret;
+  // Use DRM_RDWR to allow the fd to be mappable in another process.
+  ret = drmPrimeHandleToFD(dev_fd, plane_handle, DRM_CLOEXEC | DRM_RDWR, &fd);
+
+  // Older DRM implementations blocked DRM_RDWR, but gave a read/write mapping
+  // anyways
+  if (ret)
+    ret = drmPrimeHandleToFD(dev_fd, plane_handle, DRM_CLOEXEC, &fd);
+
+  return ret ? ret : fd;
+#endif
+}
+
+size_t GetSizeOfPlane(gbm_bo* bo,
+                      uint32_t format,
+                      const gfx::Size& size,
+                      size_t plane) {
+#if defined(MINIGBM)
+  return gbm_bo_get_plane_size(bo, plane);
+#else
+  DCHECK(!size.IsEmpty());
+
+  // Get row size of the plane.
+  const gfx::BufferFormat buffer_format =
+      ui::GetBufferFormatFromFourCCFormat(format);
+  const size_t stride_for_plane =
+      static_cast<size_t>(gbm_bo_get_stride_for_plane(bo, plane));
+
+  // Apply subsampling factor to get size in bytes.
+  base::CheckedNumeric<size_t> checked_plane_size = stride_for_plane;
+  checked_plane_size *= size.height() / gfx::SubsamplingFactorForBufferFormat(
+                                            buffer_format, plane);
+  return checked_plane_size.ValueOrDie();
+#endif
+}
 
 }  // namespace
 
@@ -84,7 +136,7 @@
   }
   uint32_t GetPlaneHandle(size_t plane) const override {
     DCHECK_LT(plane, planes_.size());
-    return gbm_bo_get_plane_handle(bo_, plane).u32;
+    return gbm_bo_get_handle_for_plane(bo_, plane).u32;
   }
   uint32_t GetHandle() const override { return gbm_bo_get_handle(bo_).u32; }
   gfx::NativePixmapHandle ExportHandle() const override {
@@ -113,8 +165,14 @@
     DCHECK(!mmap_data_);
     uint32_t stride;
     void* addr;
-    addr = gbm_bo_map(bo_, 0, 0, gbm_bo_get_width(bo_), gbm_bo_get_height(bo_),
+    addr =
+#if defined(MINIGBM)
+        gbm_bo_map(bo_, 0, 0, gbm_bo_get_width(bo_), gbm_bo_get_height(bo_),
                       GBM_BO_TRANSFER_READ_WRITE, &stride, &mmap_data_, 0);
+#else
+        gbm_bo_map(bo_, 0, 0, gbm_bo_get_width(bo_), gbm_bo_get_height(bo_),
+                   GBM_BO_TRANSFER_READ_WRITE, &stride, &mmap_data_);
+#endif
 
     if (!addr)
       return nullptr;
@@ -155,11 +213,18 @@
   std::vector<base::ScopedFD> fds;
   std::vector<gfx::NativePixmapPlane> planes;
 
-  const uint64_t modifier = gbm_bo_get_format_modifier(bo);
-  for (size_t i = 0; i < gbm_bo_get_num_planes(bo); ++i) {
+  const uint64_t modifier = gbm_bo_get_modifier(bo);
+  const int plane_count = gbm_bo_get_plane_count(bo);
+  // The Mesa's gbm implementation explicitly checks whether plane count <= and
+  // returns 1 if the condition is true. Nevertheless, use a DCHECK here to make
+  // sure the condition is not broken there.
+  DCHECK_GT(plane_count, 0);
+  // Ensure there are no differences in integer signs by casting any possible
+  // values to size_t.
+  for (size_t i = 0; i < static_cast<size_t>(plane_count); ++i) {
     // The fd returned by gbm_bo_get_fd is not ref-counted and need to be
     // kept open for the lifetime of the buffer.
-    base::ScopedFD fd(gbm_bo_get_plane_fd(bo, i));
+    base::ScopedFD fd(GetPlaneFdForBo(bo, i));
 
     // TODO(dcastagna): support multiple fds.
     // crbug.com/642410
@@ -172,9 +237,9 @@
       fds.emplace_back(std::move(fd));
     }
 
-    planes.emplace_back(gbm_bo_get_plane_stride(bo, i),
-                        gbm_bo_get_plane_offset(bo, i),
-                        gbm_bo_get_plane_size(bo, i), modifier);
+    planes.emplace_back(gbm_bo_get_stride_for_plane(bo, i),
+                        gbm_bo_get_offset(bo, i),
+                        GetSizeOfPlane(bo, format, size, i), modifier);
   }
   return std::make_unique<Buffer>(bo, format, flags, modifier, std::move(fds),
                                   size, std::move(planes));
@@ -221,7 +286,10 @@
     DCHECK_EQ(planes[0].offset, 0);
 
     // Try to use scanout if supported.
-    int gbm_flags = GBM_BO_USE_SCANOUT | GBM_BO_USE_TEXTURING;
+    int gbm_flags = GBM_BO_USE_SCANOUT;
+#if defined(MINIGBM)
+    gbm_flags |= GBM_BO_USE_TEXTURING;
+#endif
     if (!gbm_device_is_format_supported(device_, format, gbm_flags))
       gbm_flags &= ~GBM_BO_USE_SCANOUT;
 
@@ -231,33 +299,29 @@
       return nullptr;
     }
 
-    struct gbm_import_fd_planar_data fd_data;
+    struct gbm_import_fd_modifier_data fd_data;
     fd_data.width = size.width();
     fd_data.height = size.height();
     fd_data.format = format;
+    fd_data.num_fds = planes.size();
+    fd_data.modifier = planes[0].modifier;
 
     DCHECK_LE(planes.size(), 3u);
     for (size_t i = 0; i < planes.size(); ++i) {
       fd_data.fds[i] = fds[i < fds.size() ? i : 0].get();
       fd_data.strides[i] = planes[i].stride;
       fd_data.offsets[i] = planes[i].offset;
-      fd_data.format_modifiers[i] = planes[i].modifier;
+      // Make sure the modifier is the same for all the planes.
+      DCHECK_EQ(fd_data.modifier, planes[i].modifier);
     }
 
     // The fd passed to gbm_bo_import is not ref-counted and need to be
     // kept open for the lifetime of the buffer.
-    //
-    // See the comment regarding the GBM_BO_IMPORT_FD_PLANAR_550X above.
-    bo = gbm_bo_import(device_, GBM_BO_IMPORT_FD_PLANAR_5505, &fd_data,
-                       gbm_flags);
-    if (!bo) {
-      bo = gbm_bo_import(device_, GBM_BO_IMPORT_FD_PLANAR_5504, &fd_data,
-                         gbm_flags);
+    bo = gbm_bo_import(device_, GBM_BO_IMPORT_FD_MODIFIER, &fd_data, gbm_flags);
       if (!bo) {
         LOG(ERROR) << "nullptr returned from gbm_bo_import";
         return nullptr;
       }
-    }
 
     return std::make_unique<Buffer>(bo, format, gbm_flags, planes[0].modifier,
                                     std::move(fds), size, std::move(planes));
--- a/ui/ozone/platform/wayland/BUILD.gn	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/BUILD.gn	2019-05-17 18:57:26.180000000 +0300
@@ -5,6 +5,7 @@
 visibility = [ "//ui/ozone/*" ]
 
 import("//build/config/linux/pkg_config.gni")
+import("//testing/libfuzzer/fuzzer_test.gni")
 import("//ui/ozone/platform/wayland/wayland.gni")
 
 pkg_config("wayland-egl") {
@@ -17,6 +18,10 @@
     "client_native_pixmap_factory_wayland.h",
     "gl_surface_wayland.cc",
     "gl_surface_wayland.h",
+    "gpu/drm_render_node_path_finder.cc",
+    "gpu/drm_render_node_path_finder.h",
+    "gpu/wayland_canvas_surface.cc",
+    "gpu/wayland_canvas_surface.h",
     "gpu/wayland_connection_proxy.cc",
     "gpu/wayland_connection_proxy.h",
     "ozone_platform_wayland.cc",
@@ -29,6 +34,8 @@
     "wayland_connection_connector.h",
     "wayland_cursor.cc",
     "wayland_cursor.h",
+    "wayland_cursor_position.cc",
+    "wayland_cursor_position.h",
     "wayland_data_device.cc",
     "wayland_data_device.h",
     "wayland_data_device_manager.cc",
@@ -53,6 +60,8 @@
     "wayland_pointer.h",
     "wayland_screen.cc",
     "wayland_screen.h",
+    "wayland_shared_memory_buffer_manager.cc",
+    "wayland_shared_memory_buffer_manager.h",
     "wayland_surface_factory.cc",
     "wayland_surface_factory.h",
     "wayland_touch.cc",
@@ -79,10 +88,6 @@
 
   import("//ui/base/ui_features.gni")
   if (use_xkbcommon) {
-    sources += [
-      "wayland_xkb_keyboard_layout_engine.cc",
-      "wayland_xkb_keyboard_layout_engine.h",
-    ]
     configs += [ "//ui/events/ozone:xkbcommon" ]
   }
 
@@ -91,7 +96,6 @@
     "//build/config/linux/libdrm",
     "//mojo/public/cpp/bindings",
     "//skia",
-    "//third_party/minigbm",
     "//third_party/wayland:wayland_client",
     "//third_party/wayland-protocols:linux_dmabuf_protocol",
     "//third_party/wayland-protocols:presentation_time_protocol",
@@ -126,8 +130,6 @@
     sources += [
       "gpu/drm_render_node_handle.cc",
       "gpu/drm_render_node_handle.h",
-      "gpu/drm_render_node_path_finder.cc",
-      "gpu/drm_render_node_path_finder.h",
       "gpu/gbm_pixmap_wayland.cc",
       "gpu/gbm_pixmap_wayland.h",
       "gpu/gbm_surfaceless_wayland.cc",
@@ -135,7 +137,7 @@
     ]
 
     deps += [
-      "//build/config/linux/libdrm",
+      "//third_party/minigbm",
       "//ui/gfx:memory_buffer",
       "//ui/ozone/common/linux:gbm",
     ]
@@ -191,3 +193,18 @@
     defines += [ "WAYLAND_GBM" ]
   }
 }
+
+fuzzer_test("wayland_buffer_fuzzer") {
+  defines = [ "WL_HIDE_DEPRECATED" ]
+  sources = [
+    "wayland_buffer_fuzzer.cc",
+  ]
+  deps = [
+    ":wayland",
+    "//base/test:test_support",
+    "//build/config/linux/libdrm",
+    "//testing/gmock:gmock",
+    "//ui/gfx:test_support",
+    "//ui/platform_window:platform_window",
+  ]
+}
--- a/ui/ozone/platform/wayland/DEPS	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/DEPS	2019-05-17 18:57:26.180000000 +0300
@@ -2,7 +2,9 @@
   "+ui/base/buildflags.h",  # Doesn't bring in all of ui/base.
   "+ui/base/hit_test.h", # UI hit test doesn't bring in all of ui/base.
   "+ui/base/ui_base_features.h",
+  "+ui/base/ime/character_composer.h",
   "+ui/base/ime/composition_text.h",
+  "+ui/base/ime/ime_text_span.h",
   "+ui/base/ime/linux/linux_input_method_context.h",
   "+ui/base/ime/linux/linux_input_method_context_factory.h",
   "+mojo/public",
--- a/ui/ozone/platform/wayland/fake_server.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/fake_server.cc	2019-05-17 18:57:26.180000000 +0300
@@ -1041,6 +1041,10 @@
   return global_ != nullptr;
 }
 
+void Global::DestroyGlobal() {
+  global_.reset();
+}
+
 // static
 void Global::Bind(wl_client* client,
                   void* data,
@@ -1083,19 +1087,22 @@
 MockDataDeviceManager::~MockDataDeviceManager() {}
 
 MockOutput::MockOutput()
-    : Global(&wl_output_interface, nullptr, kOutputVersion),
-      rect_(gfx::Rect(0, 0, 800, 600)) {}
+    : Global(&wl_output_interface, nullptr, kOutputVersion) {}
 
 MockOutput::~MockOutput() {}
 
 // Notify clients of the change for output position.
 void MockOutput::OnBind() {
+  if (rect_.IsEmpty())
+    return;
+
   const char* kUnknownMake = "unknown";
   const char* kUnknownModel = "unknown";
   wl_output_send_geometry(resource(), rect_.x(), rect_.y(), 0, 0, 0,
                           kUnknownMake, kUnknownModel, 0);
   wl_output_send_mode(resource(), WL_OUTPUT_MODE_CURRENT, rect_.width(),
                       rect_.height(), 0);
+  wl_output_send_done(resource());
 }
 
 MockSeat::MockSeat() : Global(&wl_seat_interface, &seat_impl, kSeatVersion) {}
@@ -1148,6 +1155,10 @@
   base::ScopedFD server_fd(fd[0]);
   base::ScopedFD client_fd(fd[1]);
 
+  // If client has not specified rect before, user standard ones.
+  if (output_.GetRect().IsEmpty())
+    output_.SetRect(gfx::Rect(0, 0, 800, 600));
+
   if (wl_display_init_shm(display_.get()) < 0)
     return false;
   if (!compositor_.Initialize(display_.get()))
--- a/ui/ozone/platform/wayland/fake_server.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/fake_server.h	2019-05-17 18:57:26.180000000 +0300
@@ -277,6 +277,11 @@
 
   // Create a global object.
   bool Initialize(wl_display* display);
+
+  // Can be used by clients to explicitly destroy global objects and send
+  // global_remove event.
+  void DestroyGlobal();
+
   // Called from Bind() to send additional information to clients.
   virtual void OnBind() {}
 
@@ -453,10 +458,13 @@
     return resource ? T::FromResource(resource) : nullptr;
   }
 
-  void CreateAndInitializeOutput() {
+  MockOutput* CreateAndInitializeOutput() {
     auto output = std::make_unique<MockOutput>();
     output->Initialize(display());
+
+    MockOutput* output_ptr = output.get();
     globals_.push_back(std::move(output));
+    return output_ptr;
   }
 
   MockDataDeviceManager* data_device_manager() { return &data_device_manager_; }
--- a/ui/ozone/platform/wayland/gpu/drm_render_node_path_finder.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/gpu/drm_render_node_path_finder.cc	2019-05-17 18:57:26.184000000 +0300
@@ -23,14 +23,13 @@
 
 }  // namespace
 
-DrmRenderNodePathFinder::DrmRenderNodePathFinder() = default;
+DrmRenderNodePathFinder::DrmRenderNodePathFinder() {
+  FindDrmRenderNodePath();
+}
 
 DrmRenderNodePathFinder::~DrmRenderNodePathFinder() = default;
 
-base::FilePath DrmRenderNodePathFinder::GetDrmRenderNodePath() {
-  if (drm_render_node_path_.empty())
-    FindDrmRenderNodePath();
-
+base::FilePath DrmRenderNodePathFinder::GetDrmRenderNodePath() const {
   return drm_render_node_path_;
 }
 
--- a/ui/ozone/platform/wayland/gpu/drm_render_node_path_finder.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/gpu/drm_render_node_path_finder.h	2019-05-17 18:57:26.184000000 +0300
@@ -13,12 +13,12 @@
 // A helper class that finds a DRM render node device and returns a path to it.
 class DrmRenderNodePathFinder {
  public:
+  // Triggers FindDrmRenderNodePath.
   DrmRenderNodePathFinder();
   ~DrmRenderNodePathFinder();
 
-  // Returns a path to a drm render node device. If it hasn't been found yet,
-  // triggers FindDrmRenderNodePath and returns the path.
-  base::FilePath GetDrmRenderNodePath();
+  // Returns a path to a drm render node device.
+  base::FilePath GetDrmRenderNodePath() const;
 
  private:
   void FindDrmRenderNodePath();
--- a/ui/ozone/platform/wayland/gpu/gbm_pixmap_wayland.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/gpu/gbm_pixmap_wayland.cc	2019-05-17 18:57:26.184000000 +0300
@@ -31,6 +31,7 @@
     : surface_manager_(surface_manager), connection_(connection) {}
 
 GbmPixmapWayland::~GbmPixmapWayland() {
+  if (gbm_bo_)
   connection_->DestroyZwpLinuxDmabuf(GetUniqueId());
 }
 
@@ -39,6 +40,10 @@
                                         gfx::BufferUsage usage) {
   TRACE_EVENT1("wayland", "GbmPixmapWayland::InitializeBuffer", "size",
                size.ToString());
+
+  if (!connection_->gbm_device())
+    return false;
+
   uint32_t flags = 0;
   switch (usage) {
     case gfx::BufferUsage::GPU_READ:
@@ -162,7 +167,6 @@
   for (size_t i = 0; i < plane_count; ++i) {
     strides.push_back(GetDmaBufPitch(i));
     offsets.push_back(GetDmaBufOffset(i));
-    if (modifier != DRM_FORMAT_MOD_INVALID)
       modifiers.push_back(modifier);
   }
 
--- a/ui/ozone/platform/wayland/gpu/gbm_surfaceless_wayland.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/gpu/gbm_surfaceless_wayland.cc	2019-05-17 18:57:26.184000000 +0300
@@ -103,6 +103,12 @@
   frame->presentation_callback = presentation_callback;
   unsubmitted_frames_.push_back(std::make_unique<PendingFrame>());
 
+  if (!use_egl_fence_sync_) {
+    frame->ready = true;
+    SubmitFrame();
+    return;
+  }
+
   // TODO: the following should be replaced by a per surface flush as it gets
   // implemented in GL drivers.
   EGLSyncKHR fence = InsertFence(has_implicit_external_sync_);
@@ -160,6 +166,10 @@
   return config_;
 }
 
+void GbmSurfacelessWayland::SetRelyOnImplicitSync() {
+  use_egl_fence_sync_ = false;
+}
+
 GbmSurfacelessWayland::~GbmSurfacelessWayland() {
   surface_factory_->UnregisterSurface(widget_);
 }
--- a/ui/ozone/platform/wayland/gpu/gbm_surfaceless_wayland.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/gpu/gbm_surfaceless_wayland.h	2019-05-17 18:57:26.184000000 +0300
@@ -55,6 +55,7 @@
       const SwapCompletionCallback& completion_callback,
       const PresentationCallback& presentation_callback) override;
   EGLConfig GetConfig() override;
+  void SetRelyOnImplicitSync() override;
 
  private:
   ~GbmSurfacelessWayland() override;
@@ -97,6 +98,7 @@
   std::unique_ptr<PendingFrame> submitted_frame_;
   bool has_implicit_external_sync_;
   bool last_swap_buffers_result_ = true;
+  bool use_egl_fence_sync_ = true;
 
   base::WeakPtrFactory<GbmSurfacelessWayland> weak_factory_;
 
--- a/ui/ozone/platform/wayland/gpu/wayland_connection_proxy.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/gpu/wayland_connection_proxy.cc	2019-05-17 18:57:26.184000000 +0300
@@ -4,6 +4,8 @@
 
 #include "ui/ozone/platform/wayland/gpu/wayland_connection_proxy.h"
 
+#include <utility>
+
 #include "base/process/process.h"
 #include "third_party/khronos/EGL/egl.h"
 #include "ui/ozone/common/linux/drm_util_linux.h"
@@ -13,8 +15,7 @@
 
 WaylandConnectionProxy::WaylandConnectionProxy(WaylandConnection* connection)
     : connection_(connection),
-      gpu_thread_runner_(connection_ ? nullptr
-                                     : base::ThreadTaskRunnerHandle::Get()) {}
+      gpu_thread_runner_(base::ThreadTaskRunnerHandle::Get()) {}
 
 WaylandConnectionProxy::~WaylandConnectionProxy() = default;
 
@@ -25,6 +26,14 @@
   wc_ptr_info_ = wc_ptr.PassInterface();
 }
 
+void WaylandConnectionProxy::ResetGbmDevice() {
+#if defined(WAYLAND_GBM)
+  gbm_device_.reset();
+#else
+  NOTREACHED();
+#endif
+}
+
 void WaylandConnectionProxy::CreateZwpLinuxDmabuf(
     base::File file,
     gfx::Size size,
@@ -97,6 +106,31 @@
                               std::move(callback));
 }
 
+void WaylandConnectionProxy::CreateShmBufferForWidget(
+    gfx::AcceleratedWidget widget,
+    base::File file,
+    size_t length,
+    const gfx::Size size) {
+  if (!bound_) {
+    wc_ptr_.Bind(std::move(wc_ptr_info_));
+    bound_ = true;
+  }
+  DCHECK(wc_ptr_);
+  wc_ptr_->CreateShmBufferForWidget(widget, std::move(file), length, size);
+}
+
+void WaylandConnectionProxy::PresentShmBufferForWidget(
+    gfx::AcceleratedWidget widget,
+    const gfx::Rect& damage) {
+  DCHECK(wc_ptr_);
+  wc_ptr_->PresentShmBufferForWidget(widget, damage);
+}
+
+void WaylandConnectionProxy::DestroyShmBuffer(gfx::AcceleratedWidget widget) {
+  DCHECK(wc_ptr_);
+  wc_ptr_->DestroyShmBuffer(widget);
+}
+
 WaylandWindow* WaylandConnectionProxy::GetWindow(
     gfx::AcceleratedWidget widget) {
   if (connection_)
@@ -112,24 +146,15 @@
                 "when multi-process moe is used";
 }
 
-wl_shm* WaylandConnectionProxy::shm() {
-  wl_shm* shm = nullptr;
-  if (connection_)
-    shm = connection_->shm();
-  return shm;
-}
-
 intptr_t WaylandConnectionProxy::Display() {
   if (connection_)
     return reinterpret_cast<intptr_t>(connection_->display());
 
 #if defined(WAYLAND_GBM)
-  // It must not be a single process mode. Thus, shared dmabuf approach is used,
-  // which requires |gbm_device_|.
-  DCHECK(gbm_device_);
   return EGL_DEFAULT_DISPLAY;
-#endif
+#else
   return 0;
+#endif
 }
 
 void WaylandConnectionProxy::AddBindingWaylandConnectionClient(
--- a/ui/ozone/platform/wayland/gpu/wayland_connection_proxy.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/gpu/wayland_connection_proxy.h	2019-05-17 18:57:26.184000000 +0300
@@ -18,8 +18,6 @@
 #include "ui/ozone/common/linux/gbm_device.h"  // nogncheck
 #endif
 
-struct wl_shm;
-
 namespace gfx {
 enum class SwapResult;
 class Rect;
@@ -44,6 +42,7 @@
 
   // WaylandConnectionProxy overrides:
   void SetWaylandConnection(ozone::mojom::WaylandConnectionPtr wc_ptr) override;
+  void ResetGbmDevice() override;
 
   // Methods, which must be used when GPU is hosted on a different process
   // aka gpu process.
@@ -79,6 +78,23 @@
   }
 #endif
 
+  // Methods that are used to manage shared buffers when software rendering is
+  // used:
+  //
+  // Asks Wayland to create a buffer based on shared memory |file| handle for
+  // specific |widget|. There can be only one buffer per widget.
+  void CreateShmBufferForWidget(gfx::AcceleratedWidget widget,
+                                base::File file,
+                                size_t length,
+                                const gfx::Size size);
+
+  // Asks to damage and commit previously created buffer for the |widget|.
+  void PresentShmBufferForWidget(gfx::AcceleratedWidget widget,
+                                 const gfx::Rect& damage);
+
+  // Asks to destroy shared memory based buffer for the |widget|.
+  void DestroyShmBuffer(gfx::AcceleratedWidget widget);
+
   // Methods, which must be used when a single process mode is used (GPU is
   // hosted in the browser process).
   //
@@ -86,8 +102,6 @@
   WaylandWindow* GetWindow(gfx::AcceleratedWidget widget);
   // Schedule flush in the Wayland message loop.
   void ScheduleFlush();
-  // Returns an object for a shared memory support. Used for software fallback.
-  wl_shm* shm();
 
   // Methods, which can be used with both single- and multi-process modes.
   //
--- a/ui/ozone/platform/wayland/ozone_platform_wayland.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/ozone_platform_wayland.cc	2019-05-17 18:57:26.184000000 +0300
@@ -4,6 +4,11 @@
 
 #include "ui/ozone/platform/wayland/ozone_platform_wayland.h"
 
+#include <memory>
+#include <string>
+#include <utility>
+#include <vector>
+
 #include "base/memory/ptr_util.h"
 #include "ui/base/buildflags.h"
 #include "ui/base/cursor/ozone/bitmap_cursor_factory_ozone.h"
@@ -12,6 +17,7 @@
 #include "ui/events/system_input_injector.h"
 #include "ui/gfx/linux/client_native_pixmap_dmabuf.h"
 #include "ui/ozone/common/stub_overlay_manager.h"
+#include "ui/ozone/platform/wayland/gpu/drm_render_node_path_finder.h"
 #include "ui/ozone/platform/wayland/gpu/wayland_connection_proxy.h"
 #include "ui/ozone/platform/wayland/wayland_connection.h"
 #include "ui/ozone/platform/wayland/wayland_connection_connector.h"
@@ -26,7 +32,7 @@
 
 #if BUILDFLAG(USE_XKBCOMMON)
 #include "ui/events/ozone/layout/xkb/xkb_evdev_codes.h"
-#include "ui/ozone/platform/wayland/wayland_xkb_keyboard_layout_engine.h"
+#include "ui/events/ozone/layout/xkb/xkb_keyboard_layout_engine.h"
 #else
 #include "ui/events/ozone/layout/stub/stub_keyboard_layout_engine.h"
 #endif
@@ -35,7 +41,6 @@
 #include "ui/base/ui_base_features.h"
 #include "ui/ozone/common/linux/gbm_wrapper.h"
 #include "ui/ozone/platform/wayland/gpu/drm_render_node_handle.h"
-#include "ui/ozone/platform/wayland/gpu/drm_render_node_path_finder.h"
 #endif
 
 namespace ui {
@@ -126,6 +131,11 @@
 
   bool IsNativePixmapConfigSupported(gfx::BufferFormat format,
                                      gfx::BufferUsage usage) const override {
+    // If there is no drm render node device available, native pixmaps are not
+    // supported.
+    if (path_finder_.GetDrmRenderNodePath().empty())
+      return false;
+
     if (std::find(supported_buffer_formats_.begin(),
                   supported_buffer_formats_.end(),
                   format) == supported_buffer_formats_.end()) {
@@ -139,8 +149,7 @@
   void InitializeUI(const InitParams& args) override {
 #if BUILDFLAG(USE_XKBCOMMON)
     KeyboardLayoutEngineManager::SetKeyboardLayoutEngine(
-        std::make_unique<WaylandXkbKeyboardLayoutEngine>(
-            xkb_evdev_code_converter_));
+        std::make_unique<XkbKeyboardLayoutEngine>(xkb_evdev_code_converter_));
 #else
     KeyboardLayoutEngineManager::SetKeyboardLayoutEngine(
         std::make_unique<StubKeyboardLayoutEngine>());
@@ -149,11 +158,7 @@
     if (!connection_->Initialize())
       LOG(FATAL) << "Failed to initialize Wayland platform";
 
-#if defined(WAYLAND_GBM)
-    if (!args.single_process)
       connector_.reset(new WaylandConnectionConnector(connection_.get()));
-#endif
-
     cursor_factory_.reset(new BitmapCursorFactoryOzone);
     overlay_manager_.reset(new StubOverlayManager);
     input_controller_ = CreateStubInputController();
@@ -162,28 +167,24 @@
   }
 
   void InitializeGPU(const InitParams& args) override {
-    if (!args.single_process) {
-      proxy_.reset(new WaylandConnectionProxy(nullptr));
+    proxy_.reset(new WaylandConnectionProxy(connection_.get()));
+    surface_factory_.reset(new WaylandSurfaceFactory(proxy_.get()));
 #if defined(WAYLAND_GBM)
-      DrmRenderNodePathFinder path_finder;
-      const base::FilePath drm_node_path = path_finder.GetDrmRenderNodePath();
-      if (drm_node_path.empty())
-        LOG(FATAL) << "Failed to find drm render node path.";
-
+    const base::FilePath drm_node_path = path_finder_.GetDrmRenderNodePath();
+    if (drm_node_path.empty()) {
+      LOG(WARNING) << "Failed to find drm render node path.";
+    } else {
       DrmRenderNodeHandle handle;
-      if (!handle.Initialize(drm_node_path))
-        LOG(FATAL) << "Failed to initialize drm render node handle.";
-
+      if (!handle.Initialize(drm_node_path)) {
+        LOG(WARNING) << "Failed to initialize drm render node handle.";
+      } else {
       auto gbm = CreateGbmDevice(handle.PassFD().release());
       if (!gbm)
-        LOG(FATAL) << "Failed to initialize gbm device.";
-
+          LOG(WARNING) << "Failed to initialize gbm device.";
       proxy_->set_gbm_device(std::move(gbm));
-#endif
-    } else {
-      proxy_.reset(new WaylandConnectionProxy(connection_.get()));
     }
-    surface_factory_.reset(new WaylandSurfaceFactory(proxy_.get()));
+    }
+#endif
   }
 
   const PlatformProperties& GetPlatformProperties() override {
@@ -221,6 +222,10 @@
 
   std::vector<gfx::BufferFormat> supported_buffer_formats_;
 
+  // This is used both in the gpu and browser processes to find out if a drm
+  // render node is available.
+  DrmRenderNodePathFinder path_finder_;
+
   DISALLOW_COPY_AND_ASSIGN(OzonePlatformWayland);
 };
 
--- a/ui/ozone/platform/wayland/wayland_buffer_manager.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_buffer_manager.cc	2019-05-17 18:57:26.184000000 +0300
@@ -54,7 +54,8 @@
     WaylandConnection* connection)
     : zwp_linux_dmabuf_(zwp_linux_dmabuf), connection_(connection) {
   static const zwp_linux_dmabuf_v1_listener dmabuf_listener = {
-      &WaylandBufferManager::Format, &WaylandBufferManager::Modifiers,
+      &WaylandBufferManager::Format,
+      &WaylandBufferManager::Modifiers,
   };
   zwp_linux_dmabuf_v1_add_listener(zwp_linux_dmabuf_.get(), &dmabuf_listener,
                                    this);
@@ -87,27 +88,35 @@
                            modifiers, planes_count, buffer_id)) {
     // base::File::Close() has an assertion that checks if blocking operations
     // are allowed. Thus, manually close the fd here.
-    base::ScopedFD fd(file.TakePlatformFile());
-    fd.reset();
+    base::ScopedFD deleter(file.TakePlatformFile());
     return false;
   }
 
+  base::ScopedFD fd(file.TakePlatformFile());
+
   // Store |params| connected to |buffer_id| to track buffer creation and
   // identify, which buffer a client wants to use.
   DCHECK(zwp_linux_dmabuf_);
   struct zwp_linux_buffer_params_v1* params =
       zwp_linux_dmabuf_v1_create_params(zwp_linux_dmabuf_.get());
 
-  std::unique_ptr<Buffer> buffer =
-      std::make_unique<Buffer>(buffer_id, params, gfx::Size(width, height));
   buffers_.insert(std::pair<uint32_t, std::unique_ptr<Buffer>>(
-      buffer_id, std::move(buffer)));
+      buffer_id,
+      std::make_unique<Buffer>(buffer_id, params, gfx::Size(width, height))));
 
-  uint32_t fd = file.TakePlatformFile();
   for (size_t i = 0; i < planes_count; i++) {
-    zwp_linux_buffer_params_v1_add(params, fd, i /* plane id */, offsets[i],
-                                   strides[i], modifiers[i] >> 32,
-                                   modifiers[i] & UINT32_MAX);
+    uint32_t modifier_lo = 0;
+    uint32_t modifier_hi = 0;
+    if (modifiers[i] != DRM_FORMAT_MOD_INVALID) {
+      modifier_lo = modifiers[i] & UINT32_MAX;
+      modifier_hi = modifiers[i] >> 32;
+    } else {
+      DCHECK_EQ(planes_count, 1u) << "Invalid modifier may be passed only in "
+                                     "case of single plane format being used";
+    }
+    zwp_linux_buffer_params_v1_add(params, fd.get(), i /* plane id */,
+                                   offsets[i], strides[i], modifier_hi,
+                                   modifier_lo);
   }
   zwp_linux_buffer_params_v1_add_listener(params, &params_listener, this);
   zwp_linux_buffer_params_v1_create(params, width, height, format, 0);
@@ -398,13 +407,16 @@
       buffer->swap_result = gfx::SwapResult::SWAP_ACK;
       buffer->wl_frame_callback.reset();
 
-      // If presentation feedback is not supported, use fake feedback and
-      // trigger the callback.
+      // If presentation feedback is not supported, use a fake feedback
       if (!self->connection_->presentation()) {
         buffer->feedback = gfx::PresentationFeedback(base::TimeTicks::Now(),
                                                      base::TimeDelta(), 0);
-        self->OnBufferSwapped(buffer);
       }
+      // If presentation feedback event either has already been fired or
+      // has not been set, trigger swap callback.
+      if (!buffer->wp_presentation_feedback)
+        self->OnBufferSwapped(buffer);
+
       return;
     }
   }
@@ -437,9 +449,6 @@
   for (auto& item : self->buffers_) {
     Buffer* buffer = item.second.get();
     if (buffer->wp_presentation_feedback.get() == wp_presentation_feedback) {
-      // Frame callback must come before a feedback is presented.
-      DCHECK(!buffer->wl_frame_callback);
-
       buffer->feedback = gfx::PresentationFeedback(
           GetPresentationFeedbackTimeStamp(tv_sec_hi, tv_sec_lo, tv_nsec),
           base::TimeDelta::FromNanoseconds(refresh),
@@ -444,9 +453,16 @@
           GetPresentationFeedbackTimeStamp(tv_sec_hi, tv_sec_lo, tv_nsec),
           base::TimeDelta::FromNanoseconds(refresh),
           GetPresentationKindFlags(flags));
-
       buffer->wp_presentation_feedback.reset();
+
+      // Some compositors not always fire PresentationFeedback and Frame
+      // events in the same order (i.e, frame callbacks coming always before
+      // feedback presented/discaded ones). So, check FrameCallbackDone has
+      // already been called at this point, if yes, trigger the swap callback.
+      // otherwise it will be triggered in the upcoming frame callback.
+      if (!buffer->wl_frame_callback)
       self->OnBufferSwapped(buffer);
+
       return;
     }
   }
@@ -465,11 +481,17 @@
     Buffer* buffer = item.second.get();
     if (buffer->wp_presentation_feedback.get() == wp_presentation_feedback) {
       // Frame callback must come before a feedback is presented.
-      DCHECK(!buffer->wl_frame_callback);
       buffer->feedback = gfx::PresentationFeedback::Failure();
-
       buffer->wp_presentation_feedback.reset();
+
+      // Some compositors not always fire PresentationFeedback and Frame
+      // events in the same order (i.e, frame callbacks coming always before
+      // feedback presented/discaded ones). So, check FrameCallbackDone has
+      // already been called at this point, if yes, trigger the swap callback.
+      // Otherwise it will be triggered in the upcoming frame callback.
+      if (!buffer->wl_frame_callback)
       self->OnBufferSwapped(buffer);
+
       return;
     }
   }
--- a/ui/ozone/platform/wayland/wayland_connection.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_connection.cc	2019-05-17 18:57:26.184000000 +0300
@@ -14,11 +14,13 @@
 #include "base/message_loop/message_loop_current.h"
 #include "base/strings/string_util.h"
 #include "base/threading/thread_task_runner_handle.h"
+#include "ui/events/ozone/layout/keyboard_layout_engine_manager.h"
 #include "ui/gfx/swap_result.h"
 #include "ui/ozone/platform/wayland/wayland_buffer_manager.h"
 #include "ui/ozone/platform/wayland/wayland_input_method_context.h"
 #include "ui/ozone/platform/wayland/wayland_object.h"
 #include "ui/ozone/platform/wayland/wayland_output_manager.h"
+#include "ui/ozone/platform/wayland/wayland_shared_memory_buffer_manager.h"
 #include "ui/ozone/platform/wayland/wayland_window.h"
 
 static_assert(XDG_SHELL_VERSION_CURRENT == 5, "Unsupported xdg-shell version");
@@ -52,7 +54,8 @@
 
 bool WaylandConnection::Initialize() {
   static const wl_registry_listener registry_listener = {
-      &WaylandConnection::Global, &WaylandConnection::GlobalRemove,
+      &WaylandConnection::Global,
+      &WaylandConnection::GlobalRemove,
   };
 
   display_.reset(wl_display_connect(nullptr));
@@ -69,7 +72,7 @@
 
   wl_registry_add_listener(registry_.get(), &registry_listener, this);
   while (!wayland_output_manager_ ||
-         !wayland_output_manager_->IsPrimaryOutputReady()) {
+         !wayland_output_manager_->IsOutputReady()) {
     wl_display_roundtrip(display_.get());
   }
 
@@ -125,6 +128,20 @@
   return it == window_map_.end() ? nullptr : it->second;
 }
 
+WaylandWindow* WaylandConnection::GetWindowWithLargestBounds() {
+  WaylandWindow* window_with_largest_bounds = nullptr;
+  for (auto entry : window_map_) {
+    if (!window_with_largest_bounds) {
+      window_with_largest_bounds = entry.second;
+      continue;
+    }
+    WaylandWindow* window = entry.second;
+    if (window_with_largest_bounds->GetBounds() < window->GetBounds())
+      window_with_largest_bounds = window;
+  }
+  return window_with_largest_bounds;
+}
+
 WaylandWindow* WaylandConnection::GetCurrentFocusedWindow() {
   for (auto entry : window_map_) {
     WaylandWindow* window = entry.second;
@@ -179,6 +196,8 @@
     uint32_t planes_count,
     uint32_t buffer_id) {
   DCHECK(base::MessageLoopCurrentForUI::IsSet());
+
+  DCHECK(buffer_manager_);
   if (!buffer_manager_->CreateBuffer(std::move(file), width, height, strides,
                                      offsets, format, modifiers, planes_count,
                                      buffer_id)) {
@@ -188,6 +207,8 @@
 
 void WaylandConnection::DestroyZwpLinuxDmabuf(uint32_t buffer_id) {
   DCHECK(base::MessageLoopCurrentForUI::IsSet());
+
+  DCHECK(buffer_manager_);
   if (!buffer_manager_->DestroyBuffer(buffer_id)) {
     TerminateGpuProcess(buffer_manager_->error_message());
   }
@@ -199,12 +220,37 @@
     const gfx::Rect& damage_region,
     ScheduleBufferSwapCallback callback) {
   DCHECK(base::MessageLoopCurrentForUI::IsSet());
+
+  CHECK(buffer_manager_);
   if (!buffer_manager_->ScheduleBufferSwap(widget, buffer_id, damage_region,
                                            std::move(callback))) {
     TerminateGpuProcess(buffer_manager_->error_message());
   }
 }
 
+void WaylandConnection::CreateShmBufferForWidget(gfx::AcceleratedWidget widget,
+                                                 base::File file,
+                                                 uint64_t length,
+                                                 const gfx::Size& size) {
+  DCHECK(shm_buffer_manager_);
+  if (!shm_buffer_manager_->CreateBufferForWidget(widget, std::move(file),
+                                                  length, size))
+    TerminateGpuProcess("Failed to create SHM buffer.");
+}
+
+void WaylandConnection::PresentShmBufferForWidget(gfx::AcceleratedWidget widget,
+                                                  const gfx::Rect& damage) {
+  DCHECK(shm_buffer_manager_);
+  if (!shm_buffer_manager_->PresentBufferForWidget(widget, damage))
+    TerminateGpuProcess("Failed to present SHM buffer.");
+}
+
+void WaylandConnection::DestroyShmBuffer(gfx::AcceleratedWidget widget) {
+  DCHECK(shm_buffer_manager_);
+  if (!shm_buffer_manager_->DestroyBuffer(widget))
+    TerminateGpuProcess("Failed to destroy SHM buffer.");
+}
+
 PlatformClipboard* WaylandConnection::GetPlatformClipboard() {
   return this;
 }
@@ -235,6 +281,13 @@
   return !!data_source_;
 }
 
+void WaylandConnection::SetSequenceNumberUpdateCb(
+    PlatformClipboard::SequenceNumberUpdateCb cb) {
+  CHECK(update_sequence_cb_.is_null())
+      << " The callback can be installed only once.";
+  update_sequence_cb_ = std::move(cb);
+}
+
 ozone::mojom::WaylandConnectionPtr WaylandConnection::BindInterface() {
   // This mustn't be called twice or when the zwp_linux_dmabuf interface is not
   // available.
@@ -285,6 +338,10 @@
   data_device_->RequestDragData(mime_type, std::move(callback));
 }
 
+bool WaylandConnection::IsDragInProgress() {
+  return data_device_->IsDragEntered() || drag_data_source();
+}
+
 void WaylandConnection::ResetPointerFlags() {
   if (pointer_)
     pointer_->ResetFlags();
@@ -316,6 +373,11 @@
   data_map_ = nullptr;
 }
 
+void WaylandConnection::UpdateClipboardSequenceNumber() {
+  if (!update_sequence_cb_.is_null())
+    update_sequence_cb_.Run();
+}
+
 void WaylandConnection::OnDispatcherListChanged() {
   StartProcessingEvents();
 }
@@ -343,6 +405,14 @@
   buffer_manager_->ClearState();
 }
 
+void WaylandConnection::EnsureDataDevice() {
+  if (!data_device_manager_ || !seat_)
+    return;
+  DCHECK(!data_device_);
+  wl_data_device* data_device = data_device_manager_->GetDevice();
+  data_device_ = std::make_unique<WaylandDataDevice>(this, data_device);
+}
+
 // static
 void WaylandConnection::Global(void* data,
                                wl_registry* registry,
@@ -350,7 +420,8 @@
                                const char* interface,
                                uint32_t version) {
   static const wl_seat_listener seat_listener = {
-      &WaylandConnection::Capabilities, &WaylandConnection::Name,
+      &WaylandConnection::Capabilities,
+      &WaylandConnection::Name,
   };
   static const xdg_shell_listener shell_listener = {
       &WaylandConnection::Ping,
@@ -375,6 +446,8 @@
         wl::Bind<wl_shm>(registry, name, std::min(version, kMaxShmVersion));
     if (!connection->shm_)
       LOG(ERROR) << "Failed to bind to wl_shm global";
+    connection->shm_buffer_manager_ =
+        std::make_unique<WaylandShmBufferManager>(connection);
   } else if (!connection->seat_ && strcmp(interface, "wl_seat") == 0) {
     connection->seat_ =
         wl::Bind<wl_seat>(registry, name, std::min(version, kMaxSeatVersion));
@@ -383,19 +456,7 @@
       return;
     }
     wl_seat_add_listener(connection->seat_.get(), &seat_listener, connection);
-
-    // TODO(tonikitoo,msisov): The connection passed to WaylandInputDevice must
-    // have a valid data device manager. We should ideally be robust to the
-    // compositor advertising a wl_seat first. No known compositor does this,
-    // fortunately.
-    if (!connection->data_device_manager_) {
-      LOG(ERROR)
-          << "No data device manager. Clipboard won't be fully functional";
-      return;
-    }
-    wl_data_device* data_device = connection->data_device_manager_->GetDevice();
-    connection->data_device_.reset(
-        new WaylandDataDevice(connection, data_device));
+    connection->EnsureDataDevice();
   } else if (!connection->shell_v6_ &&
              strcmp(interface, "zxdg_shell_v6") == 0) {
     // Check for zxdg_shell_v6 first.
@@ -449,9 +510,9 @@
       LOG(ERROR) << "Failed to bind to wl_data_device_manager global";
       return;
     }
-    connection->data_device_manager_.reset(
-        new WaylandDataDeviceManager(data_device_manager.release()));
-    connection->data_device_manager_->set_connection(connection);
+    connection->data_device_manager_.reset(new WaylandDataDeviceManager(
+        data_device_manager.release(), connection));
+    connection->EnsureDataDevice();
   } else if (!connection->buffer_manager_ &&
              (strcmp(interface, "zwp_linux_dmabuf_v1") == 0)) {
     wl::Object<zwp_linux_dmabuf_v1> zwp_linux_dmabuf =
@@ -507,9 +568,13 @@
           pointer, base::BindRepeating(&WaylandConnection::DispatchUiEvent,
                                        base::Unretained(connection)));
       connection->pointer_->set_connection(connection);
+
+      connection->wayland_cursor_position_ =
+          std::make_unique<WaylandCursorPosition>();
     }
   } else if (connection->pointer_) {
     connection->pointer_.reset();
+    connection->wayland_cursor_position_.reset();
   }
   if (capabilities & WL_SEAT_CAPABILITY_KEYBOARD) {
     if (!connection->keyboard_) {
@@ -519,7 +584,8 @@
         return;
       }
       connection->keyboard_ = std::make_unique<WaylandKeyboard>(
-          keyboard, base::BindRepeating(&WaylandConnection::DispatchUiEvent,
+          keyboard, KeyboardLayoutEngineManager::GetKeyboardLayoutEngine(),
+          base::BindRepeating(&WaylandConnection::DispatchUiEvent,
                                         base::Unretained(connection)));
       connection->keyboard_->set_connection(connection);
     }
--- a/ui/ozone/platform/wayland/wayland_connection_connector.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_connection_connector.cc	2019-05-17 18:57:26.184000000 +0300
@@ -82,6 +82,13 @@
   auto request = mojo::MakeRequest(&wcp_ptr);
   BindInterfaceInGpuProcess(std::move(request), binder_);
   wcp_ptr->SetWaylandConnection(std::move(wc_ptr));
+
+#if defined(WAYLAND_GBM)
+  if (!connection_->buffer_manager()) {
+    LOG(WARNING) << "zwp_linux_dmabuf is not available.";
+    wcp_ptr->ResetGbmDevice();
+  }
+#endif
 }
 
 void WaylandConnectionConnector::OnTerminateGpuProcess(std::string message) {
--- a/ui/ozone/platform/wayland/wayland_connection.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_connection.h	2019-05-17 18:57:26.184000000 +0300
@@ -13,6 +13,7 @@
 #include "ui/events/platform/platform_event_source.h"
 #include "ui/gfx/buffer_types.h"
 #include "ui/gfx/native_widget_types.h"
+#include "ui/ozone/platform/wayland/wayland_cursor_position.h"
 #include "ui/ozone/platform/wayland/wayland_data_device.h"
 #include "ui/ozone/platform/wayland/wayland_data_device_manager.h"
 #include "ui/ozone/platform/wayland/wayland_data_source.h"
@@ -27,6 +28,7 @@
 namespace ui {
 
 class WaylandBufferManager;
+class WaylandShmBufferManager;
 class WaylandOutputManager;
 class WaylandWindow;
 
@@ -44,7 +46,8 @@
 
   // ozone::mojom::WaylandConnection overrides:
   //
-  // These overridden methods below are invoked by the GPU.
+  // These overridden methods below are invoked by the GPU when hardware
+  // accelerated rendering is used.
   //
   // Called by the GPU and asks to import a wl_buffer based on a gbm file
   // descriptor.
@@ -65,6 +68,16 @@
                           uint32_t buffer_id,
                           const gfx::Rect& damage_region,
                           ScheduleBufferSwapCallback callback) override;
+  // These overridden methods below are invoked by the GPU when hardware
+  // accelerated rendering is not used. Check comments in the
+  // ui/ozone/public/interfaces/wayland/wayland_connection.mojom.
+  void CreateShmBufferForWidget(gfx::AcceleratedWidget widget,
+                                base::File file,
+                                uint64_t length,
+                                const gfx::Size& size) override;
+  void PresentShmBufferForWidget(gfx::AcceleratedWidget widget,
+                                 const gfx::Rect& damage) override;
+  void DestroyShmBuffer(gfx::AcceleratedWidget widget) override;
 
   // Schedules a flush of the Wayland connection.
   void ScheduleFlush();
@@ -83,6 +96,7 @@
   }
 
   WaylandWindow* GetWindow(gfx::AcceleratedWidget widget);
+  WaylandWindow* GetWindowWithLargestBounds();
   WaylandWindow* GetCurrentFocusedWindow();
   WaylandWindow* GetCurrentKeyboardFocusedWindow();
   void AddWindow(gfx::AcceleratedWidget widget, WaylandWindow* window);
@@ -105,11 +119,19 @@
     return wayland_output_manager_.get();
   }
 
+  // Returns the cursor position, which may be null.
+  WaylandCursorPosition* wayland_cursor_position() {
+    return wayland_cursor_position_.get();
+  }
+
+  WaylandBufferManager* buffer_manager() const { return buffer_manager_.get(); }
+
   // Clipboard implementation.
   PlatformClipboard* GetPlatformClipboard();
   void DataSourceCancelled();
   void SetClipboardData(const std::string& contents,
                         const std::string& mime_type);
+  void UpdateClipboardSequenceNumber();
 
   // PlatformClipboard.
   void OfferClipboardData(
@@ -122,6 +144,8 @@
   void GetAvailableMimeTypes(
       PlatformClipboard::GetMimeTypesClosure callback) override;
   bool IsSelectionOwner() override;
+  void SetSequenceNumberUpdateCb(
+      PlatformClipboard::SequenceNumberUpdateCb cb) override;
 
   // Returns bound pointer to own mojo interface.
   ozone::mojom::WaylandConnectionPtr BindInterface();
@@ -148,6 +172,9 @@
   void RequestDragData(const std::string& mime_type,
                        base::OnceCallback<void(const std::string&)> callback);
 
+  // Returns true when dragging is entered or started.
+  bool IsDragInProgress();
+
   // Resets flags and keyboard modifiers.
   //
   // This method is specially handy for cases when the WaylandPointer state is
@@ -172,6 +199,9 @@
   // Terminates the GPU process on invalid data received
   void TerminateGpuProcess(std::string reason);
 
+  // Make sure data device is properly initialized
+  void EnsureDataDevice();
+
   // wl_registry_listener
   static void Global(void* data,
                      wl_registry* registry,
@@ -211,6 +241,8 @@
   std::unique_ptr<WaylandOutputManager> wayland_output_manager_;
   std::unique_ptr<WaylandPointer> pointer_;
   std::unique_ptr<WaylandTouch> touch_;
+  std::unique_ptr<WaylandCursorPosition> wayland_cursor_position_;
+  std::unique_ptr<WaylandShmBufferManager> shm_buffer_manager_;
 
   // Objects that are using when GPU runs in own process.
   std::unique_ptr<WaylandBufferManager> buffer_manager_;
@@ -225,6 +257,10 @@
   // so that we can asynchronously write to it.
   PlatformClipboard::DataMap* data_map_ = nullptr;
 
+  // Notifies whenever clipboard sequence number is changed. Can be empty if not
+  // set.
+  PlatformClipboard::SequenceNumberUpdateCb update_sequence_cb_;
+
   // Stores the callback to be invoked upon data reading from clipboard.
   RequestDataClosure read_clipboard_closure_;
 
--- a/ui/ozone/platform/wayland/wayland_cursor.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_cursor.cc	2019-05-17 18:57:26.184000000 +0300
@@ -16,80 +16,71 @@
 
 namespace ui {
 
-WaylandCursor::WaylandCursor() : shared_memory_(new base::SharedMemory()) {}
+WaylandCursor::WaylandCursor() = default;
+
+WaylandCursor::~WaylandCursor() = default;
+
+// static
+void WaylandCursor::OnBufferRelease(void* data, wl_buffer* buffer) {
+  auto* cursor = static_cast<WaylandCursor*>(data);
+  DCHECK(cursor->buffers_.count(buffer) > 0);
+  cursor->buffers_.erase(buffer);
+}
 
 void WaylandCursor::Init(wl_pointer* pointer, WaylandConnection* connection) {
-  if (input_pointer_ == pointer)
-    return;
+  DCHECK(connection);
 
   input_pointer_ = pointer;
 
-  DCHECK(connection);
   shm_ = connection->shm();
   pointer_surface_.reset(
       wl_compositor_create_surface(connection->compositor()));
 }
 
-WaylandCursor::~WaylandCursor() {
-  pointer_surface_.reset();
-  buffer_.reset();
-
-  if (shared_memory_->handle().GetHandle()) {
-    shared_memory_->Unmap();
-    shared_memory_->Close();
-  }
-}
-
 void WaylandCursor::UpdateBitmap(const std::vector<SkBitmap>& cursor_image,
-                                 const gfx::Point& location,
+                                 const gfx::Point& hotspot,
                                  uint32_t serial) {
   if (!input_pointer_)
     return;
 
-  if (!cursor_image.size()) {
-    HideCursor(serial);
-    return;
-  }
+  if (!cursor_image.size())
+    return HideCursor(serial);
 
   const SkBitmap& image = cursor_image[0];
   SkISize size = image.dimensions();
-  if (size.isEmpty()) {
-    HideCursor(serial);
-    return;
-  }
+  if (size.isEmpty())
+    return HideCursor(serial);
 
   gfx::Size image_size = gfx::SkISizeToSize(size);
-  if (image_size != size_) {
-    wl_buffer* buffer =
-        wl::CreateSHMBuffer(image_size, shared_memory_.get(), shm_);
+  auto shared_memory = std::make_unique<base::SharedMemory>();
+  wl::Object<wl_buffer> buffer(
+      wl::CreateSHMBuffer(image_size, shared_memory.get(), shm_));
     if (!buffer) {
       LOG(ERROR) << "Failed to create SHM buffer for Cursor Bitmap.";
-      wl_pointer_set_cursor(input_pointer_, serial, nullptr, 0, 0);
-      return;
-    }
-    buffer_.reset(buffer);
-    size_ = image_size;
+    return HideCursor(serial);
   }
-  wl::DrawBitmapToSHMB(size_, *shared_memory_, image);
+
+  static const struct wl_buffer_listener wl_buffer_listener {
+    &WaylandCursor::OnBufferRelease
+  };
+  wl_buffer_add_listener(buffer.get(), &wl_buffer_listener, this);
+
+  wl::DrawBitmapToSHMB(image_size, *shared_memory, image);
 
   wl_pointer_set_cursor(input_pointer_, serial, pointer_surface_.get(),
-                        location.x(), location.y());
-  wl_surface_attach(pointer_surface_.get(), buffer_.get(), 0, 0);
-  wl_surface_damage(pointer_surface_.get(), 0, 0, size_.width(),
-                    size_.height());
+                        hotspot.x(), hotspot.y());
+  wl_surface_attach(pointer_surface_.get(), buffer.get(), 0, 0);
   wl_surface_commit(pointer_surface_.get());
+
+  buffers_.emplace(
+      buffer.get(),
+      std::pair<wl::Object<wl_buffer>, std::unique_ptr<base::SharedMemory>>(
+          std::move(buffer), std::move(shared_memory)));
 }
 
 void WaylandCursor::HideCursor(uint32_t serial) {
-  size_ = gfx::Size();
+  DCHECK(input_pointer_);
   wl_pointer_set_cursor(input_pointer_, serial, nullptr, 0, 0);
-
-  buffer_.reset();
-
-  if (shared_memory_->handle().GetHandle()) {
-    shared_memory_->Unmap();
-    shared_memory_->Close();
-  }
 }
 
 }  // namespace ui
--- a/ui/ozone/platform/wayland/wayland_cursor.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_cursor.h	2019-05-17 18:57:26.184000000 +0300
@@ -6,12 +6,14 @@
 #define UI_OZONE_PLATFORM_WAYLAND_WAYLAND_CURSOR_H_
 
 #include <wayland-client.h>
+#include <memory>
+#include <utility>
 #include <vector>
 
+#include "base/containers/flat_map.h"
 #include "base/macros.h"
 #include "third_party/skia/include/core/SkBitmap.h"
 #include "third_party/skia/include/core/SkSurface.h"
-#include "ui/gfx/geometry/size.h"
 #include "ui/ozone/platform/wayland/wayland_object.h"
 
 namespace base {
@@ -26,10 +28,14 @@
 
 class WaylandConnection;
 
-// The WaylandCursor class wraps the actual visual representation
-// (what users see drawn) of a wl_pointer.
+// Manages the actual visual representation (what users see drawn) of the
+// 'pointer' (which is the Wayland term for mouse/mice).
 //
-// 'pointer' is the Wayland terminology for mouse/mice.
+// An instance of this class is aggregated by an instance of WaylandPointer
+// and is exposed for updating the pointer bitmap with the single method call.
+//
+// Encapsulates the low-level job such as surface and buffer management and
+// Wayland protocol calls.
 class WaylandCursor {
  public:
   WaylandCursor();
@@ -38,25 +44,29 @@
   void Init(wl_pointer* pointer, WaylandConnection* connection);
 
   // Updates wl_pointer's visual representation with the given bitmap
-  // image set, at the hotspot specified by 'location'.
+  // image set and hotspot.
   void UpdateBitmap(const std::vector<SkBitmap>& bitmaps,
-                    const gfx::Point& location,
+                    const gfx::Point& hotspot,
                     uint32_t serial);
 
  private:
+  // wl_buffer_listener:
+  static void OnBufferRelease(void* data, wl_buffer* wl_buffer);
+
   void HideCursor(uint32_t serial);
 
   wl_shm* shm_ = nullptr;                // Owned by WaylandConnection.
   wl_pointer* input_pointer_ = nullptr;  // Owned by WaylandPointer.
 
-  wl::Object<wl_buffer> buffer_;
+  // Holds the buffers and their memory until the compositor releases them.
+  base::flat_map<
+      wl_buffer*,
+      std::pair<wl::Object<wl_buffer>, std::unique_ptr<base::SharedMemory>>>
+      buffers_;
   wl::Object<wl_surface> pointer_surface_;
 
-  std::unique_ptr<base::SharedMemory> shared_memory_;
   sk_sp<SkSurface> sk_surface_;
 
-  gfx::Size size_;
-
   DISALLOW_COPY_AND_ASSIGN(WaylandCursor);
 };
 
--- a/ui/ozone/platform/wayland/wayland_data_device.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_data_device.cc	2019-05-17 18:57:26.184000000 +0300
@@ -224,6 +224,8 @@
                                     wl_data_offer* offer) {
   auto* self = static_cast<WaylandDataDevice*>(data);
 
+  self->connection_->UpdateClipboardSequenceNumber();
+
   DCHECK(!self->new_offer_);
   self->new_offer_.reset(new WaylandDataOffer(offer));
 }
--- a/ui/ozone/platform/wayland/wayland_data_device.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_data_device.h	2019-05-17 18:57:26.184000000 +0300
@@ -58,6 +58,8 @@
 
   wl_data_device* data_device() const { return data_device_.get(); }
 
+  bool IsDragEntered() { return drag_offer_ != nullptr; }
+
  private:
   void ReadClipboardDataFromFD(base::ScopedFD fd, const std::string& mime_type);
 
--- a/ui/ozone/platform/wayland/wayland_data_device_manager.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_data_device_manager.cc	2019-05-17 18:57:26.184000000 +0300
@@ -9,8 +9,12 @@
 namespace ui {
 
 WaylandDataDeviceManager::WaylandDataDeviceManager(
-    wl_data_device_manager* device_manager)
-    : device_manager_(device_manager) {}
+    wl_data_device_manager* device_manager,
+    WaylandConnection* connection)
+    : device_manager_(device_manager), connection_(connection) {
+  DCHECK(connection_);
+  DCHECK(device_manager_);
+}
 
 WaylandDataDeviceManager::~WaylandDataDeviceManager() = default;
 
--- a/ui/ozone/platform/wayland/wayland_data_device_manager.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_data_device_manager.h	2019-05-17 18:57:26.184000000 +0300
@@ -7,7 +7,6 @@
 
 #include <wayland-client.h>
 
-#include "base/logging.h"
 #include "base/macros.h"
 #include "ui/ozone/platform/wayland/wayland_object.h"
 
@@ -17,21 +16,17 @@
 
 class WaylandDataDeviceManager {
  public:
-  explicit WaylandDataDeviceManager(wl_data_device_manager* device_manager);
+  WaylandDataDeviceManager(wl_data_device_manager* device_manager,
+                           WaylandConnection* connection);
   ~WaylandDataDeviceManager();
 
   wl_data_device* GetDevice();
   wl_data_source* CreateSource();
 
-  void set_connection(WaylandConnection* connection) {
-    DCHECK(connection);
-    connection_ = connection;
-  }
-
  private:
   wl::Object<wl_data_device_manager> device_manager_;
 
-  WaylandConnection* connection_ = nullptr;
+  WaylandConnection* connection_;
 
   DISALLOW_COPY_AND_ASSIGN(WaylandDataDeviceManager);
 };
--- a/ui/ozone/platform/wayland/wayland_input_method_context.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_input_method_context.cc	2019-05-17 18:57:26.188000000 +0300
@@ -10,6 +10,7 @@
 #include "base/strings/string_util.h"
 #include "base/strings/utf_string_conversions.h"
 #include "ui/base/ime/composition_text.h"
+#include "ui/base/ime/ime_text_span.h"
 #include "ui/events/base_event_utils.h"
 #include "ui/events/event.h"
 #include "ui/events/keycodes/dom/dom_code.h"
@@ -70,10 +71,33 @@
 
 bool WaylandInputMethodContext::DispatchKeyEvent(
     const ui::KeyEvent& key_event) {
+  if (key_event.type() != ET_KEY_PRESSED ||
+      !character_composer_.FilterKeyPress(key_event))
   return false;
+
+  // CharacterComposer consumed the key event. Update the composition text.
+  UpdatePreeditText(character_composer_.preedit_string());
+  auto composed = character_composer_.composed_character();
+  if (!composed.empty())
+    delegate_->OnCommit(composed);
+  return true;
+}
+
+void WaylandInputMethodContext::UpdatePreeditText(
+    const base::string16& preedit_text) {
+  CompositionText preedit;
+  preedit.text = preedit_text;
+  auto length = preedit.text.size();
+
+  preedit.selection = gfx::Range(length);
+  preedit.ime_text_spans.push_back(
+      ImeTextSpan(ImeTextSpan::Type::kComposition, 0, length,
+                  ImeTextSpan::Thickness::kThin, SK_ColorTRANSPARENT));
+  delegate_->OnPreeditChanged(preedit);
 }
 
 void WaylandInputMethodContext::Reset() {
+  character_composer_.Reset();
   if (text_input_)
     text_input_->Reset();
 }
--- a/ui/ozone/platform/wayland/wayland_input_method_context.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_input_method_context.h	2019-05-17 18:57:26.188000000 +0300
@@ -5,7 +5,11 @@
 #ifndef UI_OZONE_PLATFORM_WAYLAND_WAYLAND_INPUT_METHOD_CONTEXT_H_
 #define UI_OZONE_PLATFORM_WAYLAND_WAYLAND_INPUT_METHOD_CONTEXT_H_
 
+#include <memory>
+#include <string>
+
 #include "base/macros.h"
+#include "ui/base/ime/character_composer.h"
 #include "ui/base/ime/linux/linux_input_method_context.h"
 #include "ui/events/ozone/evdev/event_dispatch_callback.h"
 #include "ui/ozone/platform/wayland/zwp_text_input_wrapper.h"
@@ -42,6 +46,8 @@
   void OnKeysym(uint32_t key, uint32_t state, uint32_t modifiers) override;
 
  private:
+  void UpdatePreeditText(const base::string16& preedit_text);
+
   WaylandConnection* connection_ = nullptr;  // TODO(jani) Handle this better
 
   // Delegate interface back to IME code in ui.
@@ -51,6 +57,10 @@
 
   std::unique_ptr<ZWPTextInputWrapper> text_input_;
 
+  // An object to compose a character from a sequence of key presses
+  // including dead key etc.
+  CharacterComposer character_composer_;
+
   DISALLOW_COPY_AND_ASSIGN(WaylandInputMethodContext);
 };
 
--- a/ui/ozone/platform/wayland/wayland_keyboard.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_keyboard.cc	2019-05-17 18:57:26.188000000 +0300
@@ -5,6 +5,7 @@
 #include "ui/ozone/platform/wayland/wayland_keyboard.h"
 
 #include <sys/mman.h>
+#include <utility>
 
 #include "base/files/scoped_file.h"
 #include "ui/base/buildflags.h"
@@ -12,44 +13,41 @@
 #include "ui/events/event.h"
 #include "ui/events/keycodes/dom/dom_code.h"
 #include "ui/events/keycodes/dom/keycode_converter.h"
+#include "ui/events/keycodes/keyboard_code_conversion.h"
+#include "ui/events/ozone/evdev/keyboard_util_evdev.h"
 #include "ui/events/ozone/layout/keyboard_layout_engine.h"
 #include "ui/events/ozone/layout/keyboard_layout_engine_manager.h"
-#include "ui/events/ozone/layout/layout_util.h"
 #include "ui/ozone/platform/wayland/wayland_connection.h"
 #include "ui/ozone/platform/wayland/wayland_window.h"
 
 #if BUILDFLAG(USE_XKBCOMMON)
-#include "ui/ozone/platform/wayland/wayland_xkb_keyboard_layout_engine.h"
+#include "ui/events/ozone/layout/xkb/xkb_keyboard_layout_engine.h"
 #endif
 
 namespace ui {
 
-namespace {
-
-const int kXkbKeycodeOffset = 8;
-
-}  // namespace
-
 // static
 const wl_callback_listener WaylandKeyboard::callback_listener_ = {
     WaylandKeyboard::SyncCallback,
 };
 
 WaylandKeyboard::WaylandKeyboard(wl_keyboard* keyboard,
+                                 KeyboardLayoutEngine* layout_engine,
                                  const EventDispatchCallback& callback)
-    : obj_(keyboard), callback_(callback), auto_repeat_handler_(this) {
+    : obj_(keyboard),
+      callback_(callback),
+      auto_repeat_handler_(this),
+#if BUILDFLAG(USE_XKBCOMMON)
+      layout_engine_(static_cast<XkbKeyboardLayoutEngine*>(layout_engine)) {
+#else
+      layout_engine_(layout_engine) {
+#endif
   static const wl_keyboard_listener listener = {
       &WaylandKeyboard::Keymap,    &WaylandKeyboard::Enter,
       &WaylandKeyboard::Leave,     &WaylandKeyboard::Key,
       &WaylandKeyboard::Modifiers, &WaylandKeyboard::RepeatInfo,
   };
 
-#if BUILDFLAG(USE_XKBCOMMON)
-  auto* engine = static_cast<WaylandXkbKeyboardLayoutEngine*>(
-      KeyboardLayoutEngineManager::GetKeyboardLayoutEngine());
-  engine->SetEventModifiers(&event_modifiers_);
-#endif
-
   wl_keyboard_add_listener(obj_.get(), &listener, this);
 
   // TODO(tonikitoo): Default auto-repeat to ON here?
@@ -62,6 +60,9 @@
                              uint32_t format,
                              int32_t raw_fd,
                              uint32_t size) {
+  WaylandKeyboard* keyboard = static_cast<WaylandKeyboard*>(data);
+  DCHECK(keyboard);
+
   base::ScopedFD fd(raw_fd);
   if (!data || format != WL_KEYBOARD_KEYMAP_FORMAT_XKB_V1)
     return;
@@ -71,9 +72,9 @@
   if (keymap_str == MAP_FAILED)
     return;
 
+  auto length = strnlen(keymap_str, size);
   bool success =
-      KeyboardLayoutEngineManager::GetKeyboardLayoutEngine()
-          ->SetCurrentLayoutFromBuffer(keymap_str, strnlen(keymap_str, size));
+      keyboard->layout_engine_->SetCurrentLayoutFromBuffer(keymap_str, length);
   DCHECK(success) << "Failed to set the XKB keyboard mapping.";
   munmap(keymap_str, size);
 }
@@ -128,14 +129,16 @@
 void WaylandKeyboard::Modifiers(void* data,
                                 wl_keyboard* obj,
                                 uint32_t serial,
-                                uint32_t mods_depressed,
-                                uint32_t mods_latched,
-                                uint32_t mods_locked,
+                                uint32_t depressed,
+                                uint32_t latched,
+                                uint32_t locked,
                                 uint32_t group) {
 #if BUILDFLAG(USE_XKBCOMMON)
-  auto* engine = static_cast<WaylandXkbKeyboardLayoutEngine*>(
-      KeyboardLayoutEngineManager::GetKeyboardLayoutEngine());
-  engine->UpdateModifiers(mods_depressed, mods_latched, mods_locked, group);
+  WaylandKeyboard* keyboard = static_cast<WaylandKeyboard*>(data);
+  DCHECK(keyboard);
+
+  keyboard->modifiers_ = keyboard->layout_engine_->UpdateModifiers(
+      depressed, latched, locked, group);
 #endif
 }
 
@@ -171,15 +174,13 @@
                                   base::TimeTicks timestamp,
                                   int device_id) {
   DomCode dom_code =
-      KeycodeConverter::NativeKeycodeToDomCode(key + kXkbKeycodeOffset);
+      KeycodeConverter::NativeKeycodeToDomCode(EvdevCodeToNativeCode(key));
   if (dom_code == ui::DomCode::NONE)
     return;
 
-  uint8_t flags = event_modifiers_.GetModifierFlags();
   DomKey dom_key;
   KeyboardCode key_code;
-  if (!KeyboardLayoutEngineManager::GetKeyboardLayoutEngine()->Lookup(
-          dom_code, flags, &dom_key, &key_code))
+  if (!layout_engine_->Lookup(dom_code, modifiers_, &dom_key, &key_code))
     return;
 
   if (!repeat) {
@@ -188,8 +189,7 @@
   }
 
   ui::KeyEvent event(down ? ET_KEY_PRESSED : ET_KEY_RELEASED, key_code,
-                     dom_code, event_modifiers_.GetModifierFlags(), dom_key,
-                     timestamp);
+                     dom_code, modifiers_, dom_key, timestamp);
   event.set_source_device_id(device_id);
   callback_.Run(&event);
 }
@@ -205,25 +205,22 @@
   keyboard->sync_callback_.reset();
 }
 
-void WaylandKeyboard::UpdateModifier(int modifier_flag, bool down) {
-  if (modifier_flag == EF_NONE)
-    return;
-
-  int modifier = EventModifiers::GetModifierFromEventFlag(modifier_flag);
-  if (modifier == MODIFIER_NONE)
+void WaylandKeyboard::UpdateModifier(int modifier, bool down) {
+  if (modifier == EF_NONE)
     return;
 
-  // This mimics KeyboardEvDev, which matches chrome/x11.
+  // TODO(nickdiego): ChromeOS-specific keyboard remapping logic.
+  // Remove this once it is properly guarded under OS_CHROMEOS.
+  //
   // Currently EF_MOD3_DOWN means that the CapsLock key is currently down,
   // and EF_CAPS_LOCK_ON means the caps lock state is enabled (and the
   // key may or may not be down, but usually isn't). There does need to
   // to be two different flags, since the physical CapsLock key is subject
   // to remapping, but the caps lock state (which can be triggered in a
   // variety of ways) is not.
-  if (modifier == MODIFIER_CAPS_LOCK)
-    event_modifiers_.UpdateModifier(MODIFIER_MOD3, down);
-  else
-    event_modifiers_.UpdateModifier(modifier, down);
+  if (modifier == EF_CAPS_LOCK_ON)
+    modifier = (modifier & ~EF_CAPS_LOCK_ON) | EF_MOD3_DOWN;
+  modifiers_ = down ? (modifiers_ | modifier) : (modifiers_ & ~modifier);
 }
 
 }  // namespace ui
--- a/ui/ozone/platform/wayland/wayland_keyboard.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_keyboard.h	2019-05-17 18:57:26.188000000 +0300
@@ -7,25 +7,31 @@
 
 #include <wayland-client.h>
 
-#include "ui/events/event_modifiers.h"
+#include "ui/base/buildflags.h"
 #include "ui/events/ozone/evdev/event_dispatch_callback.h"
 #include "ui/events/ozone/keyboard/event_auto_repeat_handler.h"
 #include "ui/ozone/platform/wayland/wayland_object.h"
 
 namespace ui {
 
+class KeyboardLayoutEngine;
+#if BUILDFLAG(USE_XKBCOMMON)
+class XkbKeyboardLayoutEngine;
+#endif
 class WaylandConnection;
 
 class WaylandKeyboard : public EventAutoRepeatHandler::Delegate {
  public:
-  WaylandKeyboard(wl_keyboard* keyboard, const EventDispatchCallback& callback);
+  WaylandKeyboard(wl_keyboard* keyboard,
+                  KeyboardLayoutEngine* keyboard_layout_engine,
+                  const EventDispatchCallback& callback);
   virtual ~WaylandKeyboard();
 
   void set_connection(WaylandConnection* connection) {
     connection_ = connection;
   }
 
-  int modifiers() { return event_modifiers_.GetModifierFlags(); }
+  int modifiers() { return modifiers_; }
 
  private:
   // wl_keyboard_listener
@@ -63,7 +69,7 @@
 
   static void SyncCallback(void* data, struct wl_callback* cb, uint32_t time);
 
-  void UpdateModifier(int modifier_flag, bool down);
+  void UpdateModifier(int modifier, bool down);
 
   // EventAutoRepeatHandler::Delegate
   void FlushInput(base::OnceClosure closure) override;
@@ -76,13 +82,19 @@
   WaylandConnection* connection_ = nullptr;
   wl::Object<wl_keyboard> obj_;
   EventDispatchCallback callback_;
-  EventModifiers event_modifiers_;
+  int modifiers_ = 0;
 
   // Key repeat handler.
   static const wl_callback_listener callback_listener_;
   EventAutoRepeatHandler auto_repeat_handler_;
   base::OnceClosure auto_repeat_closure_;
   wl::Object<wl_callback> sync_callback_;
+
+#if BUILDFLAG(USE_XKBCOMMON)
+  XkbKeyboardLayoutEngine* layout_engine_;
+#else
+  KeyboardLayoutEngine* layout_engine_;
+#endif
 };
 
 }  // namespace ui
--- a/ui/ozone/platform/wayland/wayland_object.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_object.cc	2019-05-17 18:57:26.188000000 +0300
@@ -102,6 +102,9 @@
     &wl_registry_interface;
 void (*ObjectTraits<wl_registry>::deleter)(wl_registry*) = &wl_registry_destroy;
 
+const wl_interface* ObjectTraits<wl_region>::interface = &wl_region_interface;
+void (*ObjectTraits<wl_region>::deleter)(wl_region*) = &wl_region_destroy;
+
 const wl_interface* ObjectTraits<wl_seat>::interface = &wl_seat_interface;
 void (*ObjectTraits<wl_seat>::deleter)(wl_seat*) = &delete_seat;
 
--- a/ui/ozone/platform/wayland/wayland_object.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_object.h	2019-05-17 18:57:26.188000000 +0300
@@ -20,6 +20,7 @@
 struct wl_output;
 struct wl_pointer;
 struct wl_registry;
+struct wl_region;
 struct wl_seat;
 struct wl_shm;
 struct wl_shm_pool;
@@ -119,6 +120,12 @@
 };
 
 template <>
+struct ObjectTraits<wl_region> {
+  static const wl_interface* interface;
+  static void (*deleter)(wl_region*);
+};
+
+template <>
 struct ObjectTraits<wl_seat> {
   static const wl_interface* interface;
   static void (*deleter)(wl_seat*);
--- a/ui/ozone/platform/wayland/wayland_output.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_output.h	2019-05-17 18:57:26.188000000 +0300
@@ -35,6 +35,7 @@
   void TriggerDelegateNotification() const;
 
   uint32_t output_id() const { return output_id_; }
+  bool has_output(wl_output* output) const { return output_.get() == output; }
 
   // Tells if the output has already received physical screen dimensions in the
   // global compositor space.
--- a/ui/ozone/platform/wayland/wayland_output_manager.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_output_manager.cc	2019-05-17 18:57:26.188000000 +0300
@@ -13,13 +13,10 @@
 
 WaylandOutputManager::~WaylandOutputManager() = default;
 
-bool WaylandOutputManager::IsPrimaryOutputReady() const {
+bool WaylandOutputManager::IsOutputReady() const {
   if (output_list_.empty())
     return false;
-
-  // The very first output in the list is always treated as a primary output.
-  const auto& primary_output = output_list_.front();
-  return primary_output->is_ready();
+  return output_list_.front()->is_ready();
 }
 
 void WaylandOutputManager::AddWaylandOutput(const uint32_t output_id,
@@ -54,14 +51,7 @@
   if (output_it == output_list_.end())
     return;
 
-  bool was_primary_output = IsPrimaryOutput(output_id);
   output_list_.erase(output_it);
-
-  // If it was a primary output removed, make sure the second output, which
-  // became a primary one, announces that to observers.
-  if (was_primary_output && !output_list_.empty())
-    output_list_.front()->TriggerDelegateNotification();
-
   OnWaylandOutputRemoved(output_id);
 }
 
@@ -88,9 +78,18 @@
   return wayland_screen;
 }
 
+uint32_t WaylandOutputManager::GetIdForOutput(wl_output* output) const {
+  auto output_it = std::find_if(
+      output_list_.begin(), output_list_.end(),
+      [output](const auto& item) { return item->has_output(output); });
+  // This is unlikely to happen, but better to be explicit here.
+  DCHECK(output_it != output_list_.end());
+  return output_it->get()->output_id();
+}
+
 void WaylandOutputManager::OnWaylandOutputAdded(uint32_t output_id) {
   if (wayland_screen_)
-    wayland_screen_->OnOutputAdded(output_id, IsPrimaryOutput(output_id));
+    wayland_screen_->OnOutputAdded(output_id);
 }
 
 void WaylandOutputManager::OnWaylandOutputRemoved(uint32_t output_id) {
@@ -98,21 +97,12 @@
     wayland_screen_->OnOutputRemoved(output_id);
 }
 
-bool WaylandOutputManager::IsPrimaryOutput(uint32_t output_id) const {
-  DCHECK(!output_list_.empty());
-  // The very first object in the |output_list_| is always treated as a primary
-  // output.
-  const auto& primary_output = output_list_.front();
-  return primary_output->output_id() == output_id;
-}
-
 void WaylandOutputManager::OnOutputHandleMetrics(uint32_t output_id,
                                                  const gfx::Rect& new_bounds,
                                                  int32_t scale_factor) {
-  if (wayland_screen_) {
-    wayland_screen_->OnOutputMetricsChanged(output_id, new_bounds, scale_factor,
-                                            IsPrimaryOutput(output_id));
-  }
+  if (wayland_screen_)
+    wayland_screen_->OnOutputMetricsChanged(output_id, new_bounds,
+                                            scale_factor);
 }
 
 }  // namespace ui
--- a/ui/ozone/platform/wayland/wayland_output_manager.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_output_manager.h	2019-05-17 18:57:26.188000000 +0300
@@ -27,8 +27,9 @@
   WaylandOutputManager();
   ~WaylandOutputManager() override;
 
-  // The first output in the vector is always a primary output.
-  bool IsPrimaryOutputReady() const;
+  // Says if at least one output has already been announced by a Wayland
+  // compositor.
+  bool IsOutputReady() const;
 
   void AddWaylandOutput(const uint32_t output_id, wl_output* output);
   void RemoveWaylandOutput(const uint32_t output_id);
@@ -37,12 +38,12 @@
   std::unique_ptr<WaylandScreen> CreateWaylandScreen(
       WaylandConnection* connection);
 
+  uint32_t GetIdForOutput(wl_output* output) const;
+
  private:
   void OnWaylandOutputAdded(uint32_t output_id);
   void OnWaylandOutputRemoved(uint32_t output_id);
 
-  bool IsPrimaryOutput(uint32_t output_id) const;
-
   // WaylandOutput::Delegate:
   void OnOutputHandleMetrics(uint32_t output_id,
                              const gfx::Rect& new_bounds,
--- a/ui/ozone/platform/wayland/wayland_pointer.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_pointer.cc	2019-05-17 18:57:26.188000000 +0300
@@ -6,6 +6,7 @@
 
 #include <linux/input.h>
 #include <wayland-client.h>
+#include <memory>
 
 #include "ui/events/base_event_utils.h"
 #include "ui/events/event.h"
@@ -41,7 +42,7 @@
 
   wl_pointer_add_listener(obj_.get(), &listener, this);
 
-  cursor_.reset(new WaylandCursor);
+  cursor_ = std::make_unique<WaylandCursor>();
 }
 
 WaylandPointer::~WaylandPointer() {
@@ -61,11 +62,12 @@
   WaylandPointer* pointer = static_cast<WaylandPointer*>(data);
   pointer->location_.SetPoint(wl_fixed_to_double(surface_x),
                               wl_fixed_to_double(surface_y));
-  if (surface) {
-    WaylandWindow* window = WaylandWindow::FromSurface(surface);
-    window->set_pointer_focus(true);
-    pointer->window_with_pointer_focus_ = window;
-  }
+  pointer->FocusWindow(surface);
+  MouseEvent event(ET_MOUSE_ENTERED, gfx::Point(), gfx::Point(),
+                   EventTimeForNow(), pointer->flags_, 0);
+  event.set_location_f(pointer->location_);
+  event.set_root_location_f(pointer->location_);
+  pointer->callback_.Run(&event);
 }
 
 // static
@@ -77,12 +79,7 @@
   MouseEvent event(ET_MOUSE_EXITED, gfx::Point(), gfx::Point(),
                    EventTimeForNow(), pointer->flags_, 0);
   pointer->callback_.Run(&event);
-  if (surface) {
-    WaylandWindow* window = WaylandWindow::FromSurface(surface);
-    window->set_pointer_focus(false);
-    window->set_has_implicit_grab(false);
-    pointer->window_with_pointer_focus_ = nullptr;
-  }
+  pointer->UnfocusWindow(surface);
 }
 
 // static
@@ -218,4 +215,21 @@
   keyboard_modifiers_ = 0;
 }
 
+void WaylandPointer::FocusWindow(wl_surface* surface) {
+  if (surface) {
+    WaylandWindow* window = WaylandWindow::FromSurface(surface);
+    window->set_pointer_focus(true);
+    window_with_pointer_focus_ = window;
+  }
+}
+
+void WaylandPointer::UnfocusWindow(wl_surface* surface) {
+  if (surface) {
+    WaylandWindow* window = WaylandWindow::FromSurface(surface);
+    window->set_pointer_focus(false);
+    window->set_has_implicit_grab(false);
+    window_with_pointer_focus_ = nullptr;
+  }
+}
+
 }  // namespace ui
--- a/ui/ozone/platform/wayland/wayland_pointer.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_pointer.h	2019-05-17 18:57:26.188000000 +0300
@@ -16,6 +16,10 @@
 
 class WaylandWindow;
 
+// Wraps the wl_pointer object and transmits events to the dispatcher callback.
+//
+// Exposes an aggregated WaylandCursor that manages the visual shape of the
+// pointer.
 class WaylandPointer {
  public:
   WaylandPointer(wl_pointer* pointer, const EventDispatchCallback& callback);
@@ -65,6 +69,8 @@
                    wl_fixed_t value);
 
   void MaybeSetOrResetImplicitGrab();
+  void FocusWindow(wl_surface* surface);
+  void UnfocusWindow(wl_surface* surface);
 
   WaylandConnection* connection_ = nullptr;
   std::unique_ptr<WaylandCursor> cursor_;
--- a/ui/ozone/platform/wayland/wayland_pointer_unittest.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_pointer_unittest.cc	2019-05-17 18:57:26.188000000 +0300
@@ -42,6 +42,27 @@
   DISALLOW_COPY_AND_ASSIGN(WaylandPointerTest);
 };
 
+ACTION_P(CloneEvent, ptr) {
+  *ptr = Event::Clone(*arg0);
+}
+
+TEST_P(WaylandPointerTest, Enter) {
+  wl_pointer_send_enter(pointer_->resource(), 1, surface_->resource(), 0, 0);
+
+  std::unique_ptr<Event> event;
+  EXPECT_CALL(delegate_, DispatchEvent(_)).WillOnce(CloneEvent(&event));
+
+  Sync();
+
+  ASSERT_TRUE(event);
+  ASSERT_TRUE(event->IsMouseEvent());
+  auto* mouse_event = event->AsMouseEvent();
+  EXPECT_EQ(ET_MOUSE_ENTERED, mouse_event->type());
+  EXPECT_EQ(0, mouse_event->button_flags());
+  EXPECT_EQ(0, mouse_event->changed_button_flags());
+  EXPECT_EQ(gfx::PointF(0, 0), mouse_event->location_f());
+}
+
 TEST_P(WaylandPointerTest, Leave) {
   MockPlatformWindowDelegate other_delegate;
   WaylandWindow other_window(&other_delegate, connection_.get());
@@ -66,17 +87,13 @@
                         0);
   wl_pointer_send_button(pointer_->resource(), 4, 1004, BTN_LEFT,
                          WL_POINTER_BUTTON_STATE_PRESSED);
-  EXPECT_CALL(delegate_, DispatchEvent(_)).Times(1);
+  EXPECT_CALL(delegate_, DispatchEvent(_)).Times(2);
 
   // Do an extra Sync() here so that we process the second enter event before we
   // destroy |other_window|.
   Sync();
 }
 
-ACTION_P(CloneEvent, ptr) {
-  *ptr = Event::Clone(*arg0);
-}
-
 ACTION_P3(CloneEventAndCheckCapture, window, result, ptr) {
   ASSERT_TRUE(window->HasCapture() == result);
   *ptr = Event::Clone(*arg0);
@@ -84,6 +101,9 @@
 
 TEST_P(WaylandPointerTest, Motion) {
   wl_pointer_send_enter(pointer_->resource(), 1, surface_->resource(), 0, 0);
+  Sync();  // We're interested in checking Motion event in this test case, so
+           // skip Enter event here.
+
   wl_pointer_send_motion(pointer_->resource(), 1002,
                          wl_fixed_from_double(10.75),
                          wl_fixed_from_double(20.375));
--- a/ui/ozone/platform/wayland/wayland_screen.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_screen.cc	2019-05-17 18:57:26.188000000 +0300
@@ -10,6 +10,7 @@
 #include "ui/gfx/geometry/point.h"
 #include "ui/gfx/geometry/size.h"
 #include "ui/ozone/platform/wayland/wayland_connection.h"
+#include "ui/ozone/platform/wayland/wayland_cursor_position.h"
 #include "ui/ozone/platform/wayland/wayland_window.h"
 
 namespace ui {
@@ -21,27 +22,62 @@
 
 WaylandScreen::~WaylandScreen() = default;
 
-void WaylandScreen::OnOutputAdded(uint32_t output_id, bool is_primary) {
+void WaylandScreen::OnOutputAdded(uint32_t output_id) {
   display::Display new_display(output_id);
   display_list_.AddDisplay(std::move(new_display),
-                           is_primary
-                               ? display::DisplayList::Type::PRIMARY
-                               : display::DisplayList::Type::NOT_PRIMARY);
+                           display::DisplayList::Type::NOT_PRIMARY);
 }
 
 void WaylandScreen::OnOutputRemoved(uint32_t output_id) {
+  display::Display primary_display = GetPrimaryDisplay();
+  if (primary_display.id() == output_id) {
+    // First, set a new primary display as required by the |display_list_|. It's
+    // safe to set any of the displays to be a primary one. Once the output is
+    // completely removed, Wayland updates geometry of other displays. And a
+    // display, which became the one to be nearest to the origin will become a
+    // primary one.
+    for (const auto& display : display_list_.displays()) {
+      if (display.id() != output_id) {
+        display_list_.AddOrUpdateDisplay(display,
+                                         display::DisplayList::Type::PRIMARY);
+        break;
+      }
+    }
+  }
   display_list_.RemoveDisplay(output_id);
 }
 
 void WaylandScreen::OnOutputMetricsChanged(uint32_t output_id,
                                            const gfx::Rect& new_bounds,
-                                           float device_pixel_ratio,
-                                           bool is_primary) {
+                                           float device_pixel_ratio) {
   display::Display changed_display(output_id);
   changed_display.set_device_scale_factor(device_pixel_ratio);
   changed_display.set_bounds(new_bounds);
   changed_display.set_work_area(new_bounds);
 
+  bool is_primary = false;
+  display::Display display_nearest_origin =
+      GetDisplayNearestPoint(gfx::Point(0, 0));
+  // If bounds of the nearest to origin display are empty, it must have been the
+  // very first and the same display added before.
+  if (display_nearest_origin.bounds().IsEmpty()) {
+    DCHECK_EQ(display_nearest_origin.id(), changed_display.id());
+    is_primary = true;
+  } else if (changed_display.bounds().origin() <
+             display_nearest_origin.bounds().origin()) {
+    // If changed display is nearer to the origin than the previous display,
+    // that one must become a primary display.
+    is_primary = true;
+  } else if (changed_display.bounds().OffsetFromOrigin() ==
+             display_nearest_origin.bounds().OffsetFromOrigin()) {
+    // If changed display has the same origin as the nearest to origin display,
+    // |changed_display| must become a primary one or it has already been the
+    // primary one. If a user changed positions of two displays (the second at
+    // x,x was set to 0,0), the second change will modify geometry of the
+    // display, which used to be the one nearest to the origin.
+    is_primary = true;
+  }
+
   display_list_.UpdateDisplay(
       changed_display, is_primary ? display::DisplayList::Type::PRIMARY
                                   : display::DisplayList::Type::NOT_PRIMARY);
@@ -57,25 +93,62 @@
 
 display::Display WaylandScreen::GetPrimaryDisplay() const {
   auto iter = display_list_.GetPrimaryDisplayIterator();
-  if (iter == display_list_.displays().end())
-    return display::Display::GetDefaultDisplay();
+  DCHECK(iter != display_list_.displays().end());
   return *iter;
 }
 
 display::Display WaylandScreen::GetDisplayForAcceleratedWidget(
     gfx::AcceleratedWidget widget) const {
-  // TODO(msisov): implement wl_surface_listener::enter and
-  // wl_surface_listener::leave for a wl_surface to know what surface the window
-  // is located on.
-  //
-  // https://crbug.com/890271
-  NOTIMPLEMENTED_LOG_ONCE();
+  auto* wayland_window = connection_->GetWindow(widget);
+  // A window might be destroyed by this time on shutting down the browser.
+  if (!wayland_window)
+    return GetPrimaryDisplay();
+
+  const std::set<uint32_t> entered_outputs_ids =
+      wayland_window->GetEnteredOutputsIds();
+  // Although spec says a surface receives enter/leave surface events on
+  // create/move/resize actions, this might be called right after a window is
+  // created, but it has not been configured by a Wayland compositor and it has
+  // not received enter surface events yet. Another case is when a user switches
+  // between displays in a single output mode - Wayland may not send enter
+  // events immediately, which can result in empty container of entered ids
+  // (check comments in WaylandWindow::RemoveEnteredOutputId). In this case,
+  // it's also safe to return the primary display.
+  if (entered_outputs_ids.empty())
+    return GetPrimaryDisplay();
+
+  DCHECK(!display_list_.displays().empty());
+
+  // A widget can be located on two or more displays. It would be better if the
+  // most in pixels occupied display was returned, but it's impossible to do in
+  // Wayland. Thus, return the one, which was the very first used.
+  for (const auto& display : display_list_.displays()) {
+    if (display.id() == *entered_outputs_ids.begin())
+      return display;
+  }
+
+  NOTREACHED();
   return GetPrimaryDisplay();
 }
 
 gfx::Point WaylandScreen::GetCursorScreenPoint() const {
-  NOTIMPLEMENTED_LOG_ONCE();
-  return gfx::Point();
+  // Wayland does not provide either location of surfaces in global space
+  // coordinate system or location of a pointer. Instead, only locations of
+  // mouse/touch events are known. Given that Chromium assumes top-level windows
+  // are located at origin, always provide a cursor point in regards to
+  // surfaces' location.
+  //
+  // If a pointer is located in any of the existing wayland windows, return the
+  // last known cursor position. Otherwise, return such a point, which is not
+  // contained by any of the windows.
+  auto* cursor_position = connection_->wayland_cursor_position();
+  if (connection_->GetCurrentFocusedWindow() && cursor_position)
+    return cursor_position->GetCursorSurfacePoint();
+
+  WaylandWindow* window = connection_->GetWindowWithLargestBounds();
+  DCHECK(window);
+  const gfx::Rect bounds = window->GetBounds();
+  return gfx::Point(bounds.width() + 10, bounds.height() + 10);
 }
 
 gfx::AcceleratedWidget WaylandScreen::GetAcceleratedWidgetAtScreenPoint(
@@ -90,15 +163,18 @@
 
 display::Display WaylandScreen::GetDisplayNearestPoint(
     const gfx::Point& point) const {
-  NOTIMPLEMENTED_LOG_ONCE();
-  return GetPrimaryDisplay();
+  return *FindDisplayNearestPoint(display_list_.displays(), point);
 }
 
 display::Display WaylandScreen::GetDisplayMatching(
     const gfx::Rect& match_rect) const {
-  // TODO(msisov): https://crbug.com/890272
-  NOTIMPLEMENTED_LOG_ONCE();
-  return GetPrimaryDisplay();
+  if (match_rect.IsEmpty())
+    return GetDisplayNearestPoint(match_rect.origin());
+
+  const display::Display* display_matching =
+      display::FindDisplayWithBiggestIntersection(display_list_.displays(),
+                                                  match_rect);
+  return display_matching ? *display_matching : GetPrimaryDisplay();
 }
 
 void WaylandScreen::AddObserver(display::DisplayObserver* observer) {
--- a/ui/ozone/platform/wayland/wayland_screen.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_screen.h	2019-05-17 18:57:26.188000000 +0300
@@ -25,12 +25,11 @@
   explicit WaylandScreen(WaylandConnection* connection);
   ~WaylandScreen() override;
 
-  void OnOutputAdded(uint32_t output_id, bool is_primary);
+  void OnOutputAdded(uint32_t output_id);
   void OnOutputRemoved(uint32_t output_id);
   void OnOutputMetricsChanged(uint32_t output_id,
                               const gfx::Rect& bounds,
-                              float device_pixel_ratio,
-                              bool is_primary);
+                              float device_pixel_ratio);
 
   base::WeakPtr<WaylandScreen> GetWeakPtr();
 
--- a/ui/ozone/platform/wayland/wayland_screen_unittest.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_screen_unittest.cc	2019-05-17 18:57:26.188000000 +0300
@@ -2,11 +2,15 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
+#include <memory>
+
 #include <wayland-server.h>
 
 #include "testing/gtest/include/gtest/gtest.h"
 #include "ui/display/display_observer.h"
 #include "ui/ozone/platform/wayland/fake_server.h"
+#include "ui/ozone/platform/wayland/test/mock_surface.h"
+#include "ui/ozone/platform/wayland/test/test_pointer.h"
 #include "ui/ozone/platform/wayland/wayland_connection.h"
 #include "ui/ozone/platform/wayland/wayland_output_manager.h"
 #include "ui/ozone/platform/wayland/wayland_screen.h"
@@ -27,6 +31,7 @@
   ~TestDisplayObserver() override {}
 
   display::Display GetDisplay() { return std::move(display_); }
+  display::Display GetRemovedDisplay() { return std::move(removed_display_); }
   uint32_t GetAndClearChangedMetrics() {
     uint32_t changed_metrics = changed_metrics_;
     changed_metrics_ = 0;
@@ -39,7 +44,7 @@
   }
 
   void OnDisplayRemoved(const display::Display& old_display) override {
-    display_ = old_display;
+    removed_display_ = old_display;
   }
 
   void OnDisplayMetricsChanged(const display::Display& display,
@@ -51,6 +56,7 @@
  private:
   uint32_t changed_metrics_ = 0;
   display::Display display_;
+  display::Display removed_display_;
 
   DISALLOW_COPY_AND_ASSIGN(TestDisplayObserver);
 };
@@ -71,7 +77,7 @@
     output_manager_ = connection_->wayland_output_manager();
     ASSERT_TRUE(output_manager_);
 
-    EXPECT_TRUE(output_manager_->IsPrimaryOutputReady());
+    EXPECT_TRUE(output_manager_->IsOutputReady());
     platform_screen_ = output_manager_->CreateWaylandScreen(connection_.get());
   }
 
@@ -90,7 +96,25 @@
     return window;
   }
 
-  wl::MockOutput* output_ = nullptr;
+  void UpdateOutputGeometry(wl_resource* output_resource,
+                            const gfx::Rect& new_rect) {
+    wl_output_send_geometry(output_resource, new_rect.x(), new_rect.y(),
+                            0 /* physical_width */, 0 /* physical_height */,
+                            0 /* subpixel */, "unknown_make", "unknown_model",
+                            0 /* transform */);
+    wl_output_send_mode(output_resource, WL_OUTPUT_MODE_CURRENT,
+                        new_rect.width(), new_rect.height(), 0 /* refresh */);
+    wl_output_send_done(output_resource);
+  }
+
+  void ValidateTheDisplayForWidget(gfx::AcceleratedWidget widget,
+                                   int64_t expected_display_id) {
+    display::Display display_for_widget =
+        platform_screen_->GetDisplayForAcceleratedWidget(widget);
+    EXPECT_EQ(display_for_widget.id(), expected_display_id);
+  }
+
+  wl::TestOutput* output_ = nullptr;
   WaylandOutputManager* output_manager_ = nullptr;
 
   std::unique_ptr<WaylandScreen> platform_screen_;
@@ -118,8 +142,20 @@
   TestDisplayObserver observer;
   platform_screen_->AddObserver(&observer);
 
+  const int64_t old_primary_display_id =
+      platform_screen_->GetPrimaryDisplay().id();
+
   // Add a second display.
-  server_.CreateAndInitializeOutput();
+  wl::TestOutput* output2 = server_.CreateAndInitializeOutput();
+
+  Sync();
+
+  // Update rect of that display.
+  gfx::Rect output1_rect = server_.output()->GetRect();
+  gfx::Rect output2_rect(output1_rect.width(), 0, 800, 600);
+  // The second display is located to the right of first display like
+  // | || |.
+  UpdateOutputGeometry(output2->resource(), output2_rect);
 
   Sync();
 
@@ -127,17 +163,21 @@
   int64_t added_display_id = observer.GetDisplay().id();
   EXPECT_NE(platform_screen_->GetPrimaryDisplay().id(), added_display_id);
 
-  // Remove the second output.
-  output_manager_->RemoveWaylandOutput(added_display_id);
+  output2->DestroyGlobal();
 
   Sync();
 
   // Ensure that removed display has correct id.
-  int64_t removed_display_id = observer.GetDisplay().id();
+  int64_t removed_display_id = observer.GetRemovedDisplay().id();
   EXPECT_EQ(added_display_id, removed_display_id);
 
   // Create another display again.
-  server_.CreateAndInitializeOutput();
+  output2 = server_.CreateAndInitializeOutput();
+
+  Sync();
+
+  // Updates rect again.
+  UpdateOutputGeometry(output2->resource(), output2_rect);
 
   Sync();
 
@@ -145,16 +185,26 @@
   added_display_id = observer.GetDisplay().id();
   EXPECT_NE(platform_screen_->GetPrimaryDisplay().id(), added_display_id);
 
-  // Make sure the geometry changes are sent by syncing one more time again.
-  Sync();
+  // Now, rearrange displays so that second display becomes a primary one.
+  output1_rect = gfx::Rect(1024, 0, 1024, 768);
+  output2_rect = gfx::Rect(0, 0, 1024, 768);
+  UpdateOutputGeometry(server_.output()->resource(), output1_rect);
+  UpdateOutputGeometry(output2->resource(), output2_rect);
 
-  int64_t old_primary_display_id = platform_screen_->GetPrimaryDisplay().id();
-  output_manager_->RemoveWaylandOutput(old_primary_display_id);
+  Sync();
 
-  // Ensure that previously added display is now a primary one.
+  // Ensure that output2 is now the primary one.
   EXPECT_EQ(platform_screen_->GetPrimaryDisplay().id(), added_display_id);
+
+  // Remove the primary display now.
+  output2->DestroyGlobal();
+
+  Sync();
+
+  // Ensure that output1 is a primary display now.
+  EXPECT_EQ(platform_screen_->GetPrimaryDisplay().id(), old_primary_display_id);
   // Ensure that the removed display was the one, which was a primary display.
-  EXPECT_EQ(observer.GetDisplay().id(), old_primary_display_id);
+  EXPECT_EQ(observer.GetRemovedDisplay().id(), added_display_id);
 
   platform_screen_->RemoveObserver(&observer);
 }
@@ -164,13 +214,7 @@
   platform_screen_->AddObserver(&observer);
 
   const gfx::Rect new_rect(0, 0, 800, 600);
-  wl_output_send_geometry(output_->resource(), new_rect.x(), new_rect.y(),
-                          0 /* physical_width */, 0 /* physical_height */,
-                          0 /* subpixel */, "unkown_make", "unknown_model",
-                          0 /* transform */);
-  wl_output_send_mode(output_->resource(), WL_OUTPUT_MODE_CURRENT,
-                      new_rect.width(), new_rect.height(), 0 /* refresh */);
-  wl_output_send_done(output_->resource());
+  UpdateOutputGeometry(output_->resource(), new_rect);
 
   Sync();
 
@@ -248,6 +292,295 @@
   window_->set_pointer_focus(false);
 }
 
+TEST_P(WaylandScreenTest, GetDisplayMatching) {
+  TestDisplayObserver observer;
+  platform_screen_->AddObserver(&observer);
+
+  const display::Display primary_display =
+      platform_screen_->GetPrimaryDisplay();
+
+  wl::TestOutput* output2 = server_.CreateAndInitializeOutput();
+
+  Sync();
+
+  // Place it on the right side of the primary display.
+  const gfx::Rect output2_rect =
+      gfx::Rect(primary_display.bounds().width(), 0, 1024, 768);
+  UpdateOutputGeometry(output2->resource(), output2_rect);
+
+  Sync();
+
+  const display::Display second_display = observer.GetDisplay();
+  EXPECT_EQ(second_display.bounds(), output2_rect);
+
+  // We have two displays: display1(0:0,1024x768) and display2(1024:0,1024x768).
+  EXPECT_EQ(
+      primary_display.id(),
+      platform_screen_->GetDisplayMatching(gfx::Rect(0, 0, 100, 100)).id());
+  EXPECT_EQ(
+      second_display.id(),
+      platform_screen_->GetDisplayMatching(gfx::Rect(1024, 0, 10, 10)).id());
+
+  // More pixels on second display.
+  EXPECT_EQ(
+      second_display.id(),
+      platform_screen_->GetDisplayMatching(gfx::Rect(1020, 0, 10, 10)).id());
+
+  // More pixels on first display.
+  EXPECT_EQ(
+      primary_display.id(),
+      platform_screen_->GetDisplayMatching(gfx::Rect(1018, 0, 10, 10)).id());
+
+  // Half pixels on second and half on primary.
+  EXPECT_EQ(
+      primary_display.id(),
+      platform_screen_->GetDisplayMatching(gfx::Rect(1019, 0, 10, 10)).id());
+
+  // Place second display 700 pixels below along y axis (1024:700,1024x768)
+  UpdateOutputGeometry(
+      output2->resource(),
+      gfx::Rect(gfx::Point(output2_rect.x(), output2_rect.y() + 700),
+                output2_rect.size()));
+
+  Sync();
+
+  // The match rect is located outside the displays. Primary display must be
+  // returned.
+  EXPECT_EQ(
+      primary_display.id(),
+      platform_screen_->GetDisplayMatching(gfx::Rect(1024, 0, 10, 10)).id());
+
+  // At least some of the pixels are located on the display.
+  EXPECT_EQ(
+      primary_display.id(),
+      platform_screen_->GetDisplayMatching(gfx::Rect(1023, 0, 10, 10)).id());
+
+  // Most of pixels are located on second display.
+  EXPECT_EQ(
+      second_display.id(),
+      platform_screen_->GetDisplayMatching(gfx::Rect(1023, 695, 10, 10)).id());
+
+  // Empty rect results in primary display.
+  EXPECT_EQ(primary_display.id(),
+            platform_screen_->GetDisplayMatching(gfx::Rect(0, 0, 0, 0)).id());
+
+  platform_screen_->RemoveObserver(&observer);
+}
+
+TEST_P(WaylandScreenTest, GetDisplayForAcceleratedWidget) {
+  TestDisplayObserver observer;
+  platform_screen_->AddObserver(&observer);
+
+  const display::Display primary_display =
+      platform_screen_->GetPrimaryDisplay();
+
+  // Create an additional display.
+  wl::TestOutput* output2 = server_.CreateAndInitializeOutput();
+
+  Sync();
+
+  // Place it on the right side of the primary
+  // display.
+  const gfx::Rect output2_rect =
+      gfx::Rect(primary_display.bounds().width(), 0, 1024, 768);
+  UpdateOutputGeometry(output2->resource(), output2_rect);
+
+  Sync();
+
+  const display::Display secondary_display = observer.GetDisplay();
+  EXPECT_EQ(secondary_display.bounds(), output2_rect);
+
+  const gfx::AcceleratedWidget widget = window_->GetWidget();
+  // There must be a primary display used if the window has not received an
+  // enter event yet.
+  ValidateTheDisplayForWidget(widget, primary_display.id());
+
+  // Now, send enter event for the surface, which was created before.
+  wl::MockSurface* surface = server_.GetObject<wl::MockSurface>(widget);
+  ASSERT_TRUE(surface);
+  wl_surface_send_enter(surface->resource(), output_->resource());
+
+  Sync();
+
+  // The id of the entered display must correspond to the primary output.
+  ValidateTheDisplayForWidget(widget, primary_display.id());
+
+  Sync();
+
+  // Enter the second output now.
+  wl_surface_send_enter(surface->resource(), output2->resource());
+
+  Sync();
+
+  // The id of the entered display must still correspond to the primary output.
+  ValidateTheDisplayForWidget(widget, primary_display.id());
+
+  // Leave the first output.
+  wl_surface_send_leave(surface->resource(), output_->resource());
+
+  Sync();
+
+  // The id of the entered display must correspond to the second output.
+  ValidateTheDisplayForWidget(widget, secondary_display.id());
+
+  // Leaving the same output twice (check comment in
+  // WaylandWindow::RemoveEnteredOutputId), must be ok and nothing must change.
+  wl_surface_send_leave(surface->resource(), output_->resource());
+
+  Sync();
+
+  // The id of the entered display must correspond to the second output.
+  ValidateTheDisplayForWidget(widget, secondary_display.id());
+}
+
+TEST_P(WaylandScreenTest, GetCursorScreenPoint) {
+  MockPlatformWindowDelegate delegate;
+  std::unique_ptr<WaylandWindow> second_window =
+      CreateWaylandWindowWithProperties(gfx::Rect(0, 0, 1920, 1080),
+                                        PlatformWindowType::kWindow,
+                                        gfx::kNullAcceleratedWidget, &delegate);
+
+  auto* surface = server_.GetObject<wl::MockSurface>(window_->GetWidget());
+  ASSERT_TRUE(surface);
+
+  // Announce pointer capability so that WaylandPointer is created on the client
+  // side.
+  wl_seat_send_capabilities(server_.seat()->resource(),
+                            WL_SEAT_CAPABILITY_POINTER);
+
+  Sync();
+
+  wl::TestPointer* pointer = server_.seat()->pointer();
+  ASSERT_TRUE(pointer);
+
+  uint32_t serial = 0;
+  uint32_t time = 1002;
+  wl_pointer_send_enter(pointer->resource(), ++serial, surface->resource(), 0,
+                        0);
+  wl_pointer_send_motion(pointer->resource(), ++time, wl_fixed_from_int(10),
+                         wl_fixed_from_int(20));
+
+  Sync();
+
+  // WaylandScreen must return the last pointer location.
+  EXPECT_EQ(gfx::Point(10, 20), platform_screen_->GetCursorScreenPoint());
+
+  auto* second_surface =
+      server_.GetObject<wl::MockSurface>(second_window->GetWidget());
+  ASSERT_TRUE(second_surface);
+  // Now, leave the first surface and enter second one.
+  wl_pointer_send_leave(pointer->resource(), ++serial, surface->resource());
+  wl_pointer_send_enter(pointer->resource(), ++serial,
+                        second_surface->resource(), 0, 0);
+  wl_pointer_send_motion(pointer->resource(), ++time, wl_fixed_from_int(20),
+                         wl_fixed_from_int(10));
+
+  Sync();
+
+  // WaylandScreen must return the last pointer location.
+  EXPECT_EQ(gfx::Point(20, 10), platform_screen_->GetCursorScreenPoint());
+
+  // Clear pointer focus.
+  wl_pointer_send_leave(pointer->resource(), ++serial,
+                        second_surface->resource());
+
+  Sync();
+
+  // WaylandScreen must return a point, which is located outside of bounds of
+  // any window. Basically, it means that it takes the largest window and adds
+  // 10 pixels to its width and height, and returns the value.
+  const gfx::Rect second_window_bounds = second_window->GetBounds();
+  // A second window has largest bounds. Thus, these bounds must be taken as a
+  // ground for the point outside any of the surfaces.
+  ASSERT_TRUE(window_->GetBounds() < second_window_bounds);
+  EXPECT_EQ(gfx::Point(second_window_bounds.width() + 10,
+                       second_window_bounds.height() + 10),
+            platform_screen_->GetCursorScreenPoint());
+
+  // Create a menu window now and ensure cursor position is always sent in
+  // regards to that window bounds.
+  std::unique_ptr<WaylandWindow> menu_window =
+      CreateWaylandWindowWithProperties(
+          gfx::Rect(second_window_bounds.width() - 10,
+                    second_window_bounds.height() - 10, 10, 20),
+          PlatformWindowType::kPopup, second_window->GetWidget(), &delegate);
+
+  Sync();
+
+  auto* menu_surface =
+      server_.GetObject<wl::MockSurface>(menu_window->GetWidget());
+  ASSERT_TRUE(menu_surface);
+
+  wl_pointer_send_enter(pointer->resource(), ++serial, menu_surface->resource(),
+                        0, 0);
+  wl_pointer_send_motion(pointer->resource(), ++time, wl_fixed_from_int(2),
+                         wl_fixed_from_int(1));
+
+  Sync();
+
+  // The cursor screen point must be converted to the top-level window
+  // coordinates as long as Wayland doesn't provide global coordinates of
+  // surfaces and Chromium assumes those windows are always located at origin
+  // (0,0). For more information, check the comment in
+  // WaylandWindow::UpdateCursorPositionFromEvent.
+  EXPECT_EQ(gfx::Point(1912, 1071), platform_screen_->GetCursorScreenPoint());
+
+  // Leave the menu window and enter the top level window.
+  wl_pointer_send_leave(pointer->resource(), ++serial,
+                        menu_surface->resource());
+  wl_pointer_send_enter(pointer->resource(), ++serial,
+                        second_surface->resource(), 0, 0);
+  wl_pointer_send_motion(pointer->resource(), ++time, wl_fixed_from_int(1912),
+                         wl_fixed_from_int(1071));
+
+  Sync();
+
+  // WaylandWindow::UpdateCursorPositionFromEvent mustn't convert this point,
+  // because it has already been located on the top-level window.
+  EXPECT_EQ(gfx::Point(1912, 1071), platform_screen_->GetCursorScreenPoint());
+
+  wl_pointer_send_leave(pointer->resource(), ++serial,
+                        second_surface->resource());
+
+  // Now, create a nested menu window and make sure that the cursor screen point
+  // still has been correct. The location of the window is on the right side of
+  // the main menu window.
+  const gfx::Rect menu_window_bounds = menu_window->GetBounds();
+  std::unique_ptr<WaylandWindow> nested_menu_window =
+      CreateWaylandWindowWithProperties(
+          gfx::Rect(menu_window_bounds.x() + menu_window_bounds.width(),
+                    menu_window_bounds.y() + 2, 10, 20),
+          PlatformWindowType::kPopup, second_window->GetWidget(), &delegate);
+
+  Sync();
+
+  auto* nested_menu_surface =
+      server_.GetObject<wl::MockSurface>(nested_menu_window->GetWidget());
+  ASSERT_TRUE(nested_menu_surface);
+
+  wl_pointer_send_enter(pointer->resource(), ++serial,
+                        nested_menu_surface->resource(), 0, 0);
+  wl_pointer_send_motion(pointer->resource(), ++time, wl_fixed_from_int(2),
+                         wl_fixed_from_int(3));
+
+  Sync();
+
+  EXPECT_EQ(gfx::Point(1922, 1075), platform_screen_->GetCursorScreenPoint());
+
+  // Leave the nested surface and enter main menu surface. The cursor screen
+  // point still must be reported correctly.
+  wl_pointer_send_leave(pointer->resource(), ++serial,
+                        nested_menu_surface->resource());
+  wl_pointer_send_enter(pointer->resource(), ++serial, menu_surface->resource(),
+                        0, 0);
+  wl_pointer_send_motion(pointer->resource(), ++time, wl_fixed_from_int(2),
+                         wl_fixed_from_int(1));
+
+  Sync();
+
+  EXPECT_EQ(gfx::Point(1912, 1071), platform_screen_->GetCursorScreenPoint());
+}
+
 INSTANTIATE_TEST_CASE_P(XdgVersionV5Test,
                         WaylandScreenTest,
                         ::testing::Values(kXdgShellV5));
--- a/ui/ozone/platform/wayland/wayland_surface_factory.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_surface_factory.cc	2019-05-17 18:57:26.188000000 +0300
@@ -4,22 +4,17 @@
 
 #include "ui/ozone/platform/wayland/wayland_surface_factory.h"
 
-#include <fcntl.h>
-#include <sys/mman.h>
-#include <wayland-client.h>
+#include <memory>
 
 #include "base/memory/ptr_util.h"
-#include "base/memory/shared_memory.h"
-#include "third_party/skia/include/core/SkSurface.h"
 #include "ui/gfx/linux/client_native_pixmap_dmabuf.h"
-#include "ui/gfx/vsync_provider.h"
 #include "ui/ozone/common/egl_util.h"
 #include "ui/ozone/common/gl_ozone_egl.h"
 #include "ui/ozone/platform/wayland/gl_surface_wayland.h"
+#include "ui/ozone/platform/wayland/gpu/wayland_canvas_surface.h"
 #include "ui/ozone/platform/wayland/gpu/wayland_connection_proxy.h"
 #include "ui/ozone/platform/wayland/wayland_object.h"
 #include "ui/ozone/platform/wayland/wayland_window.h"
-#include "ui/ozone/public/surface_ozone_canvas.h"
 
 #if defined(WAYLAND_GBM)
 #include "ui/ozone/platform/wayland/gpu/gbm_pixmap_wayland.h"
@@ -29,109 +24,6 @@
 
 namespace ui {
 
-static void DeleteSharedMemory(void* pixels, void* context) {
-  delete static_cast<base::SharedMemory*>(context);
-}
-
-class WaylandCanvasSurface : public SurfaceOzoneCanvas {
- public:
-  WaylandCanvasSurface(WaylandConnectionProxy* connection,
-                       WaylandWindow* window_);
-  ~WaylandCanvasSurface() override;
-
-  // SurfaceOzoneCanvas
-  sk_sp<SkSurface> GetSurface() override;
-  void ResizeCanvas(const gfx::Size& viewport_size) override;
-  void PresentCanvas(const gfx::Rect& damage) override;
-  std::unique_ptr<gfx::VSyncProvider> CreateVSyncProvider() override;
-
- private:
-  WaylandConnectionProxy* connection_;
-  WaylandWindow* window_;
-
-  gfx::Size size_;
-  sk_sp<SkSurface> sk_surface_;
-  wl::Object<wl_shm_pool> pool_;
-  wl::Object<wl_buffer> buffer_;
-
-  DISALLOW_COPY_AND_ASSIGN(WaylandCanvasSurface);
-};
-
-WaylandCanvasSurface::WaylandCanvasSurface(WaylandConnectionProxy* connection,
-                                           WaylandWindow* window)
-    : connection_(connection),
-      window_(window),
-      size_(window->GetBounds().size()) {}
-
-WaylandCanvasSurface::~WaylandCanvasSurface() {}
-
-sk_sp<SkSurface> WaylandCanvasSurface::GetSurface() {
-  if (sk_surface_)
-    return sk_surface_;
-
-  size_t length = size_.width() * size_.height() * 4;
-  auto shared_memory = base::WrapUnique(new base::SharedMemory);
-  if (!shared_memory->CreateAndMapAnonymous(length))
-    return nullptr;
-
-  wl::Object<wl_shm_pool> pool(wl_shm_create_pool(
-      connection_->shm(), shared_memory->handle().GetHandle(), length));
-  if (!pool)
-    return nullptr;
-  wl::Object<wl_buffer> buffer(
-      wl_shm_pool_create_buffer(pool.get(), 0, size_.width(), size_.height(),
-                                size_.width() * 4, WL_SHM_FORMAT_ARGB8888));
-  if (!buffer)
-    return nullptr;
-
-  sk_surface_ = SkSurface::MakeRasterDirectReleaseProc(
-      SkImageInfo::MakeN32Premul(size_.width(), size_.height()),
-      shared_memory->memory(), size_.width() * 4, &DeleteSharedMemory,
-      shared_memory.get(), nullptr);
-  if (!sk_surface_)
-    return nullptr;
-  pool_ = std::move(pool);
-  buffer_ = std::move(buffer);
-  (void)shared_memory.release();
-  return sk_surface_;
-}
-
-void WaylandCanvasSurface::ResizeCanvas(const gfx::Size& viewport_size) {
-  if (size_ == viewport_size)
-    return;
-  // TODO(forney): We could implement more efficient resizes by allocating
-  // buffers rounded up to larger sizes, and then reusing them if the new size
-  // still fits (but still reallocate if the new size is much smaller than the
-  // old size).
-  if (sk_surface_) {
-    sk_surface_.reset();
-    buffer_.reset();
-    pool_.reset();
-  }
-  size_ = viewport_size;
-}
-
-void WaylandCanvasSurface::PresentCanvas(const gfx::Rect& damage) {
-  // TODO(forney): This is just a naive implementation that allows chromium to
-  // draw to the buffer at any time, even if it is being used by the Wayland
-  // compositor. Instead, we should track buffer releases and frame callbacks
-  // from Wayland to ensure perfect frames (while minimizing copies).
-  wl_surface* surface = window_->surface();
-  wl_surface_damage(surface, damage.x(), damage.y(), damage.width(),
-                    damage.height());
-  wl_surface_attach(surface, buffer_.get(), 0, 0);
-  wl_surface_commit(surface);
-  connection_->ScheduleFlush();
-}
-
-std::unique_ptr<gfx::VSyncProvider>
-WaylandCanvasSurface::CreateVSyncProvider() {
-  // TODO(forney): This can be implemented with information from frame
-  // callbacks, and possibly output refresh rate.
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
 namespace {
 
 class GLOzoneEGLWayland : public GLOzoneEGL {
@@ -144,19 +36,7 @@
       gfx::AcceleratedWidget widget) override;
 
   scoped_refptr<gl::GLSurface> CreateSurfacelessViewGLSurface(
-      gfx::AcceleratedWidget window) override {
-#if defined(WAYLAND_GBM)
-    // If there is a gbm device available, use surfaceless gl surface.
-    if (!connection_->gbm_device())
-      return nullptr;
-    return gl::InitializeGLSurface(new GbmSurfacelessWayland(
-        static_cast<WaylandSurfaceFactory*>(
-            OzonePlatform::GetInstance()->GetSurfaceFactoryOzone()),
-        window));
-#else
-    return nullptr;
-#endif
-  }
+      gfx::AcceleratedWidget window) override;
 
   scoped_refptr<gl::GLSurface> CreateOffscreenGLSurface(
       const gfx::Size& size) override;
@@ -173,6 +53,10 @@
 
 scoped_refptr<gl::GLSurface> GLOzoneEGLWayland::CreateViewGLSurface(
     gfx::AcceleratedWidget widget) {
+  // Only EGLGLES2 is supported with surfaceless view gl.
+  if (gl::GetGLImplementation() != gl::kGLImplementationEGLGLES2)
+    return nullptr;
+
   DCHECK(connection_);
   WaylandWindow* window = connection_->GetWindow(widget);
   if (!window)
@@ -185,6 +70,25 @@
   return gl::InitializeGLSurface(new GLSurfaceWayland(std::move(egl_window)));
 }
 
+scoped_refptr<gl::GLSurface> GLOzoneEGLWayland::CreateSurfacelessViewGLSurface(
+    gfx::AcceleratedWidget window) {
+  // Only EGLGLES2 is supported with surfaceless view gl.
+  if (gl::GetGLImplementation() != gl::kGLImplementationEGLGLES2)
+    return nullptr;
+
+#if defined(WAYLAND_GBM)
+  // If there is a gbm device available, use surfaceless gl surface.
+  if (!connection_->gbm_device())
+    return nullptr;
+  return gl::InitializeGLSurface(new GbmSurfacelessWayland(
+      static_cast<WaylandSurfaceFactory*>(
+          OzonePlatform::GetInstance()->GetSurfaceFactoryOzone()),
+      window));
+#else
+  return nullptr;
+#endif
+}
+
 scoped_refptr<gl::GLSurface> GLOzoneEGLWayland::CreateOffscreenGLSurface(
     const gfx::Size& size) {
   if (gl::GLSurfaceEGL::IsEGLSurfacelessContextSupported() &&
@@ -243,11 +147,7 @@
 
 std::unique_ptr<SurfaceOzoneCanvas>
 WaylandSurfaceFactory::CreateCanvasForWidget(gfx::AcceleratedWidget widget) {
-  if (!connection_)
-    return nullptr;
-  WaylandWindow* window = connection_->GetWindow(widget);
-  DCHECK(window);
-  return std::make_unique<WaylandCanvasSurface>(connection_, window);
+  return std::make_unique<WaylandCanvasSurface>(connection_, widget);
 }
 
 std::vector<gl::GLImplementation>
--- a/ui/ozone/platform/wayland/wayland_surface_factory.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_surface_factory.h	2019-05-17 18:57:26.188000000 +0300
@@ -7,7 +7,6 @@
 
 #include "base/macros.h"
 #include "base/memory/ref_counted.h"
-#include "base/posix/eintr_wrapper.h"
 #include "base/single_thread_task_runner.h"
 #include "base/threading/sequenced_task_runner_handle.h"
 #include "ui/gl/gl_surface.h"
--- a/ui/ozone/platform/wayland/wayland_surface_factory_unittest.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_surface_factory_unittest.cc	2019-05-17 18:57:26.188000000 +0300
@@ -25,8 +25,23 @@
 
   void SetUp() override {
     WaylandTest::SetUp();
+
+    auto connection_ptr = connection_->BindInterface();
+    connection_proxy_->SetWaylandConnection(std::move(connection_ptr));
+
     canvas = surface_factory.CreateCanvasForWidget(widget_);
     ASSERT_TRUE(canvas);
+
+    // Wait until initialization and mojo calls go through.
+    base::RunLoop().RunUntilIdle();
+  }
+
+  void TearDown() override {
+    canvas.reset();
+
+    // The mojo call to destroy shared buffer goes after canvas is destroyed.
+    // Wait until it's done.
+    base::RunLoop().RunUntilIdle();
   }
 
  protected:
@@ -38,9 +53,13 @@
 };
 
 TEST_P(WaylandSurfaceFactoryTest, Canvas) {
+  canvas->ResizeCanvas(window_->GetBounds().size());
   canvas->GetSurface();
   canvas->PresentCanvas(gfx::Rect(5, 10, 20, 15));
 
+  // Wait until the mojo calls are done.
+  base::RunLoop().RunUntilIdle();
+
   Expectation damage = EXPECT_CALL(*surface_, Damage(5, 10, 20, 15));
   wl_resource* buffer_resource = nullptr;
   Expectation attach = EXPECT_CALL(*surface_, Attach(_, 0, 0))
@@ -60,11 +79,14 @@
 }
 
 TEST_P(WaylandSurfaceFactoryTest, CanvasResize) {
+  canvas->ResizeCanvas(window_->GetBounds().size());
   canvas->GetSurface();
   canvas->ResizeCanvas(gfx::Size(100, 50));
   canvas->GetSurface();
   canvas->PresentCanvas(gfx::Rect(0, 0, 100, 50));
 
+  base::RunLoop().RunUntilIdle();
+
   Expectation damage = EXPECT_CALL(*surface_, Damage(0, 0, 100, 50));
   wl_resource* buffer_resource = nullptr;
   Expectation attach = EXPECT_CALL(*surface_, Attach(_, 0, 0))
--- a/ui/ozone/platform/wayland/wayland_test.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_test.cc	2019-05-17 18:57:26.188000000 +0300
@@ -9,7 +9,7 @@
 #include "ui/platform_window/platform_window_init_properties.h"
 
 #if BUILDFLAG(USE_XKBCOMMON)
-#include "ui/ozone/platform/wayland/wayland_xkb_keyboard_layout_engine.h"
+#include "ui/events/ozone/layout/xkb/xkb_keyboard_layout_engine.h"
 #else
 #include "ui/events/ozone/layout/stub/stub_keyboard_layout_engine.h"
 #endif
@@ -22,8 +22,7 @@
 WaylandTest::WaylandTest() {
 #if BUILDFLAG(USE_XKBCOMMON)
   KeyboardLayoutEngineManager::SetKeyboardLayoutEngine(
-      std::make_unique<WaylandXkbKeyboardLayoutEngine>(
-          xkb_evdev_code_converter_));
+      std::make_unique<XkbKeyboardLayoutEngine>(xkb_evdev_code_converter_));
 #else
   KeyboardLayoutEngineManager::SetKeyboardLayoutEngine(
       std::make_unique<StubKeyboardLayoutEngine>());
--- a/ui/ozone/platform/wayland/wayland_util.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_util.h	2019-05-17 18:57:26.188000000 +0300
@@ -35,6 +35,8 @@
 using BufferSwapCallback =
     base::OnceCallback<void(gfx::SwapResult, const gfx::PresentationFeedback&)>;
 
+using RequestSizeCallback = base::OnceCallback<void(const gfx::Size&)>;
+
 wl_buffer* CreateSHMBuffer(const gfx::Size& size,
                            base::SharedMemory* shared_memory,
                            wl_shm* shm);
--- a/ui/ozone/platform/wayland/wayland_window.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_window.cc	2019-05-17 18:57:26.188000000 +0300
@@ -4,6 +4,8 @@
 
 #include "ui/ozone/platform/wayland/wayland_window.h"
 
+#include <memory>
+
 #include <wayland-client.h>
 
 #include "base/bind.h"
@@ -16,12 +18,14 @@
 #include "ui/events/ozone/events_ozone.h"
 #include "ui/gfx/geometry/point_f.h"
 #include "ui/ozone/platform/wayland/wayland_connection.h"
+#include "ui/ozone/platform/wayland/wayland_cursor_position.h"
+#include "ui/ozone/platform/wayland/wayland_output_manager.h"
 #include "ui/ozone/platform/wayland/wayland_pointer.h"
 #include "ui/ozone/platform/wayland/xdg_popup_wrapper_v5.h"
 #include "ui/ozone/platform/wayland/xdg_popup_wrapper_v6.h"
 #include "ui/ozone/platform/wayland/xdg_surface_wrapper_v5.h"
 #include "ui/ozone/platform/wayland/xdg_surface_wrapper_v6.h"
-#include "ui/platform_window/platform_window_init_properties.h"
+#include "ui/platform_window/platform_window_handler/wm_drop_handler.h"
 
 namespace ui {
 
@@ -61,11 +65,20 @@
   DISALLOW_COPY_AND_ASSIGN(XDGShellObjectFactory);
 };
 
+// Translates bounds relative to top level window to specified parent.
 gfx::Rect TranslateBoundsToParentCoordinates(const gfx::Rect& child_bounds,
                                              const gfx::Rect& parent_bounds) {
-  int x = child_bounds.x() - parent_bounds.x();
-  int y = child_bounds.y() - parent_bounds.y();
-  return gfx::Rect(gfx::Point(x, y), child_bounds.size());
+  return gfx::Rect(gfx::Point(child_bounds.x() - parent_bounds.x(),
+                              child_bounds.y() - parent_bounds.y()),
+                   child_bounds.size());
+}
+
+// Translates bounds relative to parent window to top level window.
+gfx::Rect TranslateBoundsToTopLevelCoordinates(const gfx::Rect& child_bounds,
+                                               const gfx::Rect& parent_bounds) {
+  return gfx::Rect(gfx::Point(child_bounds.x() + parent_bounds.x(),
+                              child_bounds.y() + parent_bounds.y()),
+                   child_bounds.size());
 }
 
 }  // namespace
@@ -111,7 +124,7 @@
   DCHECK(xdg_shell_objects_factory_);
 
   bounds_ = properties.bounds;
-  parent_window_ = GetParentWindow(properties.parent_widget);
+  opacity_ = properties.opacity;
 
   surface_.reset(wl_compositor_create_surface(connection_->compositor()));
   if (!surface_) {
@@ -119,11 +132,15 @@
     return false;
   }
   wl_surface_set_user_data(surface_.get(), this);
+  AddSurfaceListener();
+  MaybeUpdateOpaqueRegion();
 
   ui::PlatformWindowType ui_window_type = properties.type;
   switch (ui_window_type) {
     case ui::PlatformWindowType::kMenu:
     case ui::PlatformWindowType::kPopup:
+      parent_window_ = GetParentWindow(properties.parent_widget);
+
       // TODO(msisov, jkim): Handle notification windows, which are marked
       // as popup windows as well. Those are the windows that do not have
       // parents and pop up when the browser receives a notification.
@@ -153,14 +170,30 @@
   return surface_.id();
 }
 
+std::set<uint32_t> WaylandWindow::GetEnteredOutputsIds() const {
+  return entered_outputs_ids_;
+}
+
 void WaylandWindow::CreateXdgPopup() {
   if (bounds_.IsEmpty())
     return;
 
+  // TODO(jkim): Consider how to support DropArrow window on tabstrip.
+  // When it starts dragging, as described the protocol, https://goo.gl/1Mskq3,
+  // the client must have an active implicit grab. If we try to create a popup
+  // window while dragging is executed, it gets 'popup_done' directly from
+  // Wayland compositor and it's destroyed through 'popup_done'. It causes
+  // a crash when aura::Window is destroyed.
+  // https://crbug.com/875164
+  if (connection_->IsDragInProgress()) {
+    surface_.reset();
+    LOG(ERROR) << "Wayland can't create a popup window during dragging.";
+    return;
+  }
+
   DCHECK(parent_window_ && !xdg_popup_);
 
-  gfx::Rect bounds =
-      TranslateBoundsToParentCoordinates(bounds_, parent_window_->GetBounds());
+  auto bounds = AdjustPopupWindowPosition();
 
   xdg_popup_ = xdg_shell_objects_factory_->CreateXDGPopup(connection_, this);
   if (!xdg_popup_ ||
@@ -179,7 +212,7 @@
   }
 }
 
-void WaylandWindow::CreateTooltipSubSurface() {
+void WaylandWindow::CreateAndShowTooltipSubSurface() {
   // Since Aura does not not provide a reference parent window, needed by
   // Wayland, we get the current focused window to place and show the tooltips.
   parent_window_ = connection_->GetCurrentFocusedWindow();
@@ -193,11 +226,14 @@
     return;
   }
 
+  if (!tooltip_subsurface_) {
   wl_subcompositor* subcompositor = connection_->subcompositor();
   DCHECK(subcompositor);
   tooltip_subsurface_.reset(wl_subcompositor_get_subsurface(
       subcompositor, surface_.get(), parent_window_->surface()));
+  }
 
+  DCHECK(tooltip_subsurface_);
   wl_subsurface_set_position(tooltip_subsurface_.get(), bounds_.x(),
                              bounds_.y());
   wl_subsurface_set_desync(tooltip_subsurface_.get());
@@ -208,9 +244,9 @@
 void WaylandWindow::ApplyPendingBounds() {
   if (pending_bounds_.IsEmpty())
     return;
+  DCHECK(xdg_surface_);
 
   SetBounds(pending_bounds_);
-  DCHECK(xdg_surface_);
   xdg_surface_->SetWindowGeometry(bounds_);
   xdg_surface_->AckConfigure();
   pending_bounds_ = gfx::Rect();
@@ -246,11 +282,12 @@
 
   if (xdg_surface_)
     return;
+
   if (is_tooltip_) {
-    if (!tooltip_subsurface_)
-      CreateTooltipSubSurface();
+    CreateAndShowTooltipSubSurface();
     return;
   }
+
   if (!xdg_popup_) {
     CreateXdgPopup();
     connection_->ScheduleFlush();
@@ -262,14 +299,12 @@
     parent_window_ = nullptr;
     wl_surface_attach(surface_.get(), NULL, 0, 0);
     wl_surface_commit(surface_.get());
-    // Tooltip subsurface must be reset only after the buffer is detached.
-    // Otherwise, gnome shell, for example, can end up with a broken event
-    // pipe.
-    tooltip_subsurface_.reset();
     return;
   }
+
   if (child_window_)
     child_window_->Hide();
+
   if (xdg_popup_) {
     parent_window_->set_child_window(nullptr);
     xdg_popup_.reset();
@@ -290,6 +325,11 @@
   if (bounds == bounds_)
     return;
   bounds_ = bounds;
+
+  // Opaque region is based on the size of the window. Thus, update the region
+  // on each update.
+  MaybeUpdateOpaqueRegion();
+
   delegate_->OnBoundsChanged(bounds);
 }
 
@@ -343,14 +383,6 @@
     // DesktopWindowTreeHostPlatform::IsFullscreen, for example, and media
     // files can never be set to fullscreen.
     state_ = PlatformWindowState::PLATFORM_WINDOW_STATE_FULLSCREEN;
-    // Client might have requested a fullscreen state while the window was in
-    // a maximized state. Thus, |restored_bounds_| can contain the bounds of a
-    // "normal" state before the window was maximized. We don't override them
-    // unless they are empty, because |bounds_| can contain bounds of a
-    // maximized window instead.
-    if (restored_bounds_.IsEmpty())
-      SetRestoredBoundsInPixels(bounds_);
-
     xdg_surface_->SetFullscreen();
   } else {
     // Check the comment above. If it's not handled synchronously, media files
@@ -368,15 +400,6 @@
   if (IsFullscreen())
     ToggleFullscreen();
 
-  // Keeps track of the previous bounds, which are used to restore a window
-  // after unmaximize call. We don't override |restored_bounds_| if they have
-  // already had value, which means the previous state has been a fullscreen
-  // state. That is, the bounds can be stored during a change from a normal
-  // state to a maximize state, and then preserved to be the same, when changing
-  // from maximized to fullscreen and back to a maximized state.
-  if (restored_bounds_.IsEmpty())
-    SetRestoredBoundsInPixels(bounds_);
-
   xdg_surface_->SetMaximized();
   connection_->ScheduleFlush();
 }
@@ -472,6 +495,12 @@
 
 uint32_t WaylandWindow::DispatchEvent(const PlatformEvent& native_event) {
   Event* event = static_cast<Event*>(native_event);
+
+  if (event->IsLocatedEvent()) {
+    auto copied_event = Event::Clone(*event);
+    UpdateCursorPositionFromEvent(std::move(copied_event));
+  }
+
   // If the window does not have a pointer focus, but received this event, it
   // means the window is a popup window with a child popup window. In this case,
   // the location of the event must be converted from the nested popup to the
@@ -499,6 +528,8 @@
                                            bool is_maximized,
                                            bool is_fullscreen,
                                            bool is_activated) {
+  DCHECK(!xdg_popup());
+
   // Propagate the window state information to the client.
   PlatformWindowState old_state = state_;
 
@@ -525,6 +556,8 @@
   } else {
     state_ = PlatformWindowState::PLATFORM_WINDOW_STATE_NORMAL;
   }
+  const bool state_changed = old_state != state_;
+  const bool is_normal = !IsFullscreen() && !IsMaximized();
 
   // Update state before notifying delegate.
   const bool did_active_change = is_active_ != is_activated;
@@ -537,27 +570,36 @@
   //
   // Width or height set to 0 means that we should decide on width and height by
   // ourselves, but we don't want to set them to anything else. Use restored
-  // bounds size or the current bounds.
+  // bounds size or the current bounds iff the current state is normal (neither
+  // maximized nor fullscreen).
   //
   // Note: if the browser was started with --start-fullscreen and a user exits
   // the fullscreen mode, wayland may set the width and height to be 1. Instead,
   // explicitly set the bounds to the current desired ones or the previous
   // bounds.
-  if (width <= 1 || height <= 1) {
+  if (width > 1 && height > 1) {
+    pending_bounds_ = gfx::Rect(0, 0, width, height);
+  } else if (is_normal) {
     pending_bounds_.set_size(restored_bounds_.IsEmpty()
                                  ? GetBounds().size()
                                  : restored_bounds_.size());
-  } else {
-    pending_bounds_ = gfx::Rect(0, 0, width, height);
   }
 
-  const bool is_normal = !IsFullscreen() && !IsMaximized();
-  const bool state_changed = old_state != state_;
-  if (is_normal && state_changed)
-    restored_bounds_ = gfx::Rect();
+  if (state_changed) {
+    // The |restored_bounds_| are used when the window gets back to normal
+    // state after it went maximized or fullscreen.  So we reset these if the
+    // window has just become normal and store the current bounds if it is
+    // either going out of normal state or simply changes the state and we don't
+    // have any meaningful value stored.
+    if (is_normal) {
+      SetRestoredBoundsInPixels({});
+    } else if (old_state == PlatformWindowState::PLATFORM_WINDOW_STATE_NORMAL ||
+               restored_bounds_.IsEmpty()) {
+      SetRestoredBoundsInPixels(bounds_);
+    }
 
-  if (state_changed)
     delegate_->OnWindowStateChanged(state_);
+  }
 
   if (did_active_change)
     delegate_->OnActivationChanged(is_active_);
@@ -565,6 +607,48 @@
   MaybeTriggerPendingStateChange();
 }
 
+void WaylandWindow::HandlePopupConfigure(const gfx::Rect& bounds) {
+  DCHECK(xdg_popup());
+  gfx::Rect new_bounds = bounds;
+
+  // It's not enough to just set new bounds. If it is a menu window, whose
+  // parent is a top level window aka browser window, it can be flipped
+  // vertically along y-axis and have negative values set. Chromium cannot
+  // understand that and starts to position nested menu windows incorrectly. To
+  // fix that, we have to bear in mind that Wayland compositor does not share
+  // global coordinates for any surfaces, and Chromium assumes the top level
+  // window is always located at 0,0 origin. What is more, child windows must
+  // always be positioned relative to parent window local surface coordinates.
+  // Thus, if the menu window is flipped along y-axis by Wayland and its origin
+  // is above the top level parent window, the origin of the top level window
+  // has to be shifted by that value on y-axis so that the origin of the menu
+  // becomes x,0, and events can be handled normally.
+  if (!parent_window_->xdg_popup()) {
+    gfx::Rect parent_bounds = parent_window_->GetBounds();
+    // The menu window is flipped along y-axis and have x,-y origin. Shift the
+    // parent top level window instead.
+    if (new_bounds.y() < 0) {
+      // Move parent bounds along y-axis.
+      parent_bounds.set_y(-(new_bounds.y()));
+      new_bounds.set_y(0);
+    } else {
+      // If the menu window is located at correct origin from the browser point
+      // of view, return the top level window back to 0,0.
+      parent_bounds.set_y(0);
+    }
+    parent_window_->SetBounds(parent_bounds);
+  } else {
+    // The nested menu windows are located relative to the parent menu windows.
+    // Thus, the location must be translated to be relative to the top level
+    // window, which automatically becomes the same as relative to an origin of
+    // a display.
+    new_bounds = TranslateBoundsToTopLevelCoordinates(
+        new_bounds, parent_window_->GetBounds());
+    DCHECK(new_bounds.y() >= 0);
+  }
+  SetBounds(new_bounds);
+}
+
 void WaylandWindow::OnCloseRequest() {
   // Before calling OnCloseRequest, the |xdg_popup_| must become hidden and
   // only then call OnCloseRequest().
@@ -575,26 +659,39 @@
 void WaylandWindow::OnDragEnter(const gfx::PointF& point,
                                 std::unique_ptr<OSExchangeData> data,
                                 int operation) {
-  NOTIMPLEMENTED_LOG_ONCE();
+  WmDropHandler* drop_handler = GetWmDropHandler(*this);
+  if (!drop_handler)
+    return;
+  drop_handler->OnDragEnter(point, std::move(data), operation);
 }
 
 int WaylandWindow::OnDragMotion(const gfx::PointF& point,
                                 uint32_t time,
                                 int operation) {
-  NOTIMPLEMENTED_LOG_ONCE();
+  WmDropHandler* drop_handler = GetWmDropHandler(*this);
+  if (!drop_handler)
   return 0;
+
+  return drop_handler->OnDragMotion(point, operation);
 }
 
 void WaylandWindow::OnDragDrop(std::unique_ptr<OSExchangeData> data) {
-  NOTIMPLEMENTED_LOG_ONCE();
+  WmDropHandler* drop_handler = GetWmDropHandler(*this);
+  if (!drop_handler)
+    return;
+  drop_handler->OnDragDrop(std::move(data));
 }
 
 void WaylandWindow::OnDragLeave() {
-  NOTIMPLEMENTED_LOG_ONCE();
+  WmDropHandler* drop_handler = GetWmDropHandler(*this);
+  if (!drop_handler)
+    return;
+  drop_handler->OnDragLeave();
 }
 
 void WaylandWindow::OnDragSessionClose(uint32_t dnd_action) {
   std::move(drag_closed_callback_).Run(dnd_action);
+  connection_->ResetPointerFlags();
 }
 
 bool WaylandWindow::IsMinimized() const {
@@ -643,4 +740,157 @@
   return static_cast<WmMoveResizeHandler*>(this);
 }
 
+void WaylandWindow::AddSurfaceListener() {
+  static struct wl_surface_listener surface_listener = {
+      &WaylandWindow::Enter,
+      &WaylandWindow::Leave,
+  };
+  wl_surface_add_listener(surface_.get(), &surface_listener, this);
+}
+
+void WaylandWindow::AddEnteredOutputId(struct wl_output* output) {
+  const uint32_t entered_output_id =
+      connection_->wayland_output_manager()->GetIdForOutput(output);
+  DCHECK_NE(entered_output_id, 0u);
+  auto result = entered_outputs_ids_.insert(entered_output_id);
+  DCHECK(result.first != entered_outputs_ids_.end());
+}
+
+void WaylandWindow::RemoveEnteredOutputId(struct wl_output* output) {
+  const uint32_t left_output_id =
+      connection_->wayland_output_manager()->GetIdForOutput(output);
+  auto entered_output_id_it = entered_outputs_ids_.find(left_output_id);
+  // Workaround: when a user switches physical output between two displays,
+  // a window does not necessarily receive enter events immediately or until
+  // a user resizes/moves the window. It means that switching output between
+  // displays in a single output mode results in leave events, but the surface
+  // might not have received enter event before. Thus, remove the id of left
+  // output only if it was stored before.
+  if (entered_output_id_it != entered_outputs_ids_.end())
+    entered_outputs_ids_.erase(entered_output_id_it);
+}
+
+void WaylandWindow::UpdateCursorPositionFromEvent(
+    std::unique_ptr<Event> event) {
+  DCHECK(event->IsLocatedEvent());
+  auto* window = connection_->GetCurrentFocusedWindow();
+  // This is a tricky part. Initially, Wayland sends events to surfaces the
+  // events are targeted for. But, in order to fulfill Chromium's assumptions
+  // about event targets, some of the events are rerouted and their locations
+  // are converted.
+  //
+  // The event we got here is rerouted, but it hasn't had its location fixed
+  // yet. Passing an event with fixed location won't help as well - its location
+  // is converted in a different way: if mouse is moved outside a menu window
+  // to the left, the location of such event includes negative values.
+  //
+  // In contrast, this method must translate coordinates of all events
+  // in regards to top-level windows' coordinates as it's always located at
+  // origin (0,0) from Chromium point of view (remember that Wayland doesn't
+  // provide global coordinates to its clients). And it's totally fine to use it
+  // as the target. Thus, the location of the |event| is always converted using
+  // the top-level window's bounds as the target excluding cases, when the
+  // mouse/touch is over a top-level window.
+  if (parent_window_ && parent_window_ != window) {
+    const gfx::Rect target_bounds = parent_window_->GetBounds();
+    gfx::Rect own_bounds = GetBounds();
+    // This is a bit trickier, and concerns nested menu windows. Whenever an
+    // event is sent to the nested menu window, it's rerouted to a parent menu
+    // window. Thus, in order to correctly translate its location, we must
+    // choose correct values for the |own_bounds|. In this case, it must the
+    // nested menu window, because |this| is the parent of that window.
+    if (window == child_window_)
+      own_bounds = child_window_->GetBounds();
+    ConvertEventLocationToTargetWindowLocation(
+        target_bounds.origin(), own_bounds.origin(), event->AsLocatedEvent());
+  }
+  auto* cursor_position = connection_->wayland_cursor_position();
+  if (cursor_position) {
+    cursor_position->OnCursorPositionChanged(
+        event->AsLocatedEvent()->location());
+  }
+}
+
+gfx::Rect WaylandWindow::AdjustPopupWindowPosition() const {
+  auto* parent_window = parent_window_->xdg_popup()
+                            ? parent_window_->parent_window_
+                            : parent_window_;
+  DCHECK(parent_window);
+  // Chromium positions windows in screen coordinates, but Wayland requires them
+  // to be in local surface coordinates aka relative to parent window.
+  const gfx::Rect parent_bounds = parent_window_->GetBounds();
+  gfx::Rect new_bounds =
+      TranslateBoundsToParentCoordinates(bounds_, parent_bounds);
+
+  // Chromium may decide to position nested menu windows on the left side
+  // instead of the right side of parent menu windows when the size of the
+  // window becomes larger than the display it is shown on. It's correct when
+  // the window is located on one display and occupies the whole work area, but
+  // as soon as it's moved and there is space on the right side, Chromium
+  // continues positioning the nested menus on the left side relative to the
+  // parent menu (Wayland does not provide clients with global coordinates).
+  // Instead, reposition that window to be on the right side of the parent menu
+  // window and let the compositor decide how to position it if it does not fit
+  // a single display. However, there is one exception - if the window is
+  // maximized, let Chromium position it on the left side as long as the Wayland
+  // compositor may decide to position the nested window on the right side of
+  // the parent menu window, which results in showing it on a second display if
+  // more than one display is used.
+  if (parent_window_->xdg_popup() && parent_window_->parent_window_ &&
+      !parent_window_->parent_window_->IsMaximized()) {
+    auto* top_level_window = parent_window_->parent_window_;
+    DCHECK(top_level_window && !top_level_window->xdg_popup());
+    if (new_bounds.x() <= 0 && !top_level_window->IsMaximized()) {
+      // Position the child menu window on the right side of the parent window
+      // and let the Wayland compositor decide how to do constraint
+      // adjustements.
+      int new_x = parent_bounds.width() - (new_bounds.width() + new_bounds.x());
+      new_bounds.set_x(new_x);
+    }
+  }
+  return new_bounds;
+}
+
+WaylandWindow* WaylandWindow::GetTopLevelWindow() {
+  return parent_window_ ? parent_window_->GetTopLevelWindow() : this;
+}
+
+void WaylandWindow::MaybeUpdateOpaqueRegion() {
+  if (!IsOpaqueWindow())
+    return;
+
+  wl::Object<wl_region> region(
+      wl_compositor_create_region(connection_->compositor()));
+  wl_region_add(region.get(), 0, 0, bounds_.width(), bounds_.height());
+  wl_surface_set_opaque_region(surface(), region.get());
+
+  connection_->ScheduleFlush();
+}
+
+bool WaylandWindow::IsOpaqueWindow() const {
+  return opacity_ == ui::PlatformWindowOpacity::kOpaqueWindow;
+}
+
+// static
+void WaylandWindow::Enter(void* data,
+                          struct wl_surface* wl_surface,
+                          struct wl_output* output) {
+  auto* window = static_cast<WaylandWindow*>(data);
+  if (window) {
+    DCHECK(window->surface_.get() == wl_surface);
+    window->AddEnteredOutputId(output);
+  }
+}
+
+// static
+void WaylandWindow::Leave(void* data,
+                          struct wl_surface* wl_surface,
+                          struct wl_output* output) {
+  auto* window = static_cast<WaylandWindow*>(data);
+  if (window) {
+    DCHECK(window->surface_.get() == wl_surface);
+    window->RemoveEnteredOutputId(output);
+  }
+}
+
 }  // namespace ui
--- a/ui/ozone/platform/wayland/wayland_window.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_window.h	2019-05-17 18:57:26.188000000 +0300
@@ -5,6 +5,9 @@
 #ifndef UI_OZONE_PLATFORM_WAYLAND_WAYLAND_WINDOW_H_
 #define UI_OZONE_PLATFORM_WAYLAND_WAYLAND_WINDOW_H_
 
+#include <set>
+#include <vector>
+
 #include "base/callback.h"
 #include "base/memory/ref_counted.h"
 #include "ui/events/platform/platform_event_dispatcher.h"
@@ -15,6 +18,7 @@
 #include "ui/platform_window/platform_window_delegate.h"
 #include "ui/platform_window/platform_window_handler/wm_drag_handler.h"
 #include "ui/platform_window/platform_window_handler/wm_move_resize_handler.h"
+#include "ui/platform_window/platform_window_init_properties.h"
 
 namespace gfx {
 class PointF;
@@ -29,8 +33,6 @@
 class XDGPopupWrapper;
 class XDGSurfaceWrapper;
 
-struct PlatformWindowInitProperties;
-
 namespace {
 class XDGShellObjectFactory;
 }  // namespace
@@ -54,6 +56,13 @@
 
   gfx::AcceleratedWidget GetWidget() const;
 
+  // Returns the list of wl_outputs aka displays, which this window occupies.
+  // The window can be shown on one or more displays at the same time. An empty
+  // vector can also be returned if the window is not configured on the
+  // compositor side or it has been moved due to unplug action (check the
+  // comment in RemoveEnteredOutputId).
+  std::set<uint32_t> GetEnteredOutputsIds() const;
+
   // Apply the bounds specified in the most recent configure event. This should
   // be called after processing all pending events in the wayland connection.
   void ApplyPendingBounds();
@@ -124,6 +133,7 @@
                               bool is_maximized,
                               bool is_fullscreen,
                               bool is_activated);
+  void HandlePopupConfigure(const gfx::Rect& bounds);
 
   void OnCloseRequest();
 
@@ -146,14 +156,42 @@
   void CreateXdgPopup();
   // Creates a surface window, which is visible as a main window.
   void CreateXdgSurface();
-  // Creates a subsurface window, to host tooltip's content.
-  void CreateTooltipSubSurface();
+  // Creates (if necessary) and show subsurface window, to host
+  // tooltip's content.
+  void CreateAndShowTooltipSubSurface();
 
   // Gets a parent window for this window.
   WaylandWindow* GetParentWindow(gfx::AcceleratedWidget parent_widget);
 
   WmMoveResizeHandler* AsWmMoveResizeHandler();
 
+  // Install a surface listener and start getting wl_output enter/leave events.
+  void AddSurfaceListener();
+
+  void AddEnteredOutputId(struct wl_output* output);
+  void RemoveEnteredOutputId(struct wl_output* output);
+
+  void UpdateCursorPositionFromEvent(std::unique_ptr<Event> event);
+
+  // Returns bounds with origin relative to parent window's origin.
+  gfx::Rect AdjustPopupWindowPosition() const;
+
+  WaylandWindow* GetTopLevelWindow();
+
+  // It's important to set opaque region for opaque windows (provides
+  // optimization hint for the Wayland compositor).
+  void MaybeUpdateOpaqueRegion();
+
+  bool IsOpaqueWindow() const;
+
+  // wl_surface_listener
+  static void Enter(void* data,
+                    struct wl_surface* wl_surface,
+                    struct wl_output* output);
+  static void Leave(void* data,
+                    struct wl_surface* wl_surface,
+                    struct wl_output* output);
+
   PlatformWindowDelegate* delegate_;
   WaylandConnection* connection_;
   WaylandWindow* parent_window_ = nullptr;
@@ -177,7 +215,7 @@
 
   gfx::Rect bounds_;
   gfx::Rect pending_bounds_;
-  // The bounds of our window before we were maximized or fullscreen.
+  // The bounds of the window before it went maximized or fullscreen.
   gfx::Rect restored_bounds_;
   bool has_pointer_focus_ = false;
   bool has_keyboard_focus_ = false;
@@ -190,11 +228,17 @@
   // activated.
   ui::PlatformWindowState pending_state_;
 
+  // Stores current opacity of the window. Set on ::Initialize call.
+  ui::PlatformWindowOpacity opacity_;
+
   bool is_active_ = false;
   bool is_minimizing_ = false;
 
   bool is_tooltip_ = false;
 
+  // Stores the list of entered outputs that the window is currently in.
+  std::set<uint32_t> entered_outputs_ids_;
+
   DISALLOW_COPY_AND_ASSIGN(WaylandWindow);
 };
 
--- a/ui/ozone/platform/wayland/wayland_window_unittest.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_window_unittest.cc	2019-05-17 18:57:26.192000000 +0300
@@ -22,11 +22,11 @@
 #include "ui/ozone/test/mock_platform_window_delegate.h"
 #include "ui/platform_window/platform_window_init_properties.h"
 
+using ::testing::_;
 using ::testing::Eq;
 using ::testing::Mock;
 using ::testing::SaveArg;
 using ::testing::StrEq;
-using ::testing::_;
 
 namespace ui {
 
@@ -116,6 +116,13 @@
     return states;
   }
 
+  ScopedWlArray MakeStateArray(const std::vector<int32_t> states) {
+    ScopedWlArray result;
+    for (const auto state : states)
+      AddStateToWlArray(state, result.get());
+    return result;
+  }
+
   std::unique_ptr<WaylandWindow> CreateWaylandWindowWithParams(
       PlatformWindowType type,
       gfx::AcceleratedWidget parent_widget,
@@ -145,6 +152,11 @@
     hit_tests->push_back(static_cast<int>(HTTOPRIGHT));
   }
 
+  void VerifyAndClearExpectations() {
+    Mock::VerifyAndClearExpectations(xdg_surface_);
+    Mock::VerifyAndClearExpectations(&delegate_);
+  }
+
   wl::MockXdgSurface* xdg_surface_;
 
   MouseEvent test_mouse_event_;
@@ -159,24 +171,62 @@
 }
 
 TEST_P(WaylandWindowTest, MaximizeAndRestore) {
-  ScopedWlArray states = InitializeWlArrayWithActivatedState();
+  const auto kNormalBounds = gfx::Rect{0, 0, 500, 300};
+  const auto kMaximizedBounds = gfx::Rect{0, 0, 800, 600};
 
-  EXPECT_CALL(delegate_,
-              OnWindowStateChanged(Eq(PLATFORM_WINDOW_STATE_MAXIMIZED)));
-  AddStateToWlArray(XDG_SURFACE_STATE_MAXIMIZED, states.get());
+  // Make sure the window has normal state initially.
+  EXPECT_CALL(delegate_, OnBoundsChanged(kNormalBounds));
+  window_->SetBounds(kNormalBounds);
+  EXPECT_EQ(PLATFORM_WINDOW_STATE_NORMAL, window_->GetPlatformWindowState());
+  VerifyAndClearExpectations();
 
+  auto active_maximized = MakeStateArray(
+      {XDG_SURFACE_STATE_ACTIVATED, XDG_SURFACE_STATE_MAXIMIZED});
   EXPECT_CALL(*GetXdgSurface(), SetMaximized());
+  EXPECT_CALL(*xdg_surface_, SetWindowGeometry(0, 0, kMaximizedBounds.width(),
+                                               kMaximizedBounds.height()));
+  EXPECT_CALL(delegate_, OnActivationChanged(Eq(true)));
+  EXPECT_CALL(delegate_, OnBoundsChanged(kMaximizedBounds));
+  EXPECT_CALL(delegate_,
+              OnWindowStateChanged(Eq(PLATFORM_WINDOW_STATE_MAXIMIZED)));
   window_->Maximize();
-  SendConfigureEvent(0, 0, 1, states.get());
+  SendConfigureEvent(kMaximizedBounds.width(), kMaximizedBounds.height(), 1,
+                     active_maximized.get());
   Sync();
+  VerifyAndClearExpectations();
 
+  auto inactive_maximized = MakeStateArray({XDG_SURFACE_STATE_MAXIMIZED});
+  EXPECT_CALL(*xdg_surface_, SetWindowGeometry(0, 0, kMaximizedBounds.width(),
+                                               kMaximizedBounds.height()));
+  EXPECT_CALL(delegate_, OnActivationChanged(Eq(false)));
+  EXPECT_CALL(delegate_, OnBoundsChanged(_)).Times(0);
+  SendConfigureEvent(kMaximizedBounds.width(), kMaximizedBounds.height(), 2,
+                     inactive_maximized.get());
+  Sync();
+  EXPECT_FALSE(window_->is_active());
+  VerifyAndClearExpectations();
+
+  EXPECT_CALL(*xdg_surface_, SetWindowGeometry(0, 0, kMaximizedBounds.width(),
+                                               kMaximizedBounds.height()));
+  EXPECT_CALL(delegate_, OnActivationChanged(Eq(true)));
+  EXPECT_CALL(delegate_, OnBoundsChanged(_)).Times(0);
+  SendConfigureEvent(kMaximizedBounds.width(), kMaximizedBounds.height(), 3,
+                     active_maximized.get());
+  Sync();
+  EXPECT_TRUE(window_->is_active());
+  VerifyAndClearExpectations();
+
+  EXPECT_CALL(*xdg_surface_, SetWindowGeometry(0, 0, kNormalBounds.width(),
+                                               kNormalBounds.height()));
   EXPECT_CALL(delegate_,
               OnWindowStateChanged(Eq(PLATFORM_WINDOW_STATE_NORMAL)));
+  EXPECT_CALL(delegate_, OnActivationChanged(_)).Times(0);
+  EXPECT_CALL(delegate_, OnBoundsChanged(kNormalBounds));
   EXPECT_CALL(*GetXdgSurface(), UnsetMaximized());
   window_->Restore();
   // Reinitialize wl_array, which removes previous old states.
-  states = InitializeWlArrayWithActivatedState();
-  SendConfigureEvent(0, 0, 2, states.get());
+  auto active = InitializeWlArrayWithActivatedState();
+  SendConfigureEvent(0, 0, 4, active.get());
   Sync();
 }
 
@@ -285,32 +335,54 @@
 }
 
 TEST_P(WaylandWindowTest, SetMaximizedFullscreenAndRestore) {
-  ScopedWlArray states = InitializeWlArrayWithActivatedState();
+  const auto kNormalBounds = gfx::Rect{0, 0, 500, 300};
+  const auto kMaximizedBounds = gfx::Rect{0, 0, 800, 600};
+
+  // Make sure the window has normal state initially.
+  EXPECT_CALL(delegate_, OnBoundsChanged(kNormalBounds));
+  window_->SetBounds(kNormalBounds);
+  EXPECT_EQ(PLATFORM_WINDOW_STATE_NORMAL, window_->GetPlatformWindowState());
+  VerifyAndClearExpectations();
 
+  auto active_maximized = MakeStateArray(
+      {XDG_SURFACE_STATE_ACTIVATED, XDG_SURFACE_STATE_MAXIMIZED});
   EXPECT_CALL(*GetXdgSurface(), SetMaximized());
+  EXPECT_CALL(*xdg_surface_, SetWindowGeometry(0, 0, kMaximizedBounds.width(),
+                                               kMaximizedBounds.height()));
+  EXPECT_CALL(delegate_, OnActivationChanged(Eq(true)));
+  EXPECT_CALL(delegate_, OnBoundsChanged(kMaximizedBounds));
   EXPECT_CALL(delegate_,
               OnWindowStateChanged(Eq(PLATFORM_WINDOW_STATE_MAXIMIZED)));
   window_->Maximize();
-  AddStateToWlArray(XDG_SURFACE_STATE_MAXIMIZED, states.get());
-  SendConfigureEvent(0, 0, 2, states.get());
+  SendConfigureEvent(kMaximizedBounds.width(), kMaximizedBounds.height(), 2,
+                     active_maximized.get());
   Sync();
+  VerifyAndClearExpectations();
 
   EXPECT_CALL(*GetXdgSurface(), SetFullscreen());
+  EXPECT_CALL(*xdg_surface_, SetWindowGeometry(0, 0, kMaximizedBounds.width(),
+                                               kMaximizedBounds.height()));
+  EXPECT_CALL(delegate_, OnBoundsChanged(_)).Times(0);
   EXPECT_CALL(delegate_,
               OnWindowStateChanged(Eq(PLATFORM_WINDOW_STATE_FULLSCREEN)));
   window_->ToggleFullscreen();
-  AddStateToWlArray(XDG_SURFACE_STATE_FULLSCREEN, states.get());
-  SendConfigureEvent(0, 0, 3, states.get());
+  AddStateToWlArray(XDG_SURFACE_STATE_FULLSCREEN, active_maximized.get());
+  SendConfigureEvent(kMaximizedBounds.width(), kMaximizedBounds.height(), 3,
+                     active_maximized.get());
   Sync();
+  VerifyAndClearExpectations();
 
+  EXPECT_CALL(*xdg_surface_, SetWindowGeometry(0, 0, kNormalBounds.width(),
+                                               kNormalBounds.height()));
   EXPECT_CALL(*GetXdgSurface(), UnsetFullscreen());
   EXPECT_CALL(*GetXdgSurface(), UnsetMaximized());
+  EXPECT_CALL(delegate_, OnBoundsChanged(kNormalBounds));
   EXPECT_CALL(delegate_,
               OnWindowStateChanged(Eq(PLATFORM_WINDOW_STATE_NORMAL)));
   window_->Restore();
   // Reinitialize wl_array, which removes previous old states.
-  states = InitializeWlArrayWithActivatedState();
-  SendConfigureEvent(0, 0, 4, states.get());
+  auto active = InitializeWlArrayWithActivatedState();
+  SendConfigureEvent(0, 0, 4, active.get());
   Sync();
 }
 
--- a/ui/ozone/platform/wayland/xdg_popup_wrapper_v5.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/xdg_popup_wrapper_v5.cc	2019-05-17 18:57:26.192000000 +0300
@@ -37,6 +37,10 @@
 
   xdg_popup_add_listener(xdg_popup_.get(), &xdg_popup_listener, this);
 
+  // xdg_popup_v5 does not support configure events. Thus, manually call it to
+  // propagate final bounds.
+  wayland_window_->HandlePopupConfigure(bounds);
+
   return true;
 }
 
--- a/ui/ozone/platform/wayland/xdg_popup_wrapper_v6.cc	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/xdg_popup_wrapper_v6.cc	2019-05-17 18:57:26.192000000 +0300
@@ -6,13 +6,170 @@
 
 #include <xdg-shell-unstable-v6-client-protocol.h>
 
+#include "ui/events/event_constants.h"
 #include "ui/gfx/geometry/rect.h"
 #include "ui/ozone/platform/wayland/wayland_connection.h"
+#include "ui/ozone/platform/wayland/wayland_pointer.h"
 #include "ui/ozone/platform/wayland/wayland_window.h"
 #include "ui/ozone/platform/wayland/xdg_surface_wrapper_v6.h"
 
 namespace ui {
 
+namespace {
+
+constexpr uint32_t kAnchorDefaultWidth = 1;
+constexpr uint32_t kAnchorDefaultHeight = 1;
+constexpr uint32_t kAnchorHeightParentMenu = 30;
+
+enum class MenuType {
+  TYPE_RIGHT_CLICK,
+  TYPE_3DOT_PARENT_MENU,
+  TYPE_3DOT_CHILD_MENU,
+  TYPE_UNKNOWN,
+};
+
+uint32_t GetAnchor(MenuType menu_type, const gfx::Rect& bounds) {
+  uint32_t anchor = 0;
+  switch (menu_type) {
+    case MenuType::TYPE_RIGHT_CLICK:
+      anchor = ZXDG_POSITIONER_V6_ANCHOR_TOP | ZXDG_POSITIONER_V6_ANCHOR_LEFT;
+      break;
+    case MenuType::TYPE_3DOT_PARENT_MENU:
+      anchor =
+          ZXDG_POSITIONER_V6_ANCHOR_BOTTOM | ZXDG_POSITIONER_V6_ANCHOR_RIGHT;
+      break;
+    case MenuType::TYPE_3DOT_CHILD_MENU:
+      anchor = ZXDG_POSITIONER_V6_ANCHOR_TOP;
+      // Chromium may want to manually position a child menu on the left side of
+      // its parent menu. Thus, react accordingly. Positive x means the child is
+      // located on the right side of the parent and negative - on the left
+      // side.
+      if (bounds.x() >= 0)
+        anchor |= ZXDG_POSITIONER_V6_ANCHOR_RIGHT;
+      else
+        anchor |= ZXDG_POSITIONER_V6_ANCHOR_LEFT;
+      break;
+    case MenuType::TYPE_UNKNOWN:
+      NOTREACHED() << "Unsupported menu type";
+      break;
+  }
+
+  return anchor;
+}
+
+uint32_t GetGravity(MenuType menu_type, const gfx::Rect& bounds) {
+  uint32_t gravity = 0;
+  switch (menu_type) {
+    case MenuType::TYPE_RIGHT_CLICK:
+      gravity =
+          ZXDG_POSITIONER_V6_GRAVITY_BOTTOM | ZXDG_POSITIONER_V6_GRAVITY_RIGHT;
+      break;
+    case MenuType::TYPE_3DOT_PARENT_MENU:
+      gravity =
+          ZXDG_POSITIONER_V6_GRAVITY_BOTTOM | ZXDG_POSITIONER_V6_GRAVITY_RIGHT;
+      break;
+    case MenuType::TYPE_3DOT_CHILD_MENU:
+      gravity = ZXDG_POSITIONER_V6_GRAVITY_BOTTOM;
+      // Chromium may want to manually position a child menu on the left side of
+      // its parent menu. Thus, react accordingly. Positive x means the child is
+      // located on the right side of the parent and negative - on the left
+      // side.
+      if (bounds.x() >= 0)
+        gravity |= ZXDG_POSITIONER_V6_GRAVITY_RIGHT;
+      else
+        gravity |= ZXDG_POSITIONER_V6_GRAVITY_LEFT;
+      break;
+    case MenuType::TYPE_UNKNOWN:
+      NOTREACHED() << "Unsupported menu type";
+      break;
+  }
+
+  return gravity;
+}
+
+uint32_t GetConstraintAdjustment(MenuType menu_type) {
+  uint32_t constraint = 0;
+
+  switch (menu_type) {
+    case MenuType::TYPE_RIGHT_CLICK:
+      constraint = ZXDG_POSITIONER_V6_CONSTRAINT_ADJUSTMENT_SLIDE_X |
+                   ZXDG_POSITIONER_V6_CONSTRAINT_ADJUSTMENT_SLIDE_Y |
+                   ZXDG_POSITIONER_V6_CONSTRAINT_ADJUSTMENT_FLIP_Y;
+      break;
+    case MenuType::TYPE_3DOT_PARENT_MENU:
+      constraint = ZXDG_POSITIONER_V6_CONSTRAINT_ADJUSTMENT_SLIDE_X |
+                   ZXDG_POSITIONER_V6_CONSTRAINT_ADJUSTMENT_FLIP_Y;
+      break;
+    case MenuType::TYPE_3DOT_CHILD_MENU:
+      constraint = ZXDG_POSITIONER_V6_CONSTRAINT_ADJUSTMENT_FLIP_X |
+                   ZXDG_POSITIONER_V6_CONSTRAINT_ADJUSTMENT_SLIDE_Y;
+      break;
+    case MenuType::TYPE_UNKNOWN:
+      NOTREACHED() << "Unsupported menu type";
+      break;
+  }
+
+  return constraint;
+}
+
+gfx::Rect GetAnchorRect(MenuType menu_type,
+                        const gfx::Rect& menu_bounds,
+                        const gfx::Rect& parent_window_bounds) {
+  gfx::Rect anchor_rect;
+  switch (menu_type) {
+    case MenuType::TYPE_RIGHT_CLICK:
+      // Place anchor for right click menus normally.
+      anchor_rect = gfx::Rect(menu_bounds.x(), menu_bounds.y(),
+                              kAnchorDefaultWidth, kAnchorDefaultHeight);
+      break;
+    case MenuType::TYPE_3DOT_PARENT_MENU:
+      // The anchor for parent menu windows is positioned slightly above the
+      // specified bounds to ensure flipped window along y-axis won't hide 3-dot
+      // menu button.
+      anchor_rect = gfx::Rect(menu_bounds.x() - kAnchorDefaultWidth,
+                              menu_bounds.y() - kAnchorHeightParentMenu,
+                              kAnchorDefaultWidth, kAnchorHeightParentMenu);
+      break;
+    case MenuType::TYPE_3DOT_CHILD_MENU:
+      // The child menu's anchor must meet the following requirements: at some
+      // point, the Wayland compositor can flip it along x-axis. To make sure
+      // it's positioned correctly, place it closer to the beginning of the
+      // parent menu shifted by the same value along x-axis. The width of anchor
+      // must correspond the width between two points - specified origin by the
+      // Chromium and calculated point shifted by the same value along x-axis
+      // from the beginning of the parent menu width.
+      //
+      // We also have to bear in mind that Chromium may decide to flip the
+      // position of the menu window along the x-axis and show it on the other
+      // side of the parent menu window (normally, the Wayland compositor does
+      // it). Thus, check which side the child menu window is going to be
+      // presented on and create right anchor.
+      if (menu_bounds.x() >= 0) {
+        auto anchor_width =
+            parent_window_bounds.width() -
+            (parent_window_bounds.width() - menu_bounds.x()) * 2;
+        anchor_rect =
+            gfx::Rect(parent_window_bounds.width() - menu_bounds.x(),
+                      menu_bounds.y(), anchor_width, kAnchorDefaultHeight);
+      } else {
+        DCHECK_LE(menu_bounds.x(), 0);
+        auto position = menu_bounds.width() + menu_bounds.x();
+        DCHECK(position > 0 && position < parent_window_bounds.width());
+        auto anchor_width = parent_window_bounds.width() - position * 2;
+        anchor_rect = gfx::Rect(position, menu_bounds.y(), anchor_width,
+                                kAnchorDefaultHeight);
+      }
+      break;
+    case MenuType::TYPE_UNKNOWN:
+      NOTREACHED() << "Unsupported menu type";
+      break;
+  }
+
+  return anchor_rect;
+}
+
+}  // namespace
+
 XDGPopupWrapperV6::XDGPopupWrapperV6(std::unique_ptr<XDGSurfaceWrapper> surface,
                                      WaylandWindow* wayland_window)
     : wayland_window_(wayland_window), zxdg_surface_v6_(std::move(surface)) {
@@ -51,7 +208,8 @@
   if (!parent_xdg_surface)
     return false;
 
-  zxdg_positioner_v6* positioner = CreatePositioner(connection, bounds);
+  zxdg_positioner_v6* positioner =
+      CreatePositioner(connection, parent_window, bounds);
   if (!positioner)
     return false;
 
@@ -73,20 +231,41 @@
 
 zxdg_positioner_v6* XDGPopupWrapperV6::CreatePositioner(
     WaylandConnection* connection,
+    WaylandWindow* parent_window,
     const gfx::Rect& bounds) {
   struct zxdg_positioner_v6* positioner;
   positioner = zxdg_shell_v6_create_positioner(connection->shell_v6());
   if (!positioner)
     return nullptr;
 
-  zxdg_positioner_v6_set_anchor_rect(positioner, bounds.x(), bounds.y(), 1, 1);
+  auto* pointer = connection->pointer();
+  uint32_t flags = 0;
+  if (pointer)
+    flags = pointer->GetFlagsWithKeyboardModifiers();
+  bool is_right_click_menu = flags & EF_RIGHT_MOUSE_BUTTON;
+
+  // Different types of menu require different anchors, constraint adjustments,
+  // gravity and etc.
+  MenuType menu_type = MenuType::TYPE_UNKNOWN;
+  if (is_right_click_menu)
+    menu_type = MenuType::TYPE_RIGHT_CLICK;
+  else if (parent_window->xdg_popup())
+    menu_type = MenuType::TYPE_3DOT_CHILD_MENU;
+  else
+    menu_type = MenuType::TYPE_3DOT_PARENT_MENU;
+
+  // Place anchor to the end of the possible position.
+  gfx::Rect anchor_rect =
+      GetAnchorRect(menu_type, bounds, parent_window->GetBounds());
+
+  zxdg_positioner_v6_set_anchor_rect(positioner, anchor_rect.x(),
+                                     anchor_rect.y(), anchor_rect.width(),
+                                     anchor_rect.height());
   zxdg_positioner_v6_set_size(positioner, bounds.width(), bounds.height());
-  zxdg_positioner_v6_set_anchor(
-      positioner,
-      ZXDG_POSITIONER_V6_ANCHOR_TOP | ZXDG_POSITIONER_V6_ANCHOR_RIGHT);
-  zxdg_positioner_v6_set_gravity(
-      positioner,
-      ZXDG_POSITIONER_V6_ANCHOR_BOTTOM | ZXDG_POSITIONER_V6_ANCHOR_RIGHT);
+  zxdg_positioner_v6_set_anchor(positioner, GetAnchor(menu_type, bounds));
+  zxdg_positioner_v6_set_gravity(positioner, GetGravity(menu_type, bounds));
+  zxdg_positioner_v6_set_constraint_adjustment(
+      positioner, GetConstraintAdjustment(menu_type));
   return positioner;
 }
 
@@ -96,7 +275,19 @@
                                   int32_t x,
                                   int32_t y,
                                   int32_t width,
-                                  int32_t height) {}
+                                  int32_t height) {
+  // As long as the Wayland compositor repositions/requires to position windows
+  // relative to their parents, do not propagate final bounds information to
+  // Chromium. The browser places windows in respect to screen origin, but
+  // Wayland requires doing so in respect to parent window's origin. To properly
+  // place windows, the bounds are translated and adjusted according to the
+  // Wayland compositor needs during WaylandWindow::CreateXdgPopup call.
+  gfx::Rect new_bounds(x, y, width, height);
+  WaylandWindow* window =
+      static_cast<XDGPopupWrapperV6*>(data)->wayland_window_;
+  DCHECK(window);
+  window->HandlePopupConfigure(new_bounds);
+}
 
 // static
 void XDGPopupWrapperV6::PopupDone(void* data,
--- a/ui/ozone/platform/wayland/xdg_popup_wrapper_v6.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/platform/wayland/xdg_popup_wrapper_v6.h	2019-05-17 18:57:26.192000000 +0300
@@ -26,6 +26,7 @@
                   const gfx::Rect& bounds) override;
 
   zxdg_positioner_v6* CreatePositioner(WaylandConnection* connection,
+                                       WaylandWindow* parent_window,
                                        const gfx::Rect& bounds);
 
   // xdg_popup_listener
--- a/ui/ozone/public/interfaces/wayland/wayland_connection.mojom	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/public/interfaces/wayland/wayland_connection.mojom	2019-05-17 18:57:26.200000000 +0300
@@ -14,6 +14,8 @@
 // Used by the GPU for communication with a WaylandConnection on the browser
 // process.
 interface WaylandConnection {
+  // Methods used for hardware accelerated rendering:
+  //
   // Asks Wayland to create a wl_buffer based on the dmabuf |file| descriptor.
   CreateZwpLinuxDmabuf(mojo_base.mojom.File file,
                             uint32 width,
@@ -33,10 +35,34 @@
                      gfx.mojom.Rect damage_region)
       => (gfx.mojom.SwapResult swap_result,
           gfx.mojom.PresentationFeedback feedback);
+
+  // Methods used for software rendering:
+  //
+  // Asks Wayland to create a wl_buffer based on the shared memory |file|
+  // descriptor. There can be only one buffer per |widget|.
+  CreateShmBufferForWidget(gfx.mojom.AcceleratedWidget widget,
+                           mojo_base.mojom.File file,
+                           uint64 length,
+                           gfx.mojom.Size size);
+
+  // Asks Wayland to damage and commit previously created buffer for the
+  // |widget|.
+  PresentShmBufferForWidget(gfx.mojom.AcceleratedWidget widget,
+                            gfx.mojom.Rect damage);
+
+  // Destroys the previously created shared memory based buffer for the
+  // |widget|.
+  DestroyShmBuffer(gfx.mojom.AcceleratedWidget widget);
 };
 
-// Used by the browser process to provide the GPU process with a mojo ptr to a
-// WaylandConnection, which lives on the browser process.
+
 interface WaylandConnectionClient {
+  // Used by the browser process to provide the GPU process with a mojo ptr to a
+  // WaylandConnection, which lives on the browser process.
   SetWaylandConnection(WaylandConnection wc_ptr);
+
+  // The browser process may request the client to reset gbm device instance to
+  // avoid using zwp_linux_dmabuf protocol, which means using wl_egl_surface in
+  // a single process mode, and software rendering in a multiple process mode.
+  ResetGbmDevice();
 };
--- a/ui/ozone/public/platform_clipboard.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/ozone/public/platform_clipboard.h	2019-05-17 18:57:26.200000000 +0300
@@ -26,6 +26,10 @@
   using Data = std::vector<uint8_t>;
   using DataMap = std::unordered_map<std::string, Data>;
 
+  // SequenceNumberUpdateCb is a repeating callback, which can be used to tell
+  // a client of the PlatformClipboard to increment clipboard's sequence number
+  using SequenceNumberUpdateCb = base::RepeatingCallback<void()>;
+
   // Offers a given clipboard data 'data_map' to the host system clipboard.
   //
   // It is common that host clipboard implementations simply get offered
@@ -71,6 +75,9 @@
   // caches the clipboard data, and wants to know if it is possible to use
   // the cached data in order to reply faster to read-clipboard operations.
   virtual bool IsSelectionOwner() = 0;
+
+  // See comment above SequenceNumberUpdateCb. Can be called once.
+  virtual void SetSequenceNumberUpdateCb(SequenceNumberUpdateCb cb) = 0;
 };
 
 }  // namespace ui
--- a/ui/platform_window/platform_window_handler/BUILD.gn	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/platform_window/platform_window_handler/BUILD.gn	2019-05-17 18:57:26.204000000 +0300
@@ -10,6 +10,8 @@
   sources = [
     "wm_drag_handler.cc",
     "wm_drag_handler.h",
+    "wm_drop_handler.cc",
+    "wm_drop_handler.h",
     "wm_move_resize_handler.cc",
     "wm_move_resize_handler.h",
     "wm_platform_export.h",
--- a/ui/platform_window/platform_window_init_properties.h	2019-04-05 03:50:08.000000000 +0300
+++ b/ui/platform_window/platform_window_init_properties.h	2019-05-17 18:57:26.204000000 +0300
@@ -24,6 +24,12 @@
   kTooltip,
 };
 
+enum class PlatformWindowOpacity {
+  kInferOpacity,
+  kOpaqueWindow,
+  kTranslucentWindow,
+};
+
 // Initial properties which are passed to PlatformWindow to be initialized
 // with a desired set of properties.
 struct PlatformWindowInitProperties {
@@ -43,6 +49,9 @@
   // Tells PlatformWindow which native widget its parent holds. It is usually
   // used to find a parent from internal list of PlatformWindows.
   gfx::AcceleratedWidget parent_widget = gfx::kNullAcceleratedWidget;
+  // Tells the opacity type of a window. Check the comment in the
+  // Widget::InitProperties::WindowOpacity.
+  PlatformWindowOpacity opacity = PlatformWindowOpacity::kOpaqueWindow;
 
 #if defined(OS_FUCHSIA)
   zx::eventpair view_token;
--- a/ui/views/BUILD.gn	2019-04-05 03:50:10.000000000 +0300
+++ b/ui/views/BUILD.gn	2019-05-17 18:57:26.256000000 +0300
@@ -782,7 +782,6 @@
       "AppKit.framework",
       "CoreGraphics.framework",
       "Foundation.framework",
-      "IOSurface.framework",
       "QuartzCore.framework",  # Required by bridged_native_widget.mm.
     ]
   }
--- a/ui/views/cocoa/bridged_native_widget_host_impl.h	2019-04-05 03:50:10.000000000 +0300
+++ b/ui/views/cocoa/bridged_native_widget_host_impl.h	2019-05-17 18:57:26.272000000 +0300
@@ -426,12 +426,6 @@
   // Display link for getting vsync info for |display_|.
   scoped_refptr<ui::DisplayLinkMac> display_link_;
 
-  // Structure to avoid sending IOSurface mach ports over mojo.
-  // https://crbug.com/942213
-  class IOSurfaceToRemoteLayerInterceptor;
-  std::unique_ptr<IOSurfaceToRemoteLayerInterceptor>
-      io_surface_to_remote_layer_interceptor_;
-
   // The geometry of the window and its contents view, in screen coordinates.
   gfx::Rect window_bounds_in_screen_;
   gfx::Rect content_bounds_in_screen_;
--- a/ui/views/cocoa/bridged_native_widget_host_impl.mm	2019-04-05 03:50:10.000000000 +0300
+++ b/ui/views/cocoa/bridged_native_widget_host_impl.mm	2019-05-17 18:57:26.272000000 +0300
@@ -9,9 +9,7 @@
 #include "base/mac/foundation_util.h"
 #include "mojo/public/cpp/bindings/strong_associated_binding.h"
 #include "ui/accelerated_widget_mac/window_resize_helper_mac.h"
-#include "ui/base/cocoa/animation_utils.h"
 #include "ui/base/cocoa/remote_accessibility_api.h"
-#include "ui/base/cocoa/remote_layer_api.h"
 #include "ui/base/hit_test.h"
 #include "ui/base/ime/input_method.h"
 #include "ui/base/ime/input_method_factory.h"
@@ -208,60 +206,6 @@
 
 }  // namespace
 
-// A gfx::CALayerParams may pass the content to be drawn across processes via
-// either an IOSurface (sent as mach port) or a CAContextID (which is an
-// integer). For historical reasons, software compositing uses IOSurfaces.
-// The mojo connection to the app shim process does not support sending mach
-// ports, which results in nothing being drawn when using software compositing.
-// To work around this issue, this structure creates a CALayer that uses the
-// IOSurface as its contents, and hosts this CALayer in a CAContext that is
-// the gfx::CALayerParams is then pointed to.
-// https://crbug.com/942213
-class BridgedNativeWidgetHostImpl::IOSurfaceToRemoteLayerInterceptor {
- public:
-  IOSurfaceToRemoteLayerInterceptor() = default;
-  ~IOSurfaceToRemoteLayerInterceptor() = default;
-
-  void UpdateCALayerParams(gfx::CALayerParams* ca_layer_params) {
-    DCHECK(ca_layer_params->io_surface_mach_port);
-    base::ScopedCFTypeRef<IOSurfaceRef> io_surface(
-        IOSurfaceLookupFromMachPort(ca_layer_params->io_surface_mach_port));
-
-    ScopedCAActionDisabler disabler;
-    // Lazily create |io_surface_layer_| and |ca_context_|.
-    if (!io_surface_layer_) {
-      io_surface_layer_.reset([[CALayer alloc] init]);
-      [io_surface_layer_ setContentsGravity:kCAGravityTopLeft];
-      [io_surface_layer_ setAnchorPoint:CGPointMake(0, 0)];
-    }
-    if (!ca_context_) {
-      CGSConnectionID connection_id = CGSMainConnectionID();
-      ca_context_.reset([[CAContext contextWithCGSConnection:connection_id
-                                                     options:@{}] retain]);
-      [ca_context_ setLayer:io_surface_layer_];
-    }
-
-    // Update |io_surface_layer_| to draw the contents of |ca_layer_params|.
-    id new_contents = static_cast<id>(io_surface.get());
-    [io_surface_layer_ setContents:new_contents];
-    gfx::Size bounds_dip = gfx::ConvertSizeToDIP(ca_layer_params->scale_factor,
-                                                 ca_layer_params->pixel_size);
-    [io_surface_layer_
-        setBounds:CGRectMake(0, 0, bounds_dip.width(), bounds_dip.height())];
-    if ([io_surface_layer_ contentsScale] != ca_layer_params->scale_factor)
-      [io_surface_layer_ setContentsScale:ca_layer_params->scale_factor];
-
-    // Change |ca_layer_params| to use |ca_context_| instead of an IOSurface.
-    ca_layer_params->ca_context_id = [ca_context_ contextId];
-    ca_layer_params->io_surface_mach_port.reset();
-  }
-
- private:
-  DISALLOW_COPY_AND_ASSIGN(IOSurfaceToRemoteLayerInterceptor);
-  base::scoped_nsobject<CAContext> ca_context_;
-  base::scoped_nsobject<CALayer> io_surface_layer_;
-};
-
 // static
 BridgedNativeWidgetHostImpl* BridgedNativeWidgetHostImpl::GetFromNativeWindow(
     gfx::NativeWindow native_window) {
@@ -1412,26 +1356,8 @@
 void BridgedNativeWidgetHostImpl::AcceleratedWidgetCALayerParamsUpdated() {
   const gfx::CALayerParams* ca_layer_params =
       compositor_->widget()->GetCALayerParams();
-  if (ca_layer_params) {
-    // Replace IOSurface mach ports with CAContextIDs only when using the
-    // out-of-process bridge (to reduce risk, because this workaround is being
-    // merged to late-life-cycle release branches) and when an IOSurface
-    // mach port has been specified (in practice, when software compositing is
-    // enabled).
-    // https://crbug.com/942213
-    if (bridge_ptr_ && ca_layer_params->io_surface_mach_port) {
-      gfx::CALayerParams updated_ca_layer_params = *ca_layer_params;
-      if (!io_surface_to_remote_layer_interceptor_) {
-        io_surface_to_remote_layer_interceptor_ =
-            std::make_unique<IOSurfaceToRemoteLayerInterceptor>();
-      }
-      io_surface_to_remote_layer_interceptor_->UpdateCALayerParams(
-          &updated_ca_layer_params);
-      bridge_ptr_->SetCALayerParams(updated_ca_layer_params);
-    } else {
+  if (ca_layer_params)
       bridge()->SetCALayerParams(*ca_layer_params);
-    }
-  }
 
   // Take this opportunity to update the VSync parameters, if needed.
   if (display_link_) {
--- a/ui/views/widget/desktop_aura/desktop_drag_drop_client_ozone.cc	2019-04-05 03:50:11.000000000 +0300
+++ b/ui/views/widget/desktop_aura/desktop_drag_drop_client_ozone.cc	2019-05-17 18:57:26.400000000 +0300
@@ -4,12 +4,21 @@
 
 #include "ui/views/widget/desktop_aura/desktop_drag_drop_client_ozone.h"
 
+#include <memory>
+
 #include "base/bind.h"
 #include "base/run_loop.h"
+#include "base/strings/string16.h"
+#include "base/strings/utf_string_conversions.h"
+#include "base/threading/thread_task_runner_handle.h"
 #include "ui/aura/client/capture_client.h"
 #include "ui/aura/client/cursor_client.h"
+#include "ui/aura/client/drag_drop_delegate.h"
 #include "ui/aura/window.h"
 #include "ui/aura/window_tree_host.h"
+#include "ui/base/clipboard/clipboard.h"
+#include "ui/base/dragdrop/drag_drop_types.h"
+#include "ui/base/dragdrop/drop_target_event.h"
 #include "ui/base/dragdrop/os_exchange_data_provider_aura.h"
 #include "ui/platform_window/platform_window_delegate.h"
 #include "ui/platform_window/platform_window_handler/wm_drag_handler.h"
@@ -17,6 +26,17 @@
 
 namespace views {
 
+namespace {
+
+aura::Window* GetTargetWindow(aura::Window* root_window,
+                              const gfx::Point& point) {
+  gfx::Point root_location(point);
+  root_window->GetHost()->ConvertScreenInPixelsToDIP(&root_location);
+  return root_window->GetEventHandlerForPoint(root_location);
+}
+
+}  // namespace
+
 DesktopDragDropClientOzone::DesktopDragDropClientOzone(
     aura::Window* root_window,
     views::DesktopNativeCursorManager* cursor_manager,
@@ -26,6 +46,8 @@
       drag_handler_(drag_handler) {}
 
 DesktopDragDropClientOzone::~DesktopDragDropClientOzone() {
+  ResetDragDropTarget();
+
   if (in_move_loop_)
     DragCancel();
 }
@@ -86,6 +108,70 @@
   NOTIMPLEMENTED_LOG_ONCE();
 }
 
+void DesktopDragDropClientOzone::OnDragEnter(
+    const gfx::PointF& point,
+    std::unique_ptr<ui::OSExchangeData> data,
+    int operation) {
+  last_drag_point_ = point;
+  drag_operation_ = operation;
+
+  // If it doesn't have |data|, it defers sending events to
+  // |drag_drop_delegate_|. It will try again before handling drop.
+  if (!data)
+    return;
+
+  os_exchange_data_ = std::move(data);
+  std::unique_ptr<ui::DropTargetEvent> event = CreateDropTargetEvent(point);
+  if (drag_drop_delegate_ && event)
+    drag_drop_delegate_->OnDragEntered(*event);
+}
+
+int DesktopDragDropClientOzone::OnDragMotion(const gfx::PointF& point,
+                                             int operation) {
+  last_drag_point_ = point;
+  drag_operation_ = operation;
+  int client_operation =
+      ui::DragDropTypes::DRAG_COPY | ui::DragDropTypes::DRAG_MOVE;
+
+  if (os_exchange_data_) {
+    std::unique_ptr<ui::DropTargetEvent> event = CreateDropTargetEvent(point);
+    // If |os_exchange_data_| has a valid data, |drag_drop_delegate_| returns
+    // the operation which it expects.
+    if (drag_drop_delegate_ && event)
+      client_operation = drag_drop_delegate_->OnDragUpdated(*event);
+  }
+  return client_operation;
+}
+
+void DesktopDragDropClientOzone::OnDragDrop(
+    std::unique_ptr<ui::OSExchangeData> data) {
+  // If it doesn't have |os_exchange_data_|, it needs to update it with |data|.
+  if (!os_exchange_data_) {
+    DCHECK(data);
+    os_exchange_data_ = std::move(data);
+    std::unique_ptr<ui::DropTargetEvent> event =
+        CreateDropTargetEvent(last_drag_point_);
+    // Sends the deferred drag events to |drag_drop_delegate_| before handling
+    // drop.
+    if (drag_drop_delegate_ && event) {
+      drag_drop_delegate_->OnDragEntered(*event);
+      // TODO(jkim): It doesn't use the return value from 'OnDragUpdated' and
+      // doesn't have a chance to update the expected operation.
+      // https://crbug.com/875164
+      drag_drop_delegate_->OnDragUpdated(*event);
+    }
+  } else {
+    // If it has |os_exchange_data_|, it doesn't expect |data| on OnDragDrop.
+    DCHECK(!data);
+  }
+  PerformDrop();
+}
+
+void DesktopDragDropClientOzone::OnDragLeave() {
+  os_exchange_data_.reset();
+  ResetDragDropTarget();
+}
+
 void DesktopDragDropClientOzone::OnDragSessionClosed(int dnd_action) {
   drag_operation_ = dnd_action;
   QuitRunLoop();
@@ -107,4 +193,49 @@
   std::move(quit_closure_).Run();
 }
 
+std::unique_ptr<ui::DropTargetEvent>
+DesktopDragDropClientOzone::CreateDropTargetEvent(const gfx::PointF& location) {
+  const gfx::Point point(location.x(), location.y());
+  aura::Window* window = GetTargetWindow(root_window_, point);
+  if (!window)
+    return nullptr;
+
+  UpdateDragDropDelegate(window);
+  gfx::Point root_location(location.x(), location.y());
+  root_window_->GetHost()->ConvertScreenInPixelsToDIP(&root_location);
+  gfx::PointF target_location(root_location);
+  aura::Window::ConvertPointToTarget(root_window_, window, &target_location);
+
+  return std::make_unique<ui::DropTargetEvent>(
+      *os_exchange_data_, target_location, gfx::PointF(root_location),
+      drag_operation_);
+}
+
+void DesktopDragDropClientOzone::UpdateDragDropDelegate(aura::Window* window) {
+  aura::client::DragDropDelegate* delegate =
+      aura::client::GetDragDropDelegate(window);
+
+  if (drag_drop_delegate_ == delegate)
+    return;
+
+  ResetDragDropTarget();
+  if (delegate)
+    drag_drop_delegate_ = delegate;
+}
+
+void DesktopDragDropClientOzone::ResetDragDropTarget() {
+  if (!drag_drop_delegate_)
+    return;
+  drag_drop_delegate_->OnDragExited();
+  drag_drop_delegate_ = nullptr;
+}
+
+void DesktopDragDropClientOzone::PerformDrop() {
+  std::unique_ptr<ui::DropTargetEvent> event =
+      CreateDropTargetEvent(last_drag_point_);
+  if (drag_drop_delegate_ && event)
+    drag_operation_ = drag_drop_delegate_->OnPerformDrop(*event);
+  DragDropSessionCompleted();
+}
+
 }  // namespace views
--- a/ui/views/widget/desktop_aura/desktop_drag_drop_client_ozone.h	2019-04-05 03:50:11.000000000 +0300
+++ b/ui/views/widget/desktop_aura/desktop_drag_drop_client_ozone.h	2019-05-17 18:57:26.400000000 +0300
@@ -5,25 +5,40 @@
 #ifndef UI_VIEWS_WIDGET_DESKTOP_AURA_DESKTOP_DRAG_DROP_CLIENT_OZONE_H_
 #define UI_VIEWS_WIDGET_DESKTOP_AURA_DESKTOP_DRAG_DROP_CLIENT_OZONE_H_
 
+#include <memory>
+
 #include "base/callback.h"
 #include "ui/aura/client/drag_drop_client.h"
 #include "ui/base/cursor/cursor.h"
+#include "ui/base/dragdrop/os_exchange_data.h"
+#include "ui/gfx/geometry/point_f.h"
+#include "ui/gfx/native_widget_types.h"
 #include "ui/platform_window/platform_window_handler/wm_drag_handler.h"
+#include "ui/platform_window/platform_window_handler/wm_drop_handler.h"
 #include "ui/views/views_export.h"
 
+namespace aura {
+namespace client {
+class DragDropDelegate;
+}
+}  // namespace aura
+
+namespace ui {
+class DropTargetEvent;
+}
+
 namespace views {
 class DesktopNativeCursorManager;
 
 class VIEWS_EXPORT DesktopDragDropClientOzone
-    : public aura::client::DragDropClient {
+    : public aura::client::DragDropClient,
+      public ui::WmDropHandler {
  public:
   DesktopDragDropClientOzone(aura::Window* root_window,
                              views::DesktopNativeCursorManager* cursor_manager,
                              ui::WmDragHandler* drag_handler);
   ~DesktopDragDropClientOzone() override;
 
-  void OnDragSessionClosed(int operation);
-
   // Overridden from aura::client::DragDropClient:
   int StartDragAndDrop(const ui::OSExchangeData& data,
                        aura::Window* root_window,
@@ -36,16 +51,48 @@
   void AddObserver(aura::client::DragDropClientObserver* observer) override;
   void RemoveObserver(aura::client::DragDropClientObserver* observer) override;
 
+  // Overridden from void ui::WmDropHandler:
+  void OnDragEnter(const gfx::PointF& point,
+                   std::unique_ptr<ui::OSExchangeData> data,
+                   int operation) override;
+  int OnDragMotion(const gfx::PointF& point, int operation) override;
+  void OnDragDrop(std::unique_ptr<ui::OSExchangeData> data) override;
+  void OnDragLeave() override;
+
+  void OnDragSessionClosed(int operation);
+
  private:
   void DragDropSessionCompleted();
   void QuitRunLoop();
 
+  // Returns a DropTargetEvent to be passed to the DragDropDelegate, or null to
+  // abort the drag.
+  std::unique_ptr<ui::DropTargetEvent> CreateDropTargetEvent(
+      const gfx::PointF& point);
+
+  // Updates |drag_drop_delegate_| along with |window|.
+  void UpdateDragDropDelegate(aura::Window* window);
+
+  // Resets |drag_drop_delegate_|.
+  void ResetDragDropTarget();
+
+  void PerformDrop();
+
   aura::Window* const root_window_;
 
   DesktopNativeCursorManager* cursor_manager_;
 
   ui::WmDragHandler* const drag_handler_;
 
+  // The delegate corresponding to the window located at the mouse position.
+  aura::client::DragDropDelegate* drag_drop_delegate_ = nullptr;
+
+  // The data to be delivered through the drag and drop.
+  std::unique_ptr<ui::OSExchangeData> os_exchange_data_ = nullptr;
+
+  // The most recent native coordinates of a drag.
+  gfx::PointF last_drag_point_;
+
   // Cursor in use prior to the move loop starting. Restored when the move loop
   // quits.
   gfx::NativeCursor initial_cursor_;
--- a/ui/views/widget/desktop_aura/desktop_window_tree_host_platform.cc	2019-04-05 03:50:11.000000000 +0300
+++ b/ui/views/widget/desktop_aura/desktop_window_tree_host_platform.cc	2019-05-17 18:57:26.404000000 +0300
@@ -53,6 +53,18 @@
   if (params.parent && params.parent->GetHost())
     properties.parent_widget = params.parent->GetHost()->GetAcceleratedWidget();
 
+  switch (params.opacity) {
+    case Widget::InitParams::WindowOpacity::INFER_OPACITY:
+      properties.opacity = ui::PlatformWindowOpacity::kInferOpacity;
+      break;
+    case Widget::InitParams::WindowOpacity::OPAQUE_WINDOW:
+      properties.opacity = ui::PlatformWindowOpacity::kOpaqueWindow;
+      break;
+    case Widget::InitParams::WindowOpacity::TRANSLUCENT_WINDOW:
+      properties.opacity = ui::PlatformWindowOpacity::kTranslucentWindow;
+      break;
+  }
+
   return properties;
 }
 
@@ -118,8 +130,13 @@
 DesktopWindowTreeHostPlatform::CreateDragDropClient(
     DesktopNativeCursorManager* cursor_manager) {
   ui::WmDragHandler* drag_handler = ui::GetWmDragHandler(*(platform_window()));
-  return std::make_unique<DesktopDragDropClientOzone>(window(), cursor_manager,
+  std::unique_ptr<DesktopDragDropClientOzone> drag_drop_client =
+      std::make_unique<DesktopDragDropClientOzone>(window(), cursor_manager,
                                                       drag_handler);
+  // Set a class property key, which allows |drag_drop_client| to be used for
+  // drop action.
+  SetWmDropHandler(platform_window(), drag_drop_client.get());
+  return std::move(drag_drop_client);
 }
 
 void DesktopWindowTreeHostPlatform::Close() {
@@ -141,6 +158,7 @@
 
 void DesktopWindowTreeHostPlatform::CloseNow() {
   auto weak_ref = weak_factory_.GetWeakPtr();
+  SetWmDropHandler(platform_window(), nullptr);
   // Deleting the PlatformWindow may not result in OnClosed() being called, if
   // not behave as though it was.
   SetPlatformWindow(nullptr);
@@ -252,13 +270,7 @@
 }
 
 gfx::Rect DesktopWindowTreeHostPlatform::GetWindowBoundsInScreen() const {
-  gfx::Rect bounds =
-      gfx::ConvertRectToDIP(device_scale_factor(), GetBoundsInPixels());
-  bounds += display::Screen::GetScreen()
-                ->GetDisplayNearestWindow(const_cast<aura::Window*>(window()))
-                .bounds()
-                .OffsetFromOrigin();
-  return bounds;
+  return gfx::ConvertRectToDIP(device_scale_factor(), GetBoundsInPixels());
 }
 
 gfx::Rect DesktopWindowTreeHostPlatform::GetClientAreaBoundsInScreen() const {
--- a/ui/views_bridge_mac/bridged_native_widget_impl.h	2019-04-05 03:50:11.000000000 +0300
+++ b/ui/views_bridge_mac/bridged_native_widget_impl.h	2019-05-17 18:57:26.428000000 +0300
@@ -187,10 +187,6 @@
   // Redispatch a keyboard event using the widget's window's CommandDispatcher.
   // Return true if the event is handled.
   bool RedispatchKeyEvent(NSEvent* event);
-  // Save an NSEvent to be used at the mojo version of RedispatchKeyEvent,
-  // rather than (inaccurately) reconstructing the NSEvent.
-  // https://crbug.com/942690
-  void SaveKeyEventForRedispatch(NSEvent* event);
 
   // display::DisplayObserver:
   void OnDisplayMetricsChanged(const display::Display& display,
@@ -299,7 +295,6 @@
   base::scoped_nsobject<ViewsNSWindowDelegate> window_delegate_;
   base::scoped_nsobject<NSObject<CommandDispatcherDelegate>>
       window_command_dispatcher_delegate_;
-  base::scoped_nsobject<NSEvent> saved_redispatch_event_;
 
   base::scoped_nsobject<BridgedContentView> bridged_view_;
   std::unique_ptr<ui::ScopedNSViewIdMapping> bridged_view_id_mapping_;
--- a/ui/views_bridge_mac/bridged_native_widget_impl.mm	2019-04-05 03:50:11.000000000 +0300
+++ b/ui/views_bridge_mac/bridged_native_widget_impl.mm	2019-05-17 18:57:26.428000000 +0300
@@ -7,7 +7,6 @@
 #import <objc/runtime.h>
 #include <stddef.h>
 #include <stdint.h>
-#include <cmath>
 
 #include "base/command_line.h"
 #include "base/logging.h"
@@ -1055,10 +1054,6 @@
   return [[window_ commandDispatcher] redispatchKeyEvent:event];
 }
 
-void BridgedNativeWidgetImpl::SaveKeyEventForRedispatch(NSEvent* event) {
-  saved_redispatch_event_.reset([event retain]);
-}
-
 NSWindow* BridgedNativeWidgetImpl::ns_window() {
   return window_.get();
 }
@@ -1203,23 +1198,6 @@
     const base::string16& characters,
     const base::string16& characters_ignoring_modifiers,
     uint32_t key_code) {
-  // If we saved an event for redispatch, and that event looks similar to the
-  // (potentially mangled) event parameters that we received, then use the saved
-  // event.
-  // https://crbug.com/942690
-  if (saved_redispatch_event_) {
-    // Consider two events to have the same timestamp if they are within 0.1 ms.
-    constexpr double kTimestampThreshold = 0.0001;
-    if ([saved_redispatch_event_ type] == type &&
-        base::SysNSStringToUTF16([saved_redispatch_event_ characters]) ==
-            characters &&
-        std::fabs([saved_redispatch_event_ timestamp] - timestamp) <
-            kTimestampThreshold) {
-      RedispatchKeyEvent(saved_redispatch_event_.autorelease());
-      return;
-    }
-    saved_redispatch_event_.reset();
-  }
   NSEvent* event =
       [NSEvent keyEventWithType:static_cast<NSEventType>(type)
                              location:NSZeroPoint
--- a/ui/views_bridge_mac/native_widget_mac_nswindow.mm	2019-04-05 03:50:11.000000000 +0300
+++ b/ui/views_bridge_mac/native_widget_mac_nswindow.mm	2019-05-17 18:57:26.428000000 +0300
@@ -200,12 +200,6 @@
 
 // Lets the traffic light buttons on the parent window keep their active state.
 - (BOOL)hasKeyAppearance {
-  // Note that this function is called off of the main thread. In such cases,
-  // it is not safe to access the mojo interface or the ui::Widget, as they are
-  // not reentrant.
-  // https://crbug.com/941506.
-  if (![NSThread isMainThread])
-    return [super hasKeyAppearance];
   if (bridgeImpl_) {
     bool isAlwaysRenderWindowAsKey = NO;
     bridgeImpl_->host()->GetAlwaysRenderWindowAsKey(&isAlwaysRenderWindowAsKey);
--- a/ui/web_dialogs/web_dialog_delegate.h	2019-04-05 03:50:11.000000000 +0300
+++ b/ui/web_dialogs/web_dialog_delegate.h	2019-05-17 18:57:26.432000000 +0300
@@ -90,10 +90,6 @@
   virtual void OnDialogShown(content::WebUI* webui,
                              content::RenderViewHost* render_view_host) {}
 
-  // A callback to notify the delegate that the dialog is about to close due to
-  // the user pressing the ESC key.
-  virtual void OnDialogClosingFromKeyEvent() {}
-
   // A callback to notify the delegate that the dialog closed.
   // IMPORTANT: Implementations should delete |this| here (unless they've
   // arranged for the delegate to be deleted in some other way, e.g. by
--- a/ui/base/clipboard/clipboard_ozone.cc	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/base/clipboard/clipboard_ozone.cc	2019-05-17 18:57:25.652000000 +0300
@@ -0,0 +1,451 @@
+// Copyright 2018 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "ui/base/clipboard/clipboard_ozone.h"
+
+#include <limits>
+#include <utility>
+
+#include "base/bind.h"
+#include "base/containers/span.h"
+#include "base/macros.h"
+#include "base/memory/weak_ptr.h"
+#include "base/run_loop.h"
+#include "base/strings/utf_string_conversions.h"
+#include "base/timer/timer.h"
+#include "third_party/skia/include/core/SkBitmap.h"
+#include "ui/base/clipboard/clipboard_constants.h"
+#include "ui/base/clipboard/custom_data_helper.h"
+#include "ui/gfx/codec/png_codec.h"
+#include "ui/ozone/public/ozone_platform.h"
+#include "ui/ozone/public/platform_clipboard.h"
+
+namespace ui {
+
+namespace {
+
+// The amount of time to wait for a request to complete before aborting it.
+constexpr base::TimeDelta kRequestTimeoutMs =
+    base::TimeDelta::FromMilliseconds(10000);
+
+}  // namespace
+
+// A helper class, which uses a request pattern to asynchronously communicate
+// with the ozone::PlatformClipboard and fetch clipboard data with mimes
+// specified.
+class ClipboardOzone::AsyncClipboardOzone {
+ public:
+  explicit AsyncClipboardOzone(PlatformClipboard* platform_clipboard)
+      : platform_clipboard_(platform_clipboard), weak_factory_(this) {
+    // Set a callback to listen to requests to increase the clipboard sequence
+    // number.
+    auto update_sequence_cb =
+        base::BindRepeating(&AsyncClipboardOzone::UpdateClipboardSequenceNumber,
+                            weak_factory_.GetWeakPtr());
+    platform_clipboard_->SetSequenceNumberUpdateCb(
+        std::move(update_sequence_cb));
+  }
+
+  ~AsyncClipboardOzone() = default;
+
+  base::span<uint8_t> ReadClipboardDataAndWait(ClipboardType type,
+                                               const std::string& mime_type) {
+    // TODO(tonikitoo): add selection support.
+    if (type == ClipboardType::CLIPBOARD_TYPE_SELECTION)
+      return base::span<uint8_t>();
+
+    // We can use a fastpath if we are the owner of the selection.
+    if (platform_clipboard_->IsSelectionOwner()) {
+      auto it = offered_data_.find(mime_type);
+      if (it == offered_data_.end())
+        return base::span<uint8_t>();
+      return base::make_span(it->second.data(), it->second.size());
+    }
+
+    auto request = std::make_unique<Request>(RequestType::kRead);
+    request->requested_mime_type = mime_type;
+    ProcessRequestAndWaitForResult(request.get());
+
+    offered_data_ = std::move(request->data_map);
+    auto it = offered_data_.find(mime_type);
+    if (it == offered_data_.end())
+      return base::span<uint8_t>();
+    return base::make_span(it->second.data(), it->second.size());
+  }
+
+  std::vector<std::string> RequestMimeTypes() {
+    // We can use a fastpath if we are the owner of the selection.
+    if (platform_clipboard_->IsSelectionOwner()) {
+      std::vector<std::string> mime_types;
+      for (const auto& item : offered_data_)
+        mime_types.push_back(item.first);
+      return mime_types;
+    }
+
+    auto request = std::make_unique<Request>(RequestType::kGetMime);
+    ProcessRequestAndWaitForResult(request.get());
+    return std::move(request->mime_types);
+  }
+
+  void OfferData() {
+    auto request = std::make_unique<Request>(RequestType::kOffer);
+    request->data_map = offered_data_;
+    ProcessRequestAndWaitForResult(request.get());
+
+    UpdateClipboardSequenceNumber();
+  }
+
+  void InsertData(std::vector<uint8_t> data, const std::string& mime_type) {
+    DCHECK(offered_data_.find(mime_type) == offered_data_.end());
+    offered_data_[mime_type] = std::move(data);
+  }
+
+  void ClearOfferedData() { offered_data_.clear(); }
+
+  uint64_t GetSequenceNumber(ClipboardType type) {
+    if (type == ClipboardType::CLIPBOARD_TYPE_COPY_PASTE)
+      return clipboard_sequence_number_;
+    // TODO(tonikitoo): add sequence number for the selection clipboard type.
+    return 0;
+  }
+
+ private:
+  enum class RequestType {
+    kRead = 0,
+    kOffer = 1,
+    kGetMime = 2,
+  };
+
+  // A structure, which holds request data to process inquiries from
+  // the ClipboardOzone.
+  struct Request {
+    explicit Request(RequestType type) : current_type(type) {}
+    ~Request() = default;
+
+    // Describes the type of the request.
+    RequestType current_type;
+
+    // A closure that is used to signal the request is processed.
+    base::OnceClosure request_closure;
+
+    // Used for kRead and kOffer requests. It contains either data offered by
+    // Chromium to a system clipboard or a read data offered by the system
+    // clipboard.
+    PlatformClipboard::DataMap data_map;
+
+    // Identifies which mime type the client is interested to read from the
+    // system clipboard during kRead requests.
+    std::string requested_mime_type;
+
+    // A vector of mime types returned as a result to a kGetMime request to get
+    // available mime types.
+    std::vector<std::string> mime_types;
+  };
+
+  void ProcessRequestAndWaitForResult(Request* request) {
+    DCHECK(!abort_timer_.IsRunning());
+    DCHECK(!pending_request_);
+
+    // TODO(https://crbug.com/913422): the implementation is known to be
+    // dangerous, and may cause blocks in ui thkRead. But base::Clipboard was
+    // designed to have synchrous APIs rather than asynchronous ones that at
+    // least two system clipboards on X11 and Wayland provide.
+    base::RunLoop run_loop(base::RunLoop::Type::kNestableTasksAllowed);
+    request->request_closure = run_loop.QuitClosure();
+
+    pending_request_ = request;
+    switch (pending_request_->current_type) {
+      case (RequestType::kRead):
+        ProcessReadRequest(request);
+        break;
+      case (RequestType::kOffer):
+        ProcessOfferRequest(request);
+        break;
+      case (RequestType::kGetMime):
+        ProcessGetMimeRequest(request);
+        break;
+    }
+
+    if (!pending_request_)
+      return;
+
+    // Set a timeout timer after which the request will be aborted.
+    abort_timer_.Start(FROM_HERE, kRequestTimeoutMs, this,
+                       &AsyncClipboardOzone::AbortStaledRequest);
+    run_loop.Run();
+  }
+
+  void AbortStaledRequest() {
+    if (pending_request_)
+      std::move(pending_request_->request_closure).Run();
+  }
+
+  void ProcessReadRequest(Request* request) {
+    auto callback = base::BindOnce(&AsyncClipboardOzone::OnTextkRead,
+                                   weak_factory_.GetWeakPtr());
+    DCHECK(platform_clipboard_);
+    platform_clipboard_->RequestClipboardData(
+        request->requested_mime_type, &request->data_map, std::move(callback));
+  }
+
+  void ProcessOfferRequest(Request* request) {
+    auto callback = base::BindOnce(&AsyncClipboardOzone::OnkOfferDone,
+                                   weak_factory_.GetWeakPtr());
+    DCHECK(platform_clipboard_);
+    platform_clipboard_->OfferClipboardData(request->data_map,
+                                            std::move(callback));
+  }
+
+  void ProcessGetMimeRequest(Request* request) {
+    auto callback = base::BindOnce(&AsyncClipboardOzone::OnGotMimeTypes,
+                                   weak_factory_.GetWeakPtr());
+    DCHECK(platform_clipboard_);
+    platform_clipboard_->GetAvailableMimeTypes(std::move(callback));
+  }
+
+  void OnTextkRead(const base::Optional<std::vector<uint8_t>>& data) {
+    CompleteRequest();
+  }
+
+  void OnkOfferDone() { CompleteRequest(); }
+
+  void OnGotMimeTypes(const std::vector<std::string>& mime_types) {
+    pending_request_->mime_types = std::move(mime_types);
+    CompleteRequest();
+  }
+
+  void CompleteRequest() {
+    abort_timer_.Stop();
+    auto closure = std::move(pending_request_->request_closure);
+    pending_request_ = nullptr;
+    std::move(closure).Run();
+  }
+
+  void UpdateClipboardSequenceNumber() { ++clipboard_sequence_number_; }
+
+  // Cached clipboard data, which is pending to be written. Must be cleared on
+  // every new write to the |platform_clipboard_|.
+  PlatformClipboard::DataMap offered_data_;
+
+  // A current pending request being processed.
+  Request* pending_request_ = nullptr;
+
+  // Aborts |pending_request| after Request::timeout.
+  base::RepeatingTimer abort_timer_;
+
+  // Provides communication to a system clipboard under ozone level.
+  PlatformClipboard* platform_clipboard_ = nullptr;
+
+  uint64_t clipboard_sequence_number_ = 0;
+
+  base::WeakPtrFactory<AsyncClipboardOzone> weak_factory_;
+
+  DISALLOW_COPY_AND_ASSIGN(AsyncClipboardOzone);
+};
+
+// Clipboard factory method.
+Clipboard* Clipboard::Create() {
+  return new ClipboardOzone;
+}
+
+// ClipboardOzone implementation.
+ClipboardOzone::ClipboardOzone() {
+  async_clipboard_ozone_ =
+      std::make_unique<ClipboardOzone::AsyncClipboardOzone>(
+          OzonePlatform::GetInstance()->GetPlatformClipboard());
+}
+
+ClipboardOzone::~ClipboardOzone() = default;
+
+void ClipboardOzone::OnPreShutdown() {}
+
+uint64_t ClipboardOzone::GetSequenceNumber(ClipboardType type) const {
+  auto s = async_clipboard_ozone_->GetSequenceNumber(type);
+  LOG(ERROR) << "SEQUENCE " << s;
+  return s;
+}
+
+bool ClipboardOzone::IsFormatAvailable(const ClipboardFormatType& format,
+                                       ClipboardType type) const {
+  DCHECK(CalledOnValidThread());
+  // TODO(tonikitoo): add selection support.
+  if (type == ClipboardType::CLIPBOARD_TYPE_SELECTION)
+    return false;
+
+  auto available_types = async_clipboard_ozone_->RequestMimeTypes();
+  for (auto mime_type : available_types) {
+    if (format.ToString() == mime_type) {
+      return true;
+    }
+  }
+  return false;
+}
+
+void ClipboardOzone::Clear(ClipboardType type) {
+  async_clipboard_ozone_->ClearOfferedData();
+  async_clipboard_ozone_->OfferData();
+}
+
+void ClipboardOzone::ReadAvailableTypes(ClipboardType type,
+                                        std::vector<base::string16>* types,
+                                        bool* contains_filenames) const {
+  DCHECK(CalledOnValidThread());
+  types->clear();
+
+  // TODO(tonikitoo): add selection support.
+  if (type == ClipboardType::CLIPBOARD_TYPE_SELECTION)
+    return;
+
+  auto available_types = async_clipboard_ozone_->RequestMimeTypes();
+  for (auto mime_type : available_types)
+    types->push_back(base::UTF8ToUTF16(mime_type));
+}
+
+void ClipboardOzone::ReadText(ClipboardType type,
+                              base::string16* result) const {
+  DCHECK(CalledOnValidThread());
+
+  auto clipboard_data =
+      async_clipboard_ozone_->ReadClipboardDataAndWait(type, kMimeTypeText);
+  *result = base::UTF8ToUTF16(base::StringPiece(
+      reinterpret_cast<char*>(clipboard_data.data()), clipboard_data.size()));
+}
+
+void ClipboardOzone::ReadAsciiText(ClipboardType type,
+                                   std::string* result) const {
+  DCHECK(CalledOnValidThread());
+  auto clipboard_data =
+      async_clipboard_ozone_->ReadClipboardDataAndWait(type, kMimeTypeText);
+  result->assign(clipboard_data.begin(), clipboard_data.end());
+}
+
+void ClipboardOzone::ReadHTML(ClipboardType type,
+                              base::string16* markup,
+                              std::string* src_url,
+                              uint32_t* fragment_start,
+                              uint32_t* fragment_end) const {
+  DCHECK(CalledOnValidThread());
+  markup->clear();
+  if (src_url)
+    src_url->clear();
+  *fragment_start = 0;
+  *fragment_end = 0;
+
+  auto clipboard_data =
+      async_clipboard_ozone_->ReadClipboardDataAndWait(type, kMimeTypeHTML);
+  *markup = base::UTF8ToUTF16(base::StringPiece(
+      reinterpret_cast<char*>(clipboard_data.data()), clipboard_data.size()));
+  DCHECK(markup->length() <= std::numeric_limits<uint32_t>::max());
+  *fragment_end = static_cast<uint32_t>(markup->length());
+}
+
+void ClipboardOzone::ReadRTF(ClipboardType type, std::string* result) const {
+  DCHECK(CalledOnValidThread());
+  auto clipboard_data =
+      async_clipboard_ozone_->ReadClipboardDataAndWait(type, kMimeTypeRTF);
+  result->assign(clipboard_data.begin(), clipboard_data.end());
+}
+
+SkBitmap ClipboardOzone::ReadImage(ClipboardType type) const {
+  DCHECK(CalledOnValidThread());
+  auto clipboard_data =
+      async_clipboard_ozone_->ReadClipboardDataAndWait(type, kMimeTypePNG);
+  SkBitmap bitmap;
+  if (gfx::PNGCodec::Decode(clipboard_data.data(), clipboard_data.size(),
+                            &bitmap))
+    return SkBitmap(bitmap);
+  return SkBitmap();
+}
+
+void ClipboardOzone::ReadCustomData(ClipboardType clipboard_type,
+                                    const base::string16& type,
+                                    base::string16* result) const {
+  DCHECK(CalledOnValidThread());
+  auto custom_data = async_clipboard_ozone_->ReadClipboardDataAndWait(
+      clipboard_type, kMimeTypeWebCustomData);
+  ui::ReadCustomDataForType(custom_data.data(), custom_data.size(), type,
+                            result);
+}
+
+void ClipboardOzone::ReadBookmark(base::string16* title,
+                                  std::string* url) const {
+  DCHECK(CalledOnValidThread());
+  // TODO(msisov): This was left NOTIMPLEMENTED() in all the Linux platforms.
+  NOTIMPLEMENTED();
+}
+
+void ClipboardOzone::ReadData(const ClipboardFormatType& format,
+                              std::string* result) const {
+  DCHECK(CalledOnValidThread());
+  auto clipboard_data = async_clipboard_ozone_->ReadClipboardDataAndWait(
+      ClipboardType::CLIPBOARD_TYPE_COPY_PASTE, format.ToString());
+  result->assign(clipboard_data.begin(), clipboard_data.end());
+}
+
+void ClipboardOzone::WriteObjects(ClipboardType type,
+                                  const ObjectMap& objects) {
+  DCHECK(CalledOnValidThread());
+  if (type == ClipboardType::CLIPBOARD_TYPE_COPY_PASTE) {
+    async_clipboard_ozone_->ClearOfferedData();
+
+    for (const auto& object : objects)
+      DispatchObject(static_cast<ObjectType>(object.first), object.second);
+
+    async_clipboard_ozone_->OfferData();
+  }
+}
+
+void ClipboardOzone::WriteText(const char* text_data, size_t text_len) {
+  std::vector<uint8_t> data(text_data, text_data + text_len);
+  async_clipboard_ozone_->InsertData(std::move(data), kMimeTypeText);
+}
+
+void ClipboardOzone::WriteHTML(const char* markup_data,
+                               size_t markup_len,
+                               const char* url_data,
+                               size_t url_len) {
+  std::vector<uint8_t> data(markup_data, markup_data + markup_len);
+  async_clipboard_ozone_->InsertData(std::move(data), kMimeTypeHTML);
+}
+
+void ClipboardOzone::WriteRTF(const char* rtf_data, size_t data_len) {
+  std::vector<uint8_t> data(rtf_data, rtf_data + data_len);
+  async_clipboard_ozone_->InsertData(std::move(data), kMimeTypeRTF);
+}
+
+void ClipboardOzone::WriteBookmark(const char* title_data,
+                                   size_t title_len,
+                                   const char* url_data,
+                                   size_t url_len) {
+  // Writes a Mozilla url (UTF16: URL, newline, title)
+  base::string16 bookmark =
+      base::UTF8ToUTF16(base::StringPiece(url_data, url_len)) +
+      base::ASCIIToUTF16("\n") +
+      base::UTF8ToUTF16(base::StringPiece(title_data, title_len));
+
+  std::vector<uint8_t> data(
+      reinterpret_cast<const uint8_t*>(bookmark.data()),
+      reinterpret_cast<const uint8_t*>(bookmark.data() + bookmark.size()));
+  async_clipboard_ozone_->InsertData(std::move(data), kMimeTypeMozillaURL);
+}
+
+void ClipboardOzone::WriteWebSmartPaste() {
+  async_clipboard_ozone_->InsertData(std::vector<uint8_t>(),
+                                     kMimeTypeWebkitSmartPaste);
+}
+
+void ClipboardOzone::WriteBitmap(const SkBitmap& bitmap) {
+  std::vector<unsigned char> output;
+  if (gfx::PNGCodec::FastEncodeBGRASkBitmap(bitmap, false, &output))
+    async_clipboard_ozone_->InsertData(std::move(output), kMimeTypePNG);
+}
+
+void ClipboardOzone::WriteData(const ClipboardFormatType& format,
+                               const char* data_data,
+                               size_t data_len) {
+  std::vector<uint8_t> data(data_data, data_data + data_len);
+  async_clipboard_ozone_->InsertData(data, format.ToString());
+}
+
+}  // namespace ui
--- a/ui/base/clipboard/clipboard_ozone.h	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/base/clipboard/clipboard_ozone.h	2019-05-17 18:57:25.652000000 +0300
@@ -0,0 +1,76 @@
+// Copyright 2018 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#ifndef UI_BASE_CLIPBOARD_CLIPBOARD_OZONE_H_
+#define UI_BASE_CLIPBOARD_CLIPBOARD_OZONE_H_
+
+#include <stddef.h>
+#include <stdint.h>
+#include <memory>
+#include <string>
+#include <vector>
+
+#include "base/macros.h"
+#include "ui/base/clipboard/clipboard.h"
+
+namespace ui {
+
+class ClipboardOzone : public Clipboard {
+ private:
+  friend class Clipboard;
+
+  ClipboardOzone();
+  ~ClipboardOzone() override;
+
+  // Clipboard overrides:
+  void OnPreShutdown() override;
+  uint64_t GetSequenceNumber(ClipboardType type) const override;
+  bool IsFormatAvailable(const ClipboardFormatType& format,
+                         ClipboardType type) const override;
+  void Clear(ClipboardType type) override;
+  void ReadAvailableTypes(ClipboardType type,
+                          std::vector<base::string16>* types,
+                          bool* contains_filenames) const override;
+  void ReadText(ClipboardType type, base::string16* result) const override;
+  void ReadAsciiText(ClipboardType type, std::string* result) const override;
+  void ReadHTML(ClipboardType type,
+                base::string16* markup,
+                std::string* src_url,
+                uint32_t* fragment_start,
+                uint32_t* fragment_end) const override;
+  void ReadRTF(ClipboardType type, std::string* result) const override;
+  SkBitmap ReadImage(ClipboardType type) const override;
+  void ReadCustomData(ClipboardType clipboard_type,
+                      const base::string16& type,
+                      base::string16* result) const override;
+  void ReadBookmark(base::string16* title, std::string* url) const override;
+  void ReadData(const ClipboardFormatType& format,
+                std::string* result) const override;
+  void WriteObjects(ClipboardType type, const ObjectMap& objects) override;
+  void WriteText(const char* text_data, size_t text_len) override;
+  void WriteHTML(const char* markup_data,
+                 size_t markup_len,
+                 const char* url_data,
+                 size_t url_len) override;
+  void WriteRTF(const char* rtf_data, size_t data_len) override;
+  void WriteBookmark(const char* title_data,
+                     size_t title_len,
+                     const char* url_data,
+                     size_t url_len) override;
+  void WriteWebSmartPaste() override;
+  void WriteBitmap(const SkBitmap& bitmap) override;
+  void WriteData(const ClipboardFormatType& format,
+                 const char* data_data,
+                 size_t data_len) override;
+
+  class AsyncClipboardOzone;
+
+  std::unique_ptr<AsyncClipboardOzone> async_clipboard_ozone_;
+
+  DISALLOW_COPY_AND_ASSIGN(ClipboardOzone);
+};
+
+}  // namespace ui
+
+#endif  // UI_BASE_CLIPBOARD_CLIPBOARD_OZONE_H_
--- a/ui/base/ime/character_composer.cc	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/base/ime/character_composer.cc	2019-05-17 18:57:25.672000000 +0300
@@ -0,0 +1,291 @@
+// Copyright 2013 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "ui/base/ime/character_composer.h"
+
+#include <algorithm>
+#include <iterator>
+#include <string>
+
+#include "base/strings/string_util.h"
+#include "base/strings/utf_string_conversion_utils.h"
+#include "base/strings/utf_string_conversions.h"
+#include "base/third_party/icu/icu_utf.h"
+#include "ui/events/event.h"
+#include "ui/events/keycodes/dom/dom_key.h"
+#include "ui/events/keycodes/dom/keycode_converter.h"
+#include "ui/events/keycodes/keyboard_codes.h"
+
+namespace {
+
+#include "ui/base/ime/character_composer_data.h"
+
+bool CheckCharacterComposeTable(
+    const ui::CharacterComposer::ComposeBuffer& compose_sequence,
+    uint32_t* composed_character) {
+  const ui::TreeComposeChecker kTreeComposeChecker(kCompositions);
+  return kTreeComposeChecker.CheckSequence(compose_sequence,
+                                           composed_character) !=
+         ui::ComposeChecker::CheckSequenceResult::NO_MATCH;
+}
+
+// Converts |character| to UTF16 string.
+// Returns false when |character| is not a valid character.
+bool UTF32CharacterToUTF16(uint32_t character, base::string16* output) {
+  output->clear();
+  // Reject invalid character. (e.g. codepoint greater than 0x10ffff)
+  if (!CBU_IS_UNICODE_CHAR(character))
+    return false;
+  if (character) {
+    output->resize(CBU16_LENGTH(character));
+    size_t i = 0;
+    CBU16_APPEND_UNSAFE(&(*output)[0], i, character);
+  }
+  return true;
+}
+
+// Returns an hexadecimal digit integer (0 to 15) corresponding to |keycode|.
+// -1 is returned when |keycode| cannot be a hexadecimal digit.
+int KeycodeToHexDigit(unsigned int keycode) {
+  if (ui::VKEY_0 <= keycode && keycode <= ui::VKEY_9)
+    return keycode - ui::VKEY_0;
+  if (ui::VKEY_A <= keycode && keycode <= ui::VKEY_F)
+    return keycode - ui::VKEY_A + 10;
+  return -1;  // |keycode| cannot be a hexadecimal digit.
+}
+
+}  // namespace
+
+namespace ui {
+
+CharacterComposer::CharacterComposer() : composition_mode_(KEY_SEQUENCE_MODE) {}
+
+CharacterComposer::~CharacterComposer() {}
+
+void CharacterComposer::Reset() {
+  compose_buffer_.clear();
+  hex_buffer_.clear();
+  composed_character_.clear();
+  preedit_string_.clear();
+  composition_mode_ = KEY_SEQUENCE_MODE;
+}
+
+bool CharacterComposer::FilterKeyPress(const ui::KeyEvent& event) {
+  if (event.type() != ET_KEY_PRESSED && event.type() != ET_KEY_RELEASED)
+    return false;
+
+  // We don't care about modifier key presses.
+  if (KeycodeConverter::IsDomKeyForModifier(event.GetDomKey()))
+    return false;
+
+  composed_character_.clear();
+  preedit_string_.clear();
+
+  // When the user presses Ctrl+Shift+U, maybe switch to HEX_MODE.
+  // We don't care about other modifiers like Alt.  When CapsLock is on, we do
+  // nothing because what we receive is Ctrl+Shift+u (not U).
+  if (event.key_code() == VKEY_U &&
+      (event.flags() & (EF_SHIFT_DOWN | EF_CONTROL_DOWN | EF_CAPS_LOCK_ON)) ==
+          (EF_SHIFT_DOWN | EF_CONTROL_DOWN)) {
+    if (composition_mode_ == KEY_SEQUENCE_MODE && compose_buffer_.empty()) {
+      // There is no ongoing composition.  Let's switch to HEX_MODE.
+      composition_mode_ = HEX_MODE;
+      UpdatePreeditStringHexMode();
+      return true;
+    }
+  }
+
+  // Filter key press in an appropriate manner.
+  switch (composition_mode_) {
+    case KEY_SEQUENCE_MODE:
+      return FilterKeyPressSequenceMode(event);
+    case HEX_MODE:
+      return FilterKeyPressHexMode(event);
+    default:
+      NOTREACHED();
+      return false;
+  }
+}
+
+bool CharacterComposer::FilterKeyPressSequenceMode(const KeyEvent& event) {
+  DCHECK(composition_mode_ == KEY_SEQUENCE_MODE);
+  compose_buffer_.push_back(event.GetDomKey());
+
+  // Check compose table.
+  uint32_t composed_character_utf32 = 0;
+  if (CheckCharacterComposeTable(compose_buffer_, &composed_character_utf32)) {
+    // Key press is recognized as a part of composition.
+    if (composed_character_utf32 != 0) {
+      // We get a composed character.
+      compose_buffer_.clear();
+      UTF32CharacterToUTF16(composed_character_utf32, &composed_character_);
+    }
+    return true;
+  }
+  // Key press is not a part of composition.
+  compose_buffer_.pop_back();  // Remove the keypress added this time.
+  if (!compose_buffer_.empty()) {
+    // Check for Windows-style composition fallback: If the dead key encodes
+    // a printable ASCII character, output that followed by the new keypress.
+    // (This could be extended to allow any printable Unicode character in
+    // the dead key, and/or for longer sequences, but there is no current use
+    // for that, so we keep it simple.)
+    if ((compose_buffer_.size() == 1) && (compose_buffer_[0].IsDeadKey())) {
+      int32_t dead_character = compose_buffer_[0].ToDeadKeyCombiningCharacter();
+      if (dead_character >= 0x20 && dead_character <= 0x7E) {
+        DomKey current_key = event.GetDomKey();
+        int32_t current_character = 0;
+        if (current_key.IsCharacter())
+          current_character = current_key.ToCharacter();
+        else if (current_key.IsDeadKey())
+          current_character = current_key.ToDeadKeyCombiningCharacter();
+        if (current_character) {
+          base::WriteUnicodeCharacter(dead_character, &composed_character_);
+          base::WriteUnicodeCharacter(current_character, &composed_character_);
+        }
+      }
+    }
+    compose_buffer_.clear();
+    return true;
+  }
+  return false;
+}
+
+bool CharacterComposer::FilterKeyPressHexMode(const KeyEvent& event) {
+  DCHECK(composition_mode_ == HEX_MODE);
+  const size_t kMaxHexSequenceLength = 8;
+  base::char16 c = event.GetCharacter();
+  int hex_digit = 0;
+  if (base::IsHexDigit(c)) {
+    hex_digit = base::HexDigitToInt(c);
+  } else {
+    // With 101 keyboard, control + shift + 3 produces '#', but a user may
+    // have intended to type '3'.  So, if a hexadecimal character was not found,
+    // suppose a user is holding shift key (and possibly control key, too) and
+    // try a character with modifier keys removed.
+    hex_digit = KeycodeToHexDigit(event.key_code());
+  }
+  if (hex_digit >= 0) {
+    if (hex_buffer_.size() < kMaxHexSequenceLength) {
+      // Add the key to the buffer if it is a hex digit.
+      hex_buffer_.push_back(hex_digit);
+    }
+  } else {
+    DomKey key = event.GetDomKey();
+    if (key == DomKey::ESCAPE) {
+      // Cancel composition when ESC is pressed.
+      Reset();
+    } else if (key == DomKey::ENTER || c == ' ') {
+      // Commit the composed character when Enter or space is pressed.
+      CommitHex();
+    } else if (key == DomKey::BACKSPACE) {
+      // Pop back the buffer when Backspace is pressed.
+      if (!hex_buffer_.empty()) {
+        hex_buffer_.pop_back();
+      } else {
+        // If there is no character in |hex_buffer_|, cancel composition.
+        Reset();
+      }
+    }
+    // Other keystrokes are ignored in hex composition mode.
+  }
+  UpdatePreeditStringHexMode();
+  return true;
+}
+
+void CharacterComposer::CommitHex() {
+  DCHECK(composition_mode_ == HEX_MODE);
+  uint32_t composed_character_utf32 = 0;
+  for (size_t i = 0; i != hex_buffer_.size(); ++i) {
+    const uint32_t digit = hex_buffer_[i];
+    DCHECK(0 <= digit && digit < 16);
+    composed_character_utf32 <<= 4;
+    composed_character_utf32 |= digit;
+  }
+  Reset();
+  UTF32CharacterToUTF16(composed_character_utf32, &composed_character_);
+}
+
+void CharacterComposer::UpdatePreeditStringHexMode() {
+  if (composition_mode_ != HEX_MODE) {
+    preedit_string_.clear();
+    return;
+  }
+  std::string preedit_string_ascii("u");
+  for (size_t i = 0; i != hex_buffer_.size(); ++i) {
+    const int digit = hex_buffer_[i];
+    DCHECK(0 <= digit && digit < 16);
+    preedit_string_ascii += digit <= 9 ? ('0' + digit) : ('a' + (digit - 10));
+  }
+  preedit_string_ = base::ASCIIToUTF16(preedit_string_ascii);
+}
+
+ComposeChecker::CheckSequenceResult TreeComposeChecker::CheckSequence(
+    const ui::CharacterComposer::ComposeBuffer& sequence,
+    uint32_t* composed_character) const {
+  *composed_character = 0;
+  if (sequence.size() > data_.maximum_sequence_length)
+    return CheckSequenceResult::NO_MATCH;
+
+  uint16_t tree_index = 0;
+  for (const auto& keystroke : sequence) {
+    DCHECK(tree_index < data_.tree_entries);
+
+    // If we are looking up a dead key, skip over the character tables.
+    int32_t character = -1;
+    if (keystroke.IsDeadKey()) {
+      tree_index += 2 * data_.tree[tree_index] + 1;  // internal unicode table
+      tree_index += 2 * data_.tree[tree_index] + 1;  // leaf unicode table
+      character = keystroke.ToDeadKeyCombiningCharacter();
+    } else if (keystroke.IsCharacter()) {
+      character = keystroke.ToCharacter();
+    }
+    if (character < 0 || character > 0xFFFF)
+      return CheckSequenceResult::NO_MATCH;
+
+    // Check the internal subtree table.
+    uint16_t result = 0;
+    uint16_t entries = data_.tree[tree_index++];
+    if (entries &&
+        Find(tree_index, entries, static_cast<uint16_t>(character), &result)) {
+      tree_index = result;
+      continue;
+    }
+
+    // Skip over the internal subtree table and check the leaf table.
+    tree_index += 2 * entries;
+    entries = data_.tree[tree_index++];
+    if (entries &&
+        Find(tree_index, entries, static_cast<uint16_t>(character), &result)) {
+      *composed_character = result;
+      return CheckSequenceResult::FULL_MATCH;
+    }
+    return CheckSequenceResult::NO_MATCH;
+  }
+  return CheckSequenceResult::PREFIX_MATCH;
+}
+
+bool TreeComposeChecker::Find(uint16_t index,
+                              uint16_t size,
+                              uint16_t key,
+                              uint16_t* value) const {
+  struct TableEntry {
+    uint16_t key;
+    uint16_t value;
+    bool operator<(const TableEntry& other) const {
+      return this->key < other.key;
+    }
+  };
+  const TableEntry* a = reinterpret_cast<const TableEntry*>(&data_.tree[index]);
+  const TableEntry* z = a + size;
+  const TableEntry target = {key, 0};
+  const TableEntry* it = std::lower_bound(a, z, target);
+  if ((it != z) && (it->key == key)) {
+    *value = it->value;
+    return true;
+  }
+  return false;
+}
+
+}  // namespace ui
--- a/ui/base/ime/character_composer_data.h	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/base/ime/character_composer_data.h	2019-05-17 18:57:25.676000000 +0300
@@ -0,0 +1,23525 @@
+// Copyright 2015 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+// DO NOT EDIT.
+//   GENERATED BY generate_character_composer_data.py
+//   FROM character_composer_sequences.txt
+
+#ifndef CHARACTER_COMPOSER_DATA_H_
+#define CHARACTER_COMPOSER_DATA_H_
+
+static const uint16_t kCompositionsTree[] = {
+
+    // offset 0x0000:
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x001E,          // number of entries
+    0x0000,  // U+0000
+    0x0040,
+    0x0022,  // quotation mark
+    0x26FC,
+    0x0027,  // apostrophe
+    0x2716,
+    0x005E,  // circumflex accent
+    0x2738,
+    0x0060,  // grave accent
+    0x2752,
+    0x007E,  // tilde
+    0x276C,
+    0x0300,  // combining grave accent
+    0x277E,
+    0x0301,  // combining acute accent
+    0x295C,
+    0x0302,  // combining circumflex accent
+    0x2BEE,
+    0x0303,  // combining tilde
+    0x2D58,
+    0x0304,  // combining macron
+    0x2EDC,
+    0x0306,  // combining breve
+    0x2FF8,
+    0x0307,  // combining dot above
+    0x30AE,
+    0x0308,  // combining diaeresis
+    0x3186,
+    0x0309,  // combining hook above
+    0x327E,
+    0x030A,  // combining ring above
+    0x335E,
+    0x030B,  // combining double acute accent
+    0x3382,
+    0x030C,  // combining caron
+    0x3398,
+    0x030F,  // combining double grave accent
+    0x3434,
+    0x0311,  // combining inverted breve
+    0x3454,
+    0x0313,  // combining comma above
+    0x3470,
+    0x0314,  // combining reversed comma above
+    0x3490,
+    0x031B,  // combining horn
+    0x34B4,
+    0x0323,  // combining dot below
+    0x3524,
+    0x0327,  // combining cedilla
+    0x35EE,
+    0x0328,  // combining ogonek
+    0x3642,
+    0x0338,  // combining long solidus overlay
+    0x366E,
+    0x0345,  // combining greek ypogegrammeni
+    0x36E2,
+    0x3099,  // combining katakana-hiragana voiced sound mark
+    0x3ABC,
+    0x309A,  // combining katakana-hiragana semi-voiced sound mark
+    0x3B20,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0040:
+    //   prefix:
+    //     Compose
+    //   internal character table
+    0x00E6,          // number of entries
+    0x0020,  // space
+    0x0210,
+    0x0021,  // exclamation mark
+    0x022A,
+    0x0022,  // quotation mark
+    0x02A0,
+    0x0023,  // number sign
+    0x0360,
+    0x0025,  // percent sign
+    0x036A,
+    0x0027,  // apostrophe
+    0x0370,
+    0x0028,  // left parenthesis
+    0x05C4,
+    0x0029,  // right parenthesis
+    0x0D92,
+    0x002A,  // asterisk
+    0x0DB6,
+    0x002B,  // plus sign
+    0x0DC4,
+    0x002C,  // comma
+    0x0DD4,
+    0x002D,  // hyphen-minus
+    0x0E1A,
+    0x002E,  // full stop
+    0x0E5E,
+    0x002F,  // solidus
+    0x0F08,
+    0x0030,  // digit zero
+    0x0F54,
+    0x0031,  // digit one
+    0x0F68,
+    0x0032,  // digit two
+    0x0F7E,
+    0x0033,  // digit three
+    0x0F8C,
+    0x0034,  // digit four
+    0x0F9C,
+    0x0035,  // digit five
+    0x0FA2,
+    0x0037,  // digit seven
+    0x0FAA,
+    0x003A,  // colon
+    0x0FB0,
+    0x003B,  // semicolon
+    0x0FBA,
+    0x003C,  // less-than sign
+    0x0FD2,
+    0x003D,  // equals sign
+    0x100C,
+    0x003E,  // greater-than sign
+    0x1038,
+    0x003F,  // question mark
+    0x105C,
+    0x0041,  // capital a
+    0x10E0,
+    0x0042,  // capital b
+    0x1104,
+    0x0043,  // capital c
+    0x110A,
+    0x0044,  // capital d
+    0x1134,
+    0x0045,  // capital e
+    0x1140,
+    0x0046,  // capital f
+    0x115E,
+    0x0047,  // capital g
+    0x1166,
+    0x0049,  // capital i
+    0x1174,
+    0x004B,  // capital k
+    0x1190,
+    0x004C,  // capital l
+    0x1196,
+    0x004D,  // capital m
+    0x11A8,
+    0x004E,  // capital n
+    0x11AE,
+    0x004F,  // capital o
+    0x11C4,
+    0x0050,  // capital p
+    0x11F0,
+    0x0052,  // capital r
+    0x11FC,
+    0x0053,  // capital s
+    0x120A,
+    0x0054,  // capital t
+    0x122A,
+    0x0055,  // capital u
+    0x123C,
+    0x0056,  // capital v
+    0x12CC,
+    0x0057,  // capital w
+    0x12D2,
+    0x0058,  // capital x
+    0x12DA,
+    0x0059,  // capital y
+    0x12E4,
+    0x005A,  // capital z
+    0x12F6,
+    0x005E,  // circumflex accent
+    0x1300,
+    0x005F,  // low line
+    0x13D6,
+    0x0060,  // grave accent
+    0x14DE,
+    0x0061,  // letter a
+    0x169C,
+    0x0062,  // letter b
+    0x16BE,
+    0x0063,  // letter c
+    0x1736,
+    0x0064,  // letter d
+    0x17A8,
+    0x0065,  // letter e
+    0x17B4,
+    0x0066,  // letter f
+    0x17D4,
+    0x0067,  // letter g
+    0x17DE,
+    0x0069,  // letter i
+    0x17EC,
+    0x006B,  // letter k
+    0x1808,
+    0x006C,  // letter l
+    0x1810,
+    0x006D,  // letter m
+    0x1822,
+    0x006E,  // letter n
+    0x182C,
+    0x006F,  // letter o
+    0x183C,
+    0x0070,  // letter p
+    0x187E,
+    0x0072,  // letter r
+    0x1886,
+    0x0073,  // letter s
+    0x1890,
+    0x0074,  // letter t
+    0x18B0,
+    0x0075,  // letter u
+    0x18C2,
+    0x0076,  // letter v
+    0x18E2,
+    0x0077,  // letter w
+    0x18EC,
+    0x0078,  // letter x
+    0x18F2,
+    0x0079,  // letter y
+    0x18FE,
+    0x007A,  // letter z
+    0x1910,
+    0x007C,  // vertical line
+    0x191A,
+    0x007E,  // tilde
+    0x1922,
+    0x00A8,  // diaeresis
+    0x1A58,
+    0x00AF,  // macron
+    0x1A82,
+    0x00B4,  // acute accent
+    0x1B62,
+    0x00B8,  // cedilla
+    0x1DB4,
+    0x02D8,  // breve
+    0x1DE4,
+    0x0391,  // capital alpha
+    0x1DEC,
+    0x0395,  // capital epsilon
+    0x1DF2,
+    0x0397,  // capital eta
+    0x1DF8,
+    0x0399,  // capital iota
+    0x1DFE,
+    0x039F,  // capital omicron
+    0x1E06,
+    0x03A5,  // capital upsilon
+    0x1E0C,
+    0x03A9,  // capital omega
+    0x1E14,
+    0x03B1,  // letter alpha
+    0x1E1A,
+    0x03B5,  // letter epsilon
+    0x1E20,
+    0x03B7,  // letter eta
+    0x1E26,
+    0x03B9,  // letter iota
+    0x1E2C,
+    0x03BF,  // letter omicron
+    0x21EC,
+    0x03C5,  // letter upsilon
+    0x21F2,
+    0x03C9,  // letter omega
+    0x21FA,
+    0x0415,  // cyrillic capital ie
+    0x2200,
+    0x041D,  // cyrillic capital en
+    0x2206,
+    0x0421,  // cyrillic capital es
+    0x220E,
+    0x043F,  // cyrillic small pe
+    0x2214,
+    0x05B4,  // hebrew point hiriq
+    0x221A,
+    0x05B7,  // hebrew point patah
+    0x2220,
+    0x05B8,  // hebrew point qamats
+    0x2228,
+    0x05B9,  // hebrew point holam
+    0x222E,
+    0x05BC,  // hebrew point dagesh or mapiq
+    0x2234,
+    0x061F,  // arabic question mark
+    0x2264,
+    0x0621,  // arabic hamza
+    0x226E,
+    0x0622,  // arabic alef with madda above
+    0x227E,
+    0x0653,  // arabic maddah above
+    0x228E,
+    0x0654,  // arabic hamza above
+    0x2294,
+    0x0655,  // arabic hamza below
+    0x22A4,
+    0x093C,  // devanagari sign nukta
+    0x22AA,
+    0x09BC,  // bengali sign nukta
+    0x22C4,
+    0x09C7,  // bengali vowel sign e
+    0x22CE,
+    0x0A3C,  // gurmukhi sign nukta
+    0x22D6,
+    0x0B3C,  // oriya sign nukta
+    0x22E6,
+    0x0B47,  // oriya vowel sign e
+    0x22EE,
+    0x0BC7,  // tamil vowel sign ee
+    0x22F8,
+    0x0BD7,  // tamil au length mark
+    0x22FE,
+    0x0C46,  // telugu vowel sign e
+    0x2304,
+    0x0CBF,  // kannada vowel sign i
+    0x230A,
+    0x0CC6,  // kannada vowel sign e
+    0x2310,
+    0x0CCA,  // kannada vowel sign o
+    0x231A,
+    0x0D46,  // malayalam vowel sign e
+    0x2320,
+    0x0D47,  // malayalam vowel sign ee
+    0x2328,
+    0x0DDC,  // sinhala vowel sign kombuva haa aela-pilla
+    0x232E,
+    0x0E39,  // thai character sara uu
+    0x2334,
+    0x0F71,  // tibetan vowel sign aa
+    0x233E,
+    0x0F90,  // tibetan subjoined ka
+    0x2348,
+    0x0F92,  // tibetan subjoined ga
+    0x234E,
+    0x0F9C,  // tibetan subjoined dda
+    0x2354,
+    0x0FA1,  // tibetan subjoined da
+    0x235A,
+    0x0FA6,  // tibetan subjoined ba
+    0x2360,
+    0x0FAB,  // tibetan subjoined dza
+    0x2366,
+    0x0FB2,  // tibetan subjoined ra
+    0x236C,
+    0x0FB3,  // tibetan subjoined la
+    0x2372,
+    0x0FB5,  // tibetan subjoined ssa
+    0x2378,
+    0x0FB7,  // tibetan subjoined ha
+    0x237E,
+    0x102E,  // myanmar vowel sign ii
+    0x238C,
+    0x1100,  // hangul choseong kiyeok
+    0x2392,
+    0x1102,  // hangul choseong nieun
+    0x2398,
+    0x1103,  // hangul choseong tikeut
+    0x23A4,
+    0x1105,  // hangul choseong rieul
+    0x23AC,
+    0x1106,  // hangul choseong mieum
+    0x23B8,
+    0x1107,  // hangul choseong pieup
+    0x23C0,
+    0x1108,  // hangul choseong ssangpieup
+    0x23E4,
+    0x1109,  // hangul choseong sios
+    0x23EA,
+    0x110A,  // hangul choseong ssangsios
+    0x240E,
+    0x110B,  // hangul choseong ieung
+    0x2414,
+    0x110C,  // hangul choseong cieuc
+    0x242E,
+    0x110E,  // hangul choseong chieuch
+    0x2436,
+    0x1111,  // hangul choseong phieuph
+    0x243E,
+    0x1112,  // hangul choseong hieuh
+    0x2446,
+    0x1121,  // hangul choseong pieup-sios
+    0x244C,
+    0x1132,  // hangul choseong sios-pieup
+    0x245A,
+    0x113C,  // hangul choseong chitueumsios
+    0x2460,
+    0x113E,  // hangul choseong ceongchieumsios
+    0x2466,
+    0x114E,  // hangul choseong chitueumcieuc
+    0x246C,
+    0x1150,  // hangul choseong ceongchieumcieuc
+    0x2472,
+    0x1161,  // hangul jungseong a
+    0x2478,
+    0x1163,  // hangul jungseong ya
+    0x2482,
+    0x1165,  // hangul jungseong eo
+    0x248C,
+    0x1167,  // hangul jungseong yeo
+    0x2498,
+    0x1169,  // hangul jungseong o
+    0x24A2,
+    0x116A,  // hangul jungseong wa
+    0x24B6,
+    0x116D,  // hangul jungseong yo
+    0x24BC,
+    0x116E,  // hangul jungseong u
+    0x24CA,
+    0x116F,  // hangul jungseong weo
+    0x24DE,
+    0x1172,  // hangul jungseong yu
+    0x24E6,
+    0x1173,  // hangul jungseong eu
+    0x24F8,
+    0x1174,  // hangul jungseong yi
+    0x2502,
+    0x1175,  // hangul jungseong i
+    0x2508,
+    0x119E,  // hangul jungseong araea
+    0x2518,
+    0x11A8,  // hangul jongseong kiyeok
+    0x2524,
+    0x11AA,  // hangul jongseong kiyeok-sios
+    0x2530,
+    0x11AB,  // hangul jongseong nieun
+    0x2536,
+    0x11AE,  // hangul jongseong tikeut
+    0x2548,
+    0x11AF,  // hangul jongseong rieul
+    0x2550,
+    0x11B0,  // hangul jongseong rieul-kiyeok
+    0x257C,
+    0x11B1,  // hangul jongseong rieul-mieum
+    0x2582,
+    0x11B2,  // hangul jongseong rieul-pieup
+    0x258A,
+    0x11B3,  // hangul jongseong rieul-sios
+    0x2594,
+    0x11B7,  // hangul jongseong mieum
+    0x259A,
+    0x11B8,  // hangul jongseong pieup
+    0x25B0,
+    0x11BA,  // hangul jongseong sios
+    0x25BE,
+    0x11BC,  // hangul jongseong ieung
+    0x25CC,
+    0x11C1,  // hangul jongseong phieuph
+    0x25D8,
+    0x11C2,  // hangul jongseong hieuh
+    0x25E0,
+    0x11CE,  // hangul jongseong rieul-tikeut
+    0x25EC,
+    0x11DD,  // hangul jongseong mieum-sios
+    0x25F2,
+    0x11EC,  // hangul jongseong ieung-kiyeok
+    0x25F8,
+    0x11F0,  // hangul jongseong yesieung
+    0x25FE,
+    0x1FBF,  // psili
+    0x2606,
+    0x1FFE,  // dasia
+    0x2618,
+    0x2203,  // there exists
+    0x262A,
+    0x2208,  // element of
+    0x2630,
+    0x220B,  // contains as member
+    0x2636,
+    0x2223,  // divides
+    0x263C,
+    0x2225,  // parallel to
+    0x2642,
+    0x223C,  // tilde operator
+    0x2648,
+    0x2243,  // asymptotically equal to
+    0x264E,
+    0x2248,  // almost equal to
+    0x2654,
+    0x224D,  // equivalent to
+    0x265A,
+    0x2261,  // identical to
+    0x2660,
+    0x2264,  // less-than or equal to
+    0x2666,
+    0x2265,  // greater-than or equal to
+    0x266C,
+    0x2272,  // less-than or equivalent to
+    0x2672,
+    0x2273,  // greater-than or equivalent to
+    0x2678,
+    0x2276,  // less-than or greater-than
+    0x267E,
+    0x2277,  // greater-than or less-than
+    0x2684,
+    0x227A,  // precedes
+    0x268A,
+    0x227B,  // succeeds
+    0x2690,
+    0x227C,  // precedes or equal to
+    0x2696,
+    0x227D,  // succeeds or equal to
+    0x269C,
+    0x2282,  // subset of
+    0x26A2,
+    0x2283,  // superset of
+    0x26A8,
+    0x2286,  // subset of or equal to
+    0x26AE,
+    0x2287,  // superset of or equal to
+    0x26B4,
+    0x2291,  // square image of or equal to
+    0x26BA,
+    0x2292,  // square original of or equal to
+    0x26C0,
+    0x22A2,  // right tack
+    0x26C6,
+    0x22A8,  // true
+    0x26CC,
+    0x22A9,  // forces
+    0x26D2,
+    0x22AB,  // double vertical bar double right turnstile
+    0x26D8,
+    0x22B2,  // normal subgroup of
+    0x26DE,
+    0x22B3,  // contains as normal subgroup
+    0x26E4,
+    0x22B4,  // normal subgroup of or equal to
+    0x26EA,
+    0x22B5,  // contains as normal subgroup or equal to
+    0x26F0,
+    0x2ADD,  // nonforking
+    0x26F6,
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0210:
+    //   prefix:
+    //     Compose
+    //     <space>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000B,          // number of entries
+    0x0020,  // space
+    0x00A0,  // -> no-break space
+    0x0027,  // apostrophe
+    0x0027,  // -> apostrophe
+    0x0028,  // left parenthesis
+    0x02D8,  // -> breve
+    0x002C,  // comma
+    0x00B8,  // -> cedilla
+    0x002D,  // hyphen-minus
+    0x007E,  // -> tilde
+    0x002E,  // full stop
+    0x2008,  // -> punctuation space
+    0x003C,  // less-than sign
+    0x02C7,  // -> caron
+    0x003E,  // greater-than sign
+    0x005E,  // -> circumflex accent
+    0x005E,  // circumflex accent
+    0x005E,  // -> circumflex accent
+    0x0060,  // grave accent
+    0x0060,  // -> grave accent
+    0x007E,  // tilde
+    0x007E,  // -> tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x022A:
+    //   prefix:
+    //     Compose
+    //     <exclamation mark>
+    //   internal character table
+    0x0001,          // number of entries
+    0x002B,  // plus sign
+    0x0288,
+    //   leaf character table
+    0x002B,          // number of entries
+    0x0021,  // exclamation mark
+    0x00A1,  // -> inverted exclamation mark
+    0x003F,  // question mark
+    0x203D,  // -> interrobang
+    0x0041,  // capital a
+    0x1EA0,  // -> capital a with dot below
+    0x0042,  // capital b
+    0x1E04,  // -> capital b with dot below
+    0x0044,  // capital d
+    0x1E0C,  // -> capital d with dot below
+    0x0045,  // capital e
+    0x1EB8,  // -> capital e with dot below
+    0x0048,  // capital h
+    0x1E24,  // -> capital h with dot below
+    0x0049,  // capital i
+    0x1ECA,  // -> capital i with dot below
+    0x004B,  // capital k
+    0x1E32,  // -> capital k with dot below
+    0x004C,  // capital l
+    0x1E36,  // -> capital l with dot below
+    0x004D,  // capital m
+    0x1E42,  // -> capital m with dot below
+    0x004E,  // capital n
+    0x1E46,  // -> capital n with dot below
+    0x004F,  // capital o
+    0x1ECC,  // -> capital o with dot below
+    0x0050,  // capital p
+    0x00B6,  // -> pilcrow sign
+    0x0052,  // capital r
+    0x1E5A,  // -> capital r with dot below
+    0x0053,  // capital s
+    0x1E62,  // -> capital s with dot below
+    0x0054,  // capital t
+    0x1E6C,  // -> capital t with dot below
+    0x0055,  // capital u
+    0x1EE4,  // -> capital u with dot below
+    0x0056,  // capital v
+    0x1E7E,  // -> capital v with dot below
+    0x0057,  // capital w
+    0x1E88,  // -> capital w with dot below
+    0x0059,  // capital y
+    0x1EF4,  // -> capital y with dot below
+    0x005A,  // capital z
+    0x1E92,  // -> capital z with dot below
+    0x005E,  // circumflex accent
+    0x00A6,  // -> broken bar
+    0x0061,  // letter a
+    0x1EA1,  // -> letter a with dot below
+    0x0062,  // letter b
+    0x1E05,  // -> letter b with dot below
+    0x0064,  // letter d
+    0x1E0D,  // -> letter d with dot below
+    0x0065,  // letter e
+    0x1EB9,  // -> letter e with dot below
+    0x0068,  // letter h
+    0x1E25,  // -> letter h with dot below
+    0x0069,  // letter i
+    0x1ECB,  // -> letter i with dot below
+    0x006B,  // letter k
+    0x1E33,  // -> letter k with dot below
+    0x006C,  // letter l
+    0x1E37,  // -> letter l with dot below
+    0x006D,  // letter m
+    0x1E43,  // -> letter m with dot below
+    0x006E,  // letter n
+    0x1E47,  // -> letter n with dot below
+    0x006F,  // letter o
+    0x1ECD,  // -> letter o with dot below
+    0x0070,  // letter p
+    0x00B6,  // -> pilcrow sign
+    0x0072,  // letter r
+    0x1E5B,  // -> letter r with dot below
+    0x0073,  // letter s
+    0x1E63,  // -> letter s with dot below
+    0x0074,  // letter t
+    0x1E6D,  // -> letter t with dot below
+    0x0075,  // letter u
+    0x1EE5,  // -> letter u with dot below
+    0x0076,  // letter v
+    0x1E7F,  // -> letter v with dot below
+    0x0077,  // letter w
+    0x1E89,  // -> letter w with dot below
+    0x0079,  // letter y
+    0x1EF5,  // -> letter y with dot below
+    0x007A,  // letter z
+    0x1E93,  // -> letter z with dot below
+    //   internal dead_key table
+    0x0001,          // number of entries
+    0x031B,  // combining horn
+    0x0294,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0288:
+    //   prefix:
+    //     Compose
+    //     <exclamation mark>
+    //     <plus sign>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EE2,  // -> capital o with horn and dot below
+    0x0055,  // capital u
+    0x1EF0,  // -> capital u with horn and dot below
+    0x006F,  // letter o
+    0x1EE3,  // -> letter o with horn and dot below
+    0x0075,  // letter u
+    0x1EF1,  // -> letter u with horn and dot below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0294:
+    //   prefix:
+    //     Compose
+    //     <exclamation mark>
+    //     Dead<combining horn>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EE2,  // -> capital o with horn and dot below
+    0x0055,  // capital u
+    0x1EF0,  // -> capital u with horn and dot below
+    0x006F,  // letter o
+    0x1EE3,  // -> letter o with horn and dot below
+    0x0075,  // letter u
+    0x1EF1,  // -> letter u with horn and dot below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x02A0:
+    //   prefix:
+    //     Compose
+    //     <quotation mark>
+    //   internal character table
+    0x0004,          // number of entries
+    0x0027,  // apostrophe
+    0x032E,
+    0x005F,  // low line
+    0x0338,
+    0x007E,  // tilde
+    0x0340,
+    0x00AF,  // macron
+    0x0348,
+    //   leaf character table
+    0x003E,          // number of entries
+    0x0022,  // quotation mark
+    0x00A8,  // -> diaeresis
+    0x0027,  // apostrophe
+    0x0344,  // -> combining greek dialytika tonos
+    0x002C,  // comma
+    0x201E,  // -> double low-9 quotation mark
+    0x002F,  // solidus
+    0x301E,  // -> double prime quotation mark
+    0x003C,  // less-than sign
+    0x201C,  // -> left double quotation mark
+    0x003E,  // greater-than sign
+    0x201D,  // -> right double quotation mark
+    0x0041,  // capital a
+    0x00C4,  // -> capital a with diaeresis
+    0x0045,  // capital e
+    0x00CB,  // -> capital e with diaeresis
+    0x0048,  // capital h
+    0x1E26,  // -> capital h with diaeresis
+    0x0049,  // capital i
+    0x00CF,  // -> capital i with diaeresis
+    0x004F,  // capital o
+    0x00D6,  // -> capital o with diaeresis
+    0x0055,  // capital u
+    0x00DC,  // -> capital u with diaeresis
+    0x0057,  // capital w
+    0x1E84,  // -> capital w with diaeresis
+    0x0058,  // capital x
+    0x1E8C,  // -> capital x with diaeresis
+    0x0059,  // capital y
+    0x0178,  // -> capital y with diaeresis
+    0x005C,  // reverse solidus
+    0x301D,  // -> reversed double prime quotation mark
+    0x0061,  // letter a
+    0x00E4,  // -> letter a with diaeresis
+    0x0065,  // letter e
+    0x00EB,  // -> letter e with diaeresis
+    0x0068,  // letter h
+    0x1E27,  // -> letter h with diaeresis
+    0x0069,  // letter i
+    0x00EF,  // -> letter i with diaeresis
+    0x006F,  // letter o
+    0x00F6,  // -> letter o with diaeresis
+    0x0074,  // letter t
+    0x1E97,  // -> letter t with diaeresis
+    0x0075,  // letter u
+    0x00FC,  // -> letter u with diaeresis
+    0x0077,  // letter w
+    0x1E85,  // -> letter w with diaeresis
+    0x0078,  // letter x
+    0x1E8D,  // -> letter x with diaeresis
+    0x0079,  // letter y
+    0x00FF,  // -> letter y with diaeresis
+    0x00B4,  // acute accent
+    0x0344,  // -> combining greek dialytika tonos
+    0x00D5,  // capital o with tilde
+    0x1E4E,  // -> capital o with tilde and diaeresis
+    0x00F5,  // letter o with tilde
+    0x1E4F,  // -> letter o with tilde and diaeresis
+    0x014C,  // capital o with macron
+    0x03D4,  // -> upsilon with diaeresis and hook symbol
+    0x016A,  // capital u with macron
+    0x1E7A,  // -> capital u with macron and diaeresis
+    0x016B,  // letter u with macron
+    0x1E7B,  // -> letter u with macron and diaeresis
+    0x0399,  // capital iota
+    0x03AA,  // -> capital iota with dialytika
+    0x03A5,  // capital upsilon
+    0x03AB,  // -> capital upsilon with dialytika
+    0x03B9,  // letter iota
+    0x03CA,  // -> letter iota with dialytika
+    0x03C5,  // letter upsilon
+    0x03CB,  // -> letter upsilon with dialytika
+    0x0406,  // cyrillic capital byelorussian-ukrainian i
+    0x0407,  // -> cyrillic capital yi
+    0x0410,  // cyrillic capital a
+    0x04D2,  // -> cyrillic capital a with diaeresis
+    0x0415,  // cyrillic capital ie
+    0x0401,  // -> cyrillic capital io
+    0x0416,  // cyrillic capital zhe
+    0x04DC,  // -> cyrillic capital zhe with diaeresis
+    0x0417,  // cyrillic capital ze
+    0x04DE,  // -> cyrillic capital ze with diaeresis
+    0x0418,  // cyrillic capital i
+    0x04E4,  // -> cyrillic capital i with diaeresis
+    0x041E,  // cyrillic capital o
+    0x04E6,  // -> cyrillic capital o with diaeresis
+    0x0423,  // cyrillic capital u
+    0x04F0,  // -> cyrillic capital u with diaeresis
+    0x0427,  // cyrillic capital che
+    0x04F4,  // -> cyrillic capital che with diaeresis
+    0x042B,  // cyrillic capital yeru
+    0x04F8,  // -> cyrillic capital yeru with diaeresis
+    0x042D,  // cyrillic capital e
+    0x04EC,  // -> cyrillic capital e with diaeresis
+    0x0430,  // cyrillic small a
+    0x04D3,  // -> cyrillic small a with diaeresis
+    0x0435,  // cyrillic small ie
+    0x0451,  // -> cyrillic small io
+    0x0436,  // cyrillic small zhe
+    0x04DD,  // -> cyrillic small zhe with diaeresis
+    0x0437,  // cyrillic small ze
+    0x04DF,  // -> cyrillic small ze with diaeresis
+    0x0438,  // cyrillic small i
+    0x04E5,  // -> cyrillic small i with diaeresis
+    0x043E,  // cyrillic small o
+    0x04E7,  // -> cyrillic small o with diaeresis
+    0x0443,  // cyrillic small u
+    0x04F1,  // -> cyrillic small u with diaeresis
+    0x0447,  // cyrillic small che
+    0x04F5,  // -> cyrillic small che with diaeresis
+    0x044B,  // cyrillic small yeru
+    0x04F9,  // -> cyrillic small yeru with diaeresis
+    0x044D,  // cyrillic small e
+    0x04ED,  // -> cyrillic small e with diaeresis
+    0x0456,  // cyrillic small byelorussian-ukrainian i
+    0x0457,  // -> cyrillic small yi
+    0x04E8,  // cyrillic capital barred o
+    0x04EA,  // -> cyrillic capital barred o with diaeresis
+    0x04E9,  // cyrillic small barred o
+    0x04EB,  // -> cyrillic small barred o with diaeresis
+    0x30EA,  // katakana ri
+    0x04DA,  // -> cyrillic capital schwa with diaeresis
+    0x30EB,  // katakana ru
+    0x04DB,  // -> cyrillic small schwa with diaeresis
+    //   internal dead_key table
+    0x0002,          // number of entries
+    0x0303,  // combining tilde
+    0x0350,
+    0x0304,  // combining macron
+    0x0358,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x0301,  // combining acute accent
+    0x0344,  // -> combining greek dialytika tonos
+
+    // offset 0x032E:
+    //   prefix:
+    //     Compose
+    //     <quotation mark>
+    //     <apostrophe>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x0020,  // space
+    0x0385,  // -> dialytika tonos
+    0x03B9,  // letter iota
+    0x0390,  // -> letter iota with dialytika and tonos
+    0x03C5,  // letter upsilon
+    0x03B0,  // -> letter upsilon with dialytika and tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0338:
+    //   prefix:
+    //     Compose
+    //     <quotation mark>
+    //     <low line>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0055,  // capital u
+    0x1E7A,  // -> capital u with macron and diaeresis
+    0x0075,  // letter u
+    0x1E7B,  // -> letter u with macron and diaeresis
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0340:
+    //   prefix:
+    //     Compose
+    //     <quotation mark>
+    //     <tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x1E4E,  // -> capital o with tilde and diaeresis
+    0x006F,  // letter o
+    0x1E4F,  // -> letter o with tilde and diaeresis
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0348:
+    //   prefix:
+    //     Compose
+    //     <quotation mark>
+    //     <macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0055,  // capital u
+    0x1E7A,  // -> capital u with macron and diaeresis
+    0x0075,  // letter u
+    0x1E7B,  // -> letter u with macron and diaeresis
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0350:
+    //   prefix:
+    //     Compose
+    //     <quotation mark>
+    //     Dead<combining tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x1E4E,  // -> capital o with tilde and diaeresis
+    0x006F,  // letter o
+    0x1E4F,  // -> letter o with tilde and diaeresis
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0358:
+    //   prefix:
+    //     Compose
+    //     <quotation mark>
+    //     Dead<combining macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0055,  // capital u
+    0x1E7A,  // -> capital u with macron and diaeresis
+    0x0075,  // letter u
+    0x1E7B,  // -> letter u with macron and diaeresis
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0360:
+    //   prefix:
+    //     Compose
+    //     <number sign>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x0023,  // number sign
+    0x266F,  // -> music sharp sign
+    0x0062,  // letter b
+    0x266D,  // -> music flat sign
+    0x0066,  // letter f
+    0x266E,  // -> music natural sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x036A:
+    //   prefix:
+    //     Compose
+    //     <percent sign>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x006F,  // letter o
+    0x2030,  // -> per mille sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0370:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //   internal character table
+    0x000B,          // number of entries
+    0x0022,  // quotation mark
+    0x0482,
+    0x0028,  // left parenthesis
+    0x0494,
+    0x0029,  // right parenthesis
+    0x04B4,
+    0x002B,  // plus sign
+    0x04D2,
+    0x002F,  // solidus
+    0x04DE,
+    0x005E,  // circumflex accent
+    0x04E6,
+    0x005F,  // low line
+    0x04F6,
+    0x0062,  // letter b
+    0x0502,
+    0x007E,  // tilde
+    0x050A,
+    0x00AF,  // macron
+    0x0516,
+    0x00B8,  // cedilla
+    0x0522,
+    //   leaf character table
+    0x0072,          // number of entries
+    0x0020,  // space
+    0x0027,  // -> apostrophe
+    0x0027,  // apostrophe
+    0x00B4,  // -> acute accent
+    0x002C,  // comma
+    0x201A,  // -> single low-9 quotation mark
+    0x003C,  // less-than sign
+    0x2018,  // -> left single quotation mark
+    0x003E,  // greater-than sign
+    0x2019,  // -> right single quotation mark
+    0x0041,  // capital a
+    0x00C1,  // -> capital a with acute
+    0x0043,  // capital c
+    0x00C7,  // -> capital c with cedilla
+    0x0045,  // capital e
+    0x00C9,  // -> capital e with acute
+    0x0047,  // capital g
+    0x01F4,  // -> capital g with acute
+    0x0049,  // capital i
+    0x00CD,  // -> capital i with acute
+    0x004B,  // capital k
+    0x1E30,  // -> capital k with acute
+    0x004C,  // capital l
+    0x0139,  // -> capital l with acute
+    0x004D,  // capital m
+    0x1E3E,  // -> capital m with acute
+    0x004E,  // capital n
+    0x0143,  // -> capital n with acute
+    0x004F,  // capital o
+    0x00D3,  // -> capital o with acute
+    0x0050,  // capital p
+    0x1E54,  // -> capital p with acute
+    0x0052,  // capital r
+    0x0154,  // -> capital r with acute
+    0x0053,  // capital s
+    0x015A,  // -> capital s with acute
+    0x0055,  // capital u
+    0x00DA,  // -> capital u with acute
+    0x0057,  // capital w
+    0x1E82,  // -> capital w with acute
+    0x0059,  // capital y
+    0x00DD,  // -> capital y with acute
+    0x005A,  // capital z
+    0x0179,  // -> capital z with acute
+    0x0061,  // letter a
+    0x00E1,  // -> letter a with acute
+    0x0063,  // letter c
+    0x00E7,  // -> letter c with cedilla
+    0x0065,  // letter e
+    0x00E9,  // -> letter e with acute
+    0x0067,  // letter g
+    0x01F5,  // -> letter g with acute
+    0x0069,  // letter i
+    0x00ED,  // -> letter i with acute
+    0x006B,  // letter k
+    0x1E31,  // -> letter k with acute
+    0x006C,  // letter l
+    0x013A,  // -> letter l with acute
+    0x006D,  // letter m
+    0x1E3F,  // -> letter m with acute
+    0x006E,  // letter n
+    0x0144,  // -> letter n with acute
+    0x006F,  // letter o
+    0x00F3,  // -> letter o with acute
+    0x0070,  // letter p
+    0x1E55,  // -> letter p with acute
+    0x0072,  // letter r
+    0x0155,  // -> letter r with acute
+    0x0073,  // letter s
+    0x015B,  // -> letter s with acute
+    0x0075,  // letter u
+    0x00FA,  // -> letter u with acute
+    0x0077,  // letter w
+    0x1E83,  // -> letter w with acute
+    0x0079,  // letter y
+    0x00FD,  // -> letter y with acute
+    0x007A,  // letter z
+    0x017A,  // -> letter z with acute
+    0x00C2,  // capital a with circumflex
+    0x1EA4,  // -> capital a with circumflex and acute
+    0x00C5,  // capital a with ring above
+    0x01FA,  // -> capital a with ring above and acute
+    0x00C6,  // capital ae
+    0x01FC,  // -> capital ae with acute
+    0x00C7,  // capital c with cedilla
+    0x1E08,  // -> capital c with cedilla and acute
+    0x00CA,  // capital e with circumflex
+    0x1EBE,  // -> capital e with circumflex and acute
+    0x00CF,  // capital i with diaeresis
+    0x1E2E,  // -> capital i with diaeresis and acute
+    0x00D4,  // capital o with circumflex
+    0x1ED0,  // -> capital o with circumflex and acute
+    0x00D5,  // capital o with tilde
+    0x1E4C,  // -> capital o with tilde and acute
+    0x00D8,  // capital o with stroke
+    0x01FE,  // -> capital o with stroke and acute
+    0x00DC,  // capital u with diaeresis
+    0x01D7,  // -> capital u with diaeresis and acute
+    0x00E2,  // letter a with circumflex
+    0x1EA5,  // -> letter a with circumflex and acute
+    0x00E5,  // letter a with ring above
+    0x01FB,  // -> letter a with ring above and acute
+    0x00E6,  // letter ae
+    0x01FD,  // -> letter ae with acute
+    0x00E7,  // letter c with cedilla
+    0x1E09,  // -> letter c with cedilla and acute
+    0x00EA,  // letter e with circumflex
+    0x1EBF,  // -> letter e with circumflex and acute
+    0x00EF,  // letter i with diaeresis
+    0x1E2F,  // -> letter i with diaeresis and acute
+    0x00F4,  // letter o with circumflex
+    0x1ED1,  // -> letter o with circumflex and acute
+    0x00F5,  // letter o with tilde
+    0x1E4D,  // -> letter o with tilde and acute
+    0x00F8,  // letter o with stroke
+    0x01FF,  // -> letter o with stroke and acute
+    0x00FC,  // letter u with diaeresis
+    0x01D8,  // -> letter u with diaeresis and acute
+    0x0102,  // capital a with breve
+    0x1EAE,  // -> capital a with breve and acute
+    0x0103,  // letter a with breve
+    0x1EAF,  // -> letter a with breve and acute
+    0x0112,  // capital e with macron
+    0x1E16,  // -> capital e with macron and acute
+    0x0113,  // letter e with macron
+    0x1E17,  // -> letter e with macron and acute
+    0x014C,  // capital o with macron
+    0x1E52,  // -> capital o with macron and acute
+    0x014D,  // letter o with macron
+    0x1E53,  // -> letter o with macron and acute
+    0x0168,  // capital u with tilde
+    0x1E78,  // -> capital u with tilde and acute
+    0x0169,  // letter u with tilde
+    0x1E79,  // -> letter u with tilde and acute
+    0x0391,  // capital alpha
+    0x0386,  // -> capital alpha with tonos
+    0x0395,  // capital epsilon
+    0x0388,  // -> capital epsilon with tonos
+    0x0397,  // capital eta
+    0x0389,  // -> capital eta with tonos
+    0x0399,  // capital iota
+    0x038A,  // -> capital iota with tonos
+    0x039F,  // capital omicron
+    0x038C,  // -> capital omicron with tonos
+    0x03A5,  // capital upsilon
+    0x038E,  // -> capital upsilon with tonos
+    0x03A9,  // capital omega
+    0x038F,  // -> capital omega with tonos
+    0x03B1,  // letter alpha
+    0x03AC,  // -> letter alpha with tonos
+    0x03B5,  // letter epsilon
+    0x03AD,  // -> letter epsilon with tonos
+    0x03B7,  // letter eta
+    0x03AE,  // -> letter eta with tonos
+    0x03B9,  // letter iota
+    0x03AF,  // -> letter iota with tonos
+    0x03BF,  // letter omicron
+    0x03CC,  // -> letter omicron with tonos
+    0x03C5,  // letter upsilon
+    0x03CD,  // -> letter upsilon with tonos
+    0x03C9,  // letter omega
+    0x03CE,  // -> letter omega with tonos
+    0x03CA,  // letter iota with dialytika
+    0x0390,  // -> letter iota with dialytika and tonos
+    0x03CB,  // letter upsilon with dialytika
+    0x03B0,  // -> letter upsilon with dialytika and tonos
+    0x0413,  // cyrillic capital ghe
+    0x0403,  // -> cyrillic capital gje
+    0x041A,  // cyrillic capital ka
+    0x040C,  // -> cyrillic capital kje
+    0x0433,  // cyrillic small ghe
+    0x0453,  // -> cyrillic small gje
+    0x043A,  // cyrillic small ka
+    0x045C,  // -> cyrillic small kje
+    0x1F00,  // letter alpha with psili
+    0x1F04,  // -> letter alpha with psili and oxia
+    0x1F01,  // letter alpha with dasia
+    0x1F05,  // -> letter alpha with dasia and oxia
+    0x1F08,  // capital alpha with psili
+    0x1F0C,  // -> capital alpha with psili and oxia
+    0x1F09,  // capital alpha with dasia
+    0x1F0D,  // -> capital alpha with dasia and oxia
+    0x1F10,  // letter epsilon with psili
+    0x1F14,  // -> letter epsilon with psili and oxia
+    0x1F11,  // letter epsilon with dasia
+    0x1F15,  // -> letter epsilon with dasia and oxia
+    0x1F18,  // capital epsilon with psili
+    0x1F1C,  // -> capital epsilon with psili and oxia
+    0x1F19,  // capital epsilon with dasia
+    0x1F1D,  // -> capital epsilon with dasia and oxia
+    0x1F20,  // letter eta with psili
+    0x1F24,  // -> letter eta with psili and oxia
+    0x1F21,  // letter eta with dasia
+    0x1F25,  // -> letter eta with dasia and oxia
+    0x1F28,  // capital eta with psili
+    0x1F2C,  // -> capital eta with psili and oxia
+    0x1F29,  // capital eta with dasia
+    0x1F2D,  // -> capital eta with dasia and oxia
+    0x1F30,  // letter iota with psili
+    0x1F34,  // -> letter iota with psili and oxia
+    0x1F31,  // letter iota with dasia
+    0x1F35,  // -> letter iota with dasia and oxia
+    0x1F38,  // capital iota with psili
+    0x1F3C,  // -> capital iota with psili and oxia
+    0x1F39,  // capital iota with dasia
+    0x1F3D,  // -> capital iota with dasia and oxia
+    0x1F40,  // letter omicron with psili
+    0x1F44,  // -> letter omicron with psili and oxia
+    0x1F41,  // letter omicron with dasia
+    0x1F45,  // -> letter omicron with dasia and oxia
+    0x1F48,  // capital omicron with psili
+    0x1F4C,  // -> capital omicron with psili and oxia
+    0x1F49,  // capital omicron with dasia
+    0x1F4D,  // -> capital omicron with dasia and oxia
+    0x1F50,  // letter upsilon with psili
+    0x1F54,  // -> letter upsilon with psili and oxia
+    0x1F51,  // letter upsilon with dasia
+    0x1F55,  // -> letter upsilon with dasia and oxia
+    0x1F59,  // capital upsilon with dasia
+    0x1F5D,  // -> capital upsilon with dasia and oxia
+    0x1F60,  // letter omega with psili
+    0x1F64,  // -> letter omega with psili and oxia
+    0x1F61,  // letter omega with dasia
+    0x1F65,  // -> letter omega with dasia and oxia
+    0x1F68,  // capital omega with psili
+    0x1F6C,  // -> capital omega with psili and oxia
+    0x1F69,  // capital omega with dasia
+    0x1F6D,  // -> capital omega with dasia and oxia
+    //   internal dead_key table
+    0x000A,          // number of entries
+    0x0302,  // combining circumflex accent
+    0x052A,
+    0x0303,  // combining tilde
+    0x053A,
+    0x0304,  // combining macron
+    0x0546,
+    0x0306,  // combining breve
+    0x0552,
+    0x0308,  // combining diaeresis
+    0x055A,
+    0x030A,  // combining ring above
+    0x056A,
+    0x0313,  // combining comma above
+    0x0572,
+    0x0314,  // combining reversed comma above
+    0x0590,
+    0x031B,  // combining horn
+    0x05B0,
+    0x0327,  // combining cedilla
+    0x05BC,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0482:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     <quotation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0007,          // number of entries
+    0x0020,  // space
+    0x0385,  // -> dialytika tonos
+    0x0049,  // capital i
+    0x1E2E,  // -> capital i with diaeresis and acute
+    0x0055,  // capital u
+    0x01D7,  // -> capital u with diaeresis and acute
+    0x0069,  // letter i
+    0x1E2F,  // -> letter i with diaeresis and acute
+    0x0075,  // letter u
+    0x01D8,  // -> letter u with diaeresis and acute
+    0x03B9,  // letter iota
+    0x0390,  // -> letter iota with dialytika and tonos
+    0x03C5,  // letter upsilon
+    0x03B0,  // -> letter upsilon with dialytika and tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0494:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000E,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0D,  // -> capital alpha with dasia and oxia
+    0x0395,  // capital epsilon
+    0x1F1D,  // -> capital epsilon with dasia and oxia
+    0x0397,  // capital eta
+    0x1F2D,  // -> capital eta with dasia and oxia
+    0x0399,  // capital iota
+    0x1F3D,  // -> capital iota with dasia and oxia
+    0x039F,  // capital omicron
+    0x1F4D,  // -> capital omicron with dasia and oxia
+    0x03A5,  // capital upsilon
+    0x1F5D,  // -> capital upsilon with dasia and oxia
+    0x03A9,  // capital omega
+    0x1F6D,  // -> capital omega with dasia and oxia
+    0x03B1,  // letter alpha
+    0x1F05,  // -> letter alpha with dasia and oxia
+    0x03B5,  // letter epsilon
+    0x1F15,  // -> letter epsilon with dasia and oxia
+    0x03B7,  // letter eta
+    0x1F25,  // -> letter eta with dasia and oxia
+    0x03B9,  // letter iota
+    0x1F35,  // -> letter iota with dasia and oxia
+    0x03BF,  // letter omicron
+    0x1F45,  // -> letter omicron with dasia and oxia
+    0x03C5,  // letter upsilon
+    0x1F55,  // -> letter upsilon with dasia and oxia
+    0x03C9,  // letter omega
+    0x1F65,  // -> letter omega with dasia and oxia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x04B4:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000D,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0C,  // -> capital alpha with psili and oxia
+    0x0395,  // capital epsilon
+    0x1F1C,  // -> capital epsilon with psili and oxia
+    0x0397,  // capital eta
+    0x1F2C,  // -> capital eta with psili and oxia
+    0x0399,  // capital iota
+    0x1F3C,  // -> capital iota with psili and oxia
+    0x039F,  // capital omicron
+    0x1F4C,  // -> capital omicron with psili and oxia
+    0x03A9,  // capital omega
+    0x1F6C,  // -> capital omega with psili and oxia
+    0x03B1,  // letter alpha
+    0x1F04,  // -> letter alpha with psili and oxia
+    0x03B5,  // letter epsilon
+    0x1F14,  // -> letter epsilon with psili and oxia
+    0x03B7,  // letter eta
+    0x1F24,  // -> letter eta with psili and oxia
+    0x03B9,  // letter iota
+    0x1F34,  // -> letter iota with psili and oxia
+    0x03BF,  // letter omicron
+    0x1F44,  // -> letter omicron with psili and oxia
+    0x03C5,  // letter upsilon
+    0x1F54,  // -> letter upsilon with psili and oxia
+    0x03C9,  // letter omega
+    0x1F64,  // -> letter omega with psili and oxia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x04D2:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     <plus sign>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EDA,  // -> capital o with horn and acute
+    0x0055,  // capital u
+    0x1EE8,  // -> capital u with horn and acute
+    0x006F,  // letter o
+    0x1EDB,  // -> letter o with horn and acute
+    0x0075,  // letter u
+    0x1EE9,  // -> letter u with horn and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x04DE:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     <solidus>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x01FE,  // -> capital o with stroke and acute
+    0x006F,  // letter o
+    0x01FF,  // -> letter o with stroke and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x04E6:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     <circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EA4,  // -> capital a with circumflex and acute
+    0x0045,  // capital e
+    0x1EBE,  // -> capital e with circumflex and acute
+    0x004F,  // capital o
+    0x1ED0,  // -> capital o with circumflex and acute
+    0x0061,  // letter a
+    0x1EA5,  // -> letter a with circumflex and acute
+    0x0065,  // letter e
+    0x1EBF,  // -> letter e with circumflex and acute
+    0x006F,  // letter o
+    0x1ED1,  // -> letter o with circumflex and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x04F6:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     <low line>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0045,  // capital e
+    0x1E16,  // -> capital e with macron and acute
+    0x004F,  // capital o
+    0x1E52,  // -> capital o with macron and acute
+    0x0065,  // letter e
+    0x1E17,  // -> letter e with macron and acute
+    0x006F,  // letter o
+    0x1E53,  // -> letter o with macron and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0502:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     <latin small letter b>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EAE,  // -> capital a with breve and acute
+    0x0061,  // letter a
+    0x1EAF,  // -> letter a with breve and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x050A:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     <tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1E4C,  // -> capital o with tilde and acute
+    0x0055,  // capital u
+    0x1E78,  // -> capital u with tilde and acute
+    0x006F,  // letter o
+    0x1E4D,  // -> letter o with tilde and acute
+    0x0075,  // letter u
+    0x1E79,  // -> letter u with tilde and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0516:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     <macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0045,  // capital e
+    0x1E16,  // -> capital e with macron and acute
+    0x004F,  // capital o
+    0x1E52,  // -> capital o with macron and acute
+    0x0065,  // letter e
+    0x1E17,  // -> letter e with macron and acute
+    0x006F,  // letter o
+    0x1E53,  // -> letter o with macron and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0522:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     <cedilla>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0043,  // capital c
+    0x1E08,  // -> capital c with cedilla and acute
+    0x0063,  // letter c
+    0x1E09,  // -> letter c with cedilla and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x052A:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     Dead<combining circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EA4,  // -> capital a with circumflex and acute
+    0x0045,  // capital e
+    0x1EBE,  // -> capital e with circumflex and acute
+    0x004F,  // capital o
+    0x1ED0,  // -> capital o with circumflex and acute
+    0x0061,  // letter a
+    0x1EA5,  // -> letter a with circumflex and acute
+    0x0065,  // letter e
+    0x1EBF,  // -> letter e with circumflex and acute
+    0x006F,  // letter o
+    0x1ED1,  // -> letter o with circumflex and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x053A:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     Dead<combining tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1E4C,  // -> capital o with tilde and acute
+    0x0055,  // capital u
+    0x1E78,  // -> capital u with tilde and acute
+    0x006F,  // letter o
+    0x1E4D,  // -> letter o with tilde and acute
+    0x0075,  // letter u
+    0x1E79,  // -> letter u with tilde and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0546:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     Dead<combining macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0045,  // capital e
+    0x1E16,  // -> capital e with macron and acute
+    0x004F,  // capital o
+    0x1E52,  // -> capital o with macron and acute
+    0x0065,  // letter e
+    0x1E17,  // -> letter e with macron and acute
+    0x006F,  // letter o
+    0x1E53,  // -> letter o with macron and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0552:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     Dead<combining breve>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EAE,  // -> capital a with breve and acute
+    0x0061,  // letter a
+    0x1EAF,  // -> letter a with breve and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x055A:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     Dead<combining diaeresis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0049,  // capital i
+    0x1E2E,  // -> capital i with diaeresis and acute
+    0x0055,  // capital u
+    0x01D7,  // -> capital u with diaeresis and acute
+    0x0069,  // letter i
+    0x1E2F,  // -> letter i with diaeresis and acute
+    0x0075,  // letter u
+    0x01D8,  // -> letter u with diaeresis and acute
+    0x03B9,  // letter iota
+    0x0390,  // -> letter iota with dialytika and tonos
+    0x03C5,  // letter upsilon
+    0x03B0,  // -> letter upsilon with dialytika and tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x056A:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     Dead<combining ring above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x01FA,  // -> capital a with ring above and acute
+    0x0061,  // letter a
+    0x01FB,  // -> letter a with ring above and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0572:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000D,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0C,  // -> capital alpha with psili and oxia
+    0x0395,  // capital epsilon
+    0x1F1C,  // -> capital epsilon with psili and oxia
+    0x0397,  // capital eta
+    0x1F2C,  // -> capital eta with psili and oxia
+    0x0399,  // capital iota
+    0x1F3C,  // -> capital iota with psili and oxia
+    0x039F,  // capital omicron
+    0x1F4C,  // -> capital omicron with psili and oxia
+    0x03A9,  // capital omega
+    0x1F6C,  // -> capital omega with psili and oxia
+    0x03B1,  // letter alpha
+    0x1F04,  // -> letter alpha with psili and oxia
+    0x03B5,  // letter epsilon
+    0x1F14,  // -> letter epsilon with psili and oxia
+    0x03B7,  // letter eta
+    0x1F24,  // -> letter eta with psili and oxia
+    0x03B9,  // letter iota
+    0x1F34,  // -> letter iota with psili and oxia
+    0x03BF,  // letter omicron
+    0x1F44,  // -> letter omicron with psili and oxia
+    0x03C5,  // letter upsilon
+    0x1F54,  // -> letter upsilon with psili and oxia
+    0x03C9,  // letter omega
+    0x1F64,  // -> letter omega with psili and oxia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0590:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000E,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0D,  // -> capital alpha with dasia and oxia
+    0x0395,  // capital epsilon
+    0x1F1D,  // -> capital epsilon with dasia and oxia
+    0x0397,  // capital eta
+    0x1F2D,  // -> capital eta with dasia and oxia
+    0x0399,  // capital iota
+    0x1F3D,  // -> capital iota with dasia and oxia
+    0x039F,  // capital omicron
+    0x1F4D,  // -> capital omicron with dasia and oxia
+    0x03A5,  // capital upsilon
+    0x1F5D,  // -> capital upsilon with dasia and oxia
+    0x03A9,  // capital omega
+    0x1F6D,  // -> capital omega with dasia and oxia
+    0x03B1,  // letter alpha
+    0x1F05,  // -> letter alpha with dasia and oxia
+    0x03B5,  // letter epsilon
+    0x1F15,  // -> letter epsilon with dasia and oxia
+    0x03B7,  // letter eta
+    0x1F25,  // -> letter eta with dasia and oxia
+    0x03B9,  // letter iota
+    0x1F35,  // -> letter iota with dasia and oxia
+    0x03BF,  // letter omicron
+    0x1F45,  // -> letter omicron with dasia and oxia
+    0x03C5,  // letter upsilon
+    0x1F55,  // -> letter upsilon with dasia and oxia
+    0x03C9,  // letter omega
+    0x1F65,  // -> letter omega with dasia and oxia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x05B0:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     Dead<combining horn>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EDA,  // -> capital o with horn and acute
+    0x0055,  // capital u
+    0x1EE8,  // -> capital u with horn and acute
+    0x006F,  // letter o
+    0x1EDB,  // -> letter o with horn and acute
+    0x0075,  // letter u
+    0x1EE9,  // -> letter u with horn and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x05BC:
+    //   prefix:
+    //     Compose
+    //     <apostrophe>
+    //     Dead<combining cedilla>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0043,  // capital c
+    0x1E08,  // -> capital c with cedilla and acute
+    0x0063,  // letter c
+    0x1E09,  // -> letter c with cedilla and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x05C4:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //   internal character table
+    0x00AD,          // number of entries
+    0x0020,  // space
+    0x0754,
+    0x0030,  // digit zero
+    0x07B2,
+    0x0031,  // digit one
+    0x07B8,
+    0x0032,  // digit two
+    0x0816,
+    0x0033,  // digit three
+    0x0874,
+    0x0034,  // digit four
+    0x08D2,
+    0x0035,  // digit five
+    0x0930,
+    0x0036,  // digit six
+    0x093E,
+    0x0037,  // digit seven
+    0x0944,
+    0x0038,  // digit eight
+    0x094A,
+    0x0039,  // digit nine
+    0x0950,
+    0x0041,  // capital a
+    0x0956,
+    0x0042,  // capital b
+    0x095C,
+    0x0043,  // capital c
+    0x0962,
+    0x0044,  // capital d
+    0x0968,
+    0x0045,  // capital e
+    0x096E,
+    0x0046,  // capital f
+    0x0974,
+    0x0047,  // capital g
+    0x097A,
+    0x0048,  // capital h
+    0x0980,
+    0x0049,  // capital i
+    0x0986,
+    0x004A,  // capital j
+    0x098C,
+    0x004B,  // capital k
+    0x0992,
+    0x004C,  // capital l
+    0x0998,
+    0x004D,  // capital m
+    0x099E,
+    0x004E,  // capital n
+    0x09A4,
+    0x004F,  // capital o
+    0x09AA,
+    0x0050,  // capital p
+    0x09B0,
+    0x0051,  // capital q
+    0x09B6,
+    0x0052,  // capital r
+    0x09BC,
+    0x0053,  // capital s
+    0x09C2,
+    0x0054,  // capital t
+    0x09C8,
+    0x0055,  // capital u
+    0x09CE,
+    0x0056,  // capital v
+    0x09D4,
+    0x0057,  // capital w
+    0x09DA,
+    0x0058,  // capital x
+    0x09E0,
+    0x0059,  // capital y
+    0x09E6,
+    0x005A,  // capital z
+    0x09EC,
+    0x0061,  // letter a
+    0x09F2,
+    0x0062,  // letter b
+    0x09F8,
+    0x0063,  // letter c
+    0x09FE,
+    0x0064,  // letter d
+    0x0A04,
+    0x0065,  // letter e
+    0x0A0A,
+    0x0066,  // letter f
+    0x0A10,
+    0x0067,  // letter g
+    0x0A16,
+    0x0068,  // letter h
+    0x0A1C,
+    0x0069,  // letter i
+    0x0A22,
+    0x006A,  // letter j
+    0x0A28,
+    0x006B,  // letter k
+    0x0A2E,
+    0x006C,  // letter l
+    0x0A34,
+    0x006D,  // letter m
+    0x0A3A,
+    0x006E,  // letter n
+    0x0A40,
+    0x006F,  // letter o
+    0x0A46,
+    0x0070,  // letter p
+    0x0A4C,
+    0x0071,  // letter q
+    0x0A52,
+    0x0072,  // letter r
+    0x0A58,
+    0x0073,  // letter s
+    0x0A5E,
+    0x0074,  // letter t
+    0x0A64,
+    0x0075,  // letter u
+    0x0A6A,
+    0x0076,  // letter v
+    0x0A70,
+    0x0077,  // letter w
+    0x0A76,
+    0x0078,  // letter x
+    0x0A7C,
+    0x0079,  // letter y
+    0x0A82,
+    0x007A,  // letter z
+    0x0A88,
+    0x1100,  // hangul choseong kiyeok
+    0x0A8E,
+    0x1102,  // hangul choseong nieun
+    0x0A9C,
+    0x1103,  // hangul choseong tikeut
+    0x0AAA,
+    0x1105,  // hangul choseong rieul
+    0x0AB8,
+    0x1106,  // hangul choseong mieum
+    0x0AC6,
+    0x1107,  // hangul choseong pieup
+    0x0AD4,
+    0x1109,  // hangul choseong sios
+    0x0AE2,
+    0x110B,  // hangul choseong ieung
+    0x0AF0,
+    0x110C,  // hangul choseong cieuc
+    0x0AFE,
+    0x110E,  // hangul choseong chieuch
+    0x0B0C,
+    0x110F,  // hangul choseong khieukh
+    0x0B1A,
+    0x1110,  // hangul choseong thieuth
+    0x0B28,
+    0x1111,  // hangul choseong phieuph
+    0x0B36,
+    0x1112,  // hangul choseong hieuh
+    0x0B44,
+    0x30A2,  // katakana a
+    0x0B52,
+    0x30A4,  // katakana i
+    0x0B58,
+    0x30A6,  // katakana u
+    0x0B5E,
+    0x30A8,  // katakana e
+    0x0B64,
+    0x30AA,  // katakana o
+    0x0B6A,
+    0x30AB,  // katakana ka
+    0x0B70,
+    0x30AD,  // katakana ki
+    0x0B76,
+    0x30AF,  // katakana ku
+    0x0B7C,
+    0x30B1,  // katakana ke
+    0x0B82,
+    0x30B3,  // katakana ko
+    0x0B88,
+    0x30B5,  // katakana sa
+    0x0B8E,
+    0x30B7,  // katakana si
+    0x0B94,
+    0x30B9,  // katakana su
+    0x0B9A,
+    0x30BB,  // katakana se
+    0x0BA0,
+    0x30BD,  // katakana so
+    0x0BA6,
+    0x30BF,  // katakana ta
+    0x0BAC,
+    0x30C1,  // katakana ti
+    0x0BB2,
+    0x30C4,  // katakana tu
+    0x0BB8,
+    0x30C6,  // katakana te
+    0x0BBE,
+    0x30C8,  // katakana to
+    0x0BC4,
+    0x30CA,  // katakana na
+    0x0BCA,
+    0x30CB,  // katakana ni
+    0x0BD0,
+    0x30CC,  // katakana nu
+    0x0BD6,
+    0x30CD,  // katakana ne
+    0x0BDC,
+    0x30CE,  // katakana no
+    0x0BE2,
+    0x30CF,  // katakana ha
+    0x0BE8,
+    0x30D2,  // katakana hi
+    0x0BEE,
+    0x30D5,  // katakana hu
+    0x0BF4,
+    0x30D8,  // katakana he
+    0x0BFA,
+    0x30DB,  // katakana ho
+    0x0C00,
+    0x30DE,  // katakana ma
+    0x0C06,
+    0x30DF,  // katakana mi
+    0x0C0C,
+    0x30E0,  // katakana mu
+    0x0C12,
+    0x30E1,  // katakana me
+    0x0C18,
+    0x30E2,  // katakana mo
+    0x0C1E,
+    0x30E4,  // katakana ya
+    0x0C24,
+    0x30E6,  // katakana yu
+    0x0C2A,
+    0x30E8,  // katakana yo
+    0x0C30,
+    0x30E9,  // katakana ra
+    0x0C36,
+    0x30EA,  // katakana ri
+    0x0C3C,
+    0x30EB,  // katakana ru
+    0x0C42,
+    0x30EC,  // katakana re
+    0x0C48,
+    0x30ED,  // katakana ro
+    0x0C4E,
+    0x30EF,  // katakana wa
+    0x0C54,
+    0x30F0,  // katakana wi
+    0x0C5A,
+    0x30F1,  // katakana we
+    0x0C60,
+    0x30F2,  // katakana wo
+    0x0C66,
+    0x4E00,  // cjk unified ideograph-4e00
+    0x0C6C,
+    0x4E03,  // cjk unified ideograph-4e03
+    0x0C72,
+    0x4E09,  // cjk unified ideograph-4e09
+    0x0C78,
+    0x4E0A,  // cjk unified ideograph-4e0a
+    0x0C7E,
+    0x4E0B,  // cjk unified ideograph-4e0b
+    0x0C84,
+    0x4E2D,  // cjk unified ideograph-4e2d
+    0x0C8A,
+    0x4E5D,  // cjk unified ideograph-4e5d
+    0x0C90,
+    0x4E8C,  // cjk unified ideograph-4e8c
+    0x0C96,
+    0x4E94,  // cjk unified ideograph-4e94
+    0x0C9C,
+    0x4F01,  // cjk unified ideograph-4f01
+    0x0CA2,
+    0x4F11,  // cjk unified ideograph-4f11
+    0x0CA8,
+    0x512A,  // cjk unified ideograph-512a
+    0x0CAE,
+    0x516B,  // cjk unified ideograph-516b
+    0x0CB4,
+    0x516D,  // cjk unified ideograph-516d
+    0x0CBA,
+    0x5199,  // cjk unified ideograph-5199
+    0x0CC0,
+    0x52B4,  // cjk unified ideograph-52b4
+    0x0CC6,
+    0x533B,  // cjk unified ideograph-533b
+    0x0CCC,
+    0x5341,  // cjk unified ideograph-5341
+    0x0CD2,
+    0x5354,  // cjk unified ideograph-5354
+    0x0CD8,
+    0x5370,  // cjk unified ideograph-5370
+    0x0CDE,
+    0x53F3,  // cjk unified ideograph-53f3
+    0x0CE4,
+    0x540D,  // cjk unified ideograph-540d
+    0x0CEA,
+    0x56DB,  // cjk unified ideograph-56db
+    0x0CF0,
+    0x571F,  // cjk unified ideograph-571f
+    0x0CF6,
+    0x591C,  // cjk unified ideograph-591c
+    0x0CFC,
+    0x5973,  // cjk unified ideograph-5973
+    0x0D02,
+    0x5B66,  // cjk unified ideograph-5b66
+    0x0D08,
+    0x5B97,  // cjk unified ideograph-5b97
+    0x0D0E,
+    0x5DE6,  // cjk unified ideograph-5de6
+    0x0D14,
+    0x65E5,  // cjk unified ideograph-65e5
+    0x0D1A,
+    0x6708,  // cjk unified ideograph-6708
+    0x0D20,
+    0x6709,  // cjk unified ideograph-6709
+    0x0D26,
+    0x6728,  // cjk unified ideograph-6728
+    0x0D2C,
+    0x682A,  // cjk unified ideograph-682a
+    0x0D32,
+    0x6B63,  // cjk unified ideograph-6b63
+    0x0D38,
+    0x6C34,  // cjk unified ideograph-6c34
+    0x0D3E,
+    0x6CE8,  // cjk unified ideograph-6ce8
+    0x0D44,
+    0x706B,  // cjk unified ideograph-706b
+    0x0D4A,
+    0x7279,  // cjk unified ideograph-7279
+    0x0D50,
+    0x7537,  // cjk unified ideograph-7537
+    0x0D56,
+    0x76E3,  // cjk unified ideograph-76e3
+    0x0D5C,
+    0x793E,  // cjk unified ideograph-793e
+    0x0D62,
+    0x795D,  // cjk unified ideograph-795d
+    0x0D68,
+    0x79D8,  // cjk unified ideograph-79d8
+    0x0D6E,
+    0x8CA1,  // cjk unified ideograph-8ca1
+    0x0D74,
+    0x8CC7,  // cjk unified ideograph-8cc7
+    0x0D7A,
+    0x9069,  // cjk unified ideograph-9069
+    0x0D80,
+    0x91D1,  // cjk unified ideograph-91d1
+    0x0D86,
+    0x9805,  // cjk unified ideograph-9805
+    0x0D8C,
+    //   leaf character table
+    0x0019,          // number of entries
+    0x0020,  // space
+    0x02D8,  // -> breve
+    0x0028,  // left parenthesis
+    0x005B,  // -> left square bracket
+    0x002D,  // hyphen-minus
+    0x007B,  // -> left curly bracket
+    0x0041,  // capital a
+    0x0102,  // -> capital a with breve
+    0x0047,  // capital g
+    0x011E,  // -> capital g with breve
+    0x0061,  // letter a
+    0x0103,  // -> letter a with breve
+    0x0063,  // letter c
+    0x00A9,  // -> copyright sign
+    0x0067,  // letter g
+    0x011F,  // -> letter g with breve
+    0x0072,  // letter r
+    0x00AE,  // -> registered sign
+    0x0391,  // capital alpha
+    0x1F09,  // -> capital alpha with dasia
+    0x0395,  // capital epsilon
+    0x1F19,  // -> capital epsilon with dasia
+    0x0397,  // capital eta
+    0x1F29,  // -> capital eta with dasia
+    0x0399,  // capital iota
+    0x1F39,  // -> capital iota with dasia
+    0x039F,  // capital omicron
+    0x1F49,  // -> capital omicron with dasia
+    0x03A1,  // capital rho
+    0x1FEC,  // -> capital rho with dasia
+    0x03A5,  // capital upsilon
+    0x1F59,  // -> capital upsilon with dasia
+    0x03A9,  // capital omega
+    0x1F69,  // -> capital omega with dasia
+    0x03B1,  // letter alpha
+    0x1F01,  // -> letter alpha with dasia
+    0x03B5,  // letter epsilon
+    0x1F11,  // -> letter epsilon with dasia
+    0x03B7,  // letter eta
+    0x1F21,  // -> letter eta with dasia
+    0x03B9,  // letter iota
+    0x1F31,  // -> letter iota with dasia
+    0x03BF,  // letter omicron
+    0x1F41,  // -> letter omicron with dasia
+    0x03C1,  // letter rho
+    0x1FE5,  // -> letter rho with dasia
+    0x03C5,  // letter upsilon
+    0x1F51,  // -> letter upsilon with dasia
+    0x03C9,  // letter omega
+    0x1F61,  // -> letter omega with dasia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0754:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <space>
+    //   internal character table
+    0x000B,          // number of entries
+    0x0020,  // space
+    0x0770,
+    0x0030,  // digit zero
+    0x0776,
+    0x0031,  // digit one
+    0x077C,
+    0x0032,  // digit two
+    0x0782,
+    0x0033,  // digit three
+    0x0788,
+    0x0034,  // digit four
+    0x078E,
+    0x0035,  // digit five
+    0x0794,
+    0x0036,  // digit six
+    0x079A,
+    0x0037,  // digit seven
+    0x07A0,
+    0x0038,  // digit eight
+    0x07A6,
+    0x0039,  // digit nine
+    0x07AC,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x2461,  // -> circled digit two
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0770:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <space>
+    //     <space>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3252,  // -> circled number twenty two
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0776:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <space>
+    //     <digit zero>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x2473,  // -> circled number twenty
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x077C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <space>
+    //     <digit one>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3251,  // -> circled number twenty one
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0782:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <space>
+    //     <digit two>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3252,  // -> circled number twenty two
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0788:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <space>
+    //     <digit three>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3253,  // -> circled number twenty three
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x078E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <space>
+    //     <digit four>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3254,  // -> circled number twenty four
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0794:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <space>
+    //     <digit five>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3255,  // -> circled number twenty five
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x079A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <space>
+    //     <digit six>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3256,  // -> circled number twenty six
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x07A0:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <space>
+    //     <digit seven>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3257,  // -> circled number twenty seven
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x07A6:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <space>
+    //     <digit eight>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3258,  // -> circled number twenty eight
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x07AC:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <space>
+    //     <digit nine>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3259,  // -> circled number twenty nine
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x07B2:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit zero>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24EA,  // -> circled digit zero
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x07B8:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit one>
+    //   internal character table
+    0x000B,          // number of entries
+    0x0020,  // space
+    0x07D4,
+    0x0030,  // digit zero
+    0x07DA,
+    0x0031,  // digit one
+    0x07E0,
+    0x0032,  // digit two
+    0x07E6,
+    0x0033,  // digit three
+    0x07EC,
+    0x0034,  // digit four
+    0x07F2,
+    0x0035,  // digit five
+    0x07F8,
+    0x0036,  // digit six
+    0x07FE,
+    0x0037,  // digit seven
+    0x0804,
+    0x0038,  // digit eight
+    0x080A,
+    0x0039,  // digit nine
+    0x0810,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x2460,  // -> circled digit one
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x07D4:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit one>
+    //     <space>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x246B,  // -> circled number twelve
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x07DA:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit one>
+    //     <digit zero>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x2469,  // -> circled number ten
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x07E0:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit one>
+    //     <digit one>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x246A,  // -> circled number eleven
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x07E6:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit one>
+    //     <digit two>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x246B,  // -> circled number twelve
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x07EC:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit one>
+    //     <digit three>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x246C,  // -> circled number thirteen
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x07F2:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit one>
+    //     <digit four>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x246D,  // -> circled number fourteen
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x07F8:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit one>
+    //     <digit five>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x246E,  // -> circled number fifteen
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x07FE:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit one>
+    //     <digit six>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x246F,  // -> circled number sixteen
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0804:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit one>
+    //     <digit seven>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x2470,  // -> circled number seventeen
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x080A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit one>
+    //     <digit eight>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x2471,  // -> circled number eighteen
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0810:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit one>
+    //     <digit nine>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x2472,  // -> circled number nineteen
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0816:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit two>
+    //   internal character table
+    0x000B,          // number of entries
+    0x0020,  // space
+    0x0832,
+    0x0030,  // digit zero
+    0x0838,
+    0x0031,  // digit one
+    0x083E,
+    0x0032,  // digit two
+    0x0844,
+    0x0033,  // digit three
+    0x084A,
+    0x0034,  // digit four
+    0x0850,
+    0x0035,  // digit five
+    0x0856,
+    0x0036,  // digit six
+    0x085C,
+    0x0037,  // digit seven
+    0x0862,
+    0x0038,  // digit eight
+    0x0868,
+    0x0039,  // digit nine
+    0x086E,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x2461,  // -> circled digit two
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0832:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit two>
+    //     <space>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3252,  // -> circled number twenty two
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0838:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit two>
+    //     <digit zero>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x2473,  // -> circled number twenty
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x083E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit two>
+    //     <digit one>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3251,  // -> circled number twenty one
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0844:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit two>
+    //     <digit two>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3252,  // -> circled number twenty two
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x084A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit two>
+    //     <digit three>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3253,  // -> circled number twenty three
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0850:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit two>
+    //     <digit four>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3254,  // -> circled number twenty four
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0856:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit two>
+    //     <digit five>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3255,  // -> circled number twenty five
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x085C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit two>
+    //     <digit six>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3256,  // -> circled number twenty six
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0862:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit two>
+    //     <digit seven>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3257,  // -> circled number twenty seven
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0868:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit two>
+    //     <digit eight>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3258,  // -> circled number twenty eight
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x086E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit two>
+    //     <digit nine>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3259,  // -> circled number twenty nine
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0874:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit three>
+    //   internal character table
+    0x000B,          // number of entries
+    0x0020,  // space
+    0x0890,
+    0x0030,  // digit zero
+    0x0896,
+    0x0031,  // digit one
+    0x089C,
+    0x0032,  // digit two
+    0x08A2,
+    0x0033,  // digit three
+    0x08A8,
+    0x0034,  // digit four
+    0x08AE,
+    0x0035,  // digit five
+    0x08B4,
+    0x0036,  // digit six
+    0x08BA,
+    0x0037,  // digit seven
+    0x08C0,
+    0x0038,  // digit eight
+    0x08C6,
+    0x0039,  // digit nine
+    0x08CC,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x2462,  // -> circled digit three
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0890:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit three>
+    //     <space>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x325C,  // -> circled number thirty two
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0896:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit three>
+    //     <digit zero>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x325A,  // -> circled number thirty
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x089C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit three>
+    //     <digit one>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x325B,  // -> circled number thirty one
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x08A2:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit three>
+    //     <digit two>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x325C,  // -> circled number thirty two
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x08A8:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit three>
+    //     <digit three>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x325D,  // -> circled number thirty three
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x08AE:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit three>
+    //     <digit four>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x325E,  // -> circled number thirty four
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x08B4:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit three>
+    //     <digit five>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x325F,  // -> circled number thirty five
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x08BA:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit three>
+    //     <digit six>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32B1,  // -> circled number thirty six
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x08C0:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit three>
+    //     <digit seven>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32B2,  // -> circled number thirty seven
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x08C6:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit three>
+    //     <digit eight>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32B3,  // -> circled number thirty eight
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x08CC:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit three>
+    //     <digit nine>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32B4,  // -> circled number thirty nine
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x08D2:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit four>
+    //   internal character table
+    0x000B,          // number of entries
+    0x0020,  // space
+    0x08EE,
+    0x0030,  // digit zero
+    0x08F4,
+    0x0031,  // digit one
+    0x08FA,
+    0x0032,  // digit two
+    0x0900,
+    0x0033,  // digit three
+    0x0906,
+    0x0034,  // digit four
+    0x090C,
+    0x0035,  // digit five
+    0x0912,
+    0x0036,  // digit six
+    0x0918,
+    0x0037,  // digit seven
+    0x091E,
+    0x0038,  // digit eight
+    0x0924,
+    0x0039,  // digit nine
+    0x092A,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x2463,  // -> circled digit four
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x08EE:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit four>
+    //     <space>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32B7,  // -> circled number forty two
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x08F4:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit four>
+    //     <digit zero>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32B5,  // -> circled number forty
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x08FA:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit four>
+    //     <digit one>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32B6,  // -> circled number forty one
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0900:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit four>
+    //     <digit two>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32B7,  // -> circled number forty two
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0906:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit four>
+    //     <digit three>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32B8,  // -> circled number forty three
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x090C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit four>
+    //     <digit four>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32B9,  // -> circled number forty four
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0912:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit four>
+    //     <digit five>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32BA,  // -> circled number forty five
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0918:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit four>
+    //     <digit six>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32BB,  // -> circled number forty six
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x091E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit four>
+    //     <digit seven>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32BC,  // -> circled number forty seven
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0924:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit four>
+    //     <digit eight>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32BD,  // -> circled number forty eight
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x092A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit four>
+    //     <digit nine>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32BE,  // -> circled number forty nine
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0930:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit five>
+    //   internal character table
+    0x0001,          // number of entries
+    0x0030,  // digit zero
+    0x0938,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x2464,  // -> circled digit five
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0938:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit five>
+    //     <digit zero>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32BF,  // -> circled number fifty
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x093E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit six>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x2465,  // -> circled digit six
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0944:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit seven>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x2466,  // -> circled digit seven
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x094A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit eight>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x2467,  // -> circled digit eight
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0950:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <digit nine>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x2468,  // -> circled digit nine
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0956:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24B6,  // -> circled latin capital a
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x095C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter b>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24B7,  // -> circled latin capital b
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0962:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter c>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24B8,  // -> circled latin capital c
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0968:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter d>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24B9,  // -> circled latin capital d
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x096E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter e>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24BA,  // -> circled latin capital e
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0974:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter f>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24BB,  // -> circled latin capital f
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x097A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter g>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24BC,  // -> circled latin capital g
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0980:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter h>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24BD,  // -> circled latin capital h
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0986:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter i>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24BE,  // -> circled latin capital i
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x098C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter j>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24BF,  // -> circled latin capital j
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0992:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter k>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24C0,  // -> circled latin capital k
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0998:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter l>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24C1,  // -> circled latin capital l
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x099E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter m>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24C2,  // -> circled latin capital m
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x09A4:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter n>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24C3,  // -> circled latin capital n
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x09AA:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter o>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24C4,  // -> circled latin capital o
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x09B0:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter p>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24C5,  // -> circled latin capital p
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x09B6:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter q>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24C6,  // -> circled latin capital q
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x09BC:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter r>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24C7,  // -> circled latin capital r
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x09C2:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter s>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24C8,  // -> circled latin capital s
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x09C8:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter t>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24C9,  // -> circled latin capital t
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x09CE:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter u>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24CA,  // -> circled latin capital u
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x09D4:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter v>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24CB,  // -> circled latin capital v
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x09DA:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter w>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24CC,  // -> circled latin capital w
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x09E0:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter x>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24CD,  // -> circled latin capital x
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x09E6:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter y>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24CE,  // -> circled latin capital y
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x09EC:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin capital letter z>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24CF,  // -> circled latin capital z
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x09F2:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24D0,  // -> circled latin small a
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x09F8:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter b>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24D1,  // -> circled latin small b
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x09FE:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter c>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24D2,  // -> circled latin small c
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A04:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter d>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24D3,  // -> circled latin small d
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A0A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter e>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24D4,  // -> circled latin small e
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A10:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter f>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24D5,  // -> circled latin small f
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A16:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter g>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24D6,  // -> circled latin small g
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A1C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter h>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24D7,  // -> circled latin small h
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A22:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter i>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24D8,  // -> circled latin small i
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A28:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter j>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24D9,  // -> circled latin small j
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A2E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter k>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24DA,  // -> circled latin small k
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A34:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter l>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24DB,  // -> circled latin small l
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A3A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter m>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24DC,  // -> circled latin small m
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A40:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter n>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24DD,  // -> circled latin small n
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A46:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter o>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24DE,  // -> circled latin small o
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A4C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter p>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24DF,  // -> circled latin small p
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A52:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter q>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24E0,  // -> circled latin small q
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A58:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter r>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24E1,  // -> circled latin small r
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A5E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter s>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24E2,  // -> circled latin small s
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A64:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter t>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24E3,  // -> circled latin small t
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A6A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter u>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24E4,  // -> circled latin small u
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A70:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter v>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24E5,  // -> circled latin small v
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A76:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter w>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24E6,  // -> circled latin small w
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A7C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter x>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24E7,  // -> circled latin small x
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A82:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter y>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24E8,  // -> circled latin small y
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A88:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <latin small letter z>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x24E9,  // -> circled latin small z
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A8E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong kiyeok>
+    //   internal character table
+    0x0001,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x0A96,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3260,  // -> circled hangul kiyeok
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A96:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong kiyeok>
+    //     <hangul jungseong a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x326E,  // -> circled hangul kiyeok a
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0A9C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong nieun>
+    //   internal character table
+    0x0001,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x0AA4,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3261,  // -> circled hangul nieun
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0AA4:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong nieun>
+    //     <hangul jungseong a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x326F,  // -> circled hangul nieun a
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0AAA:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong tikeut>
+    //   internal character table
+    0x0001,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x0AB2,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3262,  // -> circled hangul tikeut
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0AB2:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong tikeut>
+    //     <hangul jungseong a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3270,  // -> circled hangul tikeut a
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0AB8:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong rieul>
+    //   internal character table
+    0x0001,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x0AC0,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3263,  // -> circled hangul rieul
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0AC0:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong rieul>
+    //     <hangul jungseong a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3271,  // -> circled hangul rieul a
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0AC6:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong mieum>
+    //   internal character table
+    0x0001,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x0ACE,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3264,  // -> circled hangul mieum
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0ACE:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong mieum>
+    //     <hangul jungseong a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3272,  // -> circled hangul mieum a
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0AD4:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong pieup>
+    //   internal character table
+    0x0001,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x0ADC,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3265,  // -> circled hangul pieup
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0ADC:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong pieup>
+    //     <hangul jungseong a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3273,  // -> circled hangul pieup a
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0AE2:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong sios>
+    //   internal character table
+    0x0001,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x0AEA,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3266,  // -> circled hangul sios
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0AEA:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong sios>
+    //     <hangul jungseong a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3274,  // -> circled hangul sios a
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0AF0:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong ieung>
+    //   internal character table
+    0x0001,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x0AF8,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3267,  // -> circled hangul ieung
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0AF8:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong ieung>
+    //     <hangul jungseong a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3275,  // -> circled hangul ieung a
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0AFE:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong cieuc>
+    //   internal character table
+    0x0001,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x0B06,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3268,  // -> circled hangul cieuc
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B06:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong cieuc>
+    //     <hangul jungseong a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3276,  // -> circled hangul cieuc a
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B0C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong chieuch>
+    //   internal character table
+    0x0001,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x0B14,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3269,  // -> circled hangul chieuch
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B14:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong chieuch>
+    //     <hangul jungseong a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3277,  // -> circled hangul chieuch a
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B1A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong khieukh>
+    //   internal character table
+    0x0001,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x0B22,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x326A,  // -> circled hangul khieukh
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B22:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong khieukh>
+    //     <hangul jungseong a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3278,  // -> circled hangul khieukh a
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B28:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong thieuth>
+    //   internal character table
+    0x0001,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x0B30,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x326B,  // -> circled hangul thieuth
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B30:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong thieuth>
+    //     <hangul jungseong a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3279,  // -> circled hangul thieuth a
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B36:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong phieuph>
+    //   internal character table
+    0x0001,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x0B3E,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x326C,  // -> circled hangul phieuph
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B3E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong phieuph>
+    //     <hangul jungseong a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x327A,  // -> circled hangul phieuph a
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B44:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong hieuh>
+    //   internal character table
+    0x0001,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x0B4C,
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x326D,  // -> circled hangul hieuh
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B4C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <hangul choseong hieuh>
+    //     <hangul jungseong a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x327B,  // -> circled hangul hieuh a
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B52:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32D0,  // -> circled katakana a
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B58:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter i>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32D1,  // -> circled katakana i
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B5E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter u>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32D2,  // -> circled katakana u
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B64:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter e>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32D3,  // -> circled katakana e
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B6A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter o>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32D4,  // -> circled katakana o
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B70:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter ka>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32D5,  // -> circled katakana ka
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B76:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter ki>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32D6,  // -> circled katakana ki
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B7C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter ku>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32D7,  // -> circled katakana ku
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B82:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter ke>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32D8,  // -> circled katakana ke
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B88:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter ko>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32D9,  // -> circled katakana ko
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B8E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter sa>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32DA,  // -> circled katakana sa
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B94:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter si>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32DB,  // -> circled katakana si
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0B9A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter su>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32DC,  // -> circled katakana su
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0BA0:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter se>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32DD,  // -> circled katakana se
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0BA6:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter so>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32DE,  // -> circled katakana so
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0BAC:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter ta>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32DF,  // -> circled katakana ta
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0BB2:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter ti>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32E0,  // -> circled katakana ti
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0BB8:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter tu>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32E1,  // -> circled katakana tu
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0BBE:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter te>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32E2,  // -> circled katakana te
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0BC4:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32E3,  // -> circled katakana to
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0BCA:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter na>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32E4,  // -> circled katakana na
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0BD0:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter ni>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32E5,  // -> circled katakana ni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0BD6:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter nu>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32E6,  // -> circled katakana nu
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0BDC:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter ne>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32E7,  // -> circled katakana ne
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0BE2:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter no>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32E8,  // -> circled katakana no
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0BE8:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter ha>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32E9,  // -> circled katakana ha
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0BEE:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter hi>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32EA,  // -> circled katakana hi
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0BF4:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter hu>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32EB,  // -> circled katakana hu
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0BFA:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter he>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32EC,  // -> circled katakana he
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C00:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter ho>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32ED,  // -> circled katakana ho
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C06:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter ma>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32EE,  // -> circled katakana ma
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C0C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter mi>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32EF,  // -> circled katakana mi
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C12:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter mu>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32F0,  // -> circled katakana mu
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C18:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter me>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32F1,  // -> circled katakana me
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C1E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter mo>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32F2,  // -> circled katakana mo
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C24:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter ya>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32F3,  // -> circled katakana ya
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C2A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter yu>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32F4,  // -> circled katakana yu
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C30:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter yo>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32F5,  // -> circled katakana yo
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C36:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter ra>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32F6,  // -> circled katakana ra
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C3C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter ri>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32F7,  // -> circled katakana ri
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C42:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter ru>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32F8,  // -> circled katakana ru
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C48:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter re>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32F9,  // -> circled katakana re
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C4E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter ro>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32FA,  // -> circled katakana ro
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C54:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter wa>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32FB,  // -> circled katakana wa
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C5A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter wi>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32FC,  // -> circled katakana wi
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C60:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter we>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32FD,  // -> circled katakana we
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C66:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <katakana letter wo>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32FE,  // -> circled katakana wo
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C6C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-4e00>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3280,  // -> circled ideograph one
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C72:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-4e03>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3286,  // -> circled ideograph seven
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C78:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-4e09>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3282,  // -> circled ideograph three
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C7E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-4e0a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32A4,  // -> circled ideograph high
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C84:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-4e0b>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32A6,  // -> circled ideograph low
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C8A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-4e2d>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32A5,  // -> circled ideograph centre
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C90:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-4e5d>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3288,  // -> circled ideograph nine
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C96:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-4e8c>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3281,  // -> circled ideograph two
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0C9C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-4e94>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3284,  // -> circled ideograph five
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0CA2:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-4f01>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32AD,  // -> circled ideograph enterprise
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0CA8:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-4f11>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32A1,  // -> circled ideograph rest
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0CAE:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-512a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x329D,  // -> circled ideograph excellent
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0CB4:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-516b>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3287,  // -> circled ideograph eight
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0CBA:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-516d>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3285,  // -> circled ideograph six
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0CC0:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-5199>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32A2,  // -> circled ideograph copy
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0CC6:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-52b4>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3298,  // -> circled ideograph labor
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0CCC:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-533b>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32A9,  // -> circled ideograph medicine
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0CD2:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-5341>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3289,  // -> circled ideograph ten
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0CD8:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-5354>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32AF,  // -> circled ideograph alliance
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0CDE:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-5370>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x329E,  // -> circled ideograph print
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0CE4:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-53f3>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32A8,  // -> circled ideograph right
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0CEA:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-540d>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3294,  // -> circled ideograph name
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0CF0:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-56db>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3283,  // -> circled ideograph four
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0CF6:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-571f>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x328F,  // -> circled ideograph earth
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0CFC:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-591c>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32B0,  // -> circled ideograph night
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D02:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-5973>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x329B,  // -> circled ideograph female
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D08:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-5b66>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32AB,  // -> circled ideograph study
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D0E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-5b97>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32AA,  // -> circled ideograph religion
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D14:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-5de6>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32A7,  // -> circled ideograph left
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D1A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-65e5>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3290,  // -> circled ideograph sun
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D20:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-6708>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x328A,  // -> circled ideograph moon
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D26:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-6709>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3292,  // -> circled ideograph have
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D2C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-6728>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x328D,  // -> circled ideograph wood
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D32:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-682a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3291,  // -> circled ideograph stock
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D38:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-6b63>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32A3,  // -> circled ideograph correct
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D3E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-6c34>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x328C,  // -> circled ideograph water
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D44:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-6ce8>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x329F,  // -> circled ideograph attention
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D4A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-706b>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x328B,  // -> circled ideograph fire
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D50:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-7279>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3295,  // -> circled ideograph special
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D56:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-7537>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x329A,  // -> circled ideograph male
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D5C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-76e3>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32AC,  // -> circled ideograph supervise
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D62:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-793e>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3293,  // -> circled ideograph society
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D68:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-795d>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3297,  // -> circled ideograph congratulation
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D6E:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-79d8>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3299,  // -> circled ideograph secret
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D74:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-8ca1>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x3296,  // -> circled ideograph financial
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D7A:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-8cc7>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32AE,  // -> circled ideograph resource
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D80:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-9069>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x329C,  // -> circled ideograph suitable
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D86:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-91d1>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x328E,  // -> circled ideograph metal
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D8C:
+    //   prefix:
+    //     Compose
+    //     <left parenthesis>
+    //     <cjk unified ideograph-9805>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0029,  // right parenthesis
+    0x32A0,  // -> circled ideograph item
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0D92:
+    //   prefix:
+    //     Compose
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0010,          // number of entries
+    0x0029,  // right parenthesis
+    0x005D,  // -> right square bracket
+    0x002D,  // hyphen-minus
+    0x007D,  // -> right curly bracket
+    0x0391,  // capital alpha
+    0x1F08,  // -> capital alpha with psili
+    0x0395,  // capital epsilon
+    0x1F18,  // -> capital epsilon with psili
+    0x0397,  // capital eta
+    0x1F28,  // -> capital eta with psili
+    0x0399,  // capital iota
+    0x1F38,  // -> capital iota with psili
+    0x039F,  // capital omicron
+    0x1F48,  // -> capital omicron with psili
+    0x03A9,  // capital omega
+    0x1F68,  // -> capital omega with psili
+    0x03B1,  // letter alpha
+    0x1F00,  // -> letter alpha with psili
+    0x03B5,  // letter epsilon
+    0x1F10,  // -> letter epsilon with psili
+    0x03B7,  // letter eta
+    0x1F20,  // -> letter eta with psili
+    0x03B9,  // letter iota
+    0x1F30,  // -> letter iota with psili
+    0x03BF,  // letter omicron
+    0x1F40,  // -> letter omicron with psili
+    0x03C1,  // letter rho
+    0x1FE4,  // -> letter rho with psili
+    0x03C5,  // letter upsilon
+    0x1F50,  // -> letter upsilon with psili
+    0x03C9,  // letter omega
+    0x1F60,  // -> letter omega with psili
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0DB6:
+    //   prefix:
+    //     Compose
+    //     <asterisk>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0005,          // number of entries
+    0x0030,  // digit zero
+    0x00B0,  // -> degree sign
+    0x0041,  // capital a
+    0x00C5,  // -> capital a with ring above
+    0x0055,  // capital u
+    0x016E,  // -> capital u with ring above
+    0x0061,  // letter a
+    0x00E5,  // -> letter a with ring above
+    0x0075,  // letter u
+    0x016F,  // -> letter u with ring above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0DC4:
+    //   prefix:
+    //     Compose
+    //     <plus sign>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x002B,  // plus sign
+    0x0023,  // -> number sign
+    0x002D,  // hyphen-minus
+    0x00B1,  // -> plus-minus sign
+    0x004F,  // capital o
+    0x01A0,  // -> capital o with horn
+    0x0055,  // capital u
+    0x01AF,  // -> capital u with horn
+    0x006F,  // letter o
+    0x01A1,  // -> letter o with horn
+    0x0075,  // letter u
+    0x01B0,  // -> letter u with horn
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0DD4:
+    //   prefix:
+    //     Compose
+    //     <comma>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0021,          // number of entries
+    0x0020,  // space
+    0x00B8,  // -> cedilla
+    0x0022,  // quotation mark
+    0x201E,  // -> double low-9 quotation mark
+    0x0027,  // apostrophe
+    0x201A,  // -> single low-9 quotation mark
+    0x002C,  // comma
+    0x00B8,  // -> cedilla
+    0x002D,  // hyphen-minus
+    0x00AC,  // -> not sign
+    0x0041,  // capital a
+    0x0104,  // -> capital a with ogonek
+    0x0043,  // capital c
+    0x00C7,  // -> capital c with cedilla
+    0x0044,  // capital d
+    0x1E10,  // -> capital d with cedilla
+    0x0045,  // capital e
+    0x0118,  // -> capital e with ogonek
+    0x0047,  // capital g
+    0x0122,  // -> capital g with cedilla
+    0x0048,  // capital h
+    0x1E28,  // -> capital h with cedilla
+    0x0049,  // capital i
+    0x012E,  // -> capital i with ogonek
+    0x004B,  // capital k
+    0x0136,  // -> capital k with cedilla
+    0x004C,  // capital l
+    0x013B,  // -> capital l with cedilla
+    0x004E,  // capital n
+    0x0145,  // -> capital n with cedilla
+    0x0052,  // capital r
+    0x0156,  // -> capital r with cedilla
+    0x0053,  // capital s
+    0x015E,  // -> capital s with cedilla
+    0x0054,  // capital t
+    0x0162,  // -> capital t with cedilla
+    0x0055,  // capital u
+    0x0172,  // -> capital u with ogonek
+    0x0061,  // letter a
+    0x0105,  // -> letter a with ogonek
+    0x0063,  // letter c
+    0x00E7,  // -> letter c with cedilla
+    0x0064,  // letter d
+    0x1E11,  // -> letter d with cedilla
+    0x0065,  // letter e
+    0x0119,  // -> letter e with ogonek
+    0x0067,  // letter g
+    0x0123,  // -> letter g with cedilla
+    0x0068,  // letter h
+    0x1E29,  // -> letter h with cedilla
+    0x0069,  // letter i
+    0x012F,  // -> letter i with ogonek
+    0x006B,  // letter k
+    0x0137,  // -> letter k with cedilla
+    0x006C,  // letter l
+    0x013C,  // -> letter l with cedilla
+    0x006E,  // letter n
+    0x0146,  // -> letter n with cedilla
+    0x0072,  // letter r
+    0x0157,  // -> letter r with cedilla
+    0x0073,  // letter s
+    0x015F,  // -> letter s with cedilla
+    0x0074,  // letter t
+    0x0163,  // -> letter t with cedilla
+    0x0075,  // letter u
+    0x0173,  // -> letter u with ogonek
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0E1A:
+    //   prefix:
+    //     Compose
+    //     <hyphen-minus>
+    //   internal character table
+    0x0001,          // number of entries
+    0x002D,  // hyphen-minus
+    0x0E54,
+    //   leaf character table
+    0x001A,          // number of entries
+    0x0020,  // space
+    0x007E,  // -> tilde
+    0x0028,  // left parenthesis
+    0x007B,  // -> left curly bracket
+    0x0029,  // right parenthesis
+    0x007D,  // -> right curly bracket
+    0x002B,  // plus sign
+    0x00B1,  // -> plus-minus sign
+    0x002C,  // comma
+    0x00AC,  // -> not sign
+    0x003A,  // colon
+    0x00F7,  // -> division sign
+    0x003E,  // greater-than sign
+    0x2192,  // -> rightwards arrow
+    0x0041,  // capital a
+    0x00C3,  // -> capital a with tilde
+    0x0044,  // capital d
+    0x0110,  // -> capital d with stroke
+    0x0045,  // capital e
+    0x0112,  // -> capital e with macron
+    0x0049,  // capital i
+    0x012A,  // -> capital i with macron
+    0x004C,  // capital l
+    0x00A3,  // -> pound sign
+    0x004E,  // capital n
+    0x00D1,  // -> capital n with tilde
+    0x004F,  // capital o
+    0x00D5,  // -> capital o with tilde
+    0x0055,  // capital u
+    0x016A,  // -> capital u with macron
+    0x0059,  // capital y
+    0x00A5,  // -> yen sign
+    0x005E,  // circumflex accent
+    0x00AF,  // -> macron
+    0x0061,  // letter a
+    0x0101,  // -> letter a with macron
+    0x0064,  // letter d
+    0x0111,  // -> letter d with stroke
+    0x0065,  // letter e
+    0x0113,  // -> letter e with macron
+    0x0069,  // letter i
+    0x012B,  // -> letter i with macron
+    0x006C,  // letter l
+    0x00A3,  // -> pound sign
+    0x006E,  // letter n
+    0x00F1,  // -> letter n with tilde
+    0x006F,  // letter o
+    0x014D,  // -> letter o with macron
+    0x0075,  // letter u
+    0x016B,  // -> letter u with macron
+    0x0079,  // letter y
+    0x00A5,  // -> yen sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0E54:
+    //   prefix:
+    //     Compose
+    //     <hyphen-minus>
+    //     <hyphen-minus>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x0020,  // space
+    0x00AD,  // -> soft hyphen
+    0x002D,  // hyphen-minus
+    0x2014,  // -> em dash
+    0x002E,  // full stop
+    0x2013,  // -> en dash
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0E5E:
+    //   prefix:
+    //     Compose
+    //     <full stop>
+    //   internal character table
+    0x0003,          // number of entries
+    0x0021,  // exclamation mark
+    0x0ED8,
+    0x0027,  // apostrophe
+    0x0EE0,
+    0x00B4,  // acute accent
+    0x0EE8,
+    //   leaf character table
+    0x0035,          // number of entries
+    0x002D,  // hyphen-minus
+    0x00B7,  // -> middle dot
+    0x002E,  // full stop
+    0x2026,  // -> horizontal ellipsis
+    0x003C,  // less-than sign
+    0x2039,  // -> single left-pointing angle quotation mark
+    0x003D,  // equals sign
+    0x2022,  // -> bullet
+    0x003E,  // greater-than sign
+    0x203A,  // -> single right-pointing angle quotation mark
+    0x0041,  // capital a
+    0x0226,  // -> capital a with dot above
+    0x0042,  // capital b
+    0x1E02,  // -> capital b with dot above
+    0x0043,  // capital c
+    0x010A,  // -> capital c with dot above
+    0x0044,  // capital d
+    0x1E0A,  // -> capital d with dot above
+    0x0045,  // capital e
+    0x0116,  // -> capital e with dot above
+    0x0046,  // capital f
+    0x1E1E,  // -> capital f with dot above
+    0x0047,  // capital g
+    0x0120,  // -> capital g with dot above
+    0x0048,  // capital h
+    0x1E22,  // -> capital h with dot above
+    0x0049,  // capital i
+    0x0130,  // -> capital i with dot above
+    0x004D,  // capital m
+    0x1E40,  // -> capital m with dot above
+    0x004E,  // capital n
+    0x1E44,  // -> capital n with dot above
+    0x004F,  // capital o
+    0x022E,  // -> capital o with dot above
+    0x0050,  // capital p
+    0x1E56,  // -> capital p with dot above
+    0x0052,  // capital r
+    0x1E58,  // -> capital r with dot above
+    0x0053,  // capital s
+    0x1E60,  // -> capital s with dot above
+    0x0054,  // capital t
+    0x1E6A,  // -> capital t with dot above
+    0x0057,  // capital w
+    0x1E86,  // -> capital w with dot above
+    0x0058,  // capital x
+    0x1E8A,  // -> capital x with dot above
+    0x0059,  // capital y
+    0x1E8E,  // -> capital y with dot above
+    0x005A,  // capital z
+    0x017B,  // -> capital z with dot above
+    0x005E,  // circumflex accent
+    0x00B7,  // -> middle dot
+    0x0061,  // letter a
+    0x0227,  // -> letter a with dot above
+    0x0062,  // letter b
+    0x1E03,  // -> letter b with dot above
+    0x0063,  // letter c
+    0x010B,  // -> letter c with dot above
+    0x0064,  // letter d
+    0x1E0B,  // -> letter d with dot above
+    0x0065,  // letter e
+    0x0117,  // -> letter e with dot above
+    0x0066,  // letter f
+    0x1E1F,  // -> letter f with dot above
+    0x0067,  // letter g
+    0x0121,  // -> letter g with dot above
+    0x0068,  // letter h
+    0x1E23,  // -> letter h with dot above
+    0x0069,  // letter i
+    0x0131,  // -> letter dotless i
+    0x006D,  // letter m
+    0x1E41,  // -> letter m with dot above
+    0x006E,  // letter n
+    0x1E45,  // -> letter n with dot above
+    0x006F,  // letter o
+    0x022F,  // -> letter o with dot above
+    0x0070,  // letter p
+    0x1E57,  // -> letter p with dot above
+    0x0072,  // letter r
+    0x1E59,  // -> letter r with dot above
+    0x0073,  // letter s
+    0x1E61,  // -> letter s with dot above
+    0x0074,  // letter t
+    0x1E6B,  // -> letter t with dot above
+    0x0077,  // letter w
+    0x1E87,  // -> letter w with dot above
+    0x0078,  // letter x
+    0x1E8B,  // -> letter x with dot above
+    0x0079,  // letter y
+    0x1E8F,  // -> letter y with dot above
+    0x007A,  // letter z
+    0x017C,  // -> letter z with dot above
+    0x015A,  // capital s with acute
+    0x1E64,  // -> capital s with acute and dot above
+    0x015B,  // letter s with acute
+    0x1E65,  // -> letter s with acute and dot above
+    0x0160,  // capital s with caron
+    0x1E66,  // -> capital s with caron and dot above
+    0x0161,  // letter s with caron
+    0x1E67,  // -> letter s with caron and dot above
+    0x017F,  // letter long s
+    0x1E9B,  // -> letter long s with dot above
+    0x1E62,  // capital s with dot below
+    0x1E68,  // -> capital s with dot below and dot above
+    0x1E63,  // letter s with dot below
+    0x1E69,  // -> letter s with dot below and dot above
+    //   internal dead_key table
+    0x0003,          // number of entries
+    0x0301,  // combining acute accent
+    0x0EF0,
+    0x030C,  // combining caron
+    0x0EF8,
+    0x0323,  // combining dot below
+    0x0F00,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0ED8:
+    //   prefix:
+    //     Compose
+    //     <full stop>
+    //     <exclamation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0053,  // capital s
+    0x1E68,  // -> capital s with dot below and dot above
+    0x0073,  // letter s
+    0x1E69,  // -> letter s with dot below and dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0EE0:
+    //   prefix:
+    //     Compose
+    //     <full stop>
+    //     <apostrophe>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0053,  // capital s
+    0x1E64,  // -> capital s with acute and dot above
+    0x0073,  // letter s
+    0x1E65,  // -> letter s with acute and dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0EE8:
+    //   prefix:
+    //     Compose
+    //     <full stop>
+    //     <acute accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0053,  // capital s
+    0x1E64,  // -> capital s with acute and dot above
+    0x0073,  // letter s
+    0x1E65,  // -> letter s with acute and dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0EF0:
+    //   prefix:
+    //     Compose
+    //     <full stop>
+    //     Dead<combining acute accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0053,  // capital s
+    0x1E64,  // -> capital s with acute and dot above
+    0x0073,  // letter s
+    0x1E65,  // -> letter s with acute and dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0EF8:
+    //   prefix:
+    //     Compose
+    //     <full stop>
+    //     Dead<combining caron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0053,  // capital s
+    0x1E66,  // -> capital s with caron and dot above
+    0x0073,  // letter s
+    0x1E67,  // -> letter s with caron and dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0F00:
+    //   prefix:
+    //     Compose
+    //     <full stop>
+    //     Dead<combining dot below>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0053,  // capital s
+    0x1E68,  // -> capital s with dot below and dot above
+    0x0073,  // letter s
+    0x1E69,  // -> letter s with dot below and dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0F08:
+    //   prefix:
+    //     Compose
+    //     <solidus>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0024,          // number of entries
+    0x002F,  // solidus
+    0x005C,  // -> reverse solidus
+    0x003C,  // less-than sign
+    0x005C,  // -> reverse solidus
+    0x003D,  // equals sign
+    0x2260,  // -> not equal to
+    0x0043,  // capital c
+    0x20A1,  // -> colon sign
+    0x0044,  // capital d
+    0x0110,  // -> capital d with stroke
+    0x0047,  // capital g
+    0x01E4,  // -> capital g with stroke
+    0x0048,  // capital h
+    0x0126,  // -> capital h with stroke
+    0x0049,  // capital i
+    0x0197,  // -> capital i with stroke
+    0x004C,  // capital l
+    0x0141,  // -> capital l with stroke
+    0x004F,  // capital o
+    0x00D8,  // -> capital o with stroke
+    0x0054,  // capital t
+    0x0166,  // -> capital t with stroke
+    0x0055,  // capital u
+    0x00B5,  // -> micro sign
+    0x005A,  // capital z
+    0x01B5,  // -> capital z with stroke
+    0x005E,  // circumflex accent
+    0x007C,  // -> vertical line
+    0x0062,  // letter b
+    0x0180,  // -> letter b with stroke
+    0x0063,  // letter c
+    0x00A2,  // -> cent sign
+    0x0064,  // letter d
+    0x0111,  // -> letter d with stroke
+    0x0067,  // letter g
+    0x01E5,  // -> letter g with stroke
+    0x0068,  // letter h
+    0x0127,  // -> letter h with stroke
+    0x0069,  // letter i
+    0x0268,  // -> letter i with stroke
+    0x006C,  // letter l
+    0x0142,  // -> letter l with stroke
+    0x006D,  // letter m
+    0x20A5,  // -> mill sign
+    0x006F,  // letter o
+    0x00F8,  // -> letter o with stroke
+    0x0074,  // letter t
+    0x0167,  // -> letter t with stroke
+    0x0075,  // letter u
+    0x00B5,  // -> micro sign
+    0x007A,  // letter z
+    0x01B6,  // -> letter z with stroke
+    0x0294,  // letter glottal stop
+    0x02A1,  // -> letter glottal stop with stroke
+    0x0413,  // cyrillic capital ghe
+    0x0492,  // -> cyrillic capital ghe with stroke
+    0x041A,  // cyrillic capital ka
+    0x049E,  // -> cyrillic capital ka with stroke
+    0x0433,  // cyrillic small ghe
+    0x0493,  // -> cyrillic small ghe with stroke
+    0x043A,  // cyrillic small ka
+    0x049F,  // -> cyrillic small ka with stroke
+    0x2190,  // leftwards arrow
+    0x219A,  // -> leftwards arrow with stroke
+    0x2192,  // rightwards arrow
+    0x219B,  // -> rightwards arrow with stroke
+    0x2194,  // left right arrow
+    0x21AE,  // -> left right arrow with stroke
+    0x30C3,  // katakana small tu
+    0x04B1,  // -> cyrillic small straight u with stroke
+    0x30E7,  // katakana small yo
+    0x04B0,  // -> cyrillic capital straight u with stroke
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0F54:
+    //   prefix:
+    //     Compose
+    //     <digit zero>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0008,          // number of entries
+    0x002A,  // asterisk
+    0x00B0,  // -> degree sign
+    0x0043,  // capital c
+    0x00A9,  // -> copyright sign
+    0x0053,  // capital s
+    0x00A7,  // -> section sign
+    0x0058,  // capital x
+    0x00A4,  // -> currency sign
+    0x005E,  // circumflex accent
+    0x00B0,  // -> degree sign
+    0x0063,  // letter c
+    0x00A9,  // -> copyright sign
+    0x0073,  // letter s
+    0x00A7,  // -> section sign
+    0x0078,  // letter x
+    0x00A4,  // -> currency sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0F68:
+    //   prefix:
+    //     Compose
+    //     <digit one>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0009,          // number of entries
+    0x0032,  // digit two
+    0x00BD,  // -> vulgar fraction one half
+    0x0033,  // digit three
+    0x2153,  // -> vulgar fraction one third
+    0x0034,  // digit four
+    0x00BC,  // -> vulgar fraction one quarter
+    0x0035,  // digit five
+    0x2155,  // -> vulgar fraction one fifth
+    0x0036,  // digit six
+    0x2159,  // -> vulgar fraction one sixth
+    0x0038,  // digit eight
+    0x215B,  // -> vulgar fraction one eighth
+    0x0053,  // capital s
+    0x00B9,  // -> superscript one
+    0x005E,  // circumflex accent
+    0x00B9,  // -> superscript one
+    0x0073,  // letter s
+    0x00B9,  // -> superscript one
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0F7E:
+    //   prefix:
+    //     Compose
+    //     <digit two>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0005,          // number of entries
+    0x0033,  // digit three
+    0x2154,  // -> vulgar fraction two thirds
+    0x0035,  // digit five
+    0x2156,  // -> vulgar fraction two fifths
+    0x0053,  // capital s
+    0x00B2,  // -> superscript two
+    0x005E,  // circumflex accent
+    0x00B2,  // -> superscript two
+    0x0073,  // letter s
+    0x00B2,  // -> superscript two
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0F8C:
+    //   prefix:
+    //     Compose
+    //     <digit three>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0034,  // digit four
+    0x00BE,  // -> vulgar fraction three quarters
+    0x0035,  // digit five
+    0x2157,  // -> vulgar fraction three fifths
+    0x0038,  // digit eight
+    0x215C,  // -> vulgar fraction three eighths
+    0x0053,  // capital s
+    0x00B3,  // -> superscript three
+    0x005E,  // circumflex accent
+    0x00B3,  // -> superscript three
+    0x0073,  // letter s
+    0x00B3,  // -> superscript three
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0F9C:
+    //   prefix:
+    //     Compose
+    //     <digit four>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0035,  // digit five
+    0x2158,  // -> vulgar fraction four fifths
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0FA2:
+    //   prefix:
+    //     Compose
+    //     <digit five>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0036,  // digit six
+    0x215A,  // -> vulgar fraction five sixths
+    0x0038,  // digit eight
+    0x215D,  // -> vulgar fraction five eighths
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0FAA:
+    //   prefix:
+    //     Compose
+    //     <digit seven>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0038,  // digit eight
+    0x215E,  // -> vulgar fraction seven eighths
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0FB0:
+    //   prefix:
+    //     Compose
+    //     <colon>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x0028,  // left parenthesis
+    0x2639,  // -> white frowning face
+    0x0029,  // right parenthesis
+    0x263A,  // -> white smiling face
+    0x002D,  // hyphen-minus
+    0x00F7,  // -> division sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0FBA:
+    //   prefix:
+    //     Compose
+    //     <semicolon>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000A,          // number of entries
+    0x0041,  // capital a
+    0x0104,  // -> capital a with ogonek
+    0x0045,  // capital e
+    0x0118,  // -> capital e with ogonek
+    0x0049,  // capital i
+    0x012E,  // -> capital i with ogonek
+    0x004F,  // capital o
+    0x01EA,  // -> capital o with ogonek
+    0x0055,  // capital u
+    0x0172,  // -> capital u with ogonek
+    0x0061,  // letter a
+    0x0105,  // -> letter a with ogonek
+    0x0065,  // letter e
+    0x0119,  // -> letter e with ogonek
+    0x0069,  // letter i
+    0x012F,  // -> letter i with ogonek
+    0x006F,  // letter o
+    0x01EB,  // -> letter o with ogonek
+    0x0075,  // letter u
+    0x0173,  // -> letter u with ogonek
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x0FD2:
+    //   prefix:
+    //     Compose
+    //     <less-than sign>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x001B,          // number of entries
+    0x0020,  // space
+    0x02C7,  // -> caron
+    0x0022,  // quotation mark
+    0x201C,  // -> left double quotation mark
+    0x0027,  // apostrophe
+    0x2018,  // -> left single quotation mark
+    0x002D,  // hyphen-minus
+    0x2190,  // -> leftwards arrow
+    0x002F,  // solidus
+    0x005C,  // -> reverse solidus
+    0x0033,  // digit three
+    0x2665,  // -> black heart suit
+    0x003C,  // less-than sign
+    0x00AB,  // -> left-pointing double angle quotation mark
+    0x003D,  // equals sign
+    0x2264,  // -> less-than or equal to
+    0x0043,  // capital c
+    0x010C,  // -> capital c with caron
+    0x0044,  // capital d
+    0x010E,  // -> capital d with caron
+    0x0045,  // capital e
+    0x011A,  // -> capital e with caron
+    0x004C,  // capital l
+    0x013D,  // -> capital l with caron
+    0x004E,  // capital n
+    0x0147,  // -> capital n with caron
+    0x0052,  // capital r
+    0x0158,  // -> capital r with caron
+    0x0053,  // capital s
+    0x0160,  // -> capital s with caron
+    0x0054,  // capital t
+    0x0164,  // -> capital t with caron
+    0x005A,  // capital z
+    0x017D,  // -> capital z with caron
+    0x0063,  // letter c
+    0x010D,  // -> letter c with caron
+    0x0064,  // letter d
+    0x010F,  // -> letter d with caron
+    0x0065,  // letter e
+    0x011B,  // -> letter e with caron
+    0x006C,  // letter l
+    0x013E,  // -> letter l with caron
+    0x006E,  // letter n
+    0x0148,  // -> letter n with caron
+    0x0072,  // letter r
+    0x0159,  // -> letter r with caron
+    0x0073,  // letter s
+    0x0161,  // -> letter s with caron
+    0x0074,  // letter t
+    0x0165,  // -> letter t with caron
+    0x007A,  // letter z
+    0x017E,  // -> letter z with caron
+    0x0338,  // combining long solidus overlay
+    0x226E,  // -> not less-than
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x100C:
+    //   prefix:
+    //     Compose
+    //     <equals sign>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0014,          // number of entries
+    0x002F,  // solidus
+    0x2260,  // -> not equal to
+    0x0043,  // capital c
+    0x20AC,  // -> euro sign
+    0x0045,  // capital e
+    0x20AC,  // -> euro sign
+    0x004C,  // capital l
+    0x20A4,  // -> lira sign
+    0x004E,  // capital n
+    0x20A6,  // -> naira sign
+    0x004F,  // capital o
+    0x0150,  // -> capital o with double acute
+    0x0055,  // capital u
+    0x0170,  // -> capital u with double acute
+    0x0057,  // capital w
+    0x20A9,  // -> won sign
+    0x0059,  // capital y
+    0x00A5,  // -> yen sign
+    0x0063,  // letter c
+    0x20AC,  // -> euro sign
+    0x0065,  // letter e
+    0x20AC,  // -> euro sign
+    0x006C,  // letter l
+    0x00A3,  // -> pound sign
+    0x006F,  // letter o
+    0x0151,  // -> letter o with double acute
+    0x0075,  // letter u
+    0x0171,  // -> letter u with double acute
+    0x0079,  // letter y
+    0x00A5,  // -> yen sign
+    0x0338,  // combining long solidus overlay
+    0x2260,  // -> not equal to
+    0x0415,  // cyrillic capital ie
+    0x20AC,  // -> euro sign
+    0x0421,  // cyrillic capital es
+    0x20AC,  // -> euro sign
+    0x0423,  // cyrillic capital u
+    0x04F2,  // -> cyrillic capital u with double acute
+    0x0443,  // cyrillic small u
+    0x04F3,  // -> cyrillic small u with double acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1038:
+    //   prefix:
+    //     Compose
+    //     <greater-than sign>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0010,          // number of entries
+    0x0020,  // space
+    0x005E,  // -> circumflex accent
+    0x0022,  // quotation mark
+    0x201D,  // -> right double quotation mark
+    0x0027,  // apostrophe
+    0x2019,  // -> right single quotation mark
+    0x003D,  // equals sign
+    0x2265,  // -> greater-than or equal to
+    0x003E,  // greater-than sign
+    0x00BB,  // -> right-pointing double angle quotation mark
+    0x0041,  // capital a
+    0x00C2,  // -> capital a with circumflex
+    0x0045,  // capital e
+    0x00CA,  // -> capital e with circumflex
+    0x0049,  // capital i
+    0x00CE,  // -> capital i with circumflex
+    0x004F,  // capital o
+    0x00D4,  // -> capital o with circumflex
+    0x0055,  // capital u
+    0x00DB,  // -> capital u with circumflex
+    0x0061,  // letter a
+    0x00E2,  // -> letter a with circumflex
+    0x0065,  // letter e
+    0x00EA,  // -> letter e with circumflex
+    0x0069,  // letter i
+    0x00EE,  // -> letter i with circumflex
+    0x006F,  // letter o
+    0x00F4,  // -> letter o with circumflex
+    0x0075,  // letter u
+    0x00FB,  // -> letter u with circumflex
+    0x0338,  // combining long solidus overlay
+    0x226F,  // -> not greater-than
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x105C:
+    //   prefix:
+    //     Compose
+    //     <question mark>
+    //   internal character table
+    0x0003,          // number of entries
+    0x002B,  // plus sign
+    0x1098,
+    0x005E,  // circumflex accent
+    0x10A4,
+    0x0062,  // letter b
+    0x10B4,
+    //   leaf character table
+    0x0016,          // number of entries
+    0x0021,  // exclamation mark
+    0x2E18,  // -> inverted interrobang
+    0x003F,  // question mark
+    0x00BF,  // -> inverted question mark
+    0x0041,  // capital a
+    0x1EA2,  // -> capital a with hook above
+    0x0045,  // capital e
+    0x1EBA,  // -> capital e with hook above
+    0x0049,  // capital i
+    0x1EC8,  // -> capital i with hook above
+    0x004F,  // capital o
+    0x1ECE,  // -> capital o with hook above
+    0x0055,  // capital u
+    0x1EE6,  // -> capital u with hook above
+    0x0059,  // capital y
+    0x1EF6,  // -> capital y with hook above
+    0x0061,  // letter a
+    0x1EA3,  // -> letter a with hook above
+    0x0065,  // letter e
+    0x1EBB,  // -> letter e with hook above
+    0x0069,  // letter i
+    0x1EC9,  // -> letter i with hook above
+    0x006F,  // letter o
+    0x1ECF,  // -> letter o with hook above
+    0x0075,  // letter u
+    0x1EE7,  // -> letter u with hook above
+    0x0079,  // letter y
+    0x1EF7,  // -> letter y with hook above
+    0x00C2,  // capital a with circumflex
+    0x1EA8,  // -> capital a with circumflex and hook above
+    0x00CA,  // capital e with circumflex
+    0x1EC2,  // -> capital e with circumflex and hook above
+    0x00D4,  // capital o with circumflex
+    0x1ED4,  // -> capital o with circumflex and hook above
+    0x00E2,  // letter a with circumflex
+    0x1EA9,  // -> letter a with circumflex and hook above
+    0x00EA,  // letter e with circumflex
+    0x1EC3,  // -> letter e with circumflex and hook above
+    0x00F4,  // letter o with circumflex
+    0x1ED5,  // -> letter o with circumflex and hook above
+    0x0102,  // capital a with breve
+    0x1EB2,  // -> capital a with breve and hook above
+    0x0103,  // letter a with breve
+    0x1EB3,  // -> letter a with breve and hook above
+    //   internal dead_key table
+    0x0003,          // number of entries
+    0x0302,  // combining circumflex accent
+    0x10BC,
+    0x0306,  // combining breve
+    0x10CC,
+    0x031B,  // combining horn
+    0x10D4,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1098:
+    //   prefix:
+    //     Compose
+    //     <question mark>
+    //     <plus sign>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EDE,  // -> capital o with horn and hook above
+    0x0055,  // capital u
+    0x1EEC,  // -> capital u with horn and hook above
+    0x006F,  // letter o
+    0x1EDF,  // -> letter o with horn and hook above
+    0x0075,  // letter u
+    0x1EED,  // -> letter u with horn and hook above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x10A4:
+    //   prefix:
+    //     Compose
+    //     <question mark>
+    //     <circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EA8,  // -> capital a with circumflex and hook above
+    0x0045,  // capital e
+    0x1EC2,  // -> capital e with circumflex and hook above
+    0x004F,  // capital o
+    0x1ED4,  // -> capital o with circumflex and hook above
+    0x0061,  // letter a
+    0x1EA9,  // -> letter a with circumflex and hook above
+    0x0065,  // letter e
+    0x1EC3,  // -> letter e with circumflex and hook above
+    0x006F,  // letter o
+    0x1ED5,  // -> letter o with circumflex and hook above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x10B4:
+    //   prefix:
+    //     Compose
+    //     <question mark>
+    //     <latin small letter b>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB2,  // -> capital a with breve and hook above
+    0x0061,  // letter a
+    0x1EB3,  // -> letter a with breve and hook above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x10BC:
+    //   prefix:
+    //     Compose
+    //     <question mark>
+    //     Dead<combining circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EA8,  // -> capital a with circumflex and hook above
+    0x0045,  // capital e
+    0x1EC2,  // -> capital e with circumflex and hook above
+    0x004F,  // capital o
+    0x1ED4,  // -> capital o with circumflex and hook above
+    0x0061,  // letter a
+    0x1EA9,  // -> letter a with circumflex and hook above
+    0x0065,  // letter e
+    0x1EC3,  // -> letter e with circumflex and hook above
+    0x006F,  // letter o
+    0x1ED5,  // -> letter o with circumflex and hook above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x10CC:
+    //   prefix:
+    //     Compose
+    //     <question mark>
+    //     Dead<combining breve>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB2,  // -> capital a with breve and hook above
+    0x0061,  // letter a
+    0x1EB3,  // -> letter a with breve and hook above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x10D4:
+    //   prefix:
+    //     Compose
+    //     <question mark>
+    //     Dead<combining horn>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EDE,  // -> capital o with horn and hook above
+    0x0055,  // capital u
+    0x1EEC,  // -> capital u with horn and hook above
+    0x006F,  // letter o
+    0x1EDF,  // -> letter o with horn and hook above
+    0x0075,  // letter u
+    0x1EED,  // -> letter u with horn and hook above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x10E0:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0010,          // number of entries
+    0x0022,  // quotation mark
+    0x00C4,  // -> capital a with diaeresis
+    0x0027,  // apostrophe
+    0x00C1,  // -> capital a with acute
+    0x0028,  // left parenthesis
+    0x0102,  // -> capital a with breve
+    0x002A,  // asterisk
+    0x00C5,  // -> capital a with ring above
+    0x002C,  // comma
+    0x0104,  // -> capital a with ogonek
+    0x002D,  // hyphen-minus
+    0x00C3,  // -> capital a with tilde
+    0x003E,  // greater-than sign
+    0x00C2,  // -> capital a with circumflex
+    0x0041,  // capital a
+    0x00C5,  // -> capital a with ring above
+    0x0045,  // capital e
+    0x00C6,  // -> capital ae
+    0x0054,  // capital t
+    0x0040,  // -> commercial at
+    0x005E,  // circumflex accent
+    0x00C2,  // -> capital a with circumflex
+    0x005F,  // low line
+    0x00AA,  // -> feminine ordinal indicator
+    0x0060,  // grave accent
+    0x00C0,  // -> capital a with grave
+    0x007E,  // tilde
+    0x00C3,  // -> capital a with tilde
+    0x00A8,  // diaeresis
+    0x00C4,  // -> capital a with diaeresis
+    0x00B4,  // acute accent
+    0x00C1,  // -> capital a with acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1104:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter b>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x002E,  // full stop
+    0x1E02,  // -> capital b with dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x110A:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter c>
+    //   internal character table
+    0x0001,          // number of entries
+    0x0043,  // capital c
+    0x1128,
+    //   leaf character table
+    0x000C,          // number of entries
+    0x0027,  // apostrophe
+    0x0106,  // -> capital c with acute
+    0x002C,  // comma
+    0x00C7,  // -> capital c with cedilla
+    0x002E,  // full stop
+    0x010A,  // -> capital c with dot above
+    0x002F,  // solidus
+    0x20A1,  // -> colon sign
+    0x0030,  // digit zero
+    0x00A9,  // -> copyright sign
+    0x003C,  // less-than sign
+    0x010C,  // -> capital c with caron
+    0x003D,  // equals sign
+    0x20AC,  // -> euro sign
+    0x0045,  // capital e
+    0x20A0,  // -> euro-currency sign
+    0x004F,  // capital o
+    0x00A9,  // -> copyright sign
+    0x006F,  // letter o
+    0x00A9,  // -> copyright sign
+    0x0072,  // letter r
+    0x20A2,  // -> cruzeiro sign
+    0x007C,  // vertical line
+    0x00A2,  // -> cent sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1128:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter c>
+    //     <latin capital letter c>
+    //   internal character table
+    0x0001,          // number of entries
+    0x0043,  // capital c
+    0x112E,
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x112E:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter c>
+    //     <latin capital letter c>
+    //     <latin capital letter c>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0050,  // capital p
+    0x262D,  // -> hammer and sickle
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1134:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter d>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x002D,  // hyphen-minus
+    0x0110,  // -> capital d with stroke
+    0x002E,  // full stop
+    0x1E0A,  // -> capital d with dot above
+    0x003C,  // less-than sign
+    0x010E,  // -> capital d with caron
+    0x0048,  // capital h
+    0x00D0,  // -> capital eth
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1140:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter e>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000D,          // number of entries
+    0x0022,  // quotation mark
+    0x00CB,  // -> capital e with diaeresis
+    0x0027,  // apostrophe
+    0x00C9,  // -> capital e with acute
+    0x002C,  // comma
+    0x0118,  // -> capital e with ogonek
+    0x002D,  // hyphen-minus
+    0x0112,  // -> capital e with macron
+    0x002E,  // full stop
+    0x0116,  // -> capital e with dot above
+    0x003C,  // less-than sign
+    0x011A,  // -> capital e with caron
+    0x003D,  // equals sign
+    0x20AC,  // -> euro sign
+    0x003E,  // greater-than sign
+    0x00CA,  // -> capital e with circumflex
+    0x005E,  // circumflex accent
+    0x00CA,  // -> capital e with circumflex
+    0x005F,  // low line
+    0x0112,  // -> capital e with macron
+    0x0060,  // grave accent
+    0x00C8,  // -> capital e with grave
+    0x00A8,  // diaeresis
+    0x00CB,  // -> capital e with diaeresis
+    0x00B4,  // acute accent
+    0x00C9,  // -> capital e with acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x115E:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter f>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x002E,  // full stop
+    0x1E1E,  // -> capital f with dot above
+    0x0072,  // letter r
+    0x20A3,  // -> french franc sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1166:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter g>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0005,          // number of entries
+    0x0028,  // left parenthesis
+    0x011E,  // -> capital g with breve
+    0x002C,  // comma
+    0x0122,  // -> capital g with cedilla
+    0x002E,  // full stop
+    0x0120,  // -> capital g with dot above
+    0x0055,  // capital u
+    0x011E,  // -> capital g with breve
+    0x02D8,  // breve
+    0x011E,  // -> capital g with breve
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1174:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter i>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000C,          // number of entries
+    0x0022,  // quotation mark
+    0x00CF,  // -> capital i with diaeresis
+    0x0027,  // apostrophe
+    0x00CD,  // -> capital i with acute
+    0x002C,  // comma
+    0x012E,  // -> capital i with ogonek
+    0x002D,  // hyphen-minus
+    0x012A,  // -> capital i with macron
+    0x002E,  // full stop
+    0x0130,  // -> capital i with dot above
+    0x003E,  // greater-than sign
+    0x00CE,  // -> capital i with circumflex
+    0x005E,  // circumflex accent
+    0x00CE,  // -> capital i with circumflex
+    0x005F,  // low line
+    0x012A,  // -> capital i with macron
+    0x0060,  // grave accent
+    0x00CC,  // -> capital i with grave
+    0x007E,  // tilde
+    0x0128,  // -> capital i with tilde
+    0x00A8,  // diaeresis
+    0x00CF,  // -> capital i with diaeresis
+    0x00B4,  // acute accent
+    0x00CD,  // -> capital i with acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1190:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter k>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x002C,  // comma
+    0x0136,  // -> capital k with cedilla
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1196:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter l>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0007,          // number of entries
+    0x0027,  // apostrophe
+    0x0139,  // -> capital l with acute
+    0x002C,  // comma
+    0x013B,  // -> capital l with cedilla
+    0x002D,  // hyphen-minus
+    0x00A3,  // -> pound sign
+    0x002F,  // solidus
+    0x0141,  // -> capital l with stroke
+    0x003C,  // less-than sign
+    0x013D,  // -> capital l with caron
+    0x003D,  // equals sign
+    0x00A3,  // -> pound sign
+    0x0056,  // capital v
+    0x007C,  // -> vertical line
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x11A8:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter m>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x002E,  // full stop
+    0x1E40,  // -> capital m with dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x11AE:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter n>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0009,          // number of entries
+    0x0027,  // apostrophe
+    0x0143,  // -> capital n with acute
+    0x002C,  // comma
+    0x0145,  // -> capital n with cedilla
+    0x002D,  // hyphen-minus
+    0x00D1,  // -> capital n with tilde
+    0x003C,  // less-than sign
+    0x0147,  // -> capital n with caron
+    0x003D,  // equals sign
+    0x20A6,  // -> naira sign
+    0x0047,  // capital g
+    0x014A,  // -> capital eng
+    0x004F,  // capital o
+    0x2116,  // -> numero sign
+    0x006F,  // letter o
+    0x2116,  // -> numero sign
+    0x007E,  // tilde
+    0x00D1,  // -> capital n with tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x11C4:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter o>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0014,          // number of entries
+    0x0022,  // quotation mark
+    0x00D6,  // -> capital o with diaeresis
+    0x0027,  // apostrophe
+    0x00D3,  // -> capital o with acute
+    0x002D,  // hyphen-minus
+    0x00D5,  // -> capital o with tilde
+    0x002F,  // solidus
+    0x00D8,  // -> capital o with stroke
+    0x003E,  // greater-than sign
+    0x00D4,  // -> capital o with circumflex
+    0x0041,  // capital a
+    0x24B6,  // -> circled latin capital a
+    0x0043,  // capital c
+    0x00A9,  // -> copyright sign
+    0x0045,  // capital e
+    0x0152,  // -> capital ligature oe
+    0x0052,  // capital r
+    0x00AE,  // -> registered sign
+    0x0053,  // capital s
+    0x00A7,  // -> section sign
+    0x0058,  // capital x
+    0x00A4,  // -> currency sign
+    0x005E,  // circumflex accent
+    0x00D4,  // -> capital o with circumflex
+    0x005F,  // low line
+    0x00BA,  // -> masculine ordinal indicator
+    0x0060,  // grave accent
+    0x00D2,  // -> capital o with grave
+    0x0063,  // letter c
+    0x00A9,  // -> copyright sign
+    0x0072,  // letter r
+    0x00AE,  // -> registered sign
+    0x0078,  // letter x
+    0x00A4,  // -> currency sign
+    0x007E,  // tilde
+    0x00D5,  // -> capital o with tilde
+    0x00A8,  // diaeresis
+    0x00D6,  // -> capital o with diaeresis
+    0x00B4,  // acute accent
+    0x00D3,  // -> capital o with acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x11F0:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter p>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0021,  // exclamation mark
+    0x00B6,  // -> pilcrow sign
+    0x002E,  // full stop
+    0x1E56,  // -> capital p with dot above
+    0x0050,  // capital p
+    0x00B6,  // -> pilcrow sign
+    0x0074,  // letter t
+    0x20A7,  // -> peseta sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x11FC:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter r>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0005,          // number of entries
+    0x0027,  // apostrophe
+    0x0154,  // -> capital r with acute
+    0x002C,  // comma
+    0x0156,  // -> capital r with cedilla
+    0x003C,  // less-than sign
+    0x0158,  // -> capital r with caron
+    0x004F,  // capital o
+    0x00AE,  // -> registered sign
+    0x0073,  // letter s
+    0x20A8,  // -> rupee sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x120A:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter s>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000E,          // number of entries
+    0x0021,  // exclamation mark
+    0x00A7,  // -> section sign
+    0x0027,  // apostrophe
+    0x015A,  // -> capital s with acute
+    0x002C,  // comma
+    0x015E,  // -> capital s with cedilla
+    0x002E,  // full stop
+    0x1E60,  // -> capital s with dot above
+    0x0030,  // digit zero
+    0x00A7,  // -> section sign
+    0x0031,  // digit one
+    0x00B9,  // -> superscript one
+    0x0032,  // digit two
+    0x00B2,  // -> superscript two
+    0x0033,  // digit three
+    0x00B3,  // -> superscript three
+    0x003C,  // less-than sign
+    0x0160,  // -> capital s with caron
+    0x004D,  // capital m
+    0x2120,  // -> service mark
+    0x004F,  // capital o
+    0x00A7,  // -> section sign
+    0x0053,  // capital s
+    0x1E9E,  // -> capital sharp s
+    0x006D,  // letter m
+    0x2120,  // -> service mark
+    0x00B8,  // cedilla
+    0x015E,  // -> capital s with cedilla
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x122A:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter t>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0007,          // number of entries
+    0x002D,  // hyphen-minus
+    0x0166,  // -> capital t with stroke
+    0x002E,  // full stop
+    0x1E6A,  // -> capital t with dot above
+    0x002F,  // solidus
+    0x0166,  // -> capital t with stroke
+    0x003C,  // less-than sign
+    0x0164,  // -> capital t with caron
+    0x0048,  // capital h
+    0x00DE,  // -> capital thorn
+    0x004D,  // capital m
+    0x2122,  // -> trade mark sign
+    0x006D,  // letter m
+    0x2122,  // -> trade mark sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x123C:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter u>
+    //   internal character table
+    0x0003,          // number of entries
+    0x0021,  // exclamation mark
+    0x12A4,
+    0x002C,  // comma
+    0x12AC,
+    0x00B8,  // cedilla
+    0x12B4,
+    //   leaf character table
+    0x002D,          // number of entries
+    0x0022,  // quotation mark
+    0x00DC,  // -> capital u with diaeresis
+    0x0027,  // apostrophe
+    0x00DA,  // -> capital u with acute
+    0x002A,  // asterisk
+    0x016E,  // -> capital u with ring above
+    0x002C,  // comma
+    0x0172,  // -> capital u with ogonek
+    0x002D,  // hyphen-minus
+    0x016A,  // -> capital u with macron
+    0x002F,  // solidus
+    0x00B5,  // -> micro sign
+    0x003E,  // greater-than sign
+    0x00DB,  // -> capital u with circumflex
+    0x0041,  // capital a
+    0x0102,  // -> capital a with breve
+    0x0045,  // capital e
+    0x0114,  // -> capital e with breve
+    0x0047,  // capital g
+    0x011E,  // -> capital g with breve
+    0x0049,  // capital i
+    0x012C,  // -> capital i with breve
+    0x004F,  // capital o
+    0x014E,  // -> capital o with breve
+    0x0055,  // capital u
+    0x016C,  // -> capital u with breve
+    0x005E,  // circumflex accent
+    0x00DB,  // -> capital u with circumflex
+    0x005F,  // low line
+    0x016A,  // -> capital u with macron
+    0x0060,  // grave accent
+    0x00D9,  // -> capital u with grave
+    0x0061,  // letter a
+    0x0103,  // -> letter a with breve
+    0x0065,  // letter e
+    0x0115,  // -> letter e with breve
+    0x0067,  // letter g
+    0x011F,  // -> letter g with breve
+    0x0069,  // letter i
+    0x012D,  // -> letter i with breve
+    0x006F,  // letter o
+    0x014F,  // -> letter o with breve
+    0x0075,  // letter u
+    0x016D,  // -> letter u with breve
+    0x007E,  // tilde
+    0x0168,  // -> capital u with tilde
+    0x00A8,  // diaeresis
+    0x00DC,  // -> capital u with diaeresis
+    0x00B4,  // acute accent
+    0x00DA,  // -> capital u with acute
+    0x0228,  // capital e with cedilla
+    0x1E1C,  // -> capital e with cedilla and breve
+    0x0229,  // letter e with cedilla
+    0x1E1D,  // -> letter e with cedilla and breve
+    0x0391,  // capital alpha
+    0x1FB8,  // -> capital alpha with vrachy
+    0x0399,  // capital iota
+    0x1FD8,  // -> capital iota with vrachy
+    0x03A5,  // capital upsilon
+    0x1FE8,  // -> capital upsilon with vrachy
+    0x03B1,  // letter alpha
+    0x1FB0,  // -> letter alpha with vrachy
+    0x03B9,  // letter iota
+    0x1FD0,  // -> letter iota with vrachy
+    0x03C5,  // letter upsilon
+    0x1FE0,  // -> letter upsilon with vrachy
+    0x0410,  // cyrillic capital a
+    0x04D0,  // -> cyrillic capital a with breve
+    0x0415,  // cyrillic capital ie
+    0x04D6,  // -> cyrillic capital ie with breve
+    0x0416,  // cyrillic capital zhe
+    0x04C1,  // -> cyrillic capital zhe with breve
+    0x0418,  // cyrillic capital i
+    0x0419,  // -> cyrillic capital short i
+    0x0423,  // cyrillic capital u
+    0x040E,  // -> cyrillic capital short u
+    0x0430,  // cyrillic small a
+    0x04D1,  // -> cyrillic small a with breve
+    0x0435,  // cyrillic small ie
+    0x04D7,  // -> cyrillic small ie with breve
+    0x0436,  // cyrillic small zhe
+    0x04C2,  // -> cyrillic small zhe with breve
+    0x0438,  // cyrillic small i
+    0x0439,  // -> cyrillic small short i
+    0x0443,  // cyrillic small u
+    0x045E,  // -> cyrillic small short u
+    0x1EA0,  // capital a with dot below
+    0x1EB6,  // -> capital a with breve and dot below
+    0x1EA1,  // letter a with dot below
+    0x1EB7,  // -> letter a with breve and dot below
+    //   internal dead_key table
+    0x0002,          // number of entries
+    0x0323,  // combining dot below
+    0x12BC,
+    0x0327,  // combining cedilla
+    0x12C4,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x12A4:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter u>
+    //     <exclamation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB6,  // -> capital a with breve and dot below
+    0x0061,  // letter a
+    0x1EB7,  // -> letter a with breve and dot below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x12AC:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter u>
+    //     <comma>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0045,  // capital e
+    0x1E1C,  // -> capital e with cedilla and breve
+    0x0065,  // letter e
+    0x1E1D,  // -> letter e with cedilla and breve
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x12B4:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter u>
+    //     <cedilla>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0045,  // capital e
+    0x1E1C,  // -> capital e with cedilla and breve
+    0x0065,  // letter e
+    0x1E1D,  // -> letter e with cedilla and breve
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x12BC:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter u>
+    //     Dead<combining dot below>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB6,  // -> capital a with breve and dot below
+    0x0061,  // letter a
+    0x1EB7,  // -> letter a with breve and dot below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x12C4:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter u>
+    //     Dead<combining cedilla>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0045,  // capital e
+    0x1E1C,  // -> capital e with cedilla and breve
+    0x0065,  // letter e
+    0x1E1D,  // -> letter e with cedilla and breve
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x12CC:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter v>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x004C,  // capital l
+    0x007C,  // -> vertical line
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x12D2:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter w>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x003D,  // equals sign
+    0x20A9,  // -> won sign
+    0x005E,  // circumflex accent
+    0x0174,  // -> capital w with circumflex
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x12DA:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter x>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x0030,  // digit zero
+    0x00A4,  // -> currency sign
+    0x004F,  // capital o
+    0x00A4,  // -> currency sign
+    0x006F,  // letter o
+    0x00A4,  // -> currency sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x12E4:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter y>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0007,          // number of entries
+    0x0022,  // quotation mark
+    0x0178,  // -> capital y with diaeresis
+    0x0027,  // apostrophe
+    0x00DD,  // -> capital y with acute
+    0x002D,  // hyphen-minus
+    0x00A5,  // -> yen sign
+    0x003D,  // equals sign
+    0x00A5,  // -> yen sign
+    0x005E,  // circumflex accent
+    0x0176,  // -> capital y with circumflex
+    0x00A8,  // diaeresis
+    0x0178,  // -> capital y with diaeresis
+    0x00B4,  // acute accent
+    0x00DD,  // -> capital y with acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x12F6:
+    //   prefix:
+    //     Compose
+    //     <latin capital letter z>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x0027,  // apostrophe
+    0x0179,  // -> capital z with acute
+    0x002E,  // full stop
+    0x017B,  // -> capital z with dot above
+    0x003C,  // less-than sign
+    0x017D,  // -> capital z with caron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1300:
+    //   prefix:
+    //     Compose
+    //     <circumflex accent>
+    //   internal character table
+    0x0002,          // number of entries
+    0x0021,  // exclamation mark
+    0x138E,
+    0x005F,  // low line
+    0x139E,
+    //   leaf character table
+    0x0042,          // number of entries
+    0x0020,  // space
+    0x00B2,  // -> superscript two
+    0x0028,  // left parenthesis
+    0x207D,  // -> superscript left parenthesis
+    0x0029,  // right parenthesis
+    0x207E,  // -> superscript right parenthesis
+    0x002B,  // plus sign
+    0x207A,  // -> superscript plus sign
+    0x002D,  // hyphen-minus
+    0x00AF,  // -> macron
+    0x002E,  // full stop
+    0x00B7,  // -> middle dot
+    0x002F,  // solidus
+    0x007C,  // -> vertical line
+    0x0030,  // digit zero
+    0x2070,  // -> superscript zero
+    0x0031,  // digit one
+    0x00B9,  // -> superscript one
+    0x0032,  // digit two
+    0x00B2,  // -> superscript two
+    0x0033,  // digit three
+    0x00B3,  // -> superscript three
+    0x0034,  // digit four
+    0x2074,  // -> superscript four
+    0x0035,  // digit five
+    0x2075,  // -> superscript five
+    0x0036,  // digit six
+    0x2076,  // -> superscript six
+    0x0037,  // digit seven
+    0x2077,  // -> superscript seven
+    0x0038,  // digit eight
+    0x2078,  // -> superscript eight
+    0x0039,  // digit nine
+    0x2079,  // -> superscript nine
+    0x003D,  // equals sign
+    0x207C,  // -> superscript equals sign
+    0x0041,  // capital a
+    0x00C2,  // -> capital a with circumflex
+    0x0043,  // capital c
+    0x0108,  // -> capital c with circumflex
+    0x0045,  // capital e
+    0x00CA,  // -> capital e with circumflex
+    0x0047,  // capital g
+    0x011C,  // -> capital g with circumflex
+    0x0048,  // capital h
+    0x0124,  // -> capital h with circumflex
+    0x0049,  // capital i
+    0x00CE,  // -> capital i with circumflex
+    0x004A,  // capital j
+    0x0134,  // -> capital j with circumflex
+    0x004F,  // capital o
+    0x00D4,  // -> capital o with circumflex
+    0x0053,  // capital s
+    0x015C,  // -> capital s with circumflex
+    0x0055,  // capital u
+    0x00DB,  // -> capital u with circumflex
+    0x0057,  // capital w
+    0x0174,  // -> capital w with circumflex
+    0x0059,  // capital y
+    0x0176,  // -> capital y with circumflex
+    0x005A,  // capital z
+    0x1E90,  // -> capital z with circumflex
+    0x005F,  // low line
+    0x00AF,  // -> macron
+    0x0061,  // letter a
+    0x00E2,  // -> letter a with circumflex
+    0x0063,  // letter c
+    0x0109,  // -> letter c with circumflex
+    0x0065,  // letter e
+    0x00EA,  // -> letter e with circumflex
+    0x0067,  // letter g
+    0x011D,  // -> letter g with circumflex
+    0x0068,  // letter h
+    0x0125,  // -> letter h with circumflex
+    0x0069,  // letter i
+    0x00EE,  // -> letter i with circumflex
+    0x006A,  // letter j
+    0x0135,  // -> letter j with circumflex
+    0x006F,  // letter o
+    0x00F4,  // -> letter o with circumflex
+    0x0073,  // letter s
+    0x015D,  // -> letter s with circumflex
+    0x0075,  // letter u
+    0x00FB,  // -> letter u with circumflex
+    0x0077,  // letter w
+    0x0175,  // -> letter w with circumflex
+    0x0079,  // letter y
+    0x0177,  // -> letter y with circumflex
+    0x007A,  // letter z
+    0x1E91,  // -> letter z with circumflex
+    0x1EA0,  // capital a with dot below
+    0x1EAC,  // -> capital a with circumflex and dot below
+    0x1EA1,  // letter a with dot below
+    0x1EAD,  // -> letter a with circumflex and dot below
+    0x1EB8,  // capital e with dot below
+    0x1EC6,  // -> capital e with circumflex and dot below
+    0x1EB9,  // letter e with dot below
+    0x1EC7,  // -> letter e with circumflex and dot below
+    0x1ECC,  // capital o with dot below
+    0x1ED8,  // -> capital o with circumflex and dot below
+    0x1ECD,  // letter o with dot below
+    0x1ED9,  // -> letter o with circumflex and dot below
+    0x2212,  // minus sign
+    0x207B,  // -> superscript minus
+    0x4E00,  // cjk unified ideograph-4e00
+    0x3192,  // -> ideographic annotation one mark
+    0x4E01,  // cjk unified ideograph-4e01
+    0x319C,  // -> ideographic annotation fourth mark
+    0x4E09,  // cjk unified ideograph-4e09
+    0x3194,  // -> ideographic annotation three mark
+    0x4E0A,  // cjk unified ideograph-4e0a
+    0x3196,  // -> ideographic annotation top mark
+    0x4E0B,  // cjk unified ideograph-4e0b
+    0x3198,  // -> ideographic annotation bottom mark
+    0x4E19,  // cjk unified ideograph-4e19
+    0x319B,  // -> ideographic annotation third mark
+    0x4E2D,  // cjk unified ideograph-4e2d
+    0x3197,  // -> ideographic annotation middle mark
+    0x4E59,  // cjk unified ideograph-4e59
+    0x319A,  // -> ideographic annotation second mark
+    0x4E8C,  // cjk unified ideograph-4e8c
+    0x3193,  // -> ideographic annotation two mark
+    0x4EBA,  // cjk unified ideograph-4eba
+    0x319F,  // -> ideographic annotation man mark
+    0x56DB,  // cjk unified ideograph-56db
+    0x3195,  // -> ideographic annotation four mark
+    0x5730,  // cjk unified ideograph-5730
+    0x319E,  // -> ideographic annotation earth mark
+    0x5929,  // cjk unified ideograph-5929
+    0x319D,  // -> ideographic annotation heaven mark
+    0x7532,  // cjk unified ideograph-7532
+    0x3199,  // -> ideographic annotation first mark
+    //   internal dead_key table
+    0x0001,          // number of entries
+    0x0323,  // combining dot below
+    0x13C6,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x138E:
+    //   prefix:
+    //     Compose
+    //     <circumflex accent>
+    //     <exclamation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EAC,  // -> capital a with circumflex and dot below
+    0x0045,  // capital e
+    0x1EC6,  // -> capital e with circumflex and dot below
+    0x004F,  // capital o
+    0x1ED8,  // -> capital o with circumflex and dot below
+    0x0061,  // letter a
+    0x1EAD,  // -> letter a with circumflex and dot below
+    0x0065,  // letter e
+    0x1EC7,  // -> letter e with circumflex and dot below
+    0x006F,  // letter o
+    0x1ED9,  // -> letter o with circumflex and dot below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x139E:
+    //   prefix:
+    //     Compose
+    //     <circumflex accent>
+    //     <low line>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0012,          // number of entries
+    0x0061,  // letter a
+    0x00AA,  // -> feminine ordinal indicator
+    0x0068,  // letter h
+    0x02B0,  // -> modifier small h
+    0x0069,  // letter i
+    0x2071,  // -> superscript latin small i
+    0x006A,  // letter j
+    0x02B2,  // -> modifier small j
+    0x006C,  // letter l
+    0x02E1,  // -> modifier small l
+    0x006E,  // letter n
+    0x207F,  // -> superscript latin small n
+    0x006F,  // letter o
+    0x00BA,  // -> masculine ordinal indicator
+    0x0072,  // letter r
+    0x02B3,  // -> modifier small r
+    0x0073,  // letter s
+    0x02E2,  // -> modifier small s
+    0x0077,  // letter w
+    0x02B7,  // -> modifier small w
+    0x0078,  // letter x
+    0x02E3,  // -> modifier small x
+    0x0079,  // letter y
+    0x02B8,  // -> modifier small y
+    0x0263,  // letter gamma
+    0x02E0,  // -> modifier small gamma
+    0x0266,  // letter h with hook
+    0x02B1,  // -> modifier small h with hook
+    0x0279,  // letter turned r
+    0x02B4,  // -> modifier small turned r
+    0x027B,  // letter turned r with hook
+    0x02B5,  // -> modifier small turned r with hook
+    0x0281,  // letter small capital inverted r
+    0x02B6,  // -> modifier small capital inverted r
+    0x0295,  // letter pharyngeal voiced fricative
+    0x02E4,  // -> modifier small reversed glottal stop
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x13C6:
+    //   prefix:
+    //     Compose
+    //     <circumflex accent>
+    //     Dead<combining dot below>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EAC,  // -> capital a with circumflex and dot below
+    0x0045,  // capital e
+    0x1EC6,  // -> capital e with circumflex and dot below
+    0x004F,  // capital o
+    0x1ED8,  // -> capital o with circumflex and dot below
+    0x0061,  // letter a
+    0x1EAD,  // -> letter a with circumflex and dot below
+    0x0065,  // letter e
+    0x1EC7,  // -> letter e with circumflex and dot below
+    0x006F,  // letter o
+    0x1ED9,  // -> letter o with circumflex and dot below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x13D6:
+    //   prefix:
+    //     Compose
+    //     <low line>
+    //   internal character table
+    0x0005,          // number of entries
+    0x0021,  // exclamation mark
+    0x146E,
+    0x0022,  // quotation mark
+    0x147A,
+    0x002E,  // full stop
+    0x148A,
+    0x003B,  // semicolon
+    0x1496,
+    0x007E,  // tilde
+    0x149E,
+    //   leaf character table
+    0x0040,          // number of entries
+    0x0020,  // space
+    0x2082,  // -> subscript two
+    0x0028,  // left parenthesis
+    0x208D,  // -> subscript left parenthesis
+    0x0029,  // right parenthesis
+    0x208E,  // -> subscript right parenthesis
+    0x002B,  // plus sign
+    0x208A,  // -> subscript plus sign
+    0x0030,  // digit zero
+    0x2080,  // -> subscript zero
+    0x0031,  // digit one
+    0x2081,  // -> subscript one
+    0x0032,  // digit two
+    0x2082,  // -> subscript two
+    0x0033,  // digit three
+    0x2083,  // -> subscript three
+    0x0034,  // digit four
+    0x2084,  // -> subscript four
+    0x0035,  // digit five
+    0x2085,  // -> subscript five
+    0x0036,  // digit six
+    0x2086,  // -> subscript six
+    0x0037,  // digit seven
+    0x2087,  // -> subscript seven
+    0x0038,  // digit eight
+    0x2088,  // -> subscript eight
+    0x0039,  // digit nine
+    0x2089,  // -> subscript nine
+    0x003D,  // equals sign
+    0x208C,  // -> subscript equals sign
+    0x0041,  // capital a
+    0x0100,  // -> capital a with macron
+    0x0045,  // capital e
+    0x0112,  // -> capital e with macron
+    0x0047,  // capital g
+    0x1E20,  // -> capital g with macron
+    0x0049,  // capital i
+    0x012A,  // -> capital i with macron
+    0x004F,  // capital o
+    0x014C,  // -> capital o with macron
+    0x0055,  // capital u
+    0x016A,  // -> capital u with macron
+    0x0059,  // capital y
+    0x0232,  // -> capital y with macron
+    0x005E,  // circumflex accent
+    0x00AF,  // -> macron
+    0x005F,  // low line
+    0x00AF,  // -> macron
+    0x0061,  // letter a
+    0x0101,  // -> letter a with macron
+    0x0065,  // letter e
+    0x0113,  // -> letter e with macron
+    0x0067,  // letter g
+    0x1E21,  // -> letter g with macron
+    0x0069,  // letter i
+    0x012B,  // -> letter i with macron
+    0x006F,  // letter o
+    0x014D,  // -> letter o with macron
+    0x0075,  // letter u
+    0x016B,  // -> letter u with macron
+    0x0079,  // letter y
+    0x0233,  // -> letter y with macron
+    0x00C4,  // capital a with diaeresis
+    0x01DE,  // -> capital a with diaeresis and macron
+    0x00C6,  // capital ae
+    0x01E2,  // -> capital ae with macron
+    0x00D5,  // capital o with tilde
+    0x022C,  // -> capital o with tilde and macron
+    0x00D6,  // capital o with diaeresis
+    0x022A,  // -> capital o with diaeresis and macron
+    0x00DC,  // capital u with diaeresis
+    0x01D5,  // -> capital u with diaeresis and macron
+    0x00E4,  // letter a with diaeresis
+    0x01DF,  // -> letter a with diaeresis and macron
+    0x00E6,  // letter ae
+    0x01E3,  // -> letter ae with macron
+    0x00F5,  // letter o with tilde
+    0x022D,  // -> letter o with tilde and macron
+    0x00F6,  // letter o with diaeresis
+    0x022B,  // -> letter o with diaeresis and macron
+    0x00FC,  // letter u with diaeresis
+    0x01D6,  // -> letter u with diaeresis and macron
+    0x0119,  // letter e with ogonek
+    0x01EC,  // -> capital o with ogonek and macron
+    0x01EB,  // letter o with ogonek
+    0x01ED,  // -> letter o with ogonek and macron
+    0x0226,  // capital a with dot above
+    0x01E0,  // -> capital a with dot above and macron
+    0x0227,  // letter a with dot above
+    0x01E1,  // -> letter a with dot above and macron
+    0x022E,  // capital o with dot above
+    0x0230,  // -> capital o with dot above and macron
+    0x022F,  // letter o with dot above
+    0x0231,  // -> letter o with dot above and macron
+    0x0391,  // capital alpha
+    0x1FB9,  // -> capital alpha with macron
+    0x0399,  // capital iota
+    0x1FD9,  // -> capital iota with macron
+    0x03A5,  // capital upsilon
+    0x1FE9,  // -> capital upsilon with macron
+    0x03B1,  // letter alpha
+    0x1FB1,  // -> letter alpha with macron
+    0x03B9,  // letter iota
+    0x1FD1,  // -> letter iota with macron
+    0x03C5,  // letter upsilon
+    0x1FE1,  // -> letter upsilon with macron
+    0x0418,  // cyrillic capital i
+    0x04E2,  // -> cyrillic capital i with macron
+    0x0423,  // cyrillic capital u
+    0x04EE,  // -> cyrillic capital u with macron
+    0x0438,  // cyrillic small i
+    0x04E3,  // -> cyrillic small i with macron
+    0x0443,  // cyrillic small u
+    0x04EF,  // -> cyrillic small u with macron
+    0x0BBE,  // tamil vowel sign aa
+    0x0BCA,  // -> tamil vowel sign o
+    0x0BD7,  // tamil au length mark
+    0x0BCC,  // -> tamil vowel sign au
+    0x1E36,  // capital l with dot below
+    0x1E38,  // -> capital l with dot below and macron
+    0x1E37,  // letter l with dot below
+    0x1E39,  // -> letter l with dot below and macron
+    0x1E5A,  // capital r with dot below
+    0x1E5C,  // -> capital r with dot below and macron
+    0x1E5B,  // letter r with dot below
+    0x1E5D,  // -> letter r with dot below and macron
+    0x2212,  // minus sign
+    0x208B,  // -> subscript minus
+    //   internal dead_key table
+    0x0005,          // number of entries
+    0x0303,  // combining tilde
+    0x14A6,
+    0x0307,  // combining dot above
+    0x14AE,
+    0x0308,  // combining diaeresis
+    0x14BA,
+    0x0323,  // combining dot below
+    0x14CA,
+    0x0328,  // combining ogonek
+    0x14D6,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x146E:
+    //   prefix:
+    //     Compose
+    //     <low line>
+    //     <exclamation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004C,  // capital l
+    0x1E38,  // -> capital l with dot below and macron
+    0x0052,  // capital r
+    0x1E5C,  // -> capital r with dot below and macron
+    0x006C,  // letter l
+    0x1E39,  // -> letter l with dot below and macron
+    0x0072,  // letter r
+    0x1E5D,  // -> letter r with dot below and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x147A:
+    //   prefix:
+    //     Compose
+    //     <low line>
+    //     <quotation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x01DE,  // -> capital a with diaeresis and macron
+    0x004F,  // capital o
+    0x022A,  // -> capital o with diaeresis and macron
+    0x0055,  // capital u
+    0x01D5,  // -> capital u with diaeresis and macron
+    0x0061,  // letter a
+    0x01DF,  // -> letter a with diaeresis and macron
+    0x006F,  // letter o
+    0x022B,  // -> letter o with diaeresis and macron
+    0x0075,  // letter u
+    0x01D6,  // -> letter u with diaeresis and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x148A:
+    //   prefix:
+    //     Compose
+    //     <low line>
+    //     <full stop>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0041,  // capital a
+    0x01E0,  // -> capital a with dot above and macron
+    0x004F,  // capital o
+    0x0230,  // -> capital o with dot above and macron
+    0x0061,  // letter a
+    0x01E1,  // -> letter a with dot above and macron
+    0x006F,  // letter o
+    0x0231,  // -> letter o with dot above and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1496:
+    //   prefix:
+    //     Compose
+    //     <low line>
+    //     <semicolon>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x01EC,  // -> capital o with ogonek and macron
+    0x006F,  // letter o
+    0x01ED,  // -> letter o with ogonek and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x149E:
+    //   prefix:
+    //     Compose
+    //     <low line>
+    //     <tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x022C,  // -> capital o with tilde and macron
+    0x006F,  // letter o
+    0x022D,  // -> letter o with tilde and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x14A6:
+    //   prefix:
+    //     Compose
+    //     <low line>
+    //     Dead<combining tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x022C,  // -> capital o with tilde and macron
+    0x006F,  // letter o
+    0x022D,  // -> letter o with tilde and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x14AE:
+    //   prefix:
+    //     Compose
+    //     <low line>
+    //     Dead<combining dot above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0041,  // capital a
+    0x01E0,  // -> capital a with dot above and macron
+    0x004F,  // capital o
+    0x0230,  // -> capital o with dot above and macron
+    0x0061,  // letter a
+    0x01E1,  // -> letter a with dot above and macron
+    0x006F,  // letter o
+    0x0231,  // -> letter o with dot above and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x14BA:
+    //   prefix:
+    //     Compose
+    //     <low line>
+    //     Dead<combining diaeresis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x01DE,  // -> capital a with diaeresis and macron
+    0x004F,  // capital o
+    0x022A,  // -> capital o with diaeresis and macron
+    0x0055,  // capital u
+    0x01D5,  // -> capital u with diaeresis and macron
+    0x0061,  // letter a
+    0x01DF,  // -> letter a with diaeresis and macron
+    0x006F,  // letter o
+    0x022B,  // -> letter o with diaeresis and macron
+    0x0075,  // letter u
+    0x01D6,  // -> letter u with diaeresis and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x14CA:
+    //   prefix:
+    //     Compose
+    //     <low line>
+    //     Dead<combining dot below>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004C,  // capital l
+    0x1E38,  // -> capital l with dot below and macron
+    0x0052,  // capital r
+    0x1E5C,  // -> capital r with dot below and macron
+    0x006C,  // letter l
+    0x1E39,  // -> letter l with dot below and macron
+    0x0072,  // letter r
+    0x1E5D,  // -> letter r with dot below and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x14D6:
+    //   prefix:
+    //     Compose
+    //     <low line>
+    //     Dead<combining ogonek>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x01EC,  // -> capital o with ogonek and macron
+    0x006F,  // letter o
+    0x01ED,  // -> letter o with ogonek and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x14DE:
+    //   prefix:
+    //     Compose
+    //     <grave accent>
+    //   internal character table
+    0x0008,          // number of entries
+    0x0022,  // quotation mark
+    0x159C,
+    0x0028,  // left parenthesis
+    0x15A8,
+    0x0029,  // right parenthesis
+    0x15C8,
+    0x002B,  // plus sign
+    0x15E6,
+    0x005E,  // circumflex accent
+    0x15F2,
+    0x005F,  // low line
+    0x1602,
+    0x0062,  // letter b
+    0x160E,
+    0x00AF,  // macron
+    0x1616,
+    //   leaf character table
+    0x004E,          // number of entries
+    0x0020,  // space
+    0x0060,  // -> grave accent
+    0x0041,  // capital a
+    0x00C0,  // -> capital a with grave
+    0x0045,  // capital e
+    0x00C8,  // -> capital e with grave
+    0x0049,  // capital i
+    0x00CC,  // -> capital i with grave
+    0x004E,  // capital n
+    0x01F8,  // -> capital n with grave
+    0x004F,  // capital o
+    0x00D2,  // -> capital o with grave
+    0x0055,  // capital u
+    0x00D9,  // -> capital u with grave
+    0x0057,  // capital w
+    0x1E80,  // -> capital w with grave
+    0x0059,  // capital y
+    0x1EF2,  // -> capital y with grave
+    0x0061,  // letter a
+    0x00E0,  // -> letter a with grave
+    0x0065,  // letter e
+    0x00E8,  // -> letter e with grave
+    0x0069,  // letter i
+    0x00EC,  // -> letter i with grave
+    0x006E,  // letter n
+    0x01F9,  // -> letter n with grave
+    0x006F,  // letter o
+    0x00F2,  // -> letter o with grave
+    0x0075,  // letter u
+    0x00F9,  // -> letter u with grave
+    0x0077,  // letter w
+    0x1E81,  // -> letter w with grave
+    0x0079,  // letter y
+    0x1EF3,  // -> letter y with grave
+    0x00C2,  // capital a with circumflex
+    0x1EA6,  // -> capital a with circumflex and grave
+    0x00CA,  // capital e with circumflex
+    0x1EC0,  // -> capital e with circumflex and grave
+    0x00D4,  // capital o with circumflex
+    0x1ED2,  // -> capital o with circumflex and grave
+    0x00DC,  // capital u with diaeresis
+    0x01DB,  // -> capital u with diaeresis and grave
+    0x00E2,  // letter a with circumflex
+    0x1EA7,  // -> letter a with circumflex and grave
+    0x00EA,  // letter e with circumflex
+    0x1EC1,  // -> letter e with circumflex and grave
+    0x00F4,  // letter o with circumflex
+    0x1ED3,  // -> letter o with circumflex and grave
+    0x00FC,  // letter u with diaeresis
+    0x01DC,  // -> letter u with diaeresis and grave
+    0x0102,  // capital a with breve
+    0x1EB0,  // -> capital a with breve and grave
+    0x0103,  // letter a with breve
+    0x1EB1,  // -> letter a with breve and grave
+    0x0112,  // capital e with macron
+    0x1E14,  // -> capital e with macron and grave
+    0x0113,  // letter e with macron
+    0x1E15,  // -> letter e with macron and grave
+    0x014C,  // capital o with macron
+    0x1E50,  // -> capital o with macron and grave
+    0x014D,  // letter o with macron
+    0x1E51,  // -> letter o with macron and grave
+    0x0391,  // capital alpha
+    0x1FBA,  // -> capital alpha with varia
+    0x0395,  // capital epsilon
+    0x1FC8,  // -> capital epsilon with varia
+    0x0397,  // capital eta
+    0x1FCA,  // -> capital eta with varia
+    0x0399,  // capital iota
+    0x1FDA,  // -> capital iota with varia
+    0x039F,  // capital omicron
+    0x1FF8,  // -> capital omicron with varia
+    0x03A5,  // capital upsilon
+    0x1FEA,  // -> capital upsilon with varia
+    0x03A9,  // capital omega
+    0x1FFA,  // -> capital omega with varia
+    0x03B1,  // letter alpha
+    0x1F70,  // -> letter alpha with varia
+    0x03B5,  // letter epsilon
+    0x1F72,  // -> letter epsilon with varia
+    0x03B7,  // letter eta
+    0x1F74,  // -> letter eta with varia
+    0x03B9,  // letter iota
+    0x1F76,  // -> letter iota with varia
+    0x03BF,  // letter omicron
+    0x1F78,  // -> letter omicron with varia
+    0x03C5,  // letter upsilon
+    0x1F7A,  // -> letter upsilon with varia
+    0x03C9,  // letter omega
+    0x1F7C,  // -> letter omega with varia
+    0x03CA,  // letter iota with dialytika
+    0x1FD2,  // -> letter iota with dialytika and varia
+    0x03CB,  // letter upsilon with dialytika
+    0x1FE2,  // -> letter upsilon with dialytika and varia
+    0x0415,  // cyrillic capital ie
+    0x0400,  // -> cyrillic capital ie with grave
+    0x0418,  // cyrillic capital i
+    0x040D,  // -> cyrillic capital i with grave
+    0x0435,  // cyrillic small ie
+    0x0450,  // -> cyrillic small ie with grave
+    0x0438,  // cyrillic small i
+    0x045D,  // -> cyrillic small i with grave
+    0x1F00,  // letter alpha with psili
+    0x1F02,  // -> letter alpha with psili and varia
+    0x1F01,  // letter alpha with dasia
+    0x1F03,  // -> letter alpha with dasia and varia
+    0x1F08,  // capital alpha with psili
+    0x1F0A,  // -> capital alpha with psili and varia
+    0x1F09,  // capital alpha with dasia
+    0x1F0B,  // -> capital alpha with dasia and varia
+    0x1F10,  // letter epsilon with psili
+    0x1F12,  // -> letter epsilon with psili and varia
+    0x1F11,  // letter epsilon with dasia
+    0x1F13,  // -> letter epsilon with dasia and varia
+    0x1F18,  // capital epsilon with psili
+    0x1F1A,  // -> capital epsilon with psili and varia
+    0x1F19,  // capital epsilon with dasia
+    0x1F1B,  // -> capital epsilon with dasia and varia
+    0x1F20,  // letter eta with psili
+    0x1F22,  // -> letter eta with psili and varia
+    0x1F21,  // letter eta with dasia
+    0x1F23,  // -> letter eta with dasia and varia
+    0x1F28,  // capital eta with psili
+    0x1F2A,  // -> capital eta with psili and varia
+    0x1F29,  // capital eta with dasia
+    0x1F2B,  // -> capital eta with dasia and varia
+    0x1F30,  // letter iota with psili
+    0x1F32,  // -> letter iota with psili and varia
+    0x1F31,  // letter iota with dasia
+    0x1F33,  // -> letter iota with dasia and varia
+    0x1F38,  // capital iota with psili
+    0x1F3A,  // -> capital iota with psili and varia
+    0x1F39,  // capital iota with dasia
+    0x1F3B,  // -> capital iota with dasia and varia
+    0x1F40,  // letter omicron with psili
+    0x1F42,  // -> letter omicron with psili and varia
+    0x1F41,  // letter omicron with dasia
+    0x1F43,  // -> letter omicron with dasia and varia
+    0x1F48,  // capital omicron with psili
+    0x1F4A,  // -> capital omicron with psili and varia
+    0x1F49,  // capital omicron with dasia
+    0x1F4B,  // -> capital omicron with dasia and varia
+    0x1F50,  // letter upsilon with psili
+    0x1F52,  // -> letter upsilon with psili and varia
+    0x1F51,  // letter upsilon with dasia
+    0x1F53,  // -> letter upsilon with dasia and varia
+    0x1F59,  // capital upsilon with dasia
+    0x1F5B,  // -> capital upsilon with dasia and varia
+    0x1F60,  // letter omega with psili
+    0x1F62,  // -> letter omega with psili and varia
+    0x1F61,  // letter omega with dasia
+    0x1F63,  // -> letter omega with dasia and varia
+    0x1F68,  // capital omega with psili
+    0x1F6A,  // -> capital omega with psili and varia
+    0x1F69,  // capital omega with dasia
+    0x1F6B,  // -> capital omega with dasia and varia
+    //   internal dead_key table
+    0x0007,          // number of entries
+    0x0302,  // combining circumflex accent
+    0x1622,
+    0x0304,  // combining macron
+    0x1632,
+    0x0306,  // combining breve
+    0x163E,
+    0x0308,  // combining diaeresis
+    0x1646,
+    0x0313,  // combining comma above
+    0x1652,
+    0x0314,  // combining reversed comma above
+    0x1670,
+    0x031B,  // combining horn
+    0x1690,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x159C:
+    //   prefix:
+    //     Compose
+    //     <grave accent>
+    //     <quotation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0055,  // capital u
+    0x01DB,  // -> capital u with diaeresis and grave
+    0x0075,  // letter u
+    0x01DC,  // -> letter u with diaeresis and grave
+    0x03B9,  // letter iota
+    0x1FD2,  // -> letter iota with dialytika and varia
+    0x03C5,  // letter upsilon
+    0x1FE2,  // -> letter upsilon with dialytika and varia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x15A8:
+    //   prefix:
+    //     Compose
+    //     <grave accent>
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000E,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0B,  // -> capital alpha with dasia and varia
+    0x0395,  // capital epsilon
+    0x1F1B,  // -> capital epsilon with dasia and varia
+    0x0397,  // capital eta
+    0x1F2B,  // -> capital eta with dasia and varia
+    0x0399,  // capital iota
+    0x1F3B,  // -> capital iota with dasia and varia
+    0x039F,  // capital omicron
+    0x1F4B,  // -> capital omicron with dasia and varia
+    0x03A5,  // capital upsilon
+    0x1F5B,  // -> capital upsilon with dasia and varia
+    0x03A9,  // capital omega
+    0x1F6B,  // -> capital omega with dasia and varia
+    0x03B1,  // letter alpha
+    0x1F03,  // -> letter alpha with dasia and varia
+    0x03B5,  // letter epsilon
+    0x1F13,  // -> letter epsilon with dasia and varia
+    0x03B7,  // letter eta
+    0x1F23,  // -> letter eta with dasia and varia
+    0x03B9,  // letter iota
+    0x1F33,  // -> letter iota with dasia and varia
+    0x03BF,  // letter omicron
+    0x1F43,  // -> letter omicron with dasia and varia
+    0x03C5,  // letter upsilon
+    0x1F53,  // -> letter upsilon with dasia and varia
+    0x03C9,  // letter omega
+    0x1F63,  // -> letter omega with dasia and varia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x15C8:
+    //   prefix:
+    //     Compose
+    //     <grave accent>
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000D,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0A,  // -> capital alpha with psili and varia
+    0x0395,  // capital epsilon
+    0x1F1A,  // -> capital epsilon with psili and varia
+    0x0397,  // capital eta
+    0x1F2A,  // -> capital eta with psili and varia
+    0x0399,  // capital iota
+    0x1F3A,  // -> capital iota with psili and varia
+    0x039F,  // capital omicron
+    0x1F4A,  // -> capital omicron with psili and varia
+    0x03A9,  // capital omega
+    0x1F6A,  // -> capital omega with psili and varia
+    0x03B1,  // letter alpha
+    0x1F02,  // -> letter alpha with psili and varia
+    0x03B5,  // letter epsilon
+    0x1F12,  // -> letter epsilon with psili and varia
+    0x03B7,  // letter eta
+    0x1F22,  // -> letter eta with psili and varia
+    0x03B9,  // letter iota
+    0x1F32,  // -> letter iota with psili and varia
+    0x03BF,  // letter omicron
+    0x1F42,  // -> letter omicron with psili and varia
+    0x03C5,  // letter upsilon
+    0x1F52,  // -> letter upsilon with psili and varia
+    0x03C9,  // letter omega
+    0x1F62,  // -> letter omega with psili and varia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x15E6:
+    //   prefix:
+    //     Compose
+    //     <grave accent>
+    //     <plus sign>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EDC,  // -> capital o with horn and grave
+    0x0055,  // capital u
+    0x1EEA,  // -> capital u with horn and grave
+    0x006F,  // letter o
+    0x1EDD,  // -> letter o with horn and grave
+    0x0075,  // letter u
+    0x1EEB,  // -> letter u with horn and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x15F2:
+    //   prefix:
+    //     Compose
+    //     <grave accent>
+    //     <circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EA6,  // -> capital a with circumflex and grave
+    0x0045,  // capital e
+    0x1EC0,  // -> capital e with circumflex and grave
+    0x004F,  // capital o
+    0x1ED2,  // -> capital o with circumflex and grave
+    0x0061,  // letter a
+    0x1EA7,  // -> letter a with circumflex and grave
+    0x0065,  // letter e
+    0x1EC1,  // -> letter e with circumflex and grave
+    0x006F,  // letter o
+    0x1ED3,  // -> letter o with circumflex and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1602:
+    //   prefix:
+    //     Compose
+    //     <grave accent>
+    //     <low line>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0045,  // capital e
+    0x1E14,  // -> capital e with macron and grave
+    0x004F,  // capital o
+    0x1E50,  // -> capital o with macron and grave
+    0x0065,  // letter e
+    0x1E15,  // -> letter e with macron and grave
+    0x006F,  // letter o
+    0x1E51,  // -> letter o with macron and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x160E:
+    //   prefix:
+    //     Compose
+    //     <grave accent>
+    //     <latin small letter b>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB0,  // -> capital a with breve and grave
+    0x0061,  // letter a
+    0x1EB1,  // -> letter a with breve and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1616:
+    //   prefix:
+    //     Compose
+    //     <grave accent>
+    //     <macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0045,  // capital e
+    0x1E14,  // -> capital e with macron and grave
+    0x004F,  // capital o
+    0x1E50,  // -> capital o with macron and grave
+    0x0065,  // letter e
+    0x1E15,  // -> letter e with macron and grave
+    0x006F,  // letter o
+    0x1E51,  // -> letter o with macron and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1622:
+    //   prefix:
+    //     Compose
+    //     <grave accent>
+    //     Dead<combining circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EA6,  // -> capital a with circumflex and grave
+    0x0045,  // capital e
+    0x1EC0,  // -> capital e with circumflex and grave
+    0x004F,  // capital o
+    0x1ED2,  // -> capital o with circumflex and grave
+    0x0061,  // letter a
+    0x1EA7,  // -> letter a with circumflex and grave
+    0x0065,  // letter e
+    0x1EC1,  // -> letter e with circumflex and grave
+    0x006F,  // letter o
+    0x1ED3,  // -> letter o with circumflex and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1632:
+    //   prefix:
+    //     Compose
+    //     <grave accent>
+    //     Dead<combining macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0045,  // capital e
+    0x1E14,  // -> capital e with macron and grave
+    0x004F,  // capital o
+    0x1E50,  // -> capital o with macron and grave
+    0x0065,  // letter e
+    0x1E15,  // -> letter e with macron and grave
+    0x006F,  // letter o
+    0x1E51,  // -> letter o with macron and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x163E:
+    //   prefix:
+    //     Compose
+    //     <grave accent>
+    //     Dead<combining breve>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB0,  // -> capital a with breve and grave
+    0x0061,  // letter a
+    0x1EB1,  // -> letter a with breve and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1646:
+    //   prefix:
+    //     Compose
+    //     <grave accent>
+    //     Dead<combining diaeresis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0055,  // capital u
+    0x01DB,  // -> capital u with diaeresis and grave
+    0x0075,  // letter u
+    0x01DC,  // -> letter u with diaeresis and grave
+    0x03B9,  // letter iota
+    0x1FD2,  // -> letter iota with dialytika and varia
+    0x03C5,  // letter upsilon
+    0x1FE2,  // -> letter upsilon with dialytika and varia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1652:
+    //   prefix:
+    //     Compose
+    //     <grave accent>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000D,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0A,  // -> capital alpha with psili and varia
+    0x0395,  // capital epsilon
+    0x1F1A,  // -> capital epsilon with psili and varia
+    0x0397,  // capital eta
+    0x1F2A,  // -> capital eta with psili and varia
+    0x0399,  // capital iota
+    0x1F3A,  // -> capital iota with psili and varia
+    0x039F,  // capital omicron
+    0x1F4A,  // -> capital omicron with psili and varia
+    0x03A9,  // capital omega
+    0x1F6A,  // -> capital omega with psili and varia
+    0x03B1,  // letter alpha
+    0x1F02,  // -> letter alpha with psili and varia
+    0x03B5,  // letter epsilon
+    0x1F12,  // -> letter epsilon with psili and varia
+    0x03B7,  // letter eta
+    0x1F22,  // -> letter eta with psili and varia
+    0x03B9,  // letter iota
+    0x1F32,  // -> letter iota with psili and varia
+    0x03BF,  // letter omicron
+    0x1F42,  // -> letter omicron with psili and varia
+    0x03C5,  // letter upsilon
+    0x1F52,  // -> letter upsilon with psili and varia
+    0x03C9,  // letter omega
+    0x1F62,  // -> letter omega with psili and varia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1670:
+    //   prefix:
+    //     Compose
+    //     <grave accent>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000E,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0B,  // -> capital alpha with dasia and varia
+    0x0395,  // capital epsilon
+    0x1F1B,  // -> capital epsilon with dasia and varia
+    0x0397,  // capital eta
+    0x1F2B,  // -> capital eta with dasia and varia
+    0x0399,  // capital iota
+    0x1F3B,  // -> capital iota with dasia and varia
+    0x039F,  // capital omicron
+    0x1F4B,  // -> capital omicron with dasia and varia
+    0x03A5,  // capital upsilon
+    0x1F5B,  // -> capital upsilon with dasia and varia
+    0x03A9,  // capital omega
+    0x1F6B,  // -> capital omega with dasia and varia
+    0x03B1,  // letter alpha
+    0x1F03,  // -> letter alpha with dasia and varia
+    0x03B5,  // letter epsilon
+    0x1F13,  // -> letter epsilon with dasia and varia
+    0x03B7,  // letter eta
+    0x1F23,  // -> letter eta with dasia and varia
+    0x03B9,  // letter iota
+    0x1F33,  // -> letter iota with dasia and varia
+    0x03BF,  // letter omicron
+    0x1F43,  // -> letter omicron with dasia and varia
+    0x03C5,  // letter upsilon
+    0x1F53,  // -> letter upsilon with dasia and varia
+    0x03C9,  // letter omega
+    0x1F63,  // -> letter omega with dasia and varia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1690:
+    //   prefix:
+    //     Compose
+    //     <grave accent>
+    //     Dead<combining horn>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EDC,  // -> capital o with horn and grave
+    0x0055,  // capital u
+    0x1EEA,  // -> capital u with horn and grave
+    0x006F,  // letter o
+    0x1EDD,  // -> letter o with horn and grave
+    0x0075,  // letter u
+    0x1EEB,  // -> letter u with horn and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x169C:
+    //   prefix:
+    //     Compose
+    //     <latin small letter a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000F,          // number of entries
+    0x0022,  // quotation mark
+    0x00E4,  // -> letter a with diaeresis
+    0x0027,  // apostrophe
+    0x00E1,  // -> letter a with acute
+    0x0028,  // left parenthesis
+    0x0103,  // -> letter a with breve
+    0x002A,  // asterisk
+    0x00E5,  // -> letter a with ring above
+    0x002C,  // comma
+    0x0105,  // -> letter a with ogonek
+    0x002D,  // hyphen-minus
+    0x0101,  // -> letter a with macron
+    0x003E,  // greater-than sign
+    0x00E2,  // -> letter a with circumflex
+    0x005E,  // circumflex accent
+    0x00E2,  // -> letter a with circumflex
+    0x005F,  // low line
+    0x00AA,  // -> feminine ordinal indicator
+    0x0060,  // grave accent
+    0x00E0,  // -> letter a with grave
+    0x0061,  // letter a
+    0x00E5,  // -> letter a with ring above
+    0x0065,  // letter e
+    0x00E6,  // -> letter ae
+    0x007E,  // tilde
+    0x00E3,  // -> letter a with tilde
+    0x00A8,  // diaeresis
+    0x00E4,  // -> letter a with diaeresis
+    0x00B4,  // acute accent
+    0x00E1,  // -> letter a with acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x16BE:
+    //   prefix:
+    //     Compose
+    //     <latin small letter b>
+    //   internal character table
+    0x0003,          // number of entries
+    0x0021,  // exclamation mark
+    0x170E,
+    0x002C,  // comma
+    0x1716,
+    0x00B8,  // cedilla
+    0x171E,
+    //   leaf character table
+    0x0021,          // number of entries
+    0x002E,  // full stop
+    0x1E03,  // -> letter b with dot above
+    0x0041,  // capital a
+    0x0102,  // -> capital a with breve
+    0x0045,  // capital e
+    0x0114,  // -> capital e with breve
+    0x0047,  // capital g
+    0x011E,  // -> capital g with breve
+    0x0049,  // capital i
+    0x012C,  // -> capital i with breve
+    0x004F,  // capital o
+    0x014E,  // -> capital o with breve
+    0x0055,  // capital u
+    0x016C,  // -> capital u with breve
+    0x0061,  // letter a
+    0x0103,  // -> letter a with breve
+    0x0065,  // letter e
+    0x0115,  // -> letter e with breve
+    0x0067,  // letter g
+    0x011F,  // -> letter g with breve
+    0x0069,  // letter i
+    0x012D,  // -> letter i with breve
+    0x006F,  // letter o
+    0x014F,  // -> letter o with breve
+    0x0075,  // letter u
+    0x016D,  // -> letter u with breve
+    0x0228,  // capital e with cedilla
+    0x1E1C,  // -> capital e with cedilla and breve
+    0x0229,  // letter e with cedilla
+    0x1E1D,  // -> letter e with cedilla and breve
+    0x0391,  // capital alpha
+    0x1FB8,  // -> capital alpha with vrachy
+    0x0399,  // capital iota
+    0x1FD8,  // -> capital iota with vrachy
+    0x03A5,  // capital upsilon
+    0x1FE8,  // -> capital upsilon with vrachy
+    0x03B1,  // letter alpha
+    0x1FB0,  // -> letter alpha with vrachy
+    0x03B9,  // letter iota
+    0x1FD0,  // -> letter iota with vrachy
+    0x03C5,  // letter upsilon
+    0x1FE0,  // -> letter upsilon with vrachy
+    0x0410,  // cyrillic capital a
+    0x04D0,  // -> cyrillic capital a with breve
+    0x0415,  // cyrillic capital ie
+    0x04D6,  // -> cyrillic capital ie with breve
+    0x0416,  // cyrillic capital zhe
+    0x04C1,  // -> cyrillic capital zhe with breve
+    0x0418,  // cyrillic capital i
+    0x0419,  // -> cyrillic capital short i
+    0x0423,  // cyrillic capital u
+    0x040E,  // -> cyrillic capital short u
+    0x0430,  // cyrillic small a
+    0x04D1,  // -> cyrillic small a with breve
+    0x0435,  // cyrillic small ie
+    0x04D7,  // -> cyrillic small ie with breve
+    0x0436,  // cyrillic small zhe
+    0x04C2,  // -> cyrillic small zhe with breve
+    0x0438,  // cyrillic small i
+    0x0439,  // -> cyrillic small short i
+    0x0443,  // cyrillic small u
+    0x045E,  // -> cyrillic small short u
+    0x1EA0,  // capital a with dot below
+    0x1EB6,  // -> capital a with breve and dot below
+    0x1EA1,  // letter a with dot below
+    0x1EB7,  // -> letter a with breve and dot below
+    //   internal dead_key table
+    0x0002,          // number of entries
+    0x0323,  // combining dot below
+    0x1726,
+    0x0327,  // combining cedilla
+    0x172E,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x170E:
+    //   prefix:
+    //     Compose
+    //     <latin small letter b>
+    //     <exclamation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB6,  // -> capital a with breve and dot below
+    0x0061,  // letter a
+    0x1EB7,  // -> letter a with breve and dot below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1716:
+    //   prefix:
+    //     Compose
+    //     <latin small letter b>
+    //     <comma>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0045,  // capital e
+    0x1E1C,  // -> capital e with cedilla and breve
+    0x0065,  // letter e
+    0x1E1D,  // -> letter e with cedilla and breve
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x171E:
+    //   prefix:
+    //     Compose
+    //     <latin small letter b>
+    //     <cedilla>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0045,  // capital e
+    0x1E1C,  // -> capital e with cedilla and breve
+    0x0065,  // letter e
+    0x1E1D,  // -> letter e with cedilla and breve
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1726:
+    //   prefix:
+    //     Compose
+    //     <latin small letter b>
+    //     Dead<combining dot below>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB6,  // -> capital a with breve and dot below
+    0x0061,  // letter a
+    0x1EB7,  // -> letter a with breve and dot below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x172E:
+    //   prefix:
+    //     Compose
+    //     <latin small letter b>
+    //     Dead<combining cedilla>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0045,  // capital e
+    0x1E1C,  // -> capital e with cedilla and breve
+    0x0065,  // letter e
+    0x1E1D,  // -> letter e with cedilla and breve
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1736:
+    //   prefix:
+    //     Compose
+    //     <latin small letter c>
+    //   internal character table
+    0x0001,          // number of entries
+    0x0022,  // quotation mark
+    0x1798,
+    //   leaf character table
+    0x002D,          // number of entries
+    0x0027,  // apostrophe
+    0x0107,  // -> letter c with acute
+    0x002C,  // comma
+    0x00E7,  // -> letter c with cedilla
+    0x002E,  // full stop
+    0x010B,  // -> letter c with dot above
+    0x002F,  // solidus
+    0x00A2,  // -> cent sign
+    0x0030,  // digit zero
+    0x00A9,  // -> copyright sign
+    0x003C,  // less-than sign
+    0x010D,  // -> letter c with caron
+    0x003D,  // equals sign
+    0x20AC,  // -> euro sign
+    0x0041,  // capital a
+    0x01CD,  // -> capital a with caron
+    0x0043,  // capital c
+    0x010C,  // -> capital c with caron
+    0x0044,  // capital d
+    0x010E,  // -> capital d with caron
+    0x0045,  // capital e
+    0x011A,  // -> capital e with caron
+    0x0047,  // capital g
+    0x01E6,  // -> capital g with caron
+    0x0048,  // capital h
+    0x021E,  // -> capital h with caron
+    0x0049,  // capital i
+    0x01CF,  // -> capital i with caron
+    0x004B,  // capital k
+    0x01E8,  // -> capital k with caron
+    0x004C,  // capital l
+    0x013D,  // -> capital l with caron
+    0x004E,  // capital n
+    0x0147,  // -> capital n with caron
+    0x004F,  // capital o
+    0x01D1,  // -> capital o with caron
+    0x0052,  // capital r
+    0x0158,  // -> capital r with caron
+    0x0053,  // capital s
+    0x0160,  // -> capital s with caron
+    0x0054,  // capital t
+    0x0164,  // -> capital t with caron
+    0x0055,  // capital u
+    0x01D3,  // -> capital u with caron
+    0x005A,  // capital z
+    0x017D,  // -> capital z with caron
+    0x0061,  // letter a
+    0x01CE,  // -> letter a with caron
+    0x0063,  // letter c
+    0x010D,  // -> letter c with caron
+    0x0064,  // letter d
+    0x010F,  // -> letter d with caron
+    0x0065,  // letter e
+    0x011B,  // -> letter e with caron
+    0x0067,  // letter g
+    0x01E7,  // -> letter g with caron
+    0x0068,  // letter h
+    0x021F,  // -> letter h with caron
+    0x0069,  // letter i
+    0x01D0,  // -> letter i with caron
+    0x006A,  // letter j
+    0x01F0,  // -> letter j with caron
+    0x006B,  // letter k
+    0x01E9,  // -> letter k with caron
+    0x006C,  // letter l
+    0x013E,  // -> letter l with caron
+    0x006E,  // letter n
+    0x0148,  // -> letter n with caron
+    0x006F,  // letter o
+    0x01D2,  // -> letter o with caron
+    0x0072,  // letter r
+    0x0159,  // -> letter r with caron
+    0x0073,  // letter s
+    0x0161,  // -> letter s with caron
+    0x0074,  // letter t
+    0x0165,  // -> letter t with caron
+    0x0075,  // letter u
+    0x01D4,  // -> letter u with caron
+    0x007A,  // letter z
+    0x017E,  // -> letter z with caron
+    0x007C,  // vertical line
+    0x00A2,  // -> cent sign
+    0x00DC,  // capital u with diaeresis
+    0x01D9,  // -> capital u with diaeresis and caron
+    0x00FC,  // letter u with diaeresis
+    0x01DA,  // -> letter u with diaeresis and caron
+    0x0292,  // letter ezh
+    0x01EF,  // -> letter ezh with caron
+    0x02C7,  // caron
+    0x01EE,  // -> capital ezh with caron
+    //   internal dead_key table
+    0x0001,          // number of entries
+    0x0308,  // combining diaeresis
+    0x17A0,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1798:
+    //   prefix:
+    //     Compose
+    //     <latin small letter c>
+    //     <quotation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0055,  // capital u
+    0x01D9,  // -> capital u with diaeresis and caron
+    0x0075,  // letter u
+    0x01DA,  // -> letter u with diaeresis and caron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x17A0:
+    //   prefix:
+    //     Compose
+    //     <latin small letter c>
+    //     Dead<combining diaeresis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0055,  // capital u
+    0x01D9,  // -> capital u with diaeresis and caron
+    0x0075,  // letter u
+    0x01DA,  // -> letter u with diaeresis and caron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x17A8:
+    //   prefix:
+    //     Compose
+    //     <latin small letter d>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x002D,  // hyphen-minus
+    0x20AB,  // -> dong sign
+    0x002E,  // full stop
+    0x1E0B,  // -> letter d with dot above
+    0x003C,  // less-than sign
+    0x010F,  // -> letter d with caron
+    0x0068,  // letter h
+    0x00F0,  // -> letter eth
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x17B4:
+    //   prefix:
+    //     Compose
+    //     <latin small letter e>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000E,          // number of entries
+    0x0022,  // quotation mark
+    0x00EB,  // -> letter e with diaeresis
+    0x0027,  // apostrophe
+    0x00E9,  // -> letter e with acute
+    0x002C,  // comma
+    0x0119,  // -> letter e with ogonek
+    0x002D,  // hyphen-minus
+    0x0113,  // -> letter e with macron
+    0x002E,  // full stop
+    0x0117,  // -> letter e with dot above
+    0x003C,  // less-than sign
+    0x011B,  // -> letter e with caron
+    0x003D,  // equals sign
+    0x20AC,  // -> euro sign
+    0x003E,  // greater-than sign
+    0x00EA,  // -> letter e with circumflex
+    0x005E,  // circumflex accent
+    0x00EA,  // -> letter e with circumflex
+    0x005F,  // low line
+    0x0113,  // -> letter e with macron
+    0x0060,  // grave accent
+    0x00E8,  // -> letter e with grave
+    0x0065,  // letter e
+    0x0259,  // -> letter schwa
+    0x00A8,  // diaeresis
+    0x00EB,  // -> letter e with diaeresis
+    0x00B4,  // acute accent
+    0x00E9,  // -> letter e with acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x17D4:
+    //   prefix:
+    //     Compose
+    //     <latin small letter f>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x002E,  // full stop
+    0x1E1F,  // -> letter f with dot above
+    0x0053,  // capital s
+    0x017F,  // -> letter long s
+    0x0073,  // letter s
+    0x017F,  // -> letter long s
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x17DE:
+    //   prefix:
+    //     Compose
+    //     <latin small letter g>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0005,          // number of entries
+    0x0028,  // left parenthesis
+    0x011F,  // -> letter g with breve
+    0x002C,  // comma
+    0x0123,  // -> letter g with cedilla
+    0x002E,  // full stop
+    0x0121,  // -> letter g with dot above
+    0x0055,  // capital u
+    0x011F,  // -> letter g with breve
+    0x02D8,  // breve
+    0x011F,  // -> letter g with breve
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x17EC:
+    //   prefix:
+    //     Compose
+    //     <latin small letter i>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000C,          // number of entries
+    0x0022,  // quotation mark
+    0x00EF,  // -> letter i with diaeresis
+    0x0027,  // apostrophe
+    0x00ED,  // -> letter i with acute
+    0x002C,  // comma
+    0x012F,  // -> letter i with ogonek
+    0x002D,  // hyphen-minus
+    0x012B,  // -> letter i with macron
+    0x002E,  // full stop
+    0x0131,  // -> letter dotless i
+    0x003E,  // greater-than sign
+    0x00EE,  // -> letter i with circumflex
+    0x005E,  // circumflex accent
+    0x00EE,  // -> letter i with circumflex
+    0x005F,  // low line
+    0x012B,  // -> letter i with macron
+    0x0060,  // grave accent
+    0x00EC,  // -> letter i with grave
+    0x007E,  // tilde
+    0x0129,  // -> letter i with tilde
+    0x00A8,  // diaeresis
+    0x00EF,  // -> letter i with diaeresis
+    0x00B4,  // acute accent
+    0x00ED,  // -> letter i with acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1808:
+    //   prefix:
+    //     Compose
+    //     <latin small letter k>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x002C,  // comma
+    0x0137,  // -> letter k with cedilla
+    0x006B,  // letter k
+    0x0138,  // -> letter kra
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1810:
+    //   prefix:
+    //     Compose
+    //     <latin small letter l>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0007,          // number of entries
+    0x0027,  // apostrophe
+    0x013A,  // -> letter l with acute
+    0x002C,  // comma
+    0x013C,  // -> letter l with cedilla
+    0x002D,  // hyphen-minus
+    0x00A3,  // -> pound sign
+    0x002F,  // solidus
+    0x0142,  // -> letter l with stroke
+    0x003C,  // less-than sign
+    0x013E,  // -> letter l with caron
+    0x003D,  // equals sign
+    0x00A3,  // -> pound sign
+    0x0076,  // letter v
+    0x007C,  // -> vertical line
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1822:
+    //   prefix:
+    //     Compose
+    //     <latin small letter m>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x002E,  // full stop
+    0x1E41,  // -> letter m with dot above
+    0x002F,  // solidus
+    0x20A5,  // -> mill sign
+    0x0075,  // letter u
+    0x00B5,  // -> micro sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x182C:
+    //   prefix:
+    //     Compose
+    //     <latin small letter n>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0027,  // apostrophe
+    0x0144,  // -> letter n with acute
+    0x002C,  // comma
+    0x0146,  // -> letter n with cedilla
+    0x002D,  // hyphen-minus
+    0x00F1,  // -> letter n with tilde
+    0x003C,  // less-than sign
+    0x0148,  // -> letter n with caron
+    0x0067,  // letter g
+    0x014B,  // -> letter eng
+    0x007E,  // tilde
+    0x00F1,  // -> letter n with tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x183C:
+    //   prefix:
+    //     Compose
+    //     <latin small letter o>
+    //   internal character table
+    0x0001,          // number of entries
+    0x0027,  // apostrophe
+    0x1876,
+    //   leaf character table
+    0x001A,          // number of entries
+    0x0022,  // quotation mark
+    0x00F6,  // -> letter o with diaeresis
+    0x0027,  // apostrophe
+    0x00F3,  // -> letter o with acute
+    0x002D,  // hyphen-minus
+    0x014D,  // -> letter o with macron
+    0x002F,  // solidus
+    0x00F8,  // -> letter o with stroke
+    0x003E,  // greater-than sign
+    0x00F4,  // -> letter o with circumflex
+    0x0041,  // capital a
+    0x00C5,  // -> capital a with ring above
+    0x0043,  // capital c
+    0x00A9,  // -> copyright sign
+    0x0052,  // capital r
+    0x00AE,  // -> registered sign
+    0x0055,  // capital u
+    0x016E,  // -> capital u with ring above
+    0x0058,  // capital x
+    0x00A4,  // -> currency sign
+    0x005E,  // circumflex accent
+    0x00F4,  // -> letter o with circumflex
+    0x005F,  // low line
+    0x00BA,  // -> masculine ordinal indicator
+    0x0060,  // grave accent
+    0x00F2,  // -> letter o with grave
+    0x0061,  // letter a
+    0x00E5,  // -> letter a with ring above
+    0x0063,  // letter c
+    0x00A9,  // -> copyright sign
+    0x0065,  // letter e
+    0x0153,  // -> ligature oe
+    0x006F,  // letter o
+    0x00B0,  // -> degree sign
+    0x0072,  // letter r
+    0x00AE,  // -> registered sign
+    0x0073,  // letter s
+    0x00A7,  // -> section sign
+    0x0075,  // letter u
+    0x016F,  // -> letter u with ring above
+    0x0077,  // letter w
+    0x1E98,  // -> letter w with ring above
+    0x0078,  // letter x
+    0x00A4,  // -> currency sign
+    0x0079,  // letter y
+    0x1E99,  // -> letter y with ring above
+    0x007E,  // tilde
+    0x00F5,  // -> letter o with tilde
+    0x00A8,  // diaeresis
+    0x00F6,  // -> letter o with diaeresis
+    0x00B4,  // acute accent
+    0x00F3,  // -> letter o with acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1876:
+    //   prefix:
+    //     Compose
+    //     <latin small letter o>
+    //     <apostrophe>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x01FA,  // -> capital a with ring above and acute
+    0x0061,  // letter a
+    0x01FB,  // -> letter a with ring above and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x187E:
+    //   prefix:
+    //     Compose
+    //     <latin small letter p>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0021,  // exclamation mark
+    0x00B6,  // -> pilcrow sign
+    0x002E,  // full stop
+    0x1E57,  // -> letter p with dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1886:
+    //   prefix:
+    //     Compose
+    //     <latin small letter r>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x0027,  // apostrophe
+    0x0155,  // -> letter r with acute
+    0x002C,  // comma
+    0x0157,  // -> letter r with cedilla
+    0x003C,  // less-than sign
+    0x0159,  // -> letter r with caron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1890:
+    //   prefix:
+    //     Compose
+    //     <latin small letter s>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000E,          // number of entries
+    0x0021,  // exclamation mark
+    0x00A7,  // -> section sign
+    0x0027,  // apostrophe
+    0x015B,  // -> letter s with acute
+    0x002C,  // comma
+    0x015F,  // -> letter s with cedilla
+    0x002E,  // full stop
+    0x1E61,  // -> letter s with dot above
+    0x0030,  // digit zero
+    0x00A7,  // -> section sign
+    0x0031,  // digit one
+    0x00B9,  // -> superscript one
+    0x0032,  // digit two
+    0x00B2,  // -> superscript two
+    0x0033,  // digit three
+    0x00B3,  // -> superscript three
+    0x003C,  // less-than sign
+    0x0161,  // -> letter s with caron
+    0x004D,  // capital m
+    0x2120,  // -> service mark
+    0x006D,  // letter m
+    0x2120,  // -> service mark
+    0x006F,  // letter o
+    0x00A7,  // -> section sign
+    0x0073,  // letter s
+    0x00DF,  // -> letter sharp s
+    0x00B8,  // cedilla
+    0x015F,  // -> letter s with cedilla
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x18B0:
+    //   prefix:
+    //     Compose
+    //     <latin small letter t>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0007,          // number of entries
+    0x002D,  // hyphen-minus
+    0x0167,  // -> letter t with stroke
+    0x002E,  // full stop
+    0x1E6B,  // -> letter t with dot above
+    0x002F,  // solidus
+    0x0167,  // -> letter t with stroke
+    0x003C,  // less-than sign
+    0x0165,  // -> letter t with caron
+    0x004D,  // capital m
+    0x2122,  // -> trade mark sign
+    0x0068,  // letter h
+    0x00FE,  // -> letter thorn
+    0x006D,  // letter m
+    0x2122,  // -> trade mark sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x18C2:
+    //   prefix:
+    //     Compose
+    //     <latin small letter u>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000E,          // number of entries
+    0x0022,  // quotation mark
+    0x00FC,  // -> letter u with diaeresis
+    0x0027,  // apostrophe
+    0x00FA,  // -> letter u with acute
+    0x002A,  // asterisk
+    0x016F,  // -> letter u with ring above
+    0x002C,  // comma
+    0x0173,  // -> letter u with ogonek
+    0x002D,  // hyphen-minus
+    0x016B,  // -> letter u with macron
+    0x002F,  // solidus
+    0x00B5,  // -> micro sign
+    0x003E,  // greater-than sign
+    0x00FB,  // -> letter u with circumflex
+    0x005E,  // circumflex accent
+    0x00FB,  // -> letter u with circumflex
+    0x005F,  // low line
+    0x016B,  // -> letter u with macron
+    0x0060,  // grave accent
+    0x00F9,  // -> letter u with grave
+    0x0075,  // letter u
+    0x016D,  // -> letter u with breve
+    0x007E,  // tilde
+    0x0169,  // -> letter u with tilde
+    0x00A8,  // diaeresis
+    0x00FC,  // -> letter u with diaeresis
+    0x00B4,  // acute accent
+    0x00FA,  // -> letter u with acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x18E2:
+    //   prefix:
+    //     Compose
+    //     <latin small letter v>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x005A,  // capital z
+    0x017D,  // -> capital z with caron
+    0x006C,  // letter l
+    0x007C,  // -> vertical line
+    0x007A,  // letter z
+    0x017E,  // -> letter z with caron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x18EC:
+    //   prefix:
+    //     Compose
+    //     <latin small letter w>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x005E,  // circumflex accent
+    0x0175,  // -> letter w with circumflex
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x18F2:
+    //   prefix:
+    //     Compose
+    //     <latin small letter x>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0030,  // digit zero
+    0x00A4,  // -> currency sign
+    0x004F,  // capital o
+    0x00A4,  // -> currency sign
+    0x006F,  // letter o
+    0x00A4,  // -> currency sign
+    0x0078,  // letter x
+    0x00D7,  // -> multiplication sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x18FE:
+    //   prefix:
+    //     Compose
+    //     <latin small letter y>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0007,          // number of entries
+    0x0022,  // quotation mark
+    0x00FF,  // -> letter y with diaeresis
+    0x0027,  // apostrophe
+    0x00FD,  // -> letter y with acute
+    0x002D,  // hyphen-minus
+    0x00A5,  // -> yen sign
+    0x003D,  // equals sign
+    0x00A5,  // -> yen sign
+    0x005E,  // circumflex accent
+    0x0177,  // -> letter y with circumflex
+    0x00A8,  // diaeresis
+    0x00FF,  // -> letter y with diaeresis
+    0x00B4,  // acute accent
+    0x00FD,  // -> letter y with acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1910:
+    //   prefix:
+    //     Compose
+    //     <latin small letter z>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x0027,  // apostrophe
+    0x017A,  // -> letter z with acute
+    0x002E,  // full stop
+    0x017C,  // -> letter z with dot above
+    0x003C,  // less-than sign
+    0x017E,  // -> letter z with caron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x191A:
+    //   prefix:
+    //     Compose
+    //     <vertical line>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0043,  // capital c
+    0x00A2,  // -> cent sign
+    0x0063,  // letter c
+    0x00A2,  // -> cent sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1922:
+    //   prefix:
+    //     Compose
+    //     <tilde>
+    //   internal character table
+    0x0006,          // number of entries
+    0x0022,  // quotation mark
+    0x19A4,
+    0x0028,  // left parenthesis
+    0x19AC,
+    0x0029,  // right parenthesis
+    0x19C4,
+    0x002B,  // plus sign
+    0x19DA,
+    0x005E,  // circumflex accent
+    0x19E6,
+    0x0062,  // letter b
+    0x19F6,
+    //   leaf character table
+    0x0033,          // number of entries
+    0x0020,  // space
+    0x007E,  // -> tilde
+    0x0041,  // capital a
+    0x00C3,  // -> capital a with tilde
+    0x0045,  // capital e
+    0x1EBC,  // -> capital e with tilde
+    0x0049,  // capital i
+    0x0128,  // -> capital i with tilde
+    0x004E,  // capital n
+    0x00D1,  // -> capital n with tilde
+    0x004F,  // capital o
+    0x00D5,  // -> capital o with tilde
+    0x0055,  // capital u
+    0x0168,  // -> capital u with tilde
+    0x0056,  // capital v
+    0x1E7C,  // -> capital v with tilde
+    0x0059,  // capital y
+    0x1EF8,  // -> capital y with tilde
+    0x0061,  // letter a
+    0x00E3,  // -> letter a with tilde
+    0x0065,  // letter e
+    0x1EBD,  // -> letter e with tilde
+    0x0069,  // letter i
+    0x0129,  // -> letter i with tilde
+    0x006E,  // letter n
+    0x00F1,  // -> letter n with tilde
+    0x006F,  // letter o
+    0x00F5,  // -> letter o with tilde
+    0x0075,  // letter u
+    0x0169,  // -> letter u with tilde
+    0x0076,  // letter v
+    0x1E7D,  // -> letter v with tilde
+    0x0079,  // letter y
+    0x1EF9,  // -> letter y with tilde
+    0x00C2,  // capital a with circumflex
+    0x1EAA,  // -> capital a with circumflex and tilde
+    0x00CA,  // capital e with circumflex
+    0x1EC4,  // -> capital e with circumflex and tilde
+    0x00D4,  // capital o with circumflex
+    0x1ED6,  // -> capital o with circumflex and tilde
+    0x00E2,  // letter a with circumflex
+    0x1EAB,  // -> letter a with circumflex and tilde
+    0x00EA,  // letter e with circumflex
+    0x1EC5,  // -> letter e with circumflex and tilde
+    0x00F4,  // letter o with circumflex
+    0x1ED7,  // -> letter o with circumflex and tilde
+    0x0102,  // capital a with breve
+    0x1EB4,  // -> capital a with breve and tilde
+    0x0103,  // letter a with breve
+    0x1EB5,  // -> letter a with breve and tilde
+    0x03B1,  // letter alpha
+    0x1FB6,  // -> letter alpha with perispomeni
+    0x03B7,  // letter eta
+    0x1FC6,  // -> letter eta with perispomeni
+    0x03B9,  // letter iota
+    0x1FD6,  // -> letter iota with perispomeni
+    0x03C5,  // letter upsilon
+    0x1FE6,  // -> letter upsilon with perispomeni
+    0x03C9,  // letter omega
+    0x1FF6,  // -> letter omega with perispomeni
+    0x03CA,  // letter iota with dialytika
+    0x1FD7,  // -> letter iota with dialytika and perispomeni
+    0x03CB,  // letter upsilon with dialytika
+    0x1FE7,  // -> letter upsilon with dialytika and perispomeni
+    0x1F00,  // letter alpha with psili
+    0x1F06,  // -> letter alpha with psili and perispomeni
+    0x1F01,  // letter alpha with dasia
+    0x1F07,  // -> letter alpha with dasia and perispomeni
+    0x1F08,  // capital alpha with psili
+    0x1F0E,  // -> capital alpha with psili and perispomeni
+    0x1F09,  // capital alpha with dasia
+    0x1F0F,  // -> capital alpha with dasia and perispomeni
+    0x1F20,  // letter eta with psili
+    0x1F26,  // -> letter eta with psili and perispomeni
+    0x1F21,  // letter eta with dasia
+    0x1F27,  // -> letter eta with dasia and perispomeni
+    0x1F28,  // capital eta with psili
+    0x1F2E,  // -> capital eta with psili and perispomeni
+    0x1F29,  // capital eta with dasia
+    0x1F2F,  // -> capital eta with dasia and perispomeni
+    0x1F30,  // letter iota with psili
+    0x1F36,  // -> letter iota with psili and perispomeni
+    0x1F31,  // letter iota with dasia
+    0x1F37,  // -> letter iota with dasia and perispomeni
+    0x1F38,  // capital iota with psili
+    0x1F3E,  // -> capital iota with psili and perispomeni
+    0x1F39,  // capital iota with dasia
+    0x1F3F,  // -> capital iota with dasia and perispomeni
+    0x1F50,  // letter upsilon with psili
+    0x1F56,  // -> letter upsilon with psili and perispomeni
+    0x1F51,  // letter upsilon with dasia
+    0x1F57,  // -> letter upsilon with dasia and perispomeni
+    0x1F59,  // capital upsilon with dasia
+    0x1F5F,  // -> capital upsilon with dasia and perispomeni
+    0x1F60,  // letter omega with psili
+    0x1F66,  // -> letter omega with psili and perispomeni
+    0x1F61,  // letter omega with dasia
+    0x1F67,  // -> letter omega with dasia and perispomeni
+    0x1F68,  // capital omega with psili
+    0x1F6E,  // -> capital omega with psili and perispomeni
+    0x1F69,  // capital omega with dasia
+    0x1F6F,  // -> capital omega with dasia and perispomeni
+    //   internal dead_key table
+    0x0006,          // number of entries
+    0x0302,  // combining circumflex accent
+    0x19FE,
+    0x0306,  // combining breve
+    0x1A0E,
+    0x0308,  // combining diaeresis
+    0x1A16,
+    0x0313,  // combining comma above
+    0x1A1E,
+    0x0314,  // combining reversed comma above
+    0x1A34,
+    0x031B,  // combining horn
+    0x1A4C,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x19A4:
+    //   prefix:
+    //     Compose
+    //     <tilde>
+    //     <quotation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x03B9,  // letter iota
+    0x1FD7,  // -> letter iota with dialytika and perispomeni
+    0x03C5,  // letter upsilon
+    0x1FE7,  // -> letter upsilon with dialytika and perispomeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x19AC:
+    //   prefix:
+    //     Compose
+    //     <tilde>
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000A,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0F,  // -> capital alpha with dasia and perispomeni
+    0x0397,  // capital eta
+    0x1F2F,  // -> capital eta with dasia and perispomeni
+    0x0399,  // capital iota
+    0x1F3F,  // -> capital iota with dasia and perispomeni
+    0x03A5,  // capital upsilon
+    0x1F5F,  // -> capital upsilon with dasia and perispomeni
+    0x03A9,  // capital omega
+    0x1F6F,  // -> capital omega with dasia and perispomeni
+    0x03B1,  // letter alpha
+    0x1F07,  // -> letter alpha with dasia and perispomeni
+    0x03B7,  // letter eta
+    0x1F27,  // -> letter eta with dasia and perispomeni
+    0x03B9,  // letter iota
+    0x1F37,  // -> letter iota with dasia and perispomeni
+    0x03C5,  // letter upsilon
+    0x1F57,  // -> letter upsilon with dasia and perispomeni
+    0x03C9,  // letter omega
+    0x1F67,  // -> letter omega with dasia and perispomeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x19C4:
+    //   prefix:
+    //     Compose
+    //     <tilde>
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0009,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0E,  // -> capital alpha with psili and perispomeni
+    0x0397,  // capital eta
+    0x1F2E,  // -> capital eta with psili and perispomeni
+    0x0399,  // capital iota
+    0x1F3E,  // -> capital iota with psili and perispomeni
+    0x03A9,  // capital omega
+    0x1F6E,  // -> capital omega with psili and perispomeni
+    0x03B1,  // letter alpha
+    0x1F06,  // -> letter alpha with psili and perispomeni
+    0x03B7,  // letter eta
+    0x1F26,  // -> letter eta with psili and perispomeni
+    0x03B9,  // letter iota
+    0x1F36,  // -> letter iota with psili and perispomeni
+    0x03C5,  // letter upsilon
+    0x1F56,  // -> letter upsilon with psili and perispomeni
+    0x03C9,  // letter omega
+    0x1F66,  // -> letter omega with psili and perispomeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x19DA:
+    //   prefix:
+    //     Compose
+    //     <tilde>
+    //     <plus sign>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EE0,  // -> capital o with horn and tilde
+    0x0055,  // capital u
+    0x1EEE,  // -> capital u with horn and tilde
+    0x006F,  // letter o
+    0x1EE1,  // -> letter o with horn and tilde
+    0x0075,  // letter u
+    0x1EEF,  // -> letter u with horn and tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x19E6:
+    //   prefix:
+    //     Compose
+    //     <tilde>
+    //     <circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EAA,  // -> capital a with circumflex and tilde
+    0x0045,  // capital e
+    0x1EC4,  // -> capital e with circumflex and tilde
+    0x004F,  // capital o
+    0x1ED6,  // -> capital o with circumflex and tilde
+    0x0061,  // letter a
+    0x1EAB,  // -> letter a with circumflex and tilde
+    0x0065,  // letter e
+    0x1EC5,  // -> letter e with circumflex and tilde
+    0x006F,  // letter o
+    0x1ED7,  // -> letter o with circumflex and tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x19F6:
+    //   prefix:
+    //     Compose
+    //     <tilde>
+    //     <latin small letter b>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB4,  // -> capital a with breve and tilde
+    0x0061,  // letter a
+    0x1EB5,  // -> letter a with breve and tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x19FE:
+    //   prefix:
+    //     Compose
+    //     <tilde>
+    //     Dead<combining circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EAA,  // -> capital a with circumflex and tilde
+    0x0045,  // capital e
+    0x1EC4,  // -> capital e with circumflex and tilde
+    0x004F,  // capital o
+    0x1ED6,  // -> capital o with circumflex and tilde
+    0x0061,  // letter a
+    0x1EAB,  // -> letter a with circumflex and tilde
+    0x0065,  // letter e
+    0x1EC5,  // -> letter e with circumflex and tilde
+    0x006F,  // letter o
+    0x1ED7,  // -> letter o with circumflex and tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1A0E:
+    //   prefix:
+    //     Compose
+    //     <tilde>
+    //     Dead<combining breve>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB4,  // -> capital a with breve and tilde
+    0x0061,  // letter a
+    0x1EB5,  // -> letter a with breve and tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1A16:
+    //   prefix:
+    //     Compose
+    //     <tilde>
+    //     Dead<combining diaeresis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x03B9,  // letter iota
+    0x1FD7,  // -> letter iota with dialytika and perispomeni
+    0x03C5,  // letter upsilon
+    0x1FE7,  // -> letter upsilon with dialytika and perispomeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1A1E:
+    //   prefix:
+    //     Compose
+    //     <tilde>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0009,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0E,  // -> capital alpha with psili and perispomeni
+    0x0397,  // capital eta
+    0x1F2E,  // -> capital eta with psili and perispomeni
+    0x0399,  // capital iota
+    0x1F3E,  // -> capital iota with psili and perispomeni
+    0x03A9,  // capital omega
+    0x1F6E,  // -> capital omega with psili and perispomeni
+    0x03B1,  // letter alpha
+    0x1F06,  // -> letter alpha with psili and perispomeni
+    0x03B7,  // letter eta
+    0x1F26,  // -> letter eta with psili and perispomeni
+    0x03B9,  // letter iota
+    0x1F36,  // -> letter iota with psili and perispomeni
+    0x03C5,  // letter upsilon
+    0x1F56,  // -> letter upsilon with psili and perispomeni
+    0x03C9,  // letter omega
+    0x1F66,  // -> letter omega with psili and perispomeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1A34:
+    //   prefix:
+    //     Compose
+    //     <tilde>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000A,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0F,  // -> capital alpha with dasia and perispomeni
+    0x0397,  // capital eta
+    0x1F2F,  // -> capital eta with dasia and perispomeni
+    0x0399,  // capital iota
+    0x1F3F,  // -> capital iota with dasia and perispomeni
+    0x03A5,  // capital upsilon
+    0x1F5F,  // -> capital upsilon with dasia and perispomeni
+    0x03A9,  // capital omega
+    0x1F6F,  // -> capital omega with dasia and perispomeni
+    0x03B1,  // letter alpha
+    0x1F07,  // -> letter alpha with dasia and perispomeni
+    0x03B7,  // letter eta
+    0x1F27,  // -> letter eta with dasia and perispomeni
+    0x03B9,  // letter iota
+    0x1F37,  // -> letter iota with dasia and perispomeni
+    0x03C5,  // letter upsilon
+    0x1F57,  // -> letter upsilon with dasia and perispomeni
+    0x03C9,  // letter omega
+    0x1F67,  // -> letter omega with dasia and perispomeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1A4C:
+    //   prefix:
+    //     Compose
+    //     <tilde>
+    //     Dead<combining horn>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EE0,  // -> capital o with horn and tilde
+    0x0055,  // capital u
+    0x1EEE,  // -> capital u with horn and tilde
+    0x006F,  // letter o
+    0x1EE1,  // -> letter o with horn and tilde
+    0x0075,  // letter u
+    0x1EEF,  // -> letter u with horn and tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1A58:
+    //   prefix:
+    //     Compose
+    //     <diaeresis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0010,          // number of entries
+    0x0027,  // apostrophe
+    0x0385,  // -> dialytika tonos
+    0x0041,  // capital a
+    0x00C4,  // -> capital a with diaeresis
+    0x0045,  // capital e
+    0x00CB,  // -> capital e with diaeresis
+    0x0049,  // capital i
+    0x00CF,  // -> capital i with diaeresis
+    0x004F,  // capital o
+    0x00D6,  // -> capital o with diaeresis
+    0x0055,  // capital u
+    0x00DC,  // -> capital u with diaeresis
+    0x0059,  // capital y
+    0x0178,  // -> capital y with diaeresis
+    0x0060,  // grave accent
+    0x1FED,  // -> dialytika and varia
+    0x0061,  // letter a
+    0x00E4,  // -> letter a with diaeresis
+    0x0065,  // letter e
+    0x00EB,  // -> letter e with diaeresis
+    0x0069,  // letter i
+    0x00EF,  // -> letter i with diaeresis
+    0x006F,  // letter o
+    0x00F6,  // -> letter o with diaeresis
+    0x0075,  // letter u
+    0x00FC,  // -> letter u with diaeresis
+    0x0079,  // letter y
+    0x00FF,  // -> letter y with diaeresis
+    0x007E,  // tilde
+    0x1FC1,  // -> dialytika and perispomeni
+    0x00B4,  // acute accent
+    0x0385,  // -> dialytika tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0003,          // number of entries
+    0x0300,  // combining grave accent
+    0x1FED,  // -> dialytika and varia
+    0x0301,  // combining acute accent
+    0x0385,  // -> dialytika tonos
+    0x0303,  // combining tilde
+    0x1FC1,  // -> dialytika and perispomeni
+
+    // offset 0x1A82:
+    //   prefix:
+    //     Compose
+    //     <macron>
+    //   internal character table
+    0x0005,          // number of entries
+    0x0021,  // exclamation mark
+    0x1AF2,
+    0x0022,  // quotation mark
+    0x1AFE,
+    0x002E,  // full stop
+    0x1B0E,
+    0x003B,  // semicolon
+    0x1B1A,
+    0x007E,  // tilde
+    0x1B22,
+    //   leaf character table
+    0x002C,          // number of entries
+    0x0041,  // capital a
+    0x0100,  // -> capital a with macron
+    0x0045,  // capital e
+    0x0112,  // -> capital e with macron
+    0x0047,  // capital g
+    0x1E20,  // -> capital g with macron
+    0x0049,  // capital i
+    0x012A,  // -> capital i with macron
+    0x004F,  // capital o
+    0x014C,  // -> capital o with macron
+    0x0055,  // capital u
+    0x016A,  // -> capital u with macron
+    0x0059,  // capital y
+    0x0232,  // -> capital y with macron
+    0x0061,  // letter a
+    0x0101,  // -> letter a with macron
+    0x0065,  // letter e
+    0x0113,  // -> letter e with macron
+    0x0067,  // letter g
+    0x1E21,  // -> letter g with macron
+    0x0069,  // letter i
+    0x012B,  // -> letter i with macron
+    0x006F,  // letter o
+    0x014D,  // -> letter o with macron
+    0x0075,  // letter u
+    0x016B,  // -> letter u with macron
+    0x0079,  // letter y
+    0x0233,  // -> letter y with macron
+    0x00C4,  // capital a with diaeresis
+    0x01DE,  // -> capital a with diaeresis and macron
+    0x00C6,  // capital ae
+    0x01E2,  // -> capital ae with macron
+    0x00D5,  // capital o with tilde
+    0x022C,  // -> capital o with tilde and macron
+    0x00D6,  // capital o with diaeresis
+    0x022A,  // -> capital o with diaeresis and macron
+    0x00DC,  // capital u with diaeresis
+    0x01D5,  // -> capital u with diaeresis and macron
+    0x00E4,  // letter a with diaeresis
+    0x01DF,  // -> letter a with diaeresis and macron
+    0x00E6,  // letter ae
+    0x01E3,  // -> letter ae with macron
+    0x00F5,  // letter o with tilde
+    0x022D,  // -> letter o with tilde and macron
+    0x00F6,  // letter o with diaeresis
+    0x022B,  // -> letter o with diaeresis and macron
+    0x00FC,  // letter u with diaeresis
+    0x01D6,  // -> letter u with diaeresis and macron
+    0x0119,  // letter e with ogonek
+    0x01EC,  // -> capital o with ogonek and macron
+    0x01EB,  // letter o with ogonek
+    0x01ED,  // -> letter o with ogonek and macron
+    0x0226,  // capital a with dot above
+    0x01E0,  // -> capital a with dot above and macron
+    0x0227,  // letter a with dot above
+    0x01E1,  // -> letter a with dot above and macron
+    0x022E,  // capital o with dot above
+    0x0230,  // -> capital o with dot above and macron
+    0x022F,  // letter o with dot above
+    0x0231,  // -> letter o with dot above and macron
+    0x0391,  // capital alpha
+    0x1FB9,  // -> capital alpha with macron
+    0x0399,  // capital iota
+    0x1FD9,  // -> capital iota with macron
+    0x03A5,  // capital upsilon
+    0x1FE9,  // -> capital upsilon with macron
+    0x03B1,  // letter alpha
+    0x1FB1,  // -> letter alpha with macron
+    0x03B9,  // letter iota
+    0x1FD1,  // -> letter iota with macron
+    0x03C5,  // letter upsilon
+    0x1FE1,  // -> letter upsilon with macron
+    0x0418,  // cyrillic capital i
+    0x04E2,  // -> cyrillic capital i with macron
+    0x0423,  // cyrillic capital u
+    0x04EE,  // -> cyrillic capital u with macron
+    0x0438,  // cyrillic small i
+    0x04E3,  // -> cyrillic small i with macron
+    0x0443,  // cyrillic small u
+    0x04EF,  // -> cyrillic small u with macron
+    0x1E36,  // capital l with dot below
+    0x1E38,  // -> capital l with dot below and macron
+    0x1E37,  // letter l with dot below
+    0x1E39,  // -> letter l with dot below and macron
+    0x1E5A,  // capital r with dot below
+    0x1E5C,  // -> capital r with dot below and macron
+    0x1E5B,  // letter r with dot below
+    0x1E5D,  // -> letter r with dot below and macron
+    //   internal dead_key table
+    0x0005,          // number of entries
+    0x0303,  // combining tilde
+    0x1B2A,
+    0x0307,  // combining dot above
+    0x1B32,
+    0x0308,  // combining diaeresis
+    0x1B3E,
+    0x0323,  // combining dot below
+    0x1B4E,
+    0x0328,  // combining ogonek
+    0x1B5A,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1AF2:
+    //   prefix:
+    //     Compose
+    //     <macron>
+    //     <exclamation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004C,  // capital l
+    0x1E38,  // -> capital l with dot below and macron
+    0x0052,  // capital r
+    0x1E5C,  // -> capital r with dot below and macron
+    0x006C,  // letter l
+    0x1E39,  // -> letter l with dot below and macron
+    0x0072,  // letter r
+    0x1E5D,  // -> letter r with dot below and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1AFE:
+    //   prefix:
+    //     Compose
+    //     <macron>
+    //     <quotation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x01DE,  // -> capital a with diaeresis and macron
+    0x004F,  // capital o
+    0x022A,  // -> capital o with diaeresis and macron
+    0x0055,  // capital u
+    0x01D5,  // -> capital u with diaeresis and macron
+    0x0061,  // letter a
+    0x01DF,  // -> letter a with diaeresis and macron
+    0x006F,  // letter o
+    0x022B,  // -> letter o with diaeresis and macron
+    0x0075,  // letter u
+    0x01D6,  // -> letter u with diaeresis and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1B0E:
+    //   prefix:
+    //     Compose
+    //     <macron>
+    //     <full stop>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0041,  // capital a
+    0x01E0,  // -> capital a with dot above and macron
+    0x004F,  // capital o
+    0x0230,  // -> capital o with dot above and macron
+    0x0061,  // letter a
+    0x01E1,  // -> letter a with dot above and macron
+    0x006F,  // letter o
+    0x0231,  // -> letter o with dot above and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1B1A:
+    //   prefix:
+    //     Compose
+    //     <macron>
+    //     <semicolon>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x01EC,  // -> capital o with ogonek and macron
+    0x006F,  // letter o
+    0x01ED,  // -> letter o with ogonek and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1B22:
+    //   prefix:
+    //     Compose
+    //     <macron>
+    //     <tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x022C,  // -> capital o with tilde and macron
+    0x006F,  // letter o
+    0x022D,  // -> letter o with tilde and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1B2A:
+    //   prefix:
+    //     Compose
+    //     <macron>
+    //     Dead<combining tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x022C,  // -> capital o with tilde and macron
+    0x006F,  // letter o
+    0x022D,  // -> letter o with tilde and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1B32:
+    //   prefix:
+    //     Compose
+    //     <macron>
+    //     Dead<combining dot above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0041,  // capital a
+    0x01E0,  // -> capital a with dot above and macron
+    0x004F,  // capital o
+    0x0230,  // -> capital o with dot above and macron
+    0x0061,  // letter a
+    0x01E1,  // -> letter a with dot above and macron
+    0x006F,  // letter o
+    0x0231,  // -> letter o with dot above and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1B3E:
+    //   prefix:
+    //     Compose
+    //     <macron>
+    //     Dead<combining diaeresis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x01DE,  // -> capital a with diaeresis and macron
+    0x004F,  // capital o
+    0x022A,  // -> capital o with diaeresis and macron
+    0x0055,  // capital u
+    0x01D5,  // -> capital u with diaeresis and macron
+    0x0061,  // letter a
+    0x01DF,  // -> letter a with diaeresis and macron
+    0x006F,  // letter o
+    0x022B,  // -> letter o with diaeresis and macron
+    0x0075,  // letter u
+    0x01D6,  // -> letter u with diaeresis and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1B4E:
+    //   prefix:
+    //     Compose
+    //     <macron>
+    //     Dead<combining dot below>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004C,  // capital l
+    0x1E38,  // -> capital l with dot below and macron
+    0x0052,  // capital r
+    0x1E5C,  // -> capital r with dot below and macron
+    0x006C,  // letter l
+    0x1E39,  // -> letter l with dot below and macron
+    0x0072,  // letter r
+    0x1E5D,  // -> letter r with dot below and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1B5A:
+    //   prefix:
+    //     Compose
+    //     <macron>
+    //     Dead<combining ogonek>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x01EC,  // -> capital o with ogonek and macron
+    0x006F,  // letter o
+    0x01ED,  // -> letter o with ogonek and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1B62:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //   internal character table
+    0x000C,          // number of entries
+    0x0022,  // quotation mark
+    0x1C6C,
+    0x0028,  // left parenthesis
+    0x1C7C,
+    0x0029,  // right parenthesis
+    0x1C9C,
+    0x002B,  // plus sign
+    0x1CBA,
+    0x002C,  // comma
+    0x1CC6,
+    0x002F,  // solidus
+    0x1CCE,
+    0x005E,  // circumflex accent
+    0x1CD6,
+    0x005F,  // low line
+    0x1CE6,
+    0x0062,  // letter b
+    0x1CF2,
+    0x007E,  // tilde
+    0x1CFA,
+    0x00AF,  // macron
+    0x1D06,
+    0x00B8,  // cedilla
+    0x1D12,
+    //   leaf character table
+    0x006D,          // number of entries
+    0x0041,  // capital a
+    0x00C1,  // -> capital a with acute
+    0x0043,  // capital c
+    0x0106,  // -> capital c with acute
+    0x0045,  // capital e
+    0x00C9,  // -> capital e with acute
+    0x0047,  // capital g
+    0x01F4,  // -> capital g with acute
+    0x0049,  // capital i
+    0x00CD,  // -> capital i with acute
+    0x004B,  // capital k
+    0x1E30,  // -> capital k with acute
+    0x004C,  // capital l
+    0x0139,  // -> capital l with acute
+    0x004D,  // capital m
+    0x1E3E,  // -> capital m with acute
+    0x004E,  // capital n
+    0x0143,  // -> capital n with acute
+    0x004F,  // capital o
+    0x00D3,  // -> capital o with acute
+    0x0050,  // capital p
+    0x1E54,  // -> capital p with acute
+    0x0052,  // capital r
+    0x0154,  // -> capital r with acute
+    0x0053,  // capital s
+    0x015A,  // -> capital s with acute
+    0x0055,  // capital u
+    0x00DA,  // -> capital u with acute
+    0x0057,  // capital w
+    0x1E82,  // -> capital w with acute
+    0x0059,  // capital y
+    0x00DD,  // -> capital y with acute
+    0x005A,  // capital z
+    0x0179,  // -> capital z with acute
+    0x0061,  // letter a
+    0x00E1,  // -> letter a with acute
+    0x0063,  // letter c
+    0x0107,  // -> letter c with acute
+    0x0065,  // letter e
+    0x00E9,  // -> letter e with acute
+    0x0067,  // letter g
+    0x01F5,  // -> letter g with acute
+    0x0069,  // letter i
+    0x00ED,  // -> letter i with acute
+    0x006B,  // letter k
+    0x1E31,  // -> letter k with acute
+    0x006C,  // letter l
+    0x013A,  // -> letter l with acute
+    0x006D,  // letter m
+    0x1E3F,  // -> letter m with acute
+    0x006E,  // letter n
+    0x0144,  // -> letter n with acute
+    0x006F,  // letter o
+    0x00F3,  // -> letter o with acute
+    0x0070,  // letter p
+    0x1E55,  // -> letter p with acute
+    0x0072,  // letter r
+    0x0155,  // -> letter r with acute
+    0x0073,  // letter s
+    0x015B,  // -> letter s with acute
+    0x0075,  // letter u
+    0x00FA,  // -> letter u with acute
+    0x0077,  // letter w
+    0x1E83,  // -> letter w with acute
+    0x0079,  // letter y
+    0x00FD,  // -> letter y with acute
+    0x007A,  // letter z
+    0x017A,  // -> letter z with acute
+    0x00C2,  // capital a with circumflex
+    0x1EA4,  // -> capital a with circumflex and acute
+    0x00C5,  // capital a with ring above
+    0x01FA,  // -> capital a with ring above and acute
+    0x00C6,  // capital ae
+    0x01FC,  // -> capital ae with acute
+    0x00C7,  // capital c with cedilla
+    0x1E08,  // -> capital c with cedilla and acute
+    0x00CA,  // capital e with circumflex
+    0x1EBE,  // -> capital e with circumflex and acute
+    0x00CF,  // capital i with diaeresis
+    0x1E2E,  // -> capital i with diaeresis and acute
+    0x00D4,  // capital o with circumflex
+    0x1ED0,  // -> capital o with circumflex and acute
+    0x00D5,  // capital o with tilde
+    0x1E4C,  // -> capital o with tilde and acute
+    0x00D8,  // capital o with stroke
+    0x01FE,  // -> capital o with stroke and acute
+    0x00DC,  // capital u with diaeresis
+    0x01D7,  // -> capital u with diaeresis and acute
+    0x00E2,  // letter a with circumflex
+    0x1EA5,  // -> letter a with circumflex and acute
+    0x00E5,  // letter a with ring above
+    0x01FB,  // -> letter a with ring above and acute
+    0x00E6,  // letter ae
+    0x01FD,  // -> letter ae with acute
+    0x00E7,  // letter c with cedilla
+    0x1E09,  // -> letter c with cedilla and acute
+    0x00EA,  // letter e with circumflex
+    0x1EBF,  // -> letter e with circumflex and acute
+    0x00EF,  // letter i with diaeresis
+    0x1E2F,  // -> letter i with diaeresis and acute
+    0x00F4,  // letter o with circumflex
+    0x1ED1,  // -> letter o with circumflex and acute
+    0x00F5,  // letter o with tilde
+    0x1E4D,  // -> letter o with tilde and acute
+    0x00F8,  // letter o with stroke
+    0x01FF,  // -> letter o with stroke and acute
+    0x00FC,  // letter u with diaeresis
+    0x01D8,  // -> letter u with diaeresis and acute
+    0x0102,  // capital a with breve
+    0x1EAE,  // -> capital a with breve and acute
+    0x0103,  // letter a with breve
+    0x1EAF,  // -> letter a with breve and acute
+    0x0112,  // capital e with macron
+    0x1E16,  // -> capital e with macron and acute
+    0x0113,  // letter e with macron
+    0x1E17,  // -> letter e with macron and acute
+    0x014C,  // capital o with macron
+    0x1E52,  // -> capital o with macron and acute
+    0x014D,  // letter o with macron
+    0x1E53,  // -> letter o with macron and acute
+    0x0168,  // capital u with tilde
+    0x1E78,  // -> capital u with tilde and acute
+    0x0169,  // letter u with tilde
+    0x1E79,  // -> letter u with tilde and acute
+    0x0391,  // capital alpha
+    0x0386,  // -> capital alpha with tonos
+    0x0395,  // capital epsilon
+    0x0388,  // -> capital epsilon with tonos
+    0x0397,  // capital eta
+    0x0389,  // -> capital eta with tonos
+    0x0399,  // capital iota
+    0x038A,  // -> capital iota with tonos
+    0x039F,  // capital omicron
+    0x038C,  // -> capital omicron with tonos
+    0x03A5,  // capital upsilon
+    0x038E,  // -> capital upsilon with tonos
+    0x03A9,  // capital omega
+    0x038F,  // -> capital omega with tonos
+    0x03B1,  // letter alpha
+    0x03AC,  // -> letter alpha with tonos
+    0x03B5,  // letter epsilon
+    0x03AD,  // -> letter epsilon with tonos
+    0x03B7,  // letter eta
+    0x03AE,  // -> letter eta with tonos
+    0x03B9,  // letter iota
+    0x03AF,  // -> letter iota with tonos
+    0x03BF,  // letter omicron
+    0x03CC,  // -> letter omicron with tonos
+    0x03C5,  // letter upsilon
+    0x03CD,  // -> letter upsilon with tonos
+    0x03C9,  // letter omega
+    0x03CE,  // -> letter omega with tonos
+    0x03CA,  // letter iota with dialytika
+    0x0390,  // -> letter iota with dialytika and tonos
+    0x03CB,  // letter upsilon with dialytika
+    0x03B0,  // -> letter upsilon with dialytika and tonos
+    0x0413,  // cyrillic capital ghe
+    0x0403,  // -> cyrillic capital gje
+    0x041A,  // cyrillic capital ka
+    0x040C,  // -> cyrillic capital kje
+    0x0433,  // cyrillic small ghe
+    0x0453,  // -> cyrillic small gje
+    0x043A,  // cyrillic small ka
+    0x045C,  // -> cyrillic small kje
+    0x1F00,  // letter alpha with psili
+    0x1F04,  // -> letter alpha with psili and oxia
+    0x1F01,  // letter alpha with dasia
+    0x1F05,  // -> letter alpha with dasia and oxia
+    0x1F08,  // capital alpha with psili
+    0x1F0C,  // -> capital alpha with psili and oxia
+    0x1F09,  // capital alpha with dasia
+    0x1F0D,  // -> capital alpha with dasia and oxia
+    0x1F10,  // letter epsilon with psili
+    0x1F14,  // -> letter epsilon with psili and oxia
+    0x1F11,  // letter epsilon with dasia
+    0x1F15,  // -> letter epsilon with dasia and oxia
+    0x1F18,  // capital epsilon with psili
+    0x1F1C,  // -> capital epsilon with psili and oxia
+    0x1F19,  // capital epsilon with dasia
+    0x1F1D,  // -> capital epsilon with dasia and oxia
+    0x1F20,  // letter eta with psili
+    0x1F24,  // -> letter eta with psili and oxia
+    0x1F21,  // letter eta with dasia
+    0x1F25,  // -> letter eta with dasia and oxia
+    0x1F28,  // capital eta with psili
+    0x1F2C,  // -> capital eta with psili and oxia
+    0x1F29,  // capital eta with dasia
+    0x1F2D,  // -> capital eta with dasia and oxia
+    0x1F30,  // letter iota with psili
+    0x1F34,  // -> letter iota with psili and oxia
+    0x1F31,  // letter iota with dasia
+    0x1F35,  // -> letter iota with dasia and oxia
+    0x1F38,  // capital iota with psili
+    0x1F3C,  // -> capital iota with psili and oxia
+    0x1F39,  // capital iota with dasia
+    0x1F3D,  // -> capital iota with dasia and oxia
+    0x1F40,  // letter omicron with psili
+    0x1F44,  // -> letter omicron with psili and oxia
+    0x1F41,  // letter omicron with dasia
+    0x1F45,  // -> letter omicron with dasia and oxia
+    0x1F48,  // capital omicron with psili
+    0x1F4C,  // -> capital omicron with psili and oxia
+    0x1F49,  // capital omicron with dasia
+    0x1F4D,  // -> capital omicron with dasia and oxia
+    0x1F50,  // letter upsilon with psili
+    0x1F54,  // -> letter upsilon with psili and oxia
+    0x1F51,  // letter upsilon with dasia
+    0x1F55,  // -> letter upsilon with dasia and oxia
+    0x1F59,  // capital upsilon with dasia
+    0x1F5D,  // -> capital upsilon with dasia and oxia
+    0x1F60,  // letter omega with psili
+    0x1F64,  // -> letter omega with psili and oxia
+    0x1F61,  // letter omega with dasia
+    0x1F65,  // -> letter omega with dasia and oxia
+    0x1F68,  // capital omega with psili
+    0x1F6C,  // -> capital omega with psili and oxia
+    0x1F69,  // capital omega with dasia
+    0x1F6D,  // -> capital omega with dasia and oxia
+    //   internal dead_key table
+    0x000A,          // number of entries
+    0x0302,  // combining circumflex accent
+    0x1D1A,
+    0x0303,  // combining tilde
+    0x1D2A,
+    0x0304,  // combining macron
+    0x1D36,
+    0x0306,  // combining breve
+    0x1D42,
+    0x0308,  // combining diaeresis
+    0x1D4A,
+    0x030A,  // combining ring above
+    0x1D5A,
+    0x0313,  // combining comma above
+    0x1D62,
+    0x0314,  // combining reversed comma above
+    0x1D80,
+    0x031B,  // combining horn
+    0x1DA0,
+    0x0327,  // combining cedilla
+    0x1DAC,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1C6C:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     <quotation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0049,  // capital i
+    0x1E2E,  // -> capital i with diaeresis and acute
+    0x0055,  // capital u
+    0x01D7,  // -> capital u with diaeresis and acute
+    0x0069,  // letter i
+    0x1E2F,  // -> letter i with diaeresis and acute
+    0x0075,  // letter u
+    0x01D8,  // -> letter u with diaeresis and acute
+    0x03B9,  // letter iota
+    0x0390,  // -> letter iota with dialytika and tonos
+    0x03C5,  // letter upsilon
+    0x03B0,  // -> letter upsilon with dialytika and tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1C7C:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000E,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0D,  // -> capital alpha with dasia and oxia
+    0x0395,  // capital epsilon
+    0x1F1D,  // -> capital epsilon with dasia and oxia
+    0x0397,  // capital eta
+    0x1F2D,  // -> capital eta with dasia and oxia
+    0x0399,  // capital iota
+    0x1F3D,  // -> capital iota with dasia and oxia
+    0x039F,  // capital omicron
+    0x1F4D,  // -> capital omicron with dasia and oxia
+    0x03A5,  // capital upsilon
+    0x1F5D,  // -> capital upsilon with dasia and oxia
+    0x03A9,  // capital omega
+    0x1F6D,  // -> capital omega with dasia and oxia
+    0x03B1,  // letter alpha
+    0x1F05,  // -> letter alpha with dasia and oxia
+    0x03B5,  // letter epsilon
+    0x1F15,  // -> letter epsilon with dasia and oxia
+    0x03B7,  // letter eta
+    0x1F25,  // -> letter eta with dasia and oxia
+    0x03B9,  // letter iota
+    0x1F35,  // -> letter iota with dasia and oxia
+    0x03BF,  // letter omicron
+    0x1F45,  // -> letter omicron with dasia and oxia
+    0x03C5,  // letter upsilon
+    0x1F55,  // -> letter upsilon with dasia and oxia
+    0x03C9,  // letter omega
+    0x1F65,  // -> letter omega with dasia and oxia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1C9C:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000D,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0C,  // -> capital alpha with psili and oxia
+    0x0395,  // capital epsilon
+    0x1F1C,  // -> capital epsilon with psili and oxia
+    0x0397,  // capital eta
+    0x1F2C,  // -> capital eta with psili and oxia
+    0x0399,  // capital iota
+    0x1F3C,  // -> capital iota with psili and oxia
+    0x039F,  // capital omicron
+    0x1F4C,  // -> capital omicron with psili and oxia
+    0x03A9,  // capital omega
+    0x1F6C,  // -> capital omega with psili and oxia
+    0x03B1,  // letter alpha
+    0x1F04,  // -> letter alpha with psili and oxia
+    0x03B5,  // letter epsilon
+    0x1F14,  // -> letter epsilon with psili and oxia
+    0x03B7,  // letter eta
+    0x1F24,  // -> letter eta with psili and oxia
+    0x03B9,  // letter iota
+    0x1F34,  // -> letter iota with psili and oxia
+    0x03BF,  // letter omicron
+    0x1F44,  // -> letter omicron with psili and oxia
+    0x03C5,  // letter upsilon
+    0x1F54,  // -> letter upsilon with psili and oxia
+    0x03C9,  // letter omega
+    0x1F64,  // -> letter omega with psili and oxia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1CBA:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     <plus sign>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EDA,  // -> capital o with horn and acute
+    0x0055,  // capital u
+    0x1EE8,  // -> capital u with horn and acute
+    0x006F,  // letter o
+    0x1EDB,  // -> letter o with horn and acute
+    0x0075,  // letter u
+    0x1EE9,  // -> letter u with horn and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1CC6:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     <comma>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0043,  // capital c
+    0x1E08,  // -> capital c with cedilla and acute
+    0x0063,  // letter c
+    0x1E09,  // -> letter c with cedilla and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1CCE:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     <solidus>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x01FE,  // -> capital o with stroke and acute
+    0x006F,  // letter o
+    0x01FF,  // -> letter o with stroke and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1CD6:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     <circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EA4,  // -> capital a with circumflex and acute
+    0x0045,  // capital e
+    0x1EBE,  // -> capital e with circumflex and acute
+    0x004F,  // capital o
+    0x1ED0,  // -> capital o with circumflex and acute
+    0x0061,  // letter a
+    0x1EA5,  // -> letter a with circumflex and acute
+    0x0065,  // letter e
+    0x1EBF,  // -> letter e with circumflex and acute
+    0x006F,  // letter o
+    0x1ED1,  // -> letter o with circumflex and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1CE6:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     <low line>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0045,  // capital e
+    0x1E16,  // -> capital e with macron and acute
+    0x004F,  // capital o
+    0x1E52,  // -> capital o with macron and acute
+    0x0065,  // letter e
+    0x1E17,  // -> letter e with macron and acute
+    0x006F,  // letter o
+    0x1E53,  // -> letter o with macron and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1CF2:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     <latin small letter b>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EAE,  // -> capital a with breve and acute
+    0x0061,  // letter a
+    0x1EAF,  // -> letter a with breve and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1CFA:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     <tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1E4C,  // -> capital o with tilde and acute
+    0x0055,  // capital u
+    0x1E78,  // -> capital u with tilde and acute
+    0x006F,  // letter o
+    0x1E4D,  // -> letter o with tilde and acute
+    0x0075,  // letter u
+    0x1E79,  // -> letter u with tilde and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1D06:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     <macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0045,  // capital e
+    0x1E16,  // -> capital e with macron and acute
+    0x004F,  // capital o
+    0x1E52,  // -> capital o with macron and acute
+    0x0065,  // letter e
+    0x1E17,  // -> letter e with macron and acute
+    0x006F,  // letter o
+    0x1E53,  // -> letter o with macron and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1D12:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     <cedilla>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0043,  // capital c
+    0x1E08,  // -> capital c with cedilla and acute
+    0x0063,  // letter c
+    0x1E09,  // -> letter c with cedilla and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1D1A:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     Dead<combining circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EA4,  // -> capital a with circumflex and acute
+    0x0045,  // capital e
+    0x1EBE,  // -> capital e with circumflex and acute
+    0x004F,  // capital o
+    0x1ED0,  // -> capital o with circumflex and acute
+    0x0061,  // letter a
+    0x1EA5,  // -> letter a with circumflex and acute
+    0x0065,  // letter e
+    0x1EBF,  // -> letter e with circumflex and acute
+    0x006F,  // letter o
+    0x1ED1,  // -> letter o with circumflex and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1D2A:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     Dead<combining tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1E4C,  // -> capital o with tilde and acute
+    0x0055,  // capital u
+    0x1E78,  // -> capital u with tilde and acute
+    0x006F,  // letter o
+    0x1E4D,  // -> letter o with tilde and acute
+    0x0075,  // letter u
+    0x1E79,  // -> letter u with tilde and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1D36:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     Dead<combining macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0045,  // capital e
+    0x1E16,  // -> capital e with macron and acute
+    0x004F,  // capital o
+    0x1E52,  // -> capital o with macron and acute
+    0x0065,  // letter e
+    0x1E17,  // -> letter e with macron and acute
+    0x006F,  // letter o
+    0x1E53,  // -> letter o with macron and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1D42:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     Dead<combining breve>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EAE,  // -> capital a with breve and acute
+    0x0061,  // letter a
+    0x1EAF,  // -> letter a with breve and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1D4A:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     Dead<combining diaeresis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0049,  // capital i
+    0x1E2E,  // -> capital i with diaeresis and acute
+    0x0055,  // capital u
+    0x01D7,  // -> capital u with diaeresis and acute
+    0x0069,  // letter i
+    0x1E2F,  // -> letter i with diaeresis and acute
+    0x0075,  // letter u
+    0x01D8,  // -> letter u with diaeresis and acute
+    0x03B9,  // letter iota
+    0x0390,  // -> letter iota with dialytika and tonos
+    0x03C5,  // letter upsilon
+    0x03B0,  // -> letter upsilon with dialytika and tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1D5A:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     Dead<combining ring above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x01FA,  // -> capital a with ring above and acute
+    0x0061,  // letter a
+    0x01FB,  // -> letter a with ring above and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1D62:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000D,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0C,  // -> capital alpha with psili and oxia
+    0x0395,  // capital epsilon
+    0x1F1C,  // -> capital epsilon with psili and oxia
+    0x0397,  // capital eta
+    0x1F2C,  // -> capital eta with psili and oxia
+    0x0399,  // capital iota
+    0x1F3C,  // -> capital iota with psili and oxia
+    0x039F,  // capital omicron
+    0x1F4C,  // -> capital omicron with psili and oxia
+    0x03A9,  // capital omega
+    0x1F6C,  // -> capital omega with psili and oxia
+    0x03B1,  // letter alpha
+    0x1F04,  // -> letter alpha with psili and oxia
+    0x03B5,  // letter epsilon
+    0x1F14,  // -> letter epsilon with psili and oxia
+    0x03B7,  // letter eta
+    0x1F24,  // -> letter eta with psili and oxia
+    0x03B9,  // letter iota
+    0x1F34,  // -> letter iota with psili and oxia
+    0x03BF,  // letter omicron
+    0x1F44,  // -> letter omicron with psili and oxia
+    0x03C5,  // letter upsilon
+    0x1F54,  // -> letter upsilon with psili and oxia
+    0x03C9,  // letter omega
+    0x1F64,  // -> letter omega with psili and oxia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1D80:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000E,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0D,  // -> capital alpha with dasia and oxia
+    0x0395,  // capital epsilon
+    0x1F1D,  // -> capital epsilon with dasia and oxia
+    0x0397,  // capital eta
+    0x1F2D,  // -> capital eta with dasia and oxia
+    0x0399,  // capital iota
+    0x1F3D,  // -> capital iota with dasia and oxia
+    0x039F,  // capital omicron
+    0x1F4D,  // -> capital omicron with dasia and oxia
+    0x03A5,  // capital upsilon
+    0x1F5D,  // -> capital upsilon with dasia and oxia
+    0x03A9,  // capital omega
+    0x1F6D,  // -> capital omega with dasia and oxia
+    0x03B1,  // letter alpha
+    0x1F05,  // -> letter alpha with dasia and oxia
+    0x03B5,  // letter epsilon
+    0x1F15,  // -> letter epsilon with dasia and oxia
+    0x03B7,  // letter eta
+    0x1F25,  // -> letter eta with dasia and oxia
+    0x03B9,  // letter iota
+    0x1F35,  // -> letter iota with dasia and oxia
+    0x03BF,  // letter omicron
+    0x1F45,  // -> letter omicron with dasia and oxia
+    0x03C5,  // letter upsilon
+    0x1F55,  // -> letter upsilon with dasia and oxia
+    0x03C9,  // letter omega
+    0x1F65,  // -> letter omega with dasia and oxia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1DA0:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     Dead<combining horn>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EDA,  // -> capital o with horn and acute
+    0x0055,  // capital u
+    0x1EE8,  // -> capital u with horn and acute
+    0x006F,  // letter o
+    0x1EDB,  // -> letter o with horn and acute
+    0x0075,  // letter u
+    0x1EE9,  // -> letter u with horn and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1DAC:
+    //   prefix:
+    //     Compose
+    //     <acute accent>
+    //     Dead<combining cedilla>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0043,  // capital c
+    0x1E08,  // -> capital c with cedilla and acute
+    0x0063,  // letter c
+    0x1E09,  // -> letter c with cedilla and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1DB4:
+    //   prefix:
+    //     Compose
+    //     <cedilla>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0016,          // number of entries
+    0x0043,  // capital c
+    0x00C7,  // -> capital c with cedilla
+    0x0044,  // capital d
+    0x1E10,  // -> capital d with cedilla
+    0x0045,  // capital e
+    0x0228,  // -> capital e with cedilla
+    0x0047,  // capital g
+    0x0122,  // -> capital g with cedilla
+    0x0048,  // capital h
+    0x1E28,  // -> capital h with cedilla
+    0x004B,  // capital k
+    0x0136,  // -> capital k with cedilla
+    0x004C,  // capital l
+    0x013B,  // -> capital l with cedilla
+    0x004E,  // capital n
+    0x0145,  // -> capital n with cedilla
+    0x0052,  // capital r
+    0x0156,  // -> capital r with cedilla
+    0x0053,  // capital s
+    0x015E,  // -> capital s with cedilla
+    0x0054,  // capital t
+    0x0162,  // -> capital t with cedilla
+    0x0063,  // letter c
+    0x00E7,  // -> letter c with cedilla
+    0x0064,  // letter d
+    0x1E11,  // -> letter d with cedilla
+    0x0065,  // letter e
+    0x0229,  // -> letter e with cedilla
+    0x0067,  // letter g
+    0x0123,  // -> letter g with cedilla
+    0x0068,  // letter h
+    0x1E29,  // -> letter h with cedilla
+    0x006B,  // letter k
+    0x0137,  // -> letter k with cedilla
+    0x006C,  // letter l
+    0x013C,  // -> letter l with cedilla
+    0x006E,  // letter n
+    0x0146,  // -> letter n with cedilla
+    0x0072,  // letter r
+    0x0157,  // -> letter r with cedilla
+    0x0073,  // letter s
+    0x015F,  // -> letter s with cedilla
+    0x0074,  // letter t
+    0x0163,  // -> letter t with cedilla
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1DE4:
+    //   prefix:
+    //     Compose
+    //     <breve>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0047,  // capital g
+    0x011E,  // -> capital g with breve
+    0x0067,  // letter g
+    0x011F,  // -> letter g with breve
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1DEC:
+    //   prefix:
+    //     Compose
+    //     <greek capital letter alpha>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0027,  // apostrophe
+    0x0386,  // -> capital alpha with tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1DF2:
+    //   prefix:
+    //     Compose
+    //     <greek capital letter epsilon>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0027,  // apostrophe
+    0x0388,  // -> capital epsilon with tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1DF8:
+    //   prefix:
+    //     Compose
+    //     <greek capital letter eta>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0027,  // apostrophe
+    0x0389,  // -> capital eta with tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1DFE:
+    //   prefix:
+    //     Compose
+    //     <greek capital letter iota>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0022,  // quotation mark
+    0x03AA,  // -> capital iota with dialytika
+    0x0027,  // apostrophe
+    0x038A,  // -> capital iota with tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1E06:
+    //   prefix:
+    //     Compose
+    //     <greek capital letter omicron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0027,  // apostrophe
+    0x038C,  // -> capital omicron with tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1E0C:
+    //   prefix:
+    //     Compose
+    //     <greek capital letter upsilon>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0022,  // quotation mark
+    0x03AB,  // -> capital upsilon with dialytika
+    0x0027,  // apostrophe
+    0x038E,  // -> capital upsilon with tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1E14:
+    //   prefix:
+    //     Compose
+    //     <greek capital letter omega>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0027,  // apostrophe
+    0x038F,  // -> capital omega with tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1E1A:
+    //   prefix:
+    //     Compose
+    //     <greek small letter alpha>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0027,  // apostrophe
+    0x03AC,  // -> letter alpha with tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1E20:
+    //   prefix:
+    //     Compose
+    //     <greek small letter epsilon>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0027,  // apostrophe
+    0x03AD,  // -> letter epsilon with tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1E26:
+    //   prefix:
+    //     Compose
+    //     <greek small letter eta>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0027,  // apostrophe
+    0x03AE,  // -> letter eta with tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1E2C:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //   internal character table
+    0x0006,          // number of entries
+    0x0027,  // apostrophe
+    0x1EC8,
+    0x0028,  // left parenthesis
+    0x1F32,
+    0x0029,  // right parenthesis
+    0x1F42,
+    0x0060,  // grave accent
+    0x1F52,
+    0x007E,  // tilde
+    0x1FBC,
+    0x00B4,  // acute accent
+    0x2026,
+    //   leaf character table
+    0x0041,          // number of entries
+    0x0022,  // quotation mark
+    0x03CA,  // -> letter iota with dialytika
+    0x0027,  // apostrophe
+    0x03AF,  // -> letter iota with tonos
+    0x0391,  // capital alpha
+    0x1FBC,  // -> capital alpha with prosgegrammeni
+    0x0397,  // capital eta
+    0x1FCC,  // -> capital eta with prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FFC,  // -> capital omega with prosgegrammeni
+    0x03AC,  // letter alpha with tonos
+    0x1FB4,  // -> letter alpha with oxia and ypogegrammeni
+    0x03AE,  // letter eta with tonos
+    0x1FC4,  // -> letter eta with oxia and ypogegrammeni
+    0x03B1,  // letter alpha
+    0x1FB3,  // -> letter alpha with ypogegrammeni
+    0x03B7,  // letter eta
+    0x1FC3,  // -> letter eta with ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FF3,  // -> letter omega with ypogegrammeni
+    0x03CE,  // letter omega with tonos
+    0x1FF4,  // -> letter omega with oxia and ypogegrammeni
+    0x1F00,  // letter alpha with psili
+    0x1F80,  // -> letter alpha with psili and ypogegrammeni
+    0x1F01,  // letter alpha with dasia
+    0x1F81,  // -> letter alpha with dasia and ypogegrammeni
+    0x1F02,  // letter alpha with psili and varia
+    0x1F82,  // -> letter alpha with psili and varia and ypogegrammeni
+    0x1F03,  // letter alpha with dasia and varia
+    0x1F83,  // -> letter alpha with dasia and varia and ypogegrammeni
+    0x1F04,  // letter alpha with psili and oxia
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x1F05,  // letter alpha with dasia and oxia
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x1F06,  // letter alpha with psili and perispomeni
+    0x1F86,  // -> letter alpha with psili and perispomeni and ypogegrammeni
+    0x1F07,  // letter alpha with dasia and perispomeni
+    0x1F87,  // -> letter alpha with dasia and perispomeni and ypogegrammeni
+    0x1F08,  // capital alpha with psili
+    0x1F88,  // -> capital alpha with psili and prosgegrammeni
+    0x1F09,  // capital alpha with dasia
+    0x1F89,  // -> capital alpha with dasia and prosgegrammeni
+    0x1F0A,  // capital alpha with psili and varia
+    0x1F8A,  // -> capital alpha with psili and varia and prosgegrammeni
+    0x1F0B,  // capital alpha with dasia and varia
+    0x1F8B,  // -> capital alpha with dasia and varia and prosgegrammeni
+    0x1F0C,  // capital alpha with psili and oxia
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x1F0D,  // capital alpha with dasia and oxia
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x1F0E,  // capital alpha with psili and perispomeni
+    0x1F8E,  // -> capital alpha with psili and perispomeni and prosgegrammeni
+    0x1F0F,  // capital alpha with dasia and perispomeni
+    0x1F8F,  // -> capital alpha with dasia and perispomeni and prosgegrammeni
+    0x1F20,  // letter eta with psili
+    0x1F90,  // -> letter eta with psili and ypogegrammeni
+    0x1F21,  // letter eta with dasia
+    0x1F91,  // -> letter eta with dasia and ypogegrammeni
+    0x1F22,  // letter eta with psili and varia
+    0x1F92,  // -> letter eta with psili and varia and ypogegrammeni
+    0x1F23,  // letter eta with dasia and varia
+    0x1F93,  // -> letter eta with dasia and varia and ypogegrammeni
+    0x1F24,  // letter eta with psili and oxia
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x1F25,  // letter eta with dasia and oxia
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x1F26,  // letter eta with psili and perispomeni
+    0x1F96,  // -> letter eta with psili and perispomeni and ypogegrammeni
+    0x1F27,  // letter eta with dasia and perispomeni
+    0x1F97,  // -> letter eta with dasia and perispomeni and ypogegrammeni
+    0x1F28,  // capital eta with psili
+    0x1F98,  // -> capital eta with psili and prosgegrammeni
+    0x1F29,  // capital eta with dasia
+    0x1F99,  // -> capital eta with dasia and prosgegrammeni
+    0x1F2A,  // capital eta with psili and varia
+    0x1F9A,  // -> capital eta with psili and varia and prosgegrammeni
+    0x1F2B,  // capital eta with dasia and varia
+    0x1F9B,  // -> capital eta with dasia and varia and prosgegrammeni
+    0x1F2C,  // capital eta with psili and oxia
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x1F2D,  // capital eta with dasia and oxia
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x1F2E,  // capital eta with psili and perispomeni
+    0x1F9E,  // -> capital eta with psili and perispomeni and prosgegrammeni
+    0x1F2F,  // capital eta with dasia and perispomeni
+    0x1F9F,  // -> capital eta with dasia and perispomeni and prosgegrammeni
+    0x1F60,  // letter omega with psili
+    0x1FA0,  // -> letter omega with psili and ypogegrammeni
+    0x1F61,  // letter omega with dasia
+    0x1FA1,  // -> letter omega with dasia and ypogegrammeni
+    0x1F62,  // letter omega with psili and varia
+    0x1FA2,  // -> letter omega with psili and varia and ypogegrammeni
+    0x1F63,  // letter omega with dasia and varia
+    0x1FA3,  // -> letter omega with dasia and varia and ypogegrammeni
+    0x1F64,  // letter omega with psili and oxia
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    0x1F65,  // letter omega with dasia and oxia
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    0x1F66,  // letter omega with psili and perispomeni
+    0x1FA6,  // -> letter omega with psili and perispomeni and ypogegrammeni
+    0x1F67,  // letter omega with dasia and perispomeni
+    0x1FA7,  // -> letter omega with dasia and perispomeni and ypogegrammeni
+    0x1F68,  // capital omega with psili
+    0x1FA8,  // -> capital omega with psili and prosgegrammeni
+    0x1F69,  // capital omega with dasia
+    0x1FA9,  // -> capital omega with dasia and prosgegrammeni
+    0x1F6A,  // capital omega with psili and varia
+    0x1FAA,  // -> capital omega with psili and varia and prosgegrammeni
+    0x1F6B,  // capital omega with dasia and varia
+    0x1FAB,  // -> capital omega with dasia and varia and prosgegrammeni
+    0x1F6C,  // capital omega with psili and oxia
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x1F6D,  // capital omega with dasia and oxia
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    0x1F6E,  // capital omega with psili and perispomeni
+    0x1FAE,  // -> capital omega with psili and perispomeni and prosgegrammeni
+    0x1F6F,  // capital omega with dasia and perispomeni
+    0x1FAF,  // -> capital omega with dasia and perispomeni and prosgegrammeni
+    0x1F70,  // letter alpha with varia
+    0x1FB2,  // -> letter alpha with varia and ypogegrammeni
+    0x1F74,  // letter eta with varia
+    0x1FC2,  // -> letter eta with varia and ypogegrammeni
+    0x1F7C,  // letter omega with varia
+    0x1FF2,  // -> letter omega with varia and ypogegrammeni
+    0x1FB6,  // letter alpha with perispomeni
+    0x1FB7,  // -> letter alpha with perispomeni and ypogegrammeni
+    0x1FC6,  // letter eta with perispomeni
+    0x1FC7,  // -> letter eta with perispomeni and ypogegrammeni
+    0x1FF6,  // letter omega with perispomeni
+    0x1FF7,  // -> letter omega with perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0005,          // number of entries
+    0x0300,  // combining grave accent
+    0x2090,
+    0x0301,  // combining acute accent
+    0x20FA,
+    0x0303,  // combining tilde
+    0x2164,
+    0x0313,  // combining comma above
+    0x21CC,
+    0x0314,  // combining reversed comma above
+    0x21DC,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1EC8:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <apostrophe>
+    //   internal character table
+    0x0002,          // number of entries
+    0x0028,  // left parenthesis
+    0x1EF2,
+    0x0029,  // right parenthesis
+    0x1F02,
+    //   leaf character table
+    0x000F,          // number of entries
+    0x03B1,  // letter alpha
+    0x1FB4,  // -> letter alpha with oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1FC4,  // -> letter eta with oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FF4,  // -> letter omega with oxia and ypogegrammeni
+    0x1F00,  // letter alpha with psili
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x1F01,  // letter alpha with dasia
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x1F08,  // capital alpha with psili
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x1F09,  // capital alpha with dasia
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x1F20,  // letter eta with psili
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x1F21,  // letter eta with dasia
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x1F28,  // capital eta with psili
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x1F29,  // capital eta with dasia
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x1F60,  // letter omega with psili
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    0x1F61,  // letter omega with dasia
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    0x1F68,  // capital omega with psili
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x1F69,  // capital omega with dasia
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    //   internal dead_key table
+    0x0002,          // number of entries
+    0x0313,  // combining comma above
+    0x1F12,
+    0x0314,  // combining reversed comma above
+    0x1F22,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1EF2:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <apostrophe>
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1F02:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <apostrophe>
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1F12:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <apostrophe>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1F22:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <apostrophe>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1F32:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F89,  // -> capital alpha with dasia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F99,  // -> capital eta with dasia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FA9,  // -> capital omega with dasia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F81,  // -> letter alpha with dasia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F91,  // -> letter eta with dasia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA1,  // -> letter omega with dasia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1F42:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F88,  // -> capital alpha with psili and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F98,  // -> capital eta with psili and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FA8,  // -> capital omega with psili and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F80,  // -> letter alpha with psili and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F90,  // -> letter eta with psili and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA0,  // -> letter omega with psili and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1F52:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <grave accent>
+    //   internal character table
+    0x0002,          // number of entries
+    0x0028,  // left parenthesis
+    0x1F7C,
+    0x0029,  // right parenthesis
+    0x1F8C,
+    //   leaf character table
+    0x000F,          // number of entries
+    0x03B1,  // letter alpha
+    0x1FB2,  // -> letter alpha with varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1FC2,  // -> letter eta with varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FF2,  // -> letter omega with varia and ypogegrammeni
+    0x1F00,  // letter alpha with psili
+    0x1F82,  // -> letter alpha with psili and varia and ypogegrammeni
+    0x1F01,  // letter alpha with dasia
+    0x1F83,  // -> letter alpha with dasia and varia and ypogegrammeni
+    0x1F08,  // capital alpha with psili
+    0x1F8A,  // -> capital alpha with psili and varia and prosgegrammeni
+    0x1F09,  // capital alpha with dasia
+    0x1F8B,  // -> capital alpha with dasia and varia and prosgegrammeni
+    0x1F20,  // letter eta with psili
+    0x1F92,  // -> letter eta with psili and varia and ypogegrammeni
+    0x1F21,  // letter eta with dasia
+    0x1F93,  // -> letter eta with dasia and varia and ypogegrammeni
+    0x1F28,  // capital eta with psili
+    0x1F9A,  // -> capital eta with psili and varia and prosgegrammeni
+    0x1F29,  // capital eta with dasia
+    0x1F9B,  // -> capital eta with dasia and varia and prosgegrammeni
+    0x1F60,  // letter omega with psili
+    0x1FA2,  // -> letter omega with psili and varia and ypogegrammeni
+    0x1F61,  // letter omega with dasia
+    0x1FA3,  // -> letter omega with dasia and varia and ypogegrammeni
+    0x1F68,  // capital omega with psili
+    0x1FAA,  // -> capital omega with psili and varia and prosgegrammeni
+    0x1F69,  // capital omega with dasia
+    0x1FAB,  // -> capital omega with dasia and varia and prosgegrammeni
+    //   internal dead_key table
+    0x0002,          // number of entries
+    0x0313,  // combining comma above
+    0x1F9C,
+    0x0314,  // combining reversed comma above
+    0x1FAC,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1F7C:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <grave accent>
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8B,  // -> capital alpha with dasia and varia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9B,  // -> capital eta with dasia and varia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAB,  // -> capital omega with dasia and varia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F83,  // -> letter alpha with dasia and varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F93,  // -> letter eta with dasia and varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA3,  // -> letter omega with dasia and varia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1F8C:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <grave accent>
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8A,  // -> capital alpha with psili and varia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9A,  // -> capital eta with psili and varia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAA,  // -> capital omega with psili and varia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F82,  // -> letter alpha with psili and varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F92,  // -> letter eta with psili and varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA2,  // -> letter omega with psili and varia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1F9C:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <grave accent>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8A,  // -> capital alpha with psili and varia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9A,  // -> capital eta with psili and varia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAA,  // -> capital omega with psili and varia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F82,  // -> letter alpha with psili and varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F92,  // -> letter eta with psili and varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA2,  // -> letter omega with psili and varia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1FAC:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <grave accent>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8B,  // -> capital alpha with dasia and varia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9B,  // -> capital eta with dasia and varia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAB,  // -> capital omega with dasia and varia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F83,  // -> letter alpha with dasia and varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F93,  // -> letter eta with dasia and varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA3,  // -> letter omega with dasia and varia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1FBC:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <tilde>
+    //   internal character table
+    0x0002,          // number of entries
+    0x0028,  // left parenthesis
+    0x1FE6,
+    0x0029,  // right parenthesis
+    0x1FF6,
+    //   leaf character table
+    0x000F,          // number of entries
+    0x03B1,  // letter alpha
+    0x1FB7,  // -> letter alpha with perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1FC7,  // -> letter eta with perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FF7,  // -> letter omega with perispomeni and ypogegrammeni
+    0x1F00,  // letter alpha with psili
+    0x1F86,  // -> letter alpha with psili and perispomeni and ypogegrammeni
+    0x1F01,  // letter alpha with dasia
+    0x1F87,  // -> letter alpha with dasia and perispomeni and ypogegrammeni
+    0x1F08,  // capital alpha with psili
+    0x1F8E,  // -> capital alpha with psili and perispomeni and prosgegrammeni
+    0x1F09,  // capital alpha with dasia
+    0x1F8F,  // -> capital alpha with dasia and perispomeni and prosgegrammeni
+    0x1F20,  // letter eta with psili
+    0x1F96,  // -> letter eta with psili and perispomeni and ypogegrammeni
+    0x1F21,  // letter eta with dasia
+    0x1F97,  // -> letter eta with dasia and perispomeni and ypogegrammeni
+    0x1F28,  // capital eta with psili
+    0x1F9E,  // -> capital eta with psili and perispomeni and prosgegrammeni
+    0x1F29,  // capital eta with dasia
+    0x1F9F,  // -> capital eta with dasia and perispomeni and prosgegrammeni
+    0x1F60,  // letter omega with psili
+    0x1FA6,  // -> letter omega with psili and perispomeni and ypogegrammeni
+    0x1F61,  // letter omega with dasia
+    0x1FA7,  // -> letter omega with dasia and perispomeni and ypogegrammeni
+    0x1F68,  // capital omega with psili
+    0x1FAE,  // -> capital omega with psili and perispomeni and prosgegrammeni
+    0x1F69,  // capital omega with dasia
+    0x1FAF,  // -> capital omega with dasia and perispomeni and prosgegrammeni
+    //   internal dead_key table
+    0x0002,          // number of entries
+    0x0313,  // combining comma above
+    0x2006,
+    0x0314,  // combining reversed comma above
+    0x2016,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1FE6:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <tilde>
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8F,  // -> capital alpha with dasia and perispomeni and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9F,  // -> capital eta with dasia and perispomeni and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAF,  // -> capital omega with dasia and perispomeni and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F87,  // -> letter alpha with dasia and perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F97,  // -> letter eta with dasia and perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA7,  // -> letter omega with dasia and perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x1FF6:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <tilde>
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8E,  // -> capital alpha with psili and perispomeni and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9E,  // -> capital eta with psili and perispomeni and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAE,  // -> capital omega with psili and perispomeni and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F86,  // -> letter alpha with psili and perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F96,  // -> letter eta with psili and perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA6,  // -> letter omega with psili and perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2006:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <tilde>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8E,  // -> capital alpha with psili and perispomeni and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9E,  // -> capital eta with psili and perispomeni and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAE,  // -> capital omega with psili and perispomeni and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F86,  // -> letter alpha with psili and perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F96,  // -> letter eta with psili and perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA6,  // -> letter omega with psili and perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2016:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <tilde>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8F,  // -> capital alpha with dasia and perispomeni and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9F,  // -> capital eta with dasia and perispomeni and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAF,  // -> capital omega with dasia and perispomeni and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F87,  // -> letter alpha with dasia and perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F97,  // -> letter eta with dasia and perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA7,  // -> letter omega with dasia and perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2026:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <acute accent>
+    //   internal character table
+    0x0002,          // number of entries
+    0x0028,  // left parenthesis
+    0x2050,
+    0x0029,  // right parenthesis
+    0x2060,
+    //   leaf character table
+    0x000F,          // number of entries
+    0x03B1,  // letter alpha
+    0x1FB4,  // -> letter alpha with oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1FC4,  // -> letter eta with oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FF4,  // -> letter omega with oxia and ypogegrammeni
+    0x1F00,  // letter alpha with psili
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x1F01,  // letter alpha with dasia
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x1F08,  // capital alpha with psili
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x1F09,  // capital alpha with dasia
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x1F20,  // letter eta with psili
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x1F21,  // letter eta with dasia
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x1F28,  // capital eta with psili
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x1F29,  // capital eta with dasia
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x1F60,  // letter omega with psili
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    0x1F61,  // letter omega with dasia
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    0x1F68,  // capital omega with psili
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x1F69,  // capital omega with dasia
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    //   internal dead_key table
+    0x0002,          // number of entries
+    0x0313,  // combining comma above
+    0x2070,
+    0x0314,  // combining reversed comma above
+    0x2080,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2050:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <acute accent>
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2060:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <acute accent>
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2070:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <acute accent>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2080:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     <acute accent>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2090:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     Dead<combining grave accent>
+    //   internal character table
+    0x0002,          // number of entries
+    0x0028,  // left parenthesis
+    0x20BA,
+    0x0029,  // right parenthesis
+    0x20CA,
+    //   leaf character table
+    0x000F,          // number of entries
+    0x03B1,  // letter alpha
+    0x1FB2,  // -> letter alpha with varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1FC2,  // -> letter eta with varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FF2,  // -> letter omega with varia and ypogegrammeni
+    0x1F00,  // letter alpha with psili
+    0x1F82,  // -> letter alpha with psili and varia and ypogegrammeni
+    0x1F01,  // letter alpha with dasia
+    0x1F83,  // -> letter alpha with dasia and varia and ypogegrammeni
+    0x1F08,  // capital alpha with psili
+    0x1F8A,  // -> capital alpha with psili and varia and prosgegrammeni
+    0x1F09,  // capital alpha with dasia
+    0x1F8B,  // -> capital alpha with dasia and varia and prosgegrammeni
+    0x1F20,  // letter eta with psili
+    0x1F92,  // -> letter eta with psili and varia and ypogegrammeni
+    0x1F21,  // letter eta with dasia
+    0x1F93,  // -> letter eta with dasia and varia and ypogegrammeni
+    0x1F28,  // capital eta with psili
+    0x1F9A,  // -> capital eta with psili and varia and prosgegrammeni
+    0x1F29,  // capital eta with dasia
+    0x1F9B,  // -> capital eta with dasia and varia and prosgegrammeni
+    0x1F60,  // letter omega with psili
+    0x1FA2,  // -> letter omega with psili and varia and ypogegrammeni
+    0x1F61,  // letter omega with dasia
+    0x1FA3,  // -> letter omega with dasia and varia and ypogegrammeni
+    0x1F68,  // capital omega with psili
+    0x1FAA,  // -> capital omega with psili and varia and prosgegrammeni
+    0x1F69,  // capital omega with dasia
+    0x1FAB,  // -> capital omega with dasia and varia and prosgegrammeni
+    //   internal dead_key table
+    0x0002,          // number of entries
+    0x0313,  // combining comma above
+    0x20DA,
+    0x0314,  // combining reversed comma above
+    0x20EA,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x20BA:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     Dead<combining grave accent>
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8B,  // -> capital alpha with dasia and varia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9B,  // -> capital eta with dasia and varia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAB,  // -> capital omega with dasia and varia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F83,  // -> letter alpha with dasia and varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F93,  // -> letter eta with dasia and varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA3,  // -> letter omega with dasia and varia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x20CA:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     Dead<combining grave accent>
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8A,  // -> capital alpha with psili and varia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9A,  // -> capital eta with psili and varia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAA,  // -> capital omega with psili and varia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F82,  // -> letter alpha with psili and varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F92,  // -> letter eta with psili and varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA2,  // -> letter omega with psili and varia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x20DA:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     Dead<combining grave accent>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8A,  // -> capital alpha with psili and varia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9A,  // -> capital eta with psili and varia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAA,  // -> capital omega with psili and varia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F82,  // -> letter alpha with psili and varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F92,  // -> letter eta with psili and varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA2,  // -> letter omega with psili and varia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x20EA:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     Dead<combining grave accent>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8B,  // -> capital alpha with dasia and varia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9B,  // -> capital eta with dasia and varia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAB,  // -> capital omega with dasia and varia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F83,  // -> letter alpha with dasia and varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F93,  // -> letter eta with dasia and varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA3,  // -> letter omega with dasia and varia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x20FA:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     Dead<combining acute accent>
+    //   internal character table
+    0x0002,          // number of entries
+    0x0028,  // left parenthesis
+    0x2124,
+    0x0029,  // right parenthesis
+    0x2134,
+    //   leaf character table
+    0x000F,          // number of entries
+    0x03B1,  // letter alpha
+    0x1FB4,  // -> letter alpha with oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1FC4,  // -> letter eta with oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FF4,  // -> letter omega with oxia and ypogegrammeni
+    0x1F00,  // letter alpha with psili
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x1F01,  // letter alpha with dasia
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x1F08,  // capital alpha with psili
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x1F09,  // capital alpha with dasia
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x1F20,  // letter eta with psili
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x1F21,  // letter eta with dasia
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x1F28,  // capital eta with psili
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x1F29,  // capital eta with dasia
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x1F60,  // letter omega with psili
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    0x1F61,  // letter omega with dasia
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    0x1F68,  // capital omega with psili
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x1F69,  // capital omega with dasia
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    //   internal dead_key table
+    0x0002,          // number of entries
+    0x0313,  // combining comma above
+    0x2144,
+    0x0314,  // combining reversed comma above
+    0x2154,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2124:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     Dead<combining acute accent>
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2134:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     Dead<combining acute accent>
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2144:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     Dead<combining acute accent>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2154:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     Dead<combining acute accent>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2164:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     Dead<combining tilde>
+    //   internal character table
+    0x0002,          // number of entries
+    0x0028,  // left parenthesis
+    0x218E,
+    0x0029,  // right parenthesis
+    0x219E,
+    //   leaf character table
+    0x000F,          // number of entries
+    0x03B1,  // letter alpha
+    0x1FB7,  // -> letter alpha with perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1FC7,  // -> letter eta with perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FF7,  // -> letter omega with perispomeni and ypogegrammeni
+    0x1F00,  // letter alpha with psili
+    0x1F86,  // -> letter alpha with psili and perispomeni and ypogegrammeni
+    0x1F01,  // letter alpha with dasia
+    0x1F87,  // -> letter alpha with dasia and perispomeni and ypogegrammeni
+    0x1F08,  // capital alpha with psili
+    0x1F8E,  // -> capital alpha with psili and perispomeni and prosgegrammeni
+    0x1F09,  // capital alpha with dasia
+    0x1F8F,  // -> capital alpha with dasia and perispomeni and prosgegrammeni
+    0x1F20,  // letter eta with psili
+    0x1F96,  // -> letter eta with psili and perispomeni and ypogegrammeni
+    0x1F21,  // letter eta with dasia
+    0x1F97,  // -> letter eta with dasia and perispomeni and ypogegrammeni
+    0x1F28,  // capital eta with psili
+    0x1F9E,  // -> capital eta with psili and perispomeni and prosgegrammeni
+    0x1F29,  // capital eta with dasia
+    0x1F9F,  // -> capital eta with dasia and perispomeni and prosgegrammeni
+    0x1F60,  // letter omega with psili
+    0x1FA6,  // -> letter omega with psili and perispomeni and ypogegrammeni
+    0x1F61,  // letter omega with dasia
+    0x1FA7,  // -> letter omega with dasia and perispomeni and ypogegrammeni
+    0x1F68,  // capital omega with psili
+    0x1FAE,  // -> capital omega with psili and perispomeni and prosgegrammeni
+    0x1F69,  // capital omega with dasia
+    0x1FAF,  // -> capital omega with dasia and perispomeni and prosgegrammeni
+    //   internal dead_key table
+    0x0002,          // number of entries
+    0x0313,  // combining comma above
+    0x21AE,
+    0x0314,  // combining reversed comma above
+    0x21BE,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x218E:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     Dead<combining tilde>
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8F,  // -> capital alpha with dasia and perispomeni and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9F,  // -> capital eta with dasia and perispomeni and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAF,  // -> capital omega with dasia and perispomeni and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F87,  // -> letter alpha with dasia and perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F97,  // -> letter eta with dasia and perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA7,  // -> letter omega with dasia and perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x219E:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     Dead<combining tilde>
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8E,  // -> capital alpha with psili and perispomeni and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9E,  // -> capital eta with psili and perispomeni and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAE,  // -> capital omega with psili and perispomeni and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F86,  // -> letter alpha with psili and perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F96,  // -> letter eta with psili and perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA6,  // -> letter omega with psili and perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x21AE:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     Dead<combining tilde>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8E,  // -> capital alpha with psili and perispomeni and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9E,  // -> capital eta with psili and perispomeni and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAE,  // -> capital omega with psili and perispomeni and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F86,  // -> letter alpha with psili and perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F96,  // -> letter eta with psili and perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA6,  // -> letter omega with psili and perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x21BE:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     Dead<combining tilde>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0005,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8F,  // -> capital alpha with dasia and perispomeni and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9F,  // -> capital eta with dasia and perispomeni and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAF,  // -> capital omega with dasia and perispomeni and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F87,  // -> letter alpha with dasia and perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F97,  // -> letter eta with dasia and perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x21CC:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F88,  // -> capital alpha with psili and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F98,  // -> capital eta with psili and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FA8,  // -> capital omega with psili and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F80,  // -> letter alpha with psili and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F90,  // -> letter eta with psili and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA0,  // -> letter omega with psili and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x21DC:
+    //   prefix:
+    //     Compose
+    //     <greek small letter iota>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F89,  // -> capital alpha with dasia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F99,  // -> capital eta with dasia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FA9,  // -> capital omega with dasia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F81,  // -> letter alpha with dasia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F91,  // -> letter eta with dasia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA1,  // -> letter omega with dasia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x21EC:
+    //   prefix:
+    //     Compose
+    //     <greek small letter omicron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0027,  // apostrophe
+    0x03CC,  // -> letter omicron with tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x21F2:
+    //   prefix:
+    //     Compose
+    //     <greek small letter upsilon>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0022,  // quotation mark
+    0x03CB,  // -> letter upsilon with dialytika
+    0x0027,  // apostrophe
+    0x03CD,  // -> letter upsilon with tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x21FA:
+    //   prefix:
+    //     Compose
+    //     <greek small letter omega>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0027,  // apostrophe
+    0x03CE,  // -> letter omega with tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2200:
+    //   prefix:
+    //     Compose
+    //     <cyrillic capital letter ie>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x003D,  // equals sign
+    0x20AC,  // -> euro sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2206:
+    //   prefix:
+    //     Compose
+    //     <cyrillic capital letter en>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x041E,  // cyrillic capital o
+    0x2116,  // -> numero sign
+    0x043E,  // cyrillic small o
+    0x2116,  // -> numero sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x220E:
+    //   prefix:
+    //     Compose
+    //     <cyrillic capital letter es>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x003D,  // equals sign
+    0x20AC,  // -> euro sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2214:
+    //   prefix:
+    //     Compose
+    //     <cyrillic small letter pe>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0430,  // cyrillic small a
+    0x00A7,  // -> section sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x221A:
+    //   prefix:
+    //     Compose
+    //     <hebrew point hiriq>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x05D9,  // hebrew yod
+    0xFB1D,  // -> hebrew yod with hiriq
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2220:
+    //   prefix:
+    //     Compose
+    //     <hebrew point patah>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x05D0,  // hebrew alef
+    0xFB2E,  // -> hebrew alef with patah
+    0x0652,  // arabic sukun
+    0xFB1F,  // -> hebrew ligature yiddish yod yod patah
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2228:
+    //   prefix:
+    //     Compose
+    //     <hebrew point qamats>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x05D0,  // hebrew alef
+    0xFB2F,  // -> hebrew alef with qamats
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x222E:
+    //   prefix:
+    //     Compose
+    //     <hebrew point holam>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x05D5,  // hebrew vav
+    0xFB4B,  // -> hebrew vav with holam
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2234:
+    //   prefix:
+    //     Compose
+    //     <hebrew point dagesh or mapiq>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0016,          // number of entries
+    0x05D0,  // hebrew alef
+    0xFB30,  // -> hebrew alef with mapiq
+    0x05D1,  // hebrew bet
+    0xFB31,  // -> hebrew bet with dagesh
+    0x05D2,  // hebrew gimel
+    0xFB32,  // -> hebrew gimel with dagesh
+    0x05D3,  // hebrew dalet
+    0xFB33,  // -> hebrew dalet with dagesh
+    0x05D4,  // hebrew he
+    0xFB34,  // -> hebrew he with mapiq
+    0x05D5,  // hebrew vav
+    0xFB35,  // -> hebrew vav with dagesh
+    0x05D6,  // hebrew zayin
+    0xFB36,  // -> hebrew zayin with dagesh
+    0x05D8,  // hebrew tet
+    0xFB38,  // -> hebrew tet with dagesh
+    0x05D9,  // hebrew yod
+    0xFB39,  // -> hebrew yod with dagesh
+    0x05DA,  // hebrew final kaf
+    0xFB3A,  // -> hebrew final kaf with dagesh
+    0x05DB,  // hebrew kaf
+    0xFB3B,  // -> hebrew kaf with dagesh
+    0x05DC,  // hebrew lamed
+    0xFB3C,  // -> hebrew lamed with dagesh
+    0x05DE,  // hebrew mem
+    0xFB3E,  // -> hebrew mem with dagesh
+    0x05E0,  // hebrew nun
+    0xFB40,  // -> hebrew nun with dagesh
+    0x05E1,  // hebrew samekh
+    0xFB41,  // -> hebrew samekh with dagesh
+    0x05E3,  // hebrew final pe
+    0xFB43,  // -> hebrew final pe with dagesh
+    0x05E4,  // hebrew pe
+    0xFB44,  // -> hebrew pe with dagesh
+    0x05E6,  // hebrew tsadi
+    0xFB46,  // -> hebrew tsadi with dagesh
+    0x05E7,  // hebrew qof
+    0xFB47,  // -> hebrew qof with dagesh
+    0x05E8,  // hebrew resh
+    0xFB48,  // -> hebrew resh with dagesh
+    0x05E9,  // hebrew shin
+    0xFB49,  // -> hebrew shin with dagesh
+    0x05EA,  // hebrew tav
+    0xFB4A,  // -> hebrew tav with dagesh
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2264:
+    //   prefix:
+    //     Compose
+    //     <arabic question mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x05D1,  // hebrew bet
+    0xFB4C,  // -> hebrew bet with rafe
+    0x05DB,  // hebrew kaf
+    0xFB4D,  // -> hebrew kaf with rafe
+    0x05E4,  // hebrew pe
+    0xFB4E,  // -> hebrew pe with rafe
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x226E:
+    //   prefix:
+    //     Compose
+    //     <arabic letter hamza>
+    //   internal character table
+    0x0001,          // number of entries
+    0x05BC,  // hebrew point dagesh or mapiq
+    0x2278,
+    //   leaf character table
+    0x0002,          // number of entries
+    0x05E9,  // hebrew shin
+    0xFB2A,  // -> hebrew shin with shin dot
+    0xFB49,  // hebrew shin with dagesh
+    0xFB2C,  // -> hebrew shin with dagesh and shin dot
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2278:
+    //   prefix:
+    //     Compose
+    //     <arabic letter hamza>
+    //     <hebrew point dagesh or mapiq>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x05E9,  // hebrew shin
+    0xFB2C,  // -> hebrew shin with dagesh and shin dot
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x227E:
+    //   prefix:
+    //     Compose
+    //     <arabic letter alef with madda above>
+    //   internal character table
+    0x0001,          // number of entries
+    0x05BC,  // hebrew point dagesh or mapiq
+    0x2288,
+    //   leaf character table
+    0x0002,          // number of entries
+    0x05E9,  // hebrew shin
+    0xFB2B,  // -> hebrew shin with sin dot
+    0xFB49,  // hebrew shin with dagesh
+    0xFB2D,  // -> hebrew shin with dagesh and sin dot
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2288:
+    //   prefix:
+    //     Compose
+    //     <arabic letter alef with madda above>
+    //     <hebrew point dagesh or mapiq>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x05E9,  // hebrew shin
+    0xFB2D,  // -> hebrew shin with dagesh and sin dot
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x228E:
+    //   prefix:
+    //     Compose
+    //     <arabic maddah above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0627,  // arabic alef
+    0x0622,  // -> arabic alef with madda above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2294:
+    //   prefix:
+    //     Compose
+    //     <arabic hamza above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0430,  // cyrillic small a
+    0x06C2,  // -> arabic heh goal with hamza above
+    0x0440,  // cyrillic small er
+    0x06D3,  // -> arabic yeh barree with hamza above
+    0x0443,  // cyrillic small u
+    0x06C0,  // -> arabic heh with yeh above
+    0x0627,  // arabic alef
+    0x0623,  // -> arabic alef with hamza above
+    0x0648,  // arabic waw
+    0x0624,  // -> arabic waw with hamza above
+    0x064A,  // arabic yeh
+    0x0626,  // -> arabic yeh with hamza above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x22A4:
+    //   prefix:
+    //     Compose
+    //     <arabic hamza below>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0627,  // arabic alef
+    0x0625,  // -> arabic alef with hamza below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x22AA:
+    //   prefix:
+    //     Compose
+    //     <devanagari sign nukta>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000B,          // number of entries
+    0x0915,  // devanagari ka
+    0x0958,  // -> devanagari qa
+    0x0916,  // devanagari kha
+    0x0959,  // -> devanagari khha
+    0x0917,  // devanagari ga
+    0x095A,  // -> devanagari ghha
+    0x091C,  // devanagari ja
+    0x095B,  // -> devanagari za
+    0x0921,  // devanagari dda
+    0x095C,  // -> devanagari dddha
+    0x0922,  // devanagari ddha
+    0x095D,  // -> devanagari rha
+    0x0928,  // devanagari na
+    0x0929,  // -> devanagari nnna
+    0x092B,  // devanagari pha
+    0x095E,  // -> devanagari fa
+    0x092F,  // devanagari ya
+    0x095F,  // -> devanagari yya
+    0x0930,  // devanagari ra
+    0x0931,  // -> devanagari rra
+    0x0933,  // devanagari lla
+    0x0934,  // -> devanagari llla
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x22C4:
+    //   prefix:
+    //     Compose
+    //     <bengali sign nukta>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x09A1,  // bengali dda
+    0x09DC,  // -> bengali rra
+    0x09A2,  // bengali ddha
+    0x09DD,  // -> bengali rha
+    0x09AF,  // bengali ya
+    0x09DF,  // -> bengali yya
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x22CE:
+    //   prefix:
+    //     Compose
+    //     <bengali vowel sign e>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x09BE,  // bengali vowel sign aa
+    0x09CB,  // -> bengali vowel sign o
+    0x09D7,  // bengali au length mark
+    0x09CC,  // -> bengali vowel sign au
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x22D6:
+    //   prefix:
+    //     Compose
+    //     <gurmukhi sign nukta>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0A16,  // gurmukhi kha
+    0x0A59,  // -> gurmukhi khha
+    0x0A17,  // gurmukhi ga
+    0x0A5A,  // -> gurmukhi ghha
+    0x0A1C,  // gurmukhi ja
+    0x0A5B,  // -> gurmukhi za
+    0x0A2B,  // gurmukhi pha
+    0x0A5E,  // -> gurmukhi fa
+    0x0A32,  // gurmukhi la
+    0x0A33,  // -> gurmukhi lla
+    0x0A38,  // gurmukhi sa
+    0x0A36,  // -> gurmukhi sha
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x22E6:
+    //   prefix:
+    //     Compose
+    //     <oriya sign nukta>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0B21,  // oriya dda
+    0x0B5C,  // -> oriya rra
+    0x0B22,  // oriya ddha
+    0x0B5D,  // -> oriya rha
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x22EE:
+    //   prefix:
+    //     Compose
+    //     <oriya vowel sign e>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x0B3E,  // oriya vowel sign aa
+    0x0B4B,  // -> oriya vowel sign o
+    0x0B56,  // oriya ai length mark
+    0x0B48,  // -> oriya vowel sign ai
+    0x0B57,  // oriya au length mark
+    0x0B4C,  // -> oriya vowel sign au
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x22F8:
+    //   prefix:
+    //     Compose
+    //     <tamil vowel sign ee>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0BBE,  // tamil vowel sign aa
+    0x0BCB,  // -> tamil vowel sign oo
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x22FE:
+    //   prefix:
+    //     Compose
+    //     <tamil au length mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0B92,  // tamil o
+    0x0B94,  // -> tamil au
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2304:
+    //   prefix:
+    //     Compose
+    //     <telugu vowel sign e>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0C56,  // telugu ai length mark
+    0x0C48,  // -> telugu vowel sign ai
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x230A:
+    //   prefix:
+    //     Compose
+    //     <kannada vowel sign i>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0CD5,  // kannada length mark
+    0x0CC0,  // -> kannada vowel sign ii
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2310:
+    //   prefix:
+    //     Compose
+    //     <kannada vowel sign e>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x0CC2,  // kannada vowel sign uu
+    0x0CCA,  // -> kannada vowel sign o
+    0x0CD5,  // kannada length mark
+    0x0CC7,  // -> kannada vowel sign ee
+    0x0CD6,  // kannada ai length mark
+    0x0CC8,  // -> kannada vowel sign ai
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x231A:
+    //   prefix:
+    //     Compose
+    //     <kannada vowel sign o>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0CD5,  // kannada length mark
+    0x0CCB,  // -> kannada vowel sign oo
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2320:
+    //   prefix:
+    //     Compose
+    //     <malayalam vowel sign e>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0D3E,  // malayalam vowel sign aa
+    0x0D4A,  // -> malayalam vowel sign o
+    0x0D57,  // malayalam au length mark
+    0x0D4C,  // -> malayalam vowel sign au
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2328:
+    //   prefix:
+    //     Compose
+    //     <malayalam vowel sign ee>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0D3E,  // malayalam vowel sign aa
+    0x0D4B,  // -> malayalam vowel sign oo
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x232E:
+    //   prefix:
+    //     Compose
+    //     <sinhala vowel sign kombuva haa aela-pilla>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0E2A,  // thai character so sua
+    0x0DDD,  // -> sinhala vowel sign kombuva haa diga aela-pilla
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2334:
+    //   prefix:
+    //     Compose
+    //     <thai character sara uu>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x0E2A,  // thai character so sua
+    0x0DDA,  // -> sinhala vowel sign diga kombuva
+    0x0E2F,  // thai character paiyannoi
+    0x0DDC,  // -> sinhala vowel sign kombuva haa aela-pilla
+    0x0E3F,  // thai currency symbol baht
+    0x0DDE,  // -> sinhala vowel sign kombuva haa gayanukitta
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x233E:
+    //   prefix:
+    //     Compose
+    //     <tibetan vowel sign aa>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x0F72,  // tibetan vowel sign i
+    0x0F73,  // -> tibetan vowel sign ii
+    0x0F74,  // tibetan vowel sign u
+    0x0F75,  // -> tibetan vowel sign uu
+    0x0F80,  // tibetan vowel sign reversed i
+    0x0F81,  // -> tibetan vowel sign reversed ii
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2348:
+    //   prefix:
+    //     Compose
+    //     <tibetan subjoined letter ka>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0FB5,  // tibetan subjoined ssa
+    0x0FB9,  // -> tibetan subjoined kssa
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x234E:
+    //   prefix:
+    //     Compose
+    //     <tibetan subjoined letter ga>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0FB7,  // tibetan subjoined ha
+    0x0F93,  // -> tibetan subjoined gha
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2354:
+    //   prefix:
+    //     Compose
+    //     <tibetan subjoined letter dda>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0FB7,  // tibetan subjoined ha
+    0x0F9D,  // -> tibetan subjoined ddha
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x235A:
+    //   prefix:
+    //     Compose
+    //     <tibetan subjoined letter da>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0FB7,  // tibetan subjoined ha
+    0x0FA2,  // -> tibetan subjoined dha
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2360:
+    //   prefix:
+    //     Compose
+    //     <tibetan subjoined letter ba>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0FB7,  // tibetan subjoined ha
+    0x0FA7,  // -> tibetan subjoined bha
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2366:
+    //   prefix:
+    //     Compose
+    //     <tibetan subjoined letter dza>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0FB7,  // tibetan subjoined ha
+    0x0FAC,  // -> tibetan subjoined dzha
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x236C:
+    //   prefix:
+    //     Compose
+    //     <tibetan subjoined letter ra>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0F80,  // tibetan vowel sign reversed i
+    0x0F76,  // -> tibetan vowel sign vocalic r
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2372:
+    //   prefix:
+    //     Compose
+    //     <tibetan subjoined letter la>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0F80,  // tibetan vowel sign reversed i
+    0x0F78,  // -> tibetan vowel sign vocalic l
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2378:
+    //   prefix:
+    //     Compose
+    //     <tibetan subjoined letter ssa>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0F40,  // tibetan ka
+    0x0F69,  // -> tibetan kssa
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x237E:
+    //   prefix:
+    //     Compose
+    //     <tibetan subjoined letter ha>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0005,          // number of entries
+    0x0F42,  // tibetan ga
+    0x0F43,  // -> tibetan gha
+    0x0F4C,  // tibetan dda
+    0x0F4D,  // -> tibetan ddha
+    0x0F51,  // tibetan da
+    0x0F52,  // -> tibetan dha
+    0x0F56,  // tibetan ba
+    0x0F57,  // -> tibetan bha
+    0x0F5B,  // tibetan dza
+    0x0F5C,  // -> tibetan dzha
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x238C:
+    //   prefix:
+    //     Compose
+    //     <myanmar vowel sign ii>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x1025,  // myanmar u
+    0x1026,  // -> myanmar uu
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2392:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong kiyeok>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x1100,  // hangul choseong kiyeok
+    0x1101,  // -> hangul choseong ssangkiyeok
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2398:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong nieun>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x1100,  // hangul choseong kiyeok
+    0x1113,  // -> hangul choseong nieun-kiyeok
+    0x1102,  // hangul choseong nieun
+    0x1114,  // -> hangul choseong ssangnieun
+    0x1103,  // hangul choseong tikeut
+    0x1115,  // -> hangul choseong nieun-tikeut
+    0x1107,  // hangul choseong pieup
+    0x1116,  // -> hangul choseong nieun-pieup
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x23A4:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong tikeut>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x1100,  // hangul choseong kiyeok
+    0x1117,  // -> hangul choseong tikeut-kiyeok
+    0x1103,  // hangul choseong tikeut
+    0x1104,  // -> hangul choseong ssangtikeut
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x23AC:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong rieul>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x1102,  // hangul choseong nieun
+    0x1118,  // -> hangul choseong rieul-nieun
+    0x1105,  // hangul choseong rieul
+    0x1119,  // -> hangul choseong ssangrieul
+    0x110B,  // hangul choseong ieung
+    0x111B,  // -> hangul choseong kapyeounrieul
+    0x1112,  // hangul choseong hieuh
+    0x111A,  // -> hangul choseong rieul-hieuh
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x23B8:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong mieum>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x1107,  // hangul choseong pieup
+    0x111C,  // -> hangul choseong mieum-pieup
+    0x110B,  // hangul choseong ieung
+    0x111D,  // -> hangul choseong kapyeounmieum
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x23C0:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong pieup>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0010,          // number of entries
+    0x1100,  // hangul choseong kiyeok
+    0x111E,  // -> hangul choseong pieup-kiyeok
+    0x1102,  // hangul choseong nieun
+    0x111F,  // -> hangul choseong pieup-nieun
+    0x1103,  // hangul choseong tikeut
+    0x1120,  // -> hangul choseong pieup-tikeut
+    0x1107,  // hangul choseong pieup
+    0x1108,  // -> hangul choseong ssangpieup
+    0x1109,  // hangul choseong sios
+    0x1121,  // -> hangul choseong pieup-sios
+    0x110A,  // hangul choseong ssangsios
+    0x1125,  // -> hangul choseong pieup-ssangsios
+    0x110B,  // hangul choseong ieung
+    0x112B,  // -> hangul choseong kapyeounpieup
+    0x110C,  // hangul choseong cieuc
+    0x1127,  // -> hangul choseong pieup-cieuc
+    0x110E,  // hangul choseong chieuch
+    0x1128,  // -> hangul choseong pieup-chieuch
+    0x1110,  // hangul choseong thieuth
+    0x1129,  // -> hangul choseong pieup-thieuth
+    0x1111,  // hangul choseong phieuph
+    0x112A,  // -> hangul choseong pieup-phieuph
+    0x112B,  // hangul choseong kapyeounpieup
+    0x112C,  // -> hangul choseong kapyeounssangpieup
+    0x112D,  // hangul choseong sios-kiyeok
+    0x1122,  // -> hangul choseong pieup-sios-kiyeok
+    0x112F,  // hangul choseong sios-tikeut
+    0x1123,  // -> hangul choseong pieup-sios-tikeut
+    0x1132,  // hangul choseong sios-pieup
+    0x1124,  // -> hangul choseong pieup-sios-pieup
+    0x1136,  // hangul choseong sios-cieuc
+    0x1126,  // -> hangul choseong pieup-sios-cieuc
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x23E4:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong ssangpieup>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x110B,  // hangul choseong ieung
+    0x112C,  // -> hangul choseong kapyeounssangpieup
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x23EA:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong sios>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0010,          // number of entries
+    0x1100,  // hangul choseong kiyeok
+    0x112D,  // -> hangul choseong sios-kiyeok
+    0x1102,  // hangul choseong nieun
+    0x112E,  // -> hangul choseong sios-nieun
+    0x1103,  // hangul choseong tikeut
+    0x112F,  // -> hangul choseong sios-tikeut
+    0x1105,  // hangul choseong rieul
+    0x1130,  // -> hangul choseong sios-rieul
+    0x1106,  // hangul choseong mieum
+    0x1131,  // -> hangul choseong sios-mieum
+    0x1107,  // hangul choseong pieup
+    0x1132,  // -> hangul choseong sios-pieup
+    0x1109,  // hangul choseong sios
+    0x110A,  // -> hangul choseong ssangsios
+    0x110A,  // hangul choseong ssangsios
+    0x1134,  // -> hangul choseong sios-ssangsios
+    0x110B,  // hangul choseong ieung
+    0x1135,  // -> hangul choseong sios-ieung
+    0x110C,  // hangul choseong cieuc
+    0x1136,  // -> hangul choseong sios-cieuc
+    0x110E,  // hangul choseong chieuch
+    0x1137,  // -> hangul choseong sios-chieuch
+    0x110F,  // hangul choseong khieukh
+    0x1138,  // -> hangul choseong sios-khieukh
+    0x1110,  // hangul choseong thieuth
+    0x1139,  // -> hangul choseong sios-thieuth
+    0x1111,  // hangul choseong phieuph
+    0x113A,  // -> hangul choseong sios-phieuph
+    0x1112,  // hangul choseong hieuh
+    0x113B,  // -> hangul choseong sios-hieuh
+    0x111E,  // hangul choseong pieup-kiyeok
+    0x1133,  // -> hangul choseong sios-pieup-kiyeok
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x240E:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong ssangsios>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x1109,  // hangul choseong sios
+    0x1134,  // -> hangul choseong sios-ssangsios
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2414:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong ieung>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000B,          // number of entries
+    0x1100,  // hangul choseong kiyeok
+    0x1141,  // -> hangul choseong ieung-kiyeok
+    0x1103,  // hangul choseong tikeut
+    0x1142,  // -> hangul choseong ieung-tikeut
+    0x1106,  // hangul choseong mieum
+    0x1143,  // -> hangul choseong ieung-mieum
+    0x1107,  // hangul choseong pieup
+    0x1144,  // -> hangul choseong ieung-pieup
+    0x1109,  // hangul choseong sios
+    0x1145,  // -> hangul choseong ieung-sios
+    0x110B,  // hangul choseong ieung
+    0x1147,  // -> hangul choseong ssangieung
+    0x110C,  // hangul choseong cieuc
+    0x1148,  // -> hangul choseong ieung-cieuc
+    0x110E,  // hangul choseong chieuch
+    0x1149,  // -> hangul choseong ieung-chieuch
+    0x1110,  // hangul choseong thieuth
+    0x114A,  // -> hangul choseong ieung-thieuth
+    0x1111,  // hangul choseong phieuph
+    0x114B,  // -> hangul choseong ieung-phieuph
+    0x1140,  // hangul choseong pansios
+    0x1146,  // -> hangul choseong ieung-pansios
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x242E:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong cieuc>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x110B,  // hangul choseong ieung
+    0x114D,  // -> hangul choseong cieuc-ieung
+    0x110C,  // hangul choseong cieuc
+    0x110D,  // -> hangul choseong ssangcieuc
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2436:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong chieuch>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x110F,  // hangul choseong khieukh
+    0x1152,  // -> hangul choseong chieuch-khieukh
+    0x1112,  // hangul choseong hieuh
+    0x1153,  // -> hangul choseong chieuch-hieuh
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x243E:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong phieuph>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x1107,  // hangul choseong pieup
+    0x1156,  // -> hangul choseong phieuph-pieup
+    0x110B,  // hangul choseong ieung
+    0x1157,  // -> hangul choseong kapyeounphieuph
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2446:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong hieuh>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x1112,  // hangul choseong hieuh
+    0x1158,  // -> hangul choseong ssanghieuh
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x244C:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong pieup-sios>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0005,          // number of entries
+    0x1100,  // hangul choseong kiyeok
+    0x1122,  // -> hangul choseong pieup-sios-kiyeok
+    0x1103,  // hangul choseong tikeut
+    0x1123,  // -> hangul choseong pieup-sios-tikeut
+    0x1107,  // hangul choseong pieup
+    0x1124,  // -> hangul choseong pieup-sios-pieup
+    0x1109,  // hangul choseong sios
+    0x1125,  // -> hangul choseong pieup-ssangsios
+    0x110C,  // hangul choseong cieuc
+    0x1126,  // -> hangul choseong pieup-sios-cieuc
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x245A:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong sios-pieup>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x1100,  // hangul choseong kiyeok
+    0x1133,  // -> hangul choseong sios-pieup-kiyeok
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2460:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong chitueumsios>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x113C,  // hangul choseong chitueumsios
+    0x113D,  // -> hangul choseong chitueumssangsios
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2466:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong ceongchieumsios>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x113E,  // hangul choseong ceongchieumsios
+    0x113F,  // -> hangul choseong ceongchieumssangsios
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x246C:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong chitueumcieuc>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x114E,  // hangul choseong chitueumcieuc
+    0x114F,  // -> hangul choseong chitueumssangcieuc
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2472:
+    //   prefix:
+    //     Compose
+    //     <hangul choseong ceongchieumcieuc>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x1150,  // hangul choseong ceongchieumcieuc
+    0x1151,  // -> hangul choseong ceongchieumssangcieuc
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2478:
+    //   prefix:
+    //     Compose
+    //     <hangul jungseong a>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x1169,  // hangul jungseong o
+    0x1176,  // -> hangul jungseong a-o
+    0x116E,  // hangul jungseong u
+    0x1177,  // -> hangul jungseong a-u
+    0x1175,  // hangul jungseong i
+    0x1162,  // -> hangul jungseong ae
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2482:
+    //   prefix:
+    //     Compose
+    //     <hangul jungseong ya>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x1169,  // hangul jungseong o
+    0x1178,  // -> hangul jungseong ya-o
+    0x116D,  // hangul jungseong yo
+    0x1179,  // -> hangul jungseong ya-yo
+    0x1175,  // hangul jungseong i
+    0x1164,  // -> hangul jungseong yae
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x248C:
+    //   prefix:
+    //     Compose
+    //     <hangul jungseong eo>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x1169,  // hangul jungseong o
+    0x117A,  // -> hangul jungseong eo-o
+    0x116E,  // hangul jungseong u
+    0x117B,  // -> hangul jungseong eo-u
+    0x1173,  // hangul jungseong eu
+    0x117C,  // -> hangul jungseong eo-eu
+    0x1175,  // hangul jungseong i
+    0x1166,  // -> hangul jungseong e
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2498:
+    //   prefix:
+    //     Compose
+    //     <hangul jungseong yeo>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x1169,  // hangul jungseong o
+    0x117D,  // -> hangul jungseong yeo-o
+    0x116E,  // hangul jungseong u
+    0x117E,  // -> hangul jungseong yeo-u
+    0x1175,  // hangul jungseong i
+    0x1168,  // -> hangul jungseong ye
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x24A2:
+    //   prefix:
+    //     Compose
+    //     <hangul jungseong o>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0008,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x116A,  // -> hangul jungseong wa
+    0x1162,  // hangul jungseong ae
+    0x116B,  // -> hangul jungseong wae
+    0x1165,  // hangul jungseong eo
+    0x117F,  // -> hangul jungseong o-eo
+    0x1166,  // hangul jungseong e
+    0x1180,  // -> hangul jungseong o-e
+    0x1168,  // hangul jungseong ye
+    0x1181,  // -> hangul jungseong o-ye
+    0x1169,  // hangul jungseong o
+    0x1182,  // -> hangul jungseong o-o
+    0x116E,  // hangul jungseong u
+    0x1183,  // -> hangul jungseong o-u
+    0x1175,  // hangul jungseong i
+    0x116C,  // -> hangul jungseong oe
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x24B6:
+    //   prefix:
+    //     Compose
+    //     <hangul jungseong wa>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x1175,  // hangul jungseong i
+    0x116B,  // -> hangul jungseong wae
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x24BC:
+    //   prefix:
+    //     Compose
+    //     <hangul jungseong yo>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0005,          // number of entries
+    0x1163,  // hangul jungseong ya
+    0x1184,  // -> hangul jungseong yo-ya
+    0x1164,  // hangul jungseong yae
+    0x1185,  // -> hangul jungseong yo-yae
+    0x1167,  // hangul jungseong yeo
+    0x1186,  // -> hangul jungseong yo-yeo
+    0x1169,  // hangul jungseong o
+    0x1187,  // -> hangul jungseong yo-o
+    0x1175,  // hangul jungseong i
+    0x1188,  // -> hangul jungseong yo-i
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x24CA:
+    //   prefix:
+    //     Compose
+    //     <hangul jungseong u>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0008,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x1189,  // -> hangul jungseong u-a
+    0x1162,  // hangul jungseong ae
+    0x118A,  // -> hangul jungseong u-ae
+    0x1165,  // hangul jungseong eo
+    0x116F,  // -> hangul jungseong weo
+    0x1166,  // hangul jungseong e
+    0x1170,  // -> hangul jungseong we
+    0x1168,  // hangul jungseong ye
+    0x118C,  // -> hangul jungseong u-ye
+    0x116E,  // hangul jungseong u
+    0x118D,  // -> hangul jungseong u-u
+    0x1175,  // hangul jungseong i
+    0x1171,  // -> hangul jungseong wi
+    0x117C,  // hangul jungseong eo-eu
+    0x118B,  // -> hangul jungseong u-eo-eu
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x24DE:
+    //   prefix:
+    //     Compose
+    //     <hangul jungseong weo>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x1173,  // hangul jungseong eu
+    0x118B,  // -> hangul jungseong u-eo-eu
+    0x1175,  // hangul jungseong i
+    0x1170,  // -> hangul jungseong we
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x24E6:
+    //   prefix:
+    //     Compose
+    //     <hangul jungseong yu>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0007,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x118E,  // -> hangul jungseong yu-a
+    0x1165,  // hangul jungseong eo
+    0x118F,  // -> hangul jungseong yu-eo
+    0x1166,  // hangul jungseong e
+    0x1190,  // -> hangul jungseong yu-e
+    0x1167,  // hangul jungseong yeo
+    0x1191,  // -> hangul jungseong yu-yeo
+    0x1168,  // hangul jungseong ye
+    0x1192,  // -> hangul jungseong yu-ye
+    0x116E,  // hangul jungseong u
+    0x1193,  // -> hangul jungseong yu-u
+    0x1175,  // hangul jungseong i
+    0x1194,  // -> hangul jungseong yu-i
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x24F8:
+    //   prefix:
+    //     Compose
+    //     <hangul jungseong eu>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x116E,  // hangul jungseong u
+    0x1195,  // -> hangul jungseong eu-u
+    0x1173,  // hangul jungseong eu
+    0x1196,  // -> hangul jungseong eu-eu
+    0x1175,  // hangul jungseong i
+    0x1174,  // -> hangul jungseong yi
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2502:
+    //   prefix:
+    //     Compose
+    //     <hangul jungseong yi>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x116E,  // hangul jungseong u
+    0x1197,  // -> hangul jungseong yi-u
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2508:
+    //   prefix:
+    //     Compose
+    //     <hangul jungseong i>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x1161,  // hangul jungseong a
+    0x1198,  // -> hangul jungseong i-a
+    0x1163,  // hangul jungseong ya
+    0x1199,  // -> hangul jungseong i-ya
+    0x1169,  // hangul jungseong o
+    0x119A,  // -> hangul jungseong i-o
+    0x116E,  // hangul jungseong u
+    0x119B,  // -> hangul jungseong i-u
+    0x1173,  // hangul jungseong eu
+    0x119C,  // -> hangul jungseong i-eu
+    0x119E,  // hangul jungseong araea
+    0x119D,  // -> hangul jungseong i-araea
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2518:
+    //   prefix:
+    //     Compose
+    //     <hangul jungseong araea>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x1165,  // hangul jungseong eo
+    0x119F,  // -> hangul jungseong araea-eo
+    0x116E,  // hangul jungseong u
+    0x11A0,  // -> hangul jungseong araea-u
+    0x1175,  // hangul jungseong i
+    0x11A1,  // -> hangul jungseong araea-i
+    0x119E,  // hangul jungseong araea
+    0x11A2,  // -> hangul jungseong ssangaraea
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2524:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong kiyeok>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x11A8,  // hangul jongseong kiyeok
+    0x11A9,  // -> hangul jongseong ssangkiyeok
+    0x11AF,  // hangul jongseong rieul
+    0x11C3,  // -> hangul jongseong kiyeok-rieul
+    0x11BA,  // hangul jongseong sios
+    0x11AA,  // -> hangul jongseong kiyeok-sios
+    0x11E7,  // hangul jongseong sios-kiyeok
+    0x11C4,  // -> hangul jongseong kiyeok-sios-kiyeok
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2530:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong kiyeok-sios>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x11A8,  // hangul jongseong kiyeok
+    0x11C4,  // -> hangul jongseong kiyeok-sios-kiyeok
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2536:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong nieun>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0007,          // number of entries
+    0x11A8,  // hangul jongseong kiyeok
+    0x11C5,  // -> hangul jongseong nieun-kiyeok
+    0x11AE,  // hangul jongseong tikeut
+    0x11C6,  // -> hangul jongseong nieun-tikeut
+    0x11BA,  // hangul jongseong sios
+    0x11C7,  // -> hangul jongseong nieun-sios
+    0x11BD,  // hangul jongseong cieuc
+    0x11AC,  // -> hangul jongseong nieun-cieuc
+    0x11C0,  // hangul jongseong thieuth
+    0x11C9,  // -> hangul jongseong nieun-thieuth
+    0x11C2,  // hangul jongseong hieuh
+    0x11AD,  // -> hangul jongseong nieun-hieuh
+    0x11EB,  // hangul jongseong pansios
+    0x11C8,  // -> hangul jongseong nieun-pansios
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2548:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong tikeut>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x11A8,  // hangul jongseong kiyeok
+    0x11CA,  // -> hangul jongseong tikeut-kiyeok
+    0x11AF,  // hangul jongseong rieul
+    0x11CB,  // -> hangul jongseong tikeut-rieul
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2550:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong rieul>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0014,          // number of entries
+    0x11A8,  // hangul jongseong kiyeok
+    0x11B0,  // -> hangul jongseong rieul-kiyeok
+    0x11AA,  // hangul jongseong kiyeok-sios
+    0x11CC,  // -> hangul jongseong rieul-kiyeok-sios
+    0x11AB,  // hangul jongseong nieun
+    0x11CD,  // -> hangul jongseong rieul-nieun
+    0x11AE,  // hangul jongseong tikeut
+    0x11CE,  // -> hangul jongseong rieul-tikeut
+    0x11AF,  // hangul jongseong rieul
+    0x11D0,  // -> hangul jongseong ssangrieul
+    0x11B7,  // hangul jongseong mieum
+    0x11B1,  // -> hangul jongseong rieul-mieum
+    0x11B8,  // hangul jongseong pieup
+    0x11B2,  // -> hangul jongseong rieul-pieup
+    0x11B9,  // hangul jongseong pieup-sios
+    0x11D3,  // -> hangul jongseong rieul-pieup-sios
+    0x11BA,  // hangul jongseong sios
+    0x11B3,  // -> hangul jongseong rieul-sios
+    0x11BB,  // hangul jongseong ssangsios
+    0x11D6,  // -> hangul jongseong rieul-ssangsios
+    0x11BF,  // hangul jongseong khieukh
+    0x11D8,  // -> hangul jongseong rieul-khieukh
+    0x11C0,  // hangul jongseong thieuth
+    0x11B4,  // -> hangul jongseong rieul-thieuth
+    0x11C1,  // hangul jongseong phieuph
+    0x11B5,  // -> hangul jongseong rieul-phieuph
+    0x11C2,  // hangul jongseong hieuh
+    0x11B6,  // -> hangul jongseong rieul-hieuh
+    0x11DA,  // hangul jongseong mieum-kiyeok
+    0x11D1,  // -> hangul jongseong rieul-mieum-kiyeok
+    0x11DD,  // hangul jongseong mieum-sios
+    0x11D2,  // -> hangul jongseong rieul-mieum-sios
+    0x11E5,  // hangul jongseong pieup-hieuh
+    0x11D4,  // -> hangul jongseong rieul-pieup-hieuh
+    0x11E6,  // hangul jongseong kapyeounpieup
+    0x11D5,  // -> hangul jongseong rieul-kapyeounpieup
+    0x11EB,  // hangul jongseong pansios
+    0x11D7,  // -> hangul jongseong rieul-pansios
+    0x11F9,  // hangul jongseong yeorinhieuh
+    0x11D9,  // -> hangul jongseong rieul-yeorinhieuh
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x257C:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong rieul-kiyeok>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x11BA,  // hangul jongseong sios
+    0x11CC,  // -> hangul jongseong rieul-kiyeok-sios
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2582:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong rieul-mieum>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x11A8,  // hangul jongseong kiyeok
+    0x11D1,  // -> hangul jongseong rieul-mieum-kiyeok
+    0x11BA,  // hangul jongseong sios
+    0x11D2,  // -> hangul jongseong rieul-mieum-sios
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x258A:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong rieul-pieup>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0003,          // number of entries
+    0x11BA,  // hangul jongseong sios
+    0x11D3,  // -> hangul jongseong rieul-pieup-sios
+    0x11BC,  // hangul jongseong ieung
+    0x11D5,  // -> hangul jongseong rieul-kapyeounpieup
+    0x11C2,  // hangul jongseong hieuh
+    0x11D4,  // -> hangul jongseong rieul-pieup-hieuh
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2594:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong rieul-sios>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x11BA,  // hangul jongseong sios
+    0x11D6,  // -> hangul jongseong rieul-ssangsios
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x259A:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong mieum>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0009,          // number of entries
+    0x11A8,  // hangul jongseong kiyeok
+    0x11DA,  // -> hangul jongseong mieum-kiyeok
+    0x11AF,  // hangul jongseong rieul
+    0x11DB,  // -> hangul jongseong mieum-rieul
+    0x11B8,  // hangul jongseong pieup
+    0x11DC,  // -> hangul jongseong mieum-pieup
+    0x11BA,  // hangul jongseong sios
+    0x11DD,  // -> hangul jongseong mieum-sios
+    0x11BB,  // hangul jongseong ssangsios
+    0x11DE,  // -> hangul jongseong mieum-ssangsios
+    0x11BC,  // hangul jongseong ieung
+    0x11E2,  // -> hangul jongseong kapyeounmieum
+    0x11BE,  // hangul jongseong chieuch
+    0x11E0,  // -> hangul jongseong mieum-chieuch
+    0x11C2,  // hangul jongseong hieuh
+    0x11E1,  // -> hangul jongseong mieum-hieuh
+    0x11EB,  // hangul jongseong pansios
+    0x11DF,  // -> hangul jongseong mieum-pansios
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x25B0:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong pieup>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0005,          // number of entries
+    0x11AF,  // hangul jongseong rieul
+    0x11E3,  // -> hangul jongseong pieup-rieul
+    0x11BA,  // hangul jongseong sios
+    0x11B9,  // -> hangul jongseong pieup-sios
+    0x11BC,  // hangul jongseong ieung
+    0x11E6,  // -> hangul jongseong kapyeounpieup
+    0x11C1,  // hangul jongseong phieuph
+    0x11E4,  // -> hangul jongseong pieup-phieuph
+    0x11C2,  // hangul jongseong hieuh
+    0x11E5,  // -> hangul jongseong pieup-hieuh
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x25BE:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong sios>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0005,          // number of entries
+    0x11A8,  // hangul jongseong kiyeok
+    0x11E7,  // -> hangul jongseong sios-kiyeok
+    0x11AE,  // hangul jongseong tikeut
+    0x11E8,  // -> hangul jongseong sios-tikeut
+    0x11AF,  // hangul jongseong rieul
+    0x11E9,  // -> hangul jongseong sios-rieul
+    0x11B8,  // hangul jongseong pieup
+    0x11EA,  // -> hangul jongseong sios-pieup
+    0x11BA,  // hangul jongseong sios
+    0x11BB,  // -> hangul jongseong ssangsios
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x25CC:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong ieung>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x11A8,  // hangul jongseong kiyeok
+    0x11EC,  // -> hangul jongseong ieung-kiyeok
+    0x11A9,  // hangul jongseong ssangkiyeok
+    0x11ED,  // -> hangul jongseong ieung-ssangkiyeok
+    0x11BC,  // hangul jongseong ieung
+    0x11EE,  // -> hangul jongseong ssangieung
+    0x11BF,  // hangul jongseong khieukh
+    0x11EF,  // -> hangul jongseong ieung-khieukh
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x25D8:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong phieuph>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x11B8,  // hangul jongseong pieup
+    0x11F3,  // -> hangul jongseong phieuph-pieup
+    0x11BC,  // hangul jongseong ieung
+    0x11F4,  // -> hangul jongseong kapyeounphieuph
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x25E0:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong hieuh>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x11AB,  // hangul jongseong nieun
+    0x11F5,  // -> hangul jongseong hieuh-nieun
+    0x11AF,  // hangul jongseong rieul
+    0x11F6,  // -> hangul jongseong hieuh-rieul
+    0x11B7,  // hangul jongseong mieum
+    0x11F7,  // -> hangul jongseong hieuh-mieum
+    0x11B8,  // hangul jongseong pieup
+    0x11F8,  // -> hangul jongseong hieuh-pieup
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x25EC:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong rieul-tikeut>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x11C2,  // hangul jongseong hieuh
+    0x11CF,  // -> hangul jongseong rieul-tikeut-hieuh
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x25F2:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong mieum-sios>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x11BA,  // hangul jongseong sios
+    0x11DE,  // -> hangul jongseong mieum-ssangsios
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x25F8:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong ieung-kiyeok>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x11A8,  // hangul jongseong kiyeok
+    0x11ED,  // -> hangul jongseong ieung-ssangkiyeok
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x25FE:
+    //   prefix:
+    //     Compose
+    //     <hangul jongseong yesieung>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x11BA,  // hangul jongseong sios
+    0x11F1,  // -> hangul jongseong yesieung-sios
+    0x11EB,  // hangul jongseong pansios
+    0x11F2,  // -> hangul jongseong yesieung-pansios
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2606:
+    //   prefix:
+    //     Compose
+    //     <greek psili>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0027,  // apostrophe
+    0x1FCE,  // -> psili and oxia
+    0x0060,  // grave accent
+    0x1FCD,  // -> psili and varia
+    0x007E,  // tilde
+    0x1FCF,  // -> psili and perispomeni
+    0x00B4,  // acute accent
+    0x1FCE,  // -> psili and oxia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0003,          // number of entries
+    0x0300,  // combining grave accent
+    0x1FCD,  // -> psili and varia
+    0x0301,  // combining acute accent
+    0x1FCE,  // -> psili and oxia
+    0x0303,  // combining tilde
+    0x1FCF,  // -> psili and perispomeni
+
+    // offset 0x2618:
+    //   prefix:
+    //     Compose
+    //     <greek dasia>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0027,  // apostrophe
+    0x1FDE,  // -> dasia and oxia
+    0x0060,  // grave accent
+    0x1FDD,  // -> dasia and varia
+    0x007E,  // tilde
+    0x1FDF,  // -> dasia and perispomeni
+    0x00B4,  // acute accent
+    0x1FDE,  // -> dasia and oxia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0003,          // number of entries
+    0x0300,  // combining grave accent
+    0x1FDD,  // -> dasia and varia
+    0x0301,  // combining acute accent
+    0x1FDE,  // -> dasia and oxia
+    0x0303,  // combining tilde
+    0x1FDF,  // -> dasia and perispomeni
+
+    // offset 0x262A:
+    //   prefix:
+    //     Compose
+    //     <there exists>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2204,  // -> there does not exist
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2630:
+    //   prefix:
+    //     Compose
+    //     <element of>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2209,  // -> not an element of
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2636:
+    //   prefix:
+    //     Compose
+    //     <contains as member>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x220C,  // -> does not contain as member
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x263C:
+    //   prefix:
+    //     Compose
+    //     <divides>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2224,  // -> does not divide
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2642:
+    //   prefix:
+    //     Compose
+    //     <parallel to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2226,  // -> not parallel to
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2648:
+    //   prefix:
+    //     Compose
+    //     <tilde operator>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2247,  // -> neither approximately nor actually equal to
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x264E:
+    //   prefix:
+    //     Compose
+    //     <asymptotically equal to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2244,  // -> not asymptotically equal to
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2654:
+    //   prefix:
+    //     Compose
+    //     <almost equal to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2249,  // -> not almost equal to
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x265A:
+    //   prefix:
+    //     Compose
+    //     <equivalent to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x226D,  // -> not equivalent to
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2660:
+    //   prefix:
+    //     Compose
+    //     <identical to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2262,  // -> not identical to
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2666:
+    //   prefix:
+    //     Compose
+    //     <less-than or equal to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2270,  // -> neither less-than nor equal to
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x266C:
+    //   prefix:
+    //     Compose
+    //     <greater-than or equal to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2271,  // -> neither greater-than nor equal to
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2672:
+    //   prefix:
+    //     Compose
+    //     <less-than or equivalent to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2274,  // -> neither less-than nor equivalent to
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2678:
+    //   prefix:
+    //     Compose
+    //     <greater-than or equivalent to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2275,  // -> neither greater-than nor equivalent to
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x267E:
+    //   prefix:
+    //     Compose
+    //     <less-than or greater-than>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2278,  // -> neither less-than nor greater-than
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2684:
+    //   prefix:
+    //     Compose
+    //     <greater-than or less-than>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2279,  // -> neither greater-than nor less-than
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x268A:
+    //   prefix:
+    //     Compose
+    //     <precedes>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2280,  // -> does not precede
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2690:
+    //   prefix:
+    //     Compose
+    //     <succeeds>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2281,  // -> does not succeed
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2696:
+    //   prefix:
+    //     Compose
+    //     <precedes or equal to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x22E0,  // -> does not precede or equal
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x269C:
+    //   prefix:
+    //     Compose
+    //     <succeeds or equal to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x22E1,  // -> does not succeed or equal
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x26A2:
+    //   prefix:
+    //     Compose
+    //     <subset of>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2284,  // -> not a subset of
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x26A8:
+    //   prefix:
+    //     Compose
+    //     <superset of>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2285,  // -> not a superset of
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x26AE:
+    //   prefix:
+    //     Compose
+    //     <subset of or equal to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2288,  // -> neither a subset of nor equal to
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x26B4:
+    //   prefix:
+    //     Compose
+    //     <superset of or equal to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2289,  // -> neither a superset of nor equal to
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x26BA:
+    //   prefix:
+    //     Compose
+    //     <square image of or equal to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x22E2,  // -> not square image of or equal to
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x26C0:
+    //   prefix:
+    //     Compose
+    //     <square original of or equal to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x22E3,  // -> not square original of or equal to
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x26C6:
+    //   prefix:
+    //     Compose
+    //     <right tack>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x22AC,  // -> does not prove
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x26CC:
+    //   prefix:
+    //     Compose
+    //     <true>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x22AD,  // -> not true
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x26D2:
+    //   prefix:
+    //     Compose
+    //     <forces>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x22AE,  // -> does not force
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x26D8:
+    //   prefix:
+    //     Compose
+    //     <double vertical bar double right turnstile>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x22AF,  // -> negated double vertical bar double right turnstile
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x26DE:
+    //   prefix:
+    //     Compose
+    //     <normal subgroup of>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x22EA,  // -> not normal subgroup of
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x26E4:
+    //   prefix:
+    //     Compose
+    //     <contains as normal subgroup>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x22EB,  // -> does not contain as normal subgroup
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x26EA:
+    //   prefix:
+    //     Compose
+    //     <normal subgroup of or equal to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x22EC,  // -> not normal subgroup of or equal to
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x26F0:
+    //   prefix:
+    //     Compose
+    //     <contains as normal subgroup or equal to>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x22ED,  // -> does not contain as normal subgroup or equal
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x26F6:
+    //   prefix:
+    //     Compose
+    //     <nonforking>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x2ADC,  // -> forking
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x26FC:
+    //   prefix:
+    //     Dead<quotation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000B,          // number of entries
+    0x0020,  // space
+    0x0022,  // -> quotation mark
+    0x0041,  // capital a
+    0x00C4,  // -> capital a with diaeresis
+    0x0045,  // capital e
+    0x00CB,  // -> capital e with diaeresis
+    0x0049,  // capital i
+    0x00CF,  // -> capital i with diaeresis
+    0x004F,  // capital o
+    0x00D6,  // -> capital o with diaeresis
+    0x0055,  // capital u
+    0x00DC,  // -> capital u with diaeresis
+    0x0061,  // letter a
+    0x00E4,  // -> letter a with diaeresis
+    0x0065,  // letter e
+    0x00EB,  // -> letter e with diaeresis
+    0x0069,  // letter i
+    0x00EF,  // -> letter i with diaeresis
+    0x006F,  // letter o
+    0x00F6,  // -> letter o with diaeresis
+    0x0075,  // letter u
+    0x00FC,  // -> letter u with diaeresis
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2716:
+    //   prefix:
+    //     Dead<apostrophe>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000F,          // number of entries
+    0x0020,  // space
+    0x0027,  // -> apostrophe
+    0x0041,  // capital a
+    0x00C1,  // -> capital a with acute
+    0x0043,  // capital c
+    0x00C7,  // -> capital c with cedilla
+    0x0045,  // capital e
+    0x00C9,  // -> capital e with acute
+    0x0049,  // capital i
+    0x00CD,  // -> capital i with acute
+    0x004F,  // capital o
+    0x00D3,  // -> capital o with acute
+    0x0055,  // capital u
+    0x00DA,  // -> capital u with acute
+    0x0059,  // capital y
+    0x00DD,  // -> capital y with acute
+    0x0061,  // letter a
+    0x00E1,  // -> letter a with acute
+    0x0063,  // letter c
+    0x00E7,  // -> letter c with cedilla
+    0x0065,  // letter e
+    0x00E9,  // -> letter e with acute
+    0x0069,  // letter i
+    0x00ED,  // -> letter i with acute
+    0x006F,  // letter o
+    0x00F3,  // -> letter o with acute
+    0x0075,  // letter u
+    0x00FA,  // -> letter u with acute
+    0x0079,  // letter y
+    0x00FD,  // -> letter y with acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2738:
+    //   prefix:
+    //     Dead<circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000B,          // number of entries
+    0x0020,  // space
+    0x005E,  // -> circumflex accent
+    0x0041,  // capital a
+    0x00C2,  // -> capital a with circumflex
+    0x0045,  // capital e
+    0x00CA,  // -> capital e with circumflex
+    0x0049,  // capital i
+    0x00CE,  // -> capital i with circumflex
+    0x004F,  // capital o
+    0x00D4,  // -> capital o with circumflex
+    0x0055,  // capital u
+    0x00DB,  // -> capital u with circumflex
+    0x0061,  // letter a
+    0x00E2,  // -> letter a with circumflex
+    0x0065,  // letter e
+    0x00EA,  // -> letter e with circumflex
+    0x0069,  // letter i
+    0x00EE,  // -> letter i with circumflex
+    0x006F,  // letter o
+    0x00F4,  // -> letter o with circumflex
+    0x0075,  // letter u
+    0x00FB,  // -> letter u with circumflex
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2752:
+    //   prefix:
+    //     Dead<grave accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000B,          // number of entries
+    0x0020,  // space
+    0x0060,  // -> grave accent
+    0x0041,  // capital a
+    0x00C0,  // -> capital a with grave
+    0x0045,  // capital e
+    0x00C8,  // -> capital e with grave
+    0x0049,  // capital i
+    0x00CC,  // -> capital i with grave
+    0x004F,  // capital o
+    0x00D2,  // -> capital o with grave
+    0x0055,  // capital u
+    0x00D9,  // -> capital u with grave
+    0x0061,  // letter a
+    0x00E0,  // -> letter a with grave
+    0x0065,  // letter e
+    0x00E8,  // -> letter e with grave
+    0x0069,  // letter i
+    0x00EC,  // -> letter i with grave
+    0x006F,  // letter o
+    0x00F2,  // -> letter o with grave
+    0x0075,  // letter u
+    0x00F9,  // -> letter u with grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x276C:
+    //   prefix:
+    //     Dead<tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0007,          // number of entries
+    0x0020,  // space
+    0x007E,  // -> tilde
+    0x0041,  // capital a
+    0x00C3,  // -> capital a with tilde
+    0x004E,  // capital n
+    0x00D1,  // -> capital n with tilde
+    0x004F,  // capital o
+    0x00D5,  // -> capital o with tilde
+    0x0061,  // letter a
+    0x00E3,  // -> letter a with tilde
+    0x006E,  // letter n
+    0x00F1,  // -> letter n with tilde
+    0x006F,  // letter o
+    0x00F5,  // -> letter o with tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x277E:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0055,          // number of entries
+    0x0020,  // space
+    0x0060,  // -> grave accent
+    0x0041,  // capital a
+    0x00C0,  // -> capital a with grave
+    0x0045,  // capital e
+    0x00C8,  // -> capital e with grave
+    0x0049,  // capital i
+    0x00CC,  // -> capital i with grave
+    0x004E,  // capital n
+    0x01F8,  // -> capital n with grave
+    0x004F,  // capital o
+    0x00D2,  // -> capital o with grave
+    0x0055,  // capital u
+    0x00D9,  // -> capital u with grave
+    0x0056,  // capital v
+    0x01DB,  // -> capital u with diaeresis and grave
+    0x0057,  // capital w
+    0x1E80,  // -> capital w with grave
+    0x0059,  // capital y
+    0x1EF2,  // -> capital y with grave
+    0x0061,  // letter a
+    0x00E0,  // -> letter a with grave
+    0x0065,  // letter e
+    0x00E8,  // -> letter e with grave
+    0x0069,  // letter i
+    0x00EC,  // -> letter i with grave
+    0x006E,  // letter n
+    0x01F9,  // -> letter n with grave
+    0x006F,  // letter o
+    0x00F2,  // -> letter o with grave
+    0x0075,  // letter u
+    0x00F9,  // -> letter u with grave
+    0x0076,  // letter v
+    0x01DC,  // -> letter u with diaeresis and grave
+    0x0077,  // letter w
+    0x1E81,  // -> letter w with grave
+    0x0079,  // letter y
+    0x1EF3,  // -> letter y with grave
+    0x00A0,  // no-break space
+    0x0300,  // -> combining grave accent
+    0x00C2,  // capital a with circumflex
+    0x1EA6,  // -> capital a with circumflex and grave
+    0x00CA,  // capital e with circumflex
+    0x1EC0,  // -> capital e with circumflex and grave
+    0x00D4,  // capital o with circumflex
+    0x1ED2,  // -> capital o with circumflex and grave
+    0x00DC,  // capital u with diaeresis
+    0x01DB,  // -> capital u with diaeresis and grave
+    0x00E2,  // letter a with circumflex
+    0x1EA7,  // -> letter a with circumflex and grave
+    0x00EA,  // letter e with circumflex
+    0x1EC1,  // -> letter e with circumflex and grave
+    0x00F4,  // letter o with circumflex
+    0x1ED3,  // -> letter o with circumflex and grave
+    0x00FC,  // letter u with diaeresis
+    0x01DC,  // -> letter u with diaeresis and grave
+    0x0102,  // capital a with breve
+    0x1EB0,  // -> capital a with breve and grave
+    0x0103,  // letter a with breve
+    0x1EB1,  // -> letter a with breve and grave
+    0x0104,  // capital a with ogonek
+    0x1EDD,  // -> letter o with horn and grave
+    0x0112,  // capital e with macron
+    0x1E14,  // -> capital e with macron and grave
+    0x0113,  // letter e with macron
+    0x1E15,  // -> letter e with macron and grave
+    0x014C,  // capital o with macron
+    0x1E50,  // -> capital o with macron and grave
+    0x014D,  // letter o with macron
+    0x1E51,  // -> letter o with macron and grave
+    0x017B,  // capital z with dot above
+    0x1EEA,  // -> capital u with horn and grave
+    0x01A0,  // capital o with horn
+    0x1EDC,  // -> capital o with horn and grave
+    0x01B0,  // letter u with horn
+    0x1EEB,  // -> letter u with horn and grave
+    0x0391,  // capital alpha
+    0x1FBA,  // -> capital alpha with varia
+    0x0395,  // capital epsilon
+    0x1FC8,  // -> capital epsilon with varia
+    0x0397,  // capital eta
+    0x1FCA,  // -> capital eta with varia
+    0x0399,  // capital iota
+    0x1FDA,  // -> capital iota with varia
+    0x039F,  // capital omicron
+    0x1FF8,  // -> capital omicron with varia
+    0x03A5,  // capital upsilon
+    0x1FEA,  // -> capital upsilon with varia
+    0x03A9,  // capital omega
+    0x1FFA,  // -> capital omega with varia
+    0x03B1,  // letter alpha
+    0x1F70,  // -> letter alpha with varia
+    0x03B5,  // letter epsilon
+    0x1F72,  // -> letter epsilon with varia
+    0x03B7,  // letter eta
+    0x1F74,  // -> letter eta with varia
+    0x03B9,  // letter iota
+    0x1F76,  // -> letter iota with varia
+    0x03BF,  // letter omicron
+    0x1F78,  // -> letter omicron with varia
+    0x03C5,  // letter upsilon
+    0x1F7A,  // -> letter upsilon with varia
+    0x03C9,  // letter omega
+    0x1F7C,  // -> letter omega with varia
+    0x03CA,  // letter iota with dialytika
+    0x1FD2,  // -> letter iota with dialytika and varia
+    0x03CB,  // letter upsilon with dialytika
+    0x1FE2,  // -> letter upsilon with dialytika and varia
+    0x0415,  // cyrillic capital ie
+    0x0400,  // -> cyrillic capital ie with grave
+    0x0418,  // cyrillic capital i
+    0x040D,  // -> cyrillic capital i with grave
+    0x0435,  // cyrillic small ie
+    0x0450,  // -> cyrillic small ie with grave
+    0x0438,  // cyrillic small i
+    0x045D,  // -> cyrillic small i with grave
+    0x1F00,  // letter alpha with psili
+    0x1F02,  // -> letter alpha with psili and varia
+    0x1F01,  // letter alpha with dasia
+    0x1F03,  // -> letter alpha with dasia and varia
+    0x1F08,  // capital alpha with psili
+    0x1F0A,  // -> capital alpha with psili and varia
+    0x1F09,  // capital alpha with dasia
+    0x1F0B,  // -> capital alpha with dasia and varia
+    0x1F10,  // letter epsilon with psili
+    0x1F12,  // -> letter epsilon with psili and varia
+    0x1F11,  // letter epsilon with dasia
+    0x1F13,  // -> letter epsilon with dasia and varia
+    0x1F18,  // capital epsilon with psili
+    0x1F1A,  // -> capital epsilon with psili and varia
+    0x1F19,  // capital epsilon with dasia
+    0x1F1B,  // -> capital epsilon with dasia and varia
+    0x1F20,  // letter eta with psili
+    0x1F22,  // -> letter eta with psili and varia
+    0x1F21,  // letter eta with dasia
+    0x1F23,  // -> letter eta with dasia and varia
+    0x1F28,  // capital eta with psili
+    0x1F2A,  // -> capital eta with psili and varia
+    0x1F29,  // capital eta with dasia
+    0x1F2B,  // -> capital eta with dasia and varia
+    0x1F30,  // letter iota with psili
+    0x1F32,  // -> letter iota with psili and varia
+    0x1F31,  // letter iota with dasia
+    0x1F33,  // -> letter iota with dasia and varia
+    0x1F38,  // capital iota with psili
+    0x1F3A,  // -> capital iota with psili and varia
+    0x1F39,  // capital iota with dasia
+    0x1F3B,  // -> capital iota with dasia and varia
+    0x1F40,  // letter omicron with psili
+    0x1F42,  // -> letter omicron with psili and varia
+    0x1F41,  // letter omicron with dasia
+    0x1F43,  // -> letter omicron with dasia and varia
+    0x1F48,  // capital omicron with psili
+    0x1F4A,  // -> capital omicron with psili and varia
+    0x1F49,  // capital omicron with dasia
+    0x1F4B,  // -> capital omicron with dasia and varia
+    0x1F50,  // letter upsilon with psili
+    0x1F52,  // -> letter upsilon with psili and varia
+    0x1F51,  // letter upsilon with dasia
+    0x1F53,  // -> letter upsilon with dasia and varia
+    0x1F59,  // capital upsilon with dasia
+    0x1F5B,  // -> capital upsilon with dasia and varia
+    0x1F60,  // letter omega with psili
+    0x1F62,  // -> letter omega with psili and varia
+    0x1F61,  // letter omega with dasia
+    0x1F63,  // -> letter omega with dasia and varia
+    0x1F68,  // capital omega with psili
+    0x1F6A,  // -> capital omega with psili and varia
+    0x1F69,  // capital omega with dasia
+    0x1F6B,  // -> capital omega with dasia and varia
+    //   internal dead_key table
+    0x0008,          // number of entries
+    0x0000,  // U+0000
+    0x283E,
+    0x0302,  // combining circumflex accent
+    0x28E2,
+    0x0304,  // combining macron
+    0x28F2,
+    0x0306,  // combining breve
+    0x28FE,
+    0x0308,  // combining diaeresis
+    0x2906,
+    0x0313,  // combining comma above
+    0x2912,
+    0x0314,  // combining reversed comma above
+    0x2930,
+    0x031B,  // combining horn
+    0x2950,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x0300,  // combining grave accent
+    0x0060,  // -> grave accent
+
+    // offset 0x283E:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //     Compose
+    //   internal character table
+    0x0009,          // number of entries
+    0x0022,  // quotation mark
+    0x2854,
+    0x0028,  // left parenthesis
+    0x2860,
+    0x0029,  // right parenthesis
+    0x2880,
+    0x002B,  // plus sign
+    0x289E,
+    0x0055,  // capital u
+    0x28AA,
+    0x005E,  // circumflex accent
+    0x28B2,
+    0x005F,  // low line
+    0x28C2,
+    0x0062,  // letter b
+    0x28CE,
+    0x00AF,  // macron
+    0x28D6,
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2854:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //     Compose
+    //     <quotation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0055,  // capital u
+    0x01DB,  // -> capital u with diaeresis and grave
+    0x0075,  // letter u
+    0x01DC,  // -> letter u with diaeresis and grave
+    0x03B9,  // letter iota
+    0x1FD2,  // -> letter iota with dialytika and varia
+    0x03C5,  // letter upsilon
+    0x1FE2,  // -> letter upsilon with dialytika and varia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2860:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //     Compose
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000E,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0B,  // -> capital alpha with dasia and varia
+    0x0395,  // capital epsilon
+    0x1F1B,  // -> capital epsilon with dasia and varia
+    0x0397,  // capital eta
+    0x1F2B,  // -> capital eta with dasia and varia
+    0x0399,  // capital iota
+    0x1F3B,  // -> capital iota with dasia and varia
+    0x039F,  // capital omicron
+    0x1F4B,  // -> capital omicron with dasia and varia
+    0x03A5,  // capital upsilon
+    0x1F5B,  // -> capital upsilon with dasia and varia
+    0x03A9,  // capital omega
+    0x1F6B,  // -> capital omega with dasia and varia
+    0x03B1,  // letter alpha
+    0x1F03,  // -> letter alpha with dasia and varia
+    0x03B5,  // letter epsilon
+    0x1F13,  // -> letter epsilon with dasia and varia
+    0x03B7,  // letter eta
+    0x1F23,  // -> letter eta with dasia and varia
+    0x03B9,  // letter iota
+    0x1F33,  // -> letter iota with dasia and varia
+    0x03BF,  // letter omicron
+    0x1F43,  // -> letter omicron with dasia and varia
+    0x03C5,  // letter upsilon
+    0x1F53,  // -> letter upsilon with dasia and varia
+    0x03C9,  // letter omega
+    0x1F63,  // -> letter omega with dasia and varia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2880:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //     Compose
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000D,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0A,  // -> capital alpha with psili and varia
+    0x0395,  // capital epsilon
+    0x1F1A,  // -> capital epsilon with psili and varia
+    0x0397,  // capital eta
+    0x1F2A,  // -> capital eta with psili and varia
+    0x0399,  // capital iota
+    0x1F3A,  // -> capital iota with psili and varia
+    0x039F,  // capital omicron
+    0x1F4A,  // -> capital omicron with psili and varia
+    0x03A9,  // capital omega
+    0x1F6A,  // -> capital omega with psili and varia
+    0x03B1,  // letter alpha
+    0x1F02,  // -> letter alpha with psili and varia
+    0x03B5,  // letter epsilon
+    0x1F12,  // -> letter epsilon with psili and varia
+    0x03B7,  // letter eta
+    0x1F22,  // -> letter eta with psili and varia
+    0x03B9,  // letter iota
+    0x1F32,  // -> letter iota with psili and varia
+    0x03BF,  // letter omicron
+    0x1F42,  // -> letter omicron with psili and varia
+    0x03C5,  // letter upsilon
+    0x1F52,  // -> letter upsilon with psili and varia
+    0x03C9,  // letter omega
+    0x1F62,  // -> letter omega with psili and varia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x289E:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //     Compose
+    //     <plus sign>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EDC,  // -> capital o with horn and grave
+    0x0055,  // capital u
+    0x1EEA,  // -> capital u with horn and grave
+    0x006F,  // letter o
+    0x1EDD,  // -> letter o with horn and grave
+    0x0075,  // letter u
+    0x1EEB,  // -> letter u with horn and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x28AA:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //     Compose
+    //     <latin capital letter u>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB0,  // -> capital a with breve and grave
+    0x0061,  // letter a
+    0x1EB1,  // -> letter a with breve and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x28B2:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //     Compose
+    //     <circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EA6,  // -> capital a with circumflex and grave
+    0x0045,  // capital e
+    0x1EC0,  // -> capital e with circumflex and grave
+    0x004F,  // capital o
+    0x1ED2,  // -> capital o with circumflex and grave
+    0x0061,  // letter a
+    0x1EA7,  // -> letter a with circumflex and grave
+    0x0065,  // letter e
+    0x1EC1,  // -> letter e with circumflex and grave
+    0x006F,  // letter o
+    0x1ED3,  // -> letter o with circumflex and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x28C2:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //     Compose
+    //     <low line>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0045,  // capital e
+    0x1E14,  // -> capital e with macron and grave
+    0x004F,  // capital o
+    0x1E50,  // -> capital o with macron and grave
+    0x0065,  // letter e
+    0x1E15,  // -> letter e with macron and grave
+    0x006F,  // letter o
+    0x1E51,  // -> letter o with macron and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x28CE:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //     Compose
+    //     <latin small letter b>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB0,  // -> capital a with breve and grave
+    0x0061,  // letter a
+    0x1EB1,  // -> letter a with breve and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x28D6:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //     Compose
+    //     <macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0045,  // capital e
+    0x1E14,  // -> capital e with macron and grave
+    0x004F,  // capital o
+    0x1E50,  // -> capital o with macron and grave
+    0x0065,  // letter e
+    0x1E15,  // -> letter e with macron and grave
+    0x006F,  // letter o
+    0x1E51,  // -> letter o with macron and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x28E2:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //     Dead<combining circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EA6,  // -> capital a with circumflex and grave
+    0x0045,  // capital e
+    0x1EC0,  // -> capital e with circumflex and grave
+    0x004F,  // capital o
+    0x1ED2,  // -> capital o with circumflex and grave
+    0x0061,  // letter a
+    0x1EA7,  // -> letter a with circumflex and grave
+    0x0065,  // letter e
+    0x1EC1,  // -> letter e with circumflex and grave
+    0x006F,  // letter o
+    0x1ED3,  // -> letter o with circumflex and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x28F2:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //     Dead<combining macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0045,  // capital e
+    0x1E14,  // -> capital e with macron and grave
+    0x004F,  // capital o
+    0x1E50,  // -> capital o with macron and grave
+    0x0065,  // letter e
+    0x1E15,  // -> letter e with macron and grave
+    0x006F,  // letter o
+    0x1E51,  // -> letter o with macron and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x28FE:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //     Dead<combining breve>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB0,  // -> capital a with breve and grave
+    0x0061,  // letter a
+    0x1EB1,  // -> letter a with breve and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2906:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //     Dead<combining diaeresis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0055,  // capital u
+    0x01DB,  // -> capital u with diaeresis and grave
+    0x0075,  // letter u
+    0x01DC,  // -> letter u with diaeresis and grave
+    0x03B9,  // letter iota
+    0x1FD2,  // -> letter iota with dialytika and varia
+    0x03C5,  // letter upsilon
+    0x1FE2,  // -> letter upsilon with dialytika and varia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2912:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000D,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0A,  // -> capital alpha with psili and varia
+    0x0395,  // capital epsilon
+    0x1F1A,  // -> capital epsilon with psili and varia
+    0x0397,  // capital eta
+    0x1F2A,  // -> capital eta with psili and varia
+    0x0399,  // capital iota
+    0x1F3A,  // -> capital iota with psili and varia
+    0x039F,  // capital omicron
+    0x1F4A,  // -> capital omicron with psili and varia
+    0x03A9,  // capital omega
+    0x1F6A,  // -> capital omega with psili and varia
+    0x03B1,  // letter alpha
+    0x1F02,  // -> letter alpha with psili and varia
+    0x03B5,  // letter epsilon
+    0x1F12,  // -> letter epsilon with psili and varia
+    0x03B7,  // letter eta
+    0x1F22,  // -> letter eta with psili and varia
+    0x03B9,  // letter iota
+    0x1F32,  // -> letter iota with psili and varia
+    0x03BF,  // letter omicron
+    0x1F42,  // -> letter omicron with psili and varia
+    0x03C5,  // letter upsilon
+    0x1F52,  // -> letter upsilon with psili and varia
+    0x03C9,  // letter omega
+    0x1F62,  // -> letter omega with psili and varia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2930:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000E,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0B,  // -> capital alpha with dasia and varia
+    0x0395,  // capital epsilon
+    0x1F1B,  // -> capital epsilon with dasia and varia
+    0x0397,  // capital eta
+    0x1F2B,  // -> capital eta with dasia and varia
+    0x0399,  // capital iota
+    0x1F3B,  // -> capital iota with dasia and varia
+    0x039F,  // capital omicron
+    0x1F4B,  // -> capital omicron with dasia and varia
+    0x03A5,  // capital upsilon
+    0x1F5B,  // -> capital upsilon with dasia and varia
+    0x03A9,  // capital omega
+    0x1F6B,  // -> capital omega with dasia and varia
+    0x03B1,  // letter alpha
+    0x1F03,  // -> letter alpha with dasia and varia
+    0x03B5,  // letter epsilon
+    0x1F13,  // -> letter epsilon with dasia and varia
+    0x03B7,  // letter eta
+    0x1F23,  // -> letter eta with dasia and varia
+    0x03B9,  // letter iota
+    0x1F33,  // -> letter iota with dasia and varia
+    0x03BF,  // letter omicron
+    0x1F43,  // -> letter omicron with dasia and varia
+    0x03C5,  // letter upsilon
+    0x1F53,  // -> letter upsilon with dasia and varia
+    0x03C9,  // letter omega
+    0x1F63,  // -> letter omega with dasia and varia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2950:
+    //   prefix:
+    //     Dead<combining grave accent>
+    //     Dead<combining horn>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EDC,  // -> capital o with horn and grave
+    0x0055,  // capital u
+    0x1EEA,  // -> capital u with horn and grave
+    0x006F,  // letter o
+    0x1EDD,  // -> letter o with horn and grave
+    0x0075,  // letter u
+    0x1EEB,  // -> letter u with horn and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x295C:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0074,          // number of entries
+    0x0020,  // space
+    0x0027,  // -> apostrophe
+    0x0041,  // capital a
+    0x00C1,  // -> capital a with acute
+    0x0043,  // capital c
+    0x00C7,  // -> capital c with cedilla
+    0x0045,  // capital e
+    0x00C9,  // -> capital e with acute
+    0x0047,  // capital g
+    0x01F4,  // -> capital g with acute
+    0x0049,  // capital i
+    0x00CD,  // -> capital i with acute
+    0x004B,  // capital k
+    0x1E30,  // -> capital k with acute
+    0x004C,  // capital l
+    0x0139,  // -> capital l with acute
+    0x004D,  // capital m
+    0x1E3E,  // -> capital m with acute
+    0x004E,  // capital n
+    0x0143,  // -> capital n with acute
+    0x004F,  // capital o
+    0x00D3,  // -> capital o with acute
+    0x0050,  // capital p
+    0x1E54,  // -> capital p with acute
+    0x0052,  // capital r
+    0x0154,  // -> capital r with acute
+    0x0053,  // capital s
+    0x015A,  // -> capital s with acute
+    0x0055,  // capital u
+    0x00DA,  // -> capital u with acute
+    0x0056,  // capital v
+    0x01D7,  // -> capital u with diaeresis and acute
+    0x0057,  // capital w
+    0x1E82,  // -> capital w with acute
+    0x0059,  // capital y
+    0x00DD,  // -> capital y with acute
+    0x005A,  // capital z
+    0x0179,  // -> capital z with acute
+    0x0061,  // letter a
+    0x00E1,  // -> letter a with acute
+    0x0063,  // letter c
+    0x00E7,  // -> letter c with cedilla
+    0x0065,  // letter e
+    0x00E9,  // -> letter e with acute
+    0x0067,  // letter g
+    0x01F5,  // -> letter g with acute
+    0x0069,  // letter i
+    0x00ED,  // -> letter i with acute
+    0x006B,  // letter k
+    0x1E31,  // -> letter k with acute
+    0x006C,  // letter l
+    0x013A,  // -> letter l with acute
+    0x006D,  // letter m
+    0x1E3F,  // -> letter m with acute
+    0x006E,  // letter n
+    0x0144,  // -> letter n with acute
+    0x006F,  // letter o
+    0x00F3,  // -> letter o with acute
+    0x0070,  // letter p
+    0x1E55,  // -> letter p with acute
+    0x0072,  // letter r
+    0x0155,  // -> letter r with acute
+    0x0073,  // letter s
+    0x015B,  // -> letter s with acute
+    0x0075,  // letter u
+    0x00FA,  // -> letter u with acute
+    0x0077,  // letter w
+    0x1E83,  // -> letter w with acute
+    0x0079,  // letter y
+    0x00FD,  // -> letter y with acute
+    0x007A,  // letter z
+    0x017A,  // -> letter z with acute
+    0x00A0,  // no-break space
+    0x0301,  // -> combining acute accent
+    0x00C2,  // capital a with circumflex
+    0x1EA4,  // -> capital a with circumflex and acute
+    0x00C5,  // capital a with ring above
+    0x01FA,  // -> capital a with ring above and acute
+    0x00C6,  // capital ae
+    0x01FC,  // -> capital ae with acute
+    0x00C7,  // capital c with cedilla
+    0x1E08,  // -> capital c with cedilla and acute
+    0x00CA,  // capital e with circumflex
+    0x1EBE,  // -> capital e with circumflex and acute
+    0x00CF,  // capital i with diaeresis
+    0x1E2E,  // -> capital i with diaeresis and acute
+    0x00D4,  // capital o with circumflex
+    0x1ED0,  // -> capital o with circumflex and acute
+    0x00D5,  // capital o with tilde
+    0x1E4C,  // -> capital o with tilde and acute
+    0x00D8,  // capital o with stroke
+    0x01FE,  // -> capital o with stroke and acute
+    0x00DC,  // capital u with diaeresis
+    0x01D7,  // -> capital u with diaeresis and acute
+    0x00E2,  // letter a with circumflex
+    0x1EA5,  // -> letter a with circumflex and acute
+    0x00E5,  // letter a with ring above
+    0x01FB,  // -> letter a with ring above and acute
+    0x00E6,  // letter ae
+    0x01FD,  // -> letter ae with acute
+    0x00E7,  // letter c with cedilla
+    0x1E09,  // -> letter c with cedilla and acute
+    0x00EA,  // letter e with circumflex
+    0x1EBF,  // -> letter e with circumflex and acute
+    0x00EF,  // letter i with diaeresis
+    0x1E2F,  // -> letter i with diaeresis and acute
+    0x00F4,  // letter o with circumflex
+    0x1ED1,  // -> letter o with circumflex and acute
+    0x00F5,  // letter o with tilde
+    0x1E4D,  // -> letter o with tilde and acute
+    0x00F8,  // letter o with stroke
+    0x01FF,  // -> letter o with stroke and acute
+    0x00FC,  // letter u with diaeresis
+    0x01D8,  // -> letter u with diaeresis and acute
+    0x0102,  // capital a with breve
+    0x1EAE,  // -> capital a with breve and acute
+    0x0103,  // letter a with breve
+    0x1EAF,  // -> letter a with breve and acute
+    0x0104,  // capital a with ogonek
+    0x1EDB,  // -> letter o with horn and acute
+    0x0112,  // capital e with macron
+    0x1E16,  // -> capital e with macron and acute
+    0x0113,  // letter e with macron
+    0x1E17,  // -> letter e with macron and acute
+    0x014C,  // capital o with macron
+    0x1E52,  // -> capital o with macron and acute
+    0x014D,  // letter o with macron
+    0x1E53,  // -> letter o with macron and acute
+    0x0168,  // capital u with tilde
+    0x1E78,  // -> capital u with tilde and acute
+    0x0169,  // letter u with tilde
+    0x1E79,  // -> letter u with tilde and acute
+    0x017B,  // capital z with dot above
+    0x1EE8,  // -> capital u with horn and acute
+    0x01A0,  // capital o with horn
+    0x1EDA,  // -> capital o with horn and acute
+    0x01B0,  // letter u with horn
+    0x1EE9,  // -> letter u with horn and acute
+    0x0391,  // capital alpha
+    0x0386,  // -> capital alpha with tonos
+    0x0395,  // capital epsilon
+    0x0388,  // -> capital epsilon with tonos
+    0x0397,  // capital eta
+    0x0389,  // -> capital eta with tonos
+    0x0399,  // capital iota
+    0x038A,  // -> capital iota with tonos
+    0x039F,  // capital omicron
+    0x038C,  // -> capital omicron with tonos
+    0x03A5,  // capital upsilon
+    0x038E,  // -> capital upsilon with tonos
+    0x03A9,  // capital omega
+    0x038F,  // -> capital omega with tonos
+    0x03B1,  // letter alpha
+    0x03AC,  // -> letter alpha with tonos
+    0x03B5,  // letter epsilon
+    0x03AD,  // -> letter epsilon with tonos
+    0x03B7,  // letter eta
+    0x03AE,  // -> letter eta with tonos
+    0x03B9,  // letter iota
+    0x03AF,  // -> letter iota with tonos
+    0x03BF,  // letter omicron
+    0x03CC,  // -> letter omicron with tonos
+    0x03C5,  // letter upsilon
+    0x03CD,  // -> letter upsilon with tonos
+    0x03C9,  // letter omega
+    0x03CE,  // -> letter omega with tonos
+    0x03CA,  // letter iota with dialytika
+    0x0390,  // -> letter iota with dialytika and tonos
+    0x03CB,  // letter upsilon with dialytika
+    0x03B0,  // -> letter upsilon with dialytika and tonos
+    0x0413,  // cyrillic capital ghe
+    0x0403,  // -> cyrillic capital gje
+    0x041A,  // cyrillic capital ka
+    0x040C,  // -> cyrillic capital kje
+    0x0433,  // cyrillic small ghe
+    0x0453,  // -> cyrillic small gje
+    0x043A,  // cyrillic small ka
+    0x045C,  // -> cyrillic small kje
+    0x1F00,  // letter alpha with psili
+    0x1F04,  // -> letter alpha with psili and oxia
+    0x1F01,  // letter alpha with dasia
+    0x1F05,  // -> letter alpha with dasia and oxia
+    0x1F08,  // capital alpha with psili
+    0x1F0C,  // -> capital alpha with psili and oxia
+    0x1F09,  // capital alpha with dasia
+    0x1F0D,  // -> capital alpha with dasia and oxia
+    0x1F10,  // letter epsilon with psili
+    0x1F14,  // -> letter epsilon with psili and oxia
+    0x1F11,  // letter epsilon with dasia
+    0x1F15,  // -> letter epsilon with dasia and oxia
+    0x1F18,  // capital epsilon with psili
+    0x1F1C,  // -> capital epsilon with psili and oxia
+    0x1F19,  // capital epsilon with dasia
+    0x1F1D,  // -> capital epsilon with dasia and oxia
+    0x1F20,  // letter eta with psili
+    0x1F24,  // -> letter eta with psili and oxia
+    0x1F21,  // letter eta with dasia
+    0x1F25,  // -> letter eta with dasia and oxia
+    0x1F28,  // capital eta with psili
+    0x1F2C,  // -> capital eta with psili and oxia
+    0x1F29,  // capital eta with dasia
+    0x1F2D,  // -> capital eta with dasia and oxia
+    0x1F30,  // letter iota with psili
+    0x1F34,  // -> letter iota with psili and oxia
+    0x1F31,  // letter iota with dasia
+    0x1F35,  // -> letter iota with dasia and oxia
+    0x1F38,  // capital iota with psili
+    0x1F3C,  // -> capital iota with psili and oxia
+    0x1F39,  // capital iota with dasia
+    0x1F3D,  // -> capital iota with dasia and oxia
+    0x1F40,  // letter omicron with psili
+    0x1F44,  // -> letter omicron with psili and oxia
+    0x1F41,  // letter omicron with dasia
+    0x1F45,  // -> letter omicron with dasia and oxia
+    0x1F48,  // capital omicron with psili
+    0x1F4C,  // -> capital omicron with psili and oxia
+    0x1F49,  // capital omicron with dasia
+    0x1F4D,  // -> capital omicron with dasia and oxia
+    0x1F50,  // letter upsilon with psili
+    0x1F54,  // -> letter upsilon with psili and oxia
+    0x1F51,  // letter upsilon with dasia
+    0x1F55,  // -> letter upsilon with dasia and oxia
+    0x1F59,  // capital upsilon with dasia
+    0x1F5D,  // -> capital upsilon with dasia and oxia
+    0x1F60,  // letter omega with psili
+    0x1F64,  // -> letter omega with psili and oxia
+    0x1F61,  // letter omega with dasia
+    0x1F65,  // -> letter omega with dasia and oxia
+    0x1F68,  // capital omega with psili
+    0x1F6C,  // -> capital omega with psili and oxia
+    0x1F69,  // capital omega with dasia
+    0x1F6D,  // -> capital omega with dasia and oxia
+    //   internal dead_key table
+    0x000D,          // number of entries
+    0x0000,  // U+0000
+    0x2A64,
+    0x0302,  // combining circumflex accent
+    0x2B42,
+    0x0303,  // combining tilde
+    0x2B52,
+    0x0304,  // combining macron
+    0x2B5E,
+    0x0306,  // combining breve
+    0x2B6A,
+    0x0307,  // combining dot above
+    0x2B72,
+    0x0308,  // combining diaeresis
+    0x2B7A,
+    0x030A,  // combining ring above
+    0x2B8C,
+    0x0313,  // combining comma above
+    0x2B94,
+    0x0314,  // combining reversed comma above
+    0x2BB2,
+    0x031B,  // combining horn
+    0x2BD2,
+    0x0327,  // combining cedilla
+    0x2BDE,
+    0x0338,  // combining long solidus overlay
+    0x2BE6,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x0301,  // combining acute accent
+    0x00B4,  // -> acute accent
+
+    // offset 0x2A64:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Compose
+    //   internal character table
+    0x000E,          // number of entries
+    0x0022,  // quotation mark
+    0x2A84,
+    0x0028,  // left parenthesis
+    0x2A94,
+    0x0029,  // right parenthesis
+    0x2AB4,
+    0x002B,  // plus sign
+    0x2AD2,
+    0x002C,  // comma
+    0x2ADE,
+    0x002F,  // solidus
+    0x2AE6,
+    0x0055,  // capital u
+    0x2AEE,
+    0x005E,  // circumflex accent
+    0x2AF6,
+    0x005F,  // low line
+    0x2B06,
+    0x0062,  // letter b
+    0x2B12,
+    0x006F,  // letter o
+    0x2B1A,
+    0x007E,  // tilde
+    0x2B22,
+    0x00AF,  // macron
+    0x2B2E,
+    0x00B8,  // cedilla
+    0x2B3A,
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2A84:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Compose
+    //     <quotation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0049,  // capital i
+    0x1E2E,  // -> capital i with diaeresis and acute
+    0x0055,  // capital u
+    0x01D7,  // -> capital u with diaeresis and acute
+    0x0069,  // letter i
+    0x1E2F,  // -> letter i with diaeresis and acute
+    0x0075,  // letter u
+    0x01D8,  // -> letter u with diaeresis and acute
+    0x03B9,  // letter iota
+    0x0390,  // -> letter iota with dialytika and tonos
+    0x03C5,  // letter upsilon
+    0x03B0,  // -> letter upsilon with dialytika and tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2A94:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Compose
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000E,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0D,  // -> capital alpha with dasia and oxia
+    0x0395,  // capital epsilon
+    0x1F1D,  // -> capital epsilon with dasia and oxia
+    0x0397,  // capital eta
+    0x1F2D,  // -> capital eta with dasia and oxia
+    0x0399,  // capital iota
+    0x1F3D,  // -> capital iota with dasia and oxia
+    0x039F,  // capital omicron
+    0x1F4D,  // -> capital omicron with dasia and oxia
+    0x03A5,  // capital upsilon
+    0x1F5D,  // -> capital upsilon with dasia and oxia
+    0x03A9,  // capital omega
+    0x1F6D,  // -> capital omega with dasia and oxia
+    0x03B1,  // letter alpha
+    0x1F05,  // -> letter alpha with dasia and oxia
+    0x03B5,  // letter epsilon
+    0x1F15,  // -> letter epsilon with dasia and oxia
+    0x03B7,  // letter eta
+    0x1F25,  // -> letter eta with dasia and oxia
+    0x03B9,  // letter iota
+    0x1F35,  // -> letter iota with dasia and oxia
+    0x03BF,  // letter omicron
+    0x1F45,  // -> letter omicron with dasia and oxia
+    0x03C5,  // letter upsilon
+    0x1F55,  // -> letter upsilon with dasia and oxia
+    0x03C9,  // letter omega
+    0x1F65,  // -> letter omega with dasia and oxia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2AB4:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Compose
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000D,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0C,  // -> capital alpha with psili and oxia
+    0x0395,  // capital epsilon
+    0x1F1C,  // -> capital epsilon with psili and oxia
+    0x0397,  // capital eta
+    0x1F2C,  // -> capital eta with psili and oxia
+    0x0399,  // capital iota
+    0x1F3C,  // -> capital iota with psili and oxia
+    0x039F,  // capital omicron
+    0x1F4C,  // -> capital omicron with psili and oxia
+    0x03A9,  // capital omega
+    0x1F6C,  // -> capital omega with psili and oxia
+    0x03B1,  // letter alpha
+    0x1F04,  // -> letter alpha with psili and oxia
+    0x03B5,  // letter epsilon
+    0x1F14,  // -> letter epsilon with psili and oxia
+    0x03B7,  // letter eta
+    0x1F24,  // -> letter eta with psili and oxia
+    0x03B9,  // letter iota
+    0x1F34,  // -> letter iota with psili and oxia
+    0x03BF,  // letter omicron
+    0x1F44,  // -> letter omicron with psili and oxia
+    0x03C5,  // letter upsilon
+    0x1F54,  // -> letter upsilon with psili and oxia
+    0x03C9,  // letter omega
+    0x1F64,  // -> letter omega with psili and oxia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2AD2:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Compose
+    //     <plus sign>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EDA,  // -> capital o with horn and acute
+    0x0055,  // capital u
+    0x1EE8,  // -> capital u with horn and acute
+    0x006F,  // letter o
+    0x1EDB,  // -> letter o with horn and acute
+    0x0075,  // letter u
+    0x1EE9,  // -> letter u with horn and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2ADE:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Compose
+    //     <comma>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0043,  // capital c
+    0x1E08,  // -> capital c with cedilla and acute
+    0x0063,  // letter c
+    0x1E09,  // -> letter c with cedilla and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2AE6:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Compose
+    //     <solidus>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x01FE,  // -> capital o with stroke and acute
+    0x006F,  // letter o
+    0x01FF,  // -> letter o with stroke and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2AEE:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Compose
+    //     <latin capital letter u>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EAE,  // -> capital a with breve and acute
+    0x0061,  // letter a
+    0x1EAF,  // -> letter a with breve and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2AF6:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Compose
+    //     <circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EA4,  // -> capital a with circumflex and acute
+    0x0045,  // capital e
+    0x1EBE,  // -> capital e with circumflex and acute
+    0x004F,  // capital o
+    0x1ED0,  // -> capital o with circumflex and acute
+    0x0061,  // letter a
+    0x1EA5,  // -> letter a with circumflex and acute
+    0x0065,  // letter e
+    0x1EBF,  // -> letter e with circumflex and acute
+    0x006F,  // letter o
+    0x1ED1,  // -> letter o with circumflex and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2B06:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Compose
+    //     <low line>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0045,  // capital e
+    0x1E16,  // -> capital e with macron and acute
+    0x004F,  // capital o
+    0x1E52,  // -> capital o with macron and acute
+    0x0065,  // letter e
+    0x1E17,  // -> letter e with macron and acute
+    0x006F,  // letter o
+    0x1E53,  // -> letter o with macron and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2B12:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Compose
+    //     <latin small letter b>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EAE,  // -> capital a with breve and acute
+    0x0061,  // letter a
+    0x1EAF,  // -> letter a with breve and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2B1A:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Compose
+    //     <latin small letter o>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x01FA,  // -> capital a with ring above and acute
+    0x0061,  // letter a
+    0x01FB,  // -> letter a with ring above and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2B22:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Compose
+    //     <tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1E4C,  // -> capital o with tilde and acute
+    0x0055,  // capital u
+    0x1E78,  // -> capital u with tilde and acute
+    0x006F,  // letter o
+    0x1E4D,  // -> letter o with tilde and acute
+    0x0075,  // letter u
+    0x1E79,  // -> letter u with tilde and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2B2E:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Compose
+    //     <macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0045,  // capital e
+    0x1E16,  // -> capital e with macron and acute
+    0x004F,  // capital o
+    0x1E52,  // -> capital o with macron and acute
+    0x0065,  // letter e
+    0x1E17,  // -> letter e with macron and acute
+    0x006F,  // letter o
+    0x1E53,  // -> letter o with macron and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2B3A:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Compose
+    //     <cedilla>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0043,  // capital c
+    0x1E08,  // -> capital c with cedilla and acute
+    0x0063,  // letter c
+    0x1E09,  // -> letter c with cedilla and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2B42:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Dead<combining circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EA4,  // -> capital a with circumflex and acute
+    0x0045,  // capital e
+    0x1EBE,  // -> capital e with circumflex and acute
+    0x004F,  // capital o
+    0x1ED0,  // -> capital o with circumflex and acute
+    0x0061,  // letter a
+    0x1EA5,  // -> letter a with circumflex and acute
+    0x0065,  // letter e
+    0x1EBF,  // -> letter e with circumflex and acute
+    0x006F,  // letter o
+    0x1ED1,  // -> letter o with circumflex and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2B52:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Dead<combining tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1E4C,  // -> capital o with tilde and acute
+    0x0055,  // capital u
+    0x1E78,  // -> capital u with tilde and acute
+    0x006F,  // letter o
+    0x1E4D,  // -> letter o with tilde and acute
+    0x0075,  // letter u
+    0x1E79,  // -> letter u with tilde and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2B5E:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Dead<combining macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0045,  // capital e
+    0x1E16,  // -> capital e with macron and acute
+    0x004F,  // capital o
+    0x1E52,  // -> capital o with macron and acute
+    0x0065,  // letter e
+    0x1E17,  // -> letter e with macron and acute
+    0x006F,  // letter o
+    0x1E53,  // -> letter o with macron and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2B6A:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Dead<combining breve>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EAE,  // -> capital a with breve and acute
+    0x0061,  // letter a
+    0x1EAF,  // -> letter a with breve and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2B72:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Dead<combining dot above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0053,  // capital s
+    0x1E64,  // -> capital s with acute and dot above
+    0x0073,  // letter s
+    0x1E65,  // -> letter s with acute and dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2B7A:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Dead<combining diaeresis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0007,          // number of entries
+    0x0020,  // space
+    0x0385,  // -> dialytika tonos
+    0x0049,  // capital i
+    0x1E2E,  // -> capital i with diaeresis and acute
+    0x0055,  // capital u
+    0x01D7,  // -> capital u with diaeresis and acute
+    0x0069,  // letter i
+    0x1E2F,  // -> letter i with diaeresis and acute
+    0x0075,  // letter u
+    0x01D8,  // -> letter u with diaeresis and acute
+    0x03B9,  // letter iota
+    0x0390,  // -> letter iota with dialytika and tonos
+    0x03C5,  // letter upsilon
+    0x03B0,  // -> letter upsilon with dialytika and tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2B8C:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Dead<combining ring above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x01FA,  // -> capital a with ring above and acute
+    0x0061,  // letter a
+    0x01FB,  // -> letter a with ring above and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2B94:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000D,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0C,  // -> capital alpha with psili and oxia
+    0x0395,  // capital epsilon
+    0x1F1C,  // -> capital epsilon with psili and oxia
+    0x0397,  // capital eta
+    0x1F2C,  // -> capital eta with psili and oxia
+    0x0399,  // capital iota
+    0x1F3C,  // -> capital iota with psili and oxia
+    0x039F,  // capital omicron
+    0x1F4C,  // -> capital omicron with psili and oxia
+    0x03A9,  // capital omega
+    0x1F6C,  // -> capital omega with psili and oxia
+    0x03B1,  // letter alpha
+    0x1F04,  // -> letter alpha with psili and oxia
+    0x03B5,  // letter epsilon
+    0x1F14,  // -> letter epsilon with psili and oxia
+    0x03B7,  // letter eta
+    0x1F24,  // -> letter eta with psili and oxia
+    0x03B9,  // letter iota
+    0x1F34,  // -> letter iota with psili and oxia
+    0x03BF,  // letter omicron
+    0x1F44,  // -> letter omicron with psili and oxia
+    0x03C5,  // letter upsilon
+    0x1F54,  // -> letter upsilon with psili and oxia
+    0x03C9,  // letter omega
+    0x1F64,  // -> letter omega with psili and oxia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2BB2:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000E,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0D,  // -> capital alpha with dasia and oxia
+    0x0395,  // capital epsilon
+    0x1F1D,  // -> capital epsilon with dasia and oxia
+    0x0397,  // capital eta
+    0x1F2D,  // -> capital eta with dasia and oxia
+    0x0399,  // capital iota
+    0x1F3D,  // -> capital iota with dasia and oxia
+    0x039F,  // capital omicron
+    0x1F4D,  // -> capital omicron with dasia and oxia
+    0x03A5,  // capital upsilon
+    0x1F5D,  // -> capital upsilon with dasia and oxia
+    0x03A9,  // capital omega
+    0x1F6D,  // -> capital omega with dasia and oxia
+    0x03B1,  // letter alpha
+    0x1F05,  // -> letter alpha with dasia and oxia
+    0x03B5,  // letter epsilon
+    0x1F15,  // -> letter epsilon with dasia and oxia
+    0x03B7,  // letter eta
+    0x1F25,  // -> letter eta with dasia and oxia
+    0x03B9,  // letter iota
+    0x1F35,  // -> letter iota with dasia and oxia
+    0x03BF,  // letter omicron
+    0x1F45,  // -> letter omicron with dasia and oxia
+    0x03C5,  // letter upsilon
+    0x1F55,  // -> letter upsilon with dasia and oxia
+    0x03C9,  // letter omega
+    0x1F65,  // -> letter omega with dasia and oxia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2BD2:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Dead<combining horn>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EDA,  // -> capital o with horn and acute
+    0x0055,  // capital u
+    0x1EE8,  // -> capital u with horn and acute
+    0x006F,  // letter o
+    0x1EDB,  // -> letter o with horn and acute
+    0x0075,  // letter u
+    0x1EE9,  // -> letter u with horn and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2BDE:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Dead<combining cedilla>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0043,  // capital c
+    0x1E08,  // -> capital c with cedilla and acute
+    0x0063,  // letter c
+    0x1E09,  // -> letter c with cedilla and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2BE6:
+    //   prefix:
+    //     Dead<combining acute accent>
+    //     Dead<combining long solidus overlay>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x01FE,  // -> capital o with stroke and acute
+    0x006F,  // letter o
+    0x01FF,  // -> letter o with stroke and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2BEE:
+    //   prefix:
+    //     Dead<combining circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0050,          // number of entries
+    0x0020,  // space
+    0x005E,  // -> circumflex accent
+    0x0028,  // left parenthesis
+    0x207D,  // -> superscript left parenthesis
+    0x0029,  // right parenthesis
+    0x207E,  // -> superscript right parenthesis
+    0x002B,  // plus sign
+    0x207A,  // -> superscript plus sign
+    0x002D,  // hyphen-minus
+    0x207B,  // -> superscript minus
+    0x0030,  // digit zero
+    0x2070,  // -> superscript zero
+    0x0031,  // digit one
+    0x00B9,  // -> superscript one
+    0x0032,  // digit two
+    0x00B2,  // -> superscript two
+    0x0033,  // digit three
+    0x00B3,  // -> superscript three
+    0x0034,  // digit four
+    0x2074,  // -> superscript four
+    0x0035,  // digit five
+    0x2075,  // -> superscript five
+    0x0036,  // digit six
+    0x2076,  // -> superscript six
+    0x0037,  // digit seven
+    0x2077,  // -> superscript seven
+    0x0038,  // digit eight
+    0x2078,  // -> superscript eight
+    0x0039,  // digit nine
+    0x2079,  // -> superscript nine
+    0x003D,  // equals sign
+    0x207C,  // -> superscript equals sign
+    0x0041,  // capital a
+    0x00C2,  // -> capital a with circumflex
+    0x0043,  // capital c
+    0x0108,  // -> capital c with circumflex
+    0x0045,  // capital e
+    0x00CA,  // -> capital e with circumflex
+    0x0047,  // capital g
+    0x011C,  // -> capital g with circumflex
+    0x0048,  // capital h
+    0x0124,  // -> capital h with circumflex
+    0x0049,  // capital i
+    0x00CE,  // -> capital i with circumflex
+    0x004A,  // capital j
+    0x0134,  // -> capital j with circumflex
+    0x004F,  // capital o
+    0x00D4,  // -> capital o with circumflex
+    0x0053,  // capital s
+    0x015C,  // -> capital s with circumflex
+    0x0055,  // capital u
+    0x00DB,  // -> capital u with circumflex
+    0x0057,  // capital w
+    0x0174,  // -> capital w with circumflex
+    0x0059,  // capital y
+    0x0176,  // -> capital y with circumflex
+    0x005A,  // capital z
+    0x1E90,  // -> capital z with circumflex
+    0x0061,  // letter a
+    0x00E2,  // -> letter a with circumflex
+    0x0063,  // letter c
+    0x0109,  // -> letter c with circumflex
+    0x0065,  // letter e
+    0x00EA,  // -> letter e with circumflex
+    0x0067,  // letter g
+    0x011D,  // -> letter g with circumflex
+    0x0068,  // letter h
+    0x0125,  // -> letter h with circumflex
+    0x0069,  // letter i
+    0x00EE,  // -> letter i with circumflex
+    0x006A,  // letter j
+    0x0135,  // -> letter j with circumflex
+    0x006F,  // letter o
+    0x00F4,  // -> letter o with circumflex
+    0x0073,  // letter s
+    0x015D,  // -> letter s with circumflex
+    0x0075,  // letter u
+    0x00FB,  // -> letter u with circumflex
+    0x0077,  // letter w
+    0x0175,  // -> letter w with circumflex
+    0x0079,  // letter y
+    0x0177,  // -> letter y with circumflex
+    0x007A,  // letter z
+    0x1E91,  // -> letter z with circumflex
+    0x00A0,  // no-break space
+    0x0302,  // -> combining circumflex accent
+    0x00C0,  // capital a with grave
+    0x1EA6,  // -> capital a with circumflex and grave
+    0x00C1,  // capital a with acute
+    0x1EA4,  // -> capital a with circumflex and acute
+    0x00C3,  // capital a with tilde
+    0x1EAA,  // -> capital a with circumflex and tilde
+    0x00C8,  // capital e with grave
+    0x1EC0,  // -> capital e with circumflex and grave
+    0x00C9,  // capital e with acute
+    0x1EBE,  // -> capital e with circumflex and acute
+    0x00D2,  // capital o with grave
+    0x1ED2,  // -> capital o with circumflex and grave
+    0x00D3,  // capital o with acute
+    0x1ED0,  // -> capital o with circumflex and acute
+    0x00D5,  // capital o with tilde
+    0x1ED6,  // -> capital o with circumflex and tilde
+    0x00E0,  // letter a with grave
+    0x1EA7,  // -> letter a with circumflex and grave
+    0x00E1,  // letter a with acute
+    0x1EA5,  // -> letter a with circumflex and acute
+    0x00E3,  // letter a with tilde
+    0x1EAB,  // -> letter a with circumflex and tilde
+    0x00E8,  // letter e with grave
+    0x1EC1,  // -> letter e with circumflex and grave
+    0x00E9,  // letter e with acute
+    0x1EBF,  // -> letter e with circumflex and acute
+    0x00F2,  // letter o with grave
+    0x1ED3,  // -> letter o with circumflex and grave
+    0x00F3,  // letter o with acute
+    0x1ED1,  // -> letter o with circumflex and acute
+    0x00F5,  // letter o with tilde
+    0x1ED7,  // -> letter o with circumflex and tilde
+    0x1EA0,  // capital a with dot below
+    0x1EAC,  // -> capital a with circumflex and dot below
+    0x1EA1,  // letter a with dot below
+    0x1EAD,  // -> letter a with circumflex and dot below
+    0x1EB8,  // capital e with dot below
+    0x1EC6,  // -> capital e with circumflex and dot below
+    0x1EB9,  // letter e with dot below
+    0x1EC7,  // -> letter e with circumflex and dot below
+    0x1ECC,  // capital o with dot below
+    0x1ED8,  // -> capital o with circumflex and dot below
+    0x1ECD,  // letter o with dot below
+    0x1ED9,  // -> letter o with circumflex and dot below
+    0x2212,  // minus sign
+    0x207B,  // -> superscript minus
+    0x4E00,  // cjk unified ideograph-4e00
+    0x3192,  // -> ideographic annotation one mark
+    0x4E01,  // cjk unified ideograph-4e01
+    0x319C,  // -> ideographic annotation fourth mark
+    0x4E09,  // cjk unified ideograph-4e09
+    0x3194,  // -> ideographic annotation three mark
+    0x4E0A,  // cjk unified ideograph-4e0a
+    0x3196,  // -> ideographic annotation top mark
+    0x4E0B,  // cjk unified ideograph-4e0b
+    0x3198,  // -> ideographic annotation bottom mark
+    0x4E19,  // cjk unified ideograph-4e19
+    0x319B,  // -> ideographic annotation third mark
+    0x4E2D,  // cjk unified ideograph-4e2d
+    0x3197,  // -> ideographic annotation middle mark
+    0x4E59,  // cjk unified ideograph-4e59
+    0x319A,  // -> ideographic annotation second mark
+    0x4E8C,  // cjk unified ideograph-4e8c
+    0x3193,  // -> ideographic annotation two mark
+    0x4EBA,  // cjk unified ideograph-4eba
+    0x319F,  // -> ideographic annotation man mark
+    0x56DB,  // cjk unified ideograph-56db
+    0x3195,  // -> ideographic annotation four mark
+    0x5730,  // cjk unified ideograph-5730
+    0x319E,  // -> ideographic annotation earth mark
+    0x5929,  // cjk unified ideograph-5929
+    0x319D,  // -> ideographic annotation heaven mark
+    0x7532,  // cjk unified ideograph-7532
+    0x3199,  // -> ideographic annotation first mark
+    //   internal dead_key table
+    0x0006,          // number of entries
+    0x0000,  // U+0000
+    0x2CA0,
+    0x0300,  // combining grave accent
+    0x2D08,
+    0x0301,  // combining acute accent
+    0x2D18,
+    0x0303,  // combining tilde
+    0x2D28,
+    0x0309,  // combining hook above
+    0x2D38,
+    0x0323,  // combining dot below
+    0x2D48,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x0302,  // combining circumflex accent
+    0x005E,  // -> circumflex accent
+
+    // offset 0x2CA0:
+    //   prefix:
+    //     Dead<combining circumflex accent>
+    //     Compose
+    //   internal character table
+    0x0006,          // number of entries
+    0x0021,  // exclamation mark
+    0x2CB0,
+    0x0053,  // capital s
+    0x2CC0,
+    0x0054,  // capital t
+    0x2CC8,
+    0x005F,  // low line
+    0x2CD0,
+    0x0073,  // letter s
+    0x2CF8,
+    0x0074,  // letter t
+    0x2D00,
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2CB0:
+    //   prefix:
+    //     Dead<combining circumflex accent>
+    //     Compose
+    //     <exclamation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EAC,  // -> capital a with circumflex and dot below
+    0x0045,  // capital e
+    0x1EC6,  // -> capital e with circumflex and dot below
+    0x004F,  // capital o
+    0x1ED8,  // -> capital o with circumflex and dot below
+    0x0061,  // letter a
+    0x1EAD,  // -> letter a with circumflex and dot below
+    0x0065,  // letter e
+    0x1EC7,  // -> letter e with circumflex and dot below
+    0x006F,  // letter o
+    0x1ED9,  // -> letter o with circumflex and dot below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2CC0:
+    //   prefix:
+    //     Dead<combining circumflex accent>
+    //     Compose
+    //     <latin capital letter s>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004D,  // capital m
+    0x2120,  // -> service mark
+    0x006D,  // letter m
+    0x2120,  // -> service mark
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2CC8:
+    //   prefix:
+    //     Dead<combining circumflex accent>
+    //     Compose
+    //     <latin capital letter t>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004D,  // capital m
+    0x2122,  // -> trade mark sign
+    0x006D,  // letter m
+    0x2122,  // -> trade mark sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2CD0:
+    //   prefix:
+    //     Dead<combining circumflex accent>
+    //     Compose
+    //     <low line>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0012,          // number of entries
+    0x0061,  // letter a
+    0x00AA,  // -> feminine ordinal indicator
+    0x0068,  // letter h
+    0x02B0,  // -> modifier small h
+    0x0069,  // letter i
+    0x2071,  // -> superscript latin small i
+    0x006A,  // letter j
+    0x02B2,  // -> modifier small j
+    0x006C,  // letter l
+    0x02E1,  // -> modifier small l
+    0x006E,  // letter n
+    0x207F,  // -> superscript latin small n
+    0x006F,  // letter o
+    0x00BA,  // -> masculine ordinal indicator
+    0x0072,  // letter r
+    0x02B3,  // -> modifier small r
+    0x0073,  // letter s
+    0x02E2,  // -> modifier small s
+    0x0077,  // letter w
+    0x02B7,  // -> modifier small w
+    0x0078,  // letter x
+    0x02E3,  // -> modifier small x
+    0x0079,  // letter y
+    0x02B8,  // -> modifier small y
+    0x0263,  // letter gamma
+    0x02E0,  // -> modifier small gamma
+    0x0266,  // letter h with hook
+    0x02B1,  // -> modifier small h with hook
+    0x0279,  // letter turned r
+    0x02B4,  // -> modifier small turned r
+    0x027B,  // letter turned r with hook
+    0x02B5,  // -> modifier small turned r with hook
+    0x0281,  // letter small capital inverted r
+    0x02B6,  // -> modifier small capital inverted r
+    0x0295,  // letter pharyngeal voiced fricative
+    0x02E4,  // -> modifier small reversed glottal stop
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2CF8:
+    //   prefix:
+    //     Dead<combining circumflex accent>
+    //     Compose
+    //     <latin small letter s>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004D,  // capital m
+    0x2120,  // -> service mark
+    0x006D,  // letter m
+    0x2120,  // -> service mark
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2D00:
+    //   prefix:
+    //     Dead<combining circumflex accent>
+    //     Compose
+    //     <latin small letter t>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004D,  // capital m
+    0x2122,  // -> trade mark sign
+    0x006D,  // letter m
+    0x2122,  // -> trade mark sign
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2D08:
+    //   prefix:
+    //     Dead<combining circumflex accent>
+    //     Dead<combining grave accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EA6,  // -> capital a with circumflex and grave
+    0x0045,  // capital e
+    0x1EC0,  // -> capital e with circumflex and grave
+    0x004F,  // capital o
+    0x1ED2,  // -> capital o with circumflex and grave
+    0x0061,  // letter a
+    0x1EA7,  // -> letter a with circumflex and grave
+    0x0065,  // letter e
+    0x1EC1,  // -> letter e with circumflex and grave
+    0x006F,  // letter o
+    0x1ED3,  // -> letter o with circumflex and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2D18:
+    //   prefix:
+    //     Dead<combining circumflex accent>
+    //     Dead<combining acute accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EA4,  // -> capital a with circumflex and acute
+    0x0045,  // capital e
+    0x1EBE,  // -> capital e with circumflex and acute
+    0x004F,  // capital o
+    0x1ED0,  // -> capital o with circumflex and acute
+    0x0061,  // letter a
+    0x1EA5,  // -> letter a with circumflex and acute
+    0x0065,  // letter e
+    0x1EBF,  // -> letter e with circumflex and acute
+    0x006F,  // letter o
+    0x1ED1,  // -> letter o with circumflex and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2D28:
+    //   prefix:
+    //     Dead<combining circumflex accent>
+    //     Dead<combining tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EAA,  // -> capital a with circumflex and tilde
+    0x0045,  // capital e
+    0x1EC4,  // -> capital e with circumflex and tilde
+    0x004F,  // capital o
+    0x1ED6,  // -> capital o with circumflex and tilde
+    0x0061,  // letter a
+    0x1EAB,  // -> letter a with circumflex and tilde
+    0x0065,  // letter e
+    0x1EC5,  // -> letter e with circumflex and tilde
+    0x006F,  // letter o
+    0x1ED7,  // -> letter o with circumflex and tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2D38:
+    //   prefix:
+    //     Dead<combining circumflex accent>
+    //     Dead<combining hook above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EA8,  // -> capital a with circumflex and hook above
+    0x0045,  // capital e
+    0x1EC2,  // -> capital e with circumflex and hook above
+    0x004F,  // capital o
+    0x1ED4,  // -> capital o with circumflex and hook above
+    0x0061,  // letter a
+    0x1EA9,  // -> letter a with circumflex and hook above
+    0x0065,  // letter e
+    0x1EC3,  // -> letter e with circumflex and hook above
+    0x006F,  // letter o
+    0x1ED5,  // -> letter o with circumflex and hook above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2D48:
+    //   prefix:
+    //     Dead<combining circumflex accent>
+    //     Dead<combining dot below>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EAC,  // -> capital a with circumflex and dot below
+    0x0045,  // capital e
+    0x1EC6,  // -> capital e with circumflex and dot below
+    0x004F,  // capital o
+    0x1ED8,  // -> capital o with circumflex and dot below
+    0x0061,  // letter a
+    0x1EAD,  // -> letter a with circumflex and dot below
+    0x0065,  // letter e
+    0x1EC7,  // -> letter e with circumflex and dot below
+    0x006F,  // letter o
+    0x1ED9,  // -> letter o with circumflex and dot below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2D58:
+    //   prefix:
+    //     Dead<combining tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0043,          // number of entries
+    0x0020,  // space
+    0x007E,  // -> tilde
+    0x003C,  // less-than sign
+    0x2272,  // -> less-than or equivalent to
+    0x003D,  // equals sign
+    0x2243,  // -> asymptotically equal to
+    0x003E,  // greater-than sign
+    0x2273,  // -> greater-than or equivalent to
+    0x0041,  // capital a
+    0x00C3,  // -> capital a with tilde
+    0x0045,  // capital e
+    0x1EBC,  // -> capital e with tilde
+    0x0049,  // capital i
+    0x0128,  // -> capital i with tilde
+    0x004E,  // capital n
+    0x00D1,  // -> capital n with tilde
+    0x004F,  // capital o
+    0x00D5,  // -> capital o with tilde
+    0x0055,  // capital u
+    0x0168,  // -> capital u with tilde
+    0x0056,  // capital v
+    0x1E7C,  // -> capital v with tilde
+    0x0059,  // capital y
+    0x1EF8,  // -> capital y with tilde
+    0x0061,  // letter a
+    0x00E3,  // -> letter a with tilde
+    0x0065,  // letter e
+    0x1EBD,  // -> letter e with tilde
+    0x0069,  // letter i
+    0x0129,  // -> letter i with tilde
+    0x006E,  // letter n
+    0x00F1,  // -> letter n with tilde
+    0x006F,  // letter o
+    0x00F5,  // -> letter o with tilde
+    0x0075,  // letter u
+    0x0169,  // -> letter u with tilde
+    0x0076,  // letter v
+    0x1E7D,  // -> letter v with tilde
+    0x0079,  // letter y
+    0x1EF9,  // -> letter y with tilde
+    0x00A0,  // no-break space
+    0x0303,  // -> combining tilde
+    0x00C2,  // capital a with circumflex
+    0x1EAA,  // -> capital a with circumflex and tilde
+    0x00CA,  // capital e with circumflex
+    0x1EC4,  // -> capital e with circumflex and tilde
+    0x00D3,  // capital o with acute
+    0x1E4C,  // -> capital o with tilde and acute
+    0x00D4,  // capital o with circumflex
+    0x1ED6,  // -> capital o with circumflex and tilde
+    0x00D6,  // capital o with diaeresis
+    0x1E4E,  // -> capital o with tilde and diaeresis
+    0x00DA,  // capital u with acute
+    0x1E78,  // -> capital u with tilde and acute
+    0x00E2,  // letter a with circumflex
+    0x1EAB,  // -> letter a with circumflex and tilde
+    0x00EA,  // letter e with circumflex
+    0x1EC5,  // -> letter e with circumflex and tilde
+    0x00F3,  // letter o with acute
+    0x1E4D,  // -> letter o with tilde and acute
+    0x00F4,  // letter o with circumflex
+    0x1ED7,  // -> letter o with circumflex and tilde
+    0x00F6,  // letter o with diaeresis
+    0x1E4F,  // -> letter o with tilde and diaeresis
+    0x00FA,  // letter u with acute
+    0x1E79,  // -> letter u with tilde and acute
+    0x0102,  // capital a with breve
+    0x1EB4,  // -> capital a with breve and tilde
+    0x0103,  // letter a with breve
+    0x1EB5,  // -> letter a with breve and tilde
+    0x0104,  // capital a with ogonek
+    0x1EE1,  // -> letter o with horn and tilde
+    0x014C,  // capital o with macron
+    0x022C,  // -> capital o with tilde and macron
+    0x014D,  // letter o with macron
+    0x022D,  // -> letter o with tilde and macron
+    0x017B,  // capital z with dot above
+    0x1EEE,  // -> capital u with horn and tilde
+    0x01A0,  // capital o with horn
+    0x1EE0,  // -> capital o with horn and tilde
+    0x01B0,  // letter u with horn
+    0x1EEF,  // -> letter u with horn and tilde
+    0x03B1,  // letter alpha
+    0x1FB6,  // -> letter alpha with perispomeni
+    0x03B7,  // letter eta
+    0x1FC6,  // -> letter eta with perispomeni
+    0x03B9,  // letter iota
+    0x1FD6,  // -> letter iota with perispomeni
+    0x03C5,  // letter upsilon
+    0x1FE6,  // -> letter upsilon with perispomeni
+    0x03C9,  // letter omega
+    0x1FF6,  // -> letter omega with perispomeni
+    0x03CA,  // letter iota with dialytika
+    0x1FD7,  // -> letter iota with dialytika and perispomeni
+    0x03CB,  // letter upsilon with dialytika
+    0x1FE7,  // -> letter upsilon with dialytika and perispomeni
+    0x1F00,  // letter alpha with psili
+    0x1F06,  // -> letter alpha with psili and perispomeni
+    0x1F01,  // letter alpha with dasia
+    0x1F07,  // -> letter alpha with dasia and perispomeni
+    0x1F08,  // capital alpha with psili
+    0x1F0E,  // -> capital alpha with psili and perispomeni
+    0x1F09,  // capital alpha with dasia
+    0x1F0F,  // -> capital alpha with dasia and perispomeni
+    0x1F20,  // letter eta with psili
+    0x1F26,  // -> letter eta with psili and perispomeni
+    0x1F21,  // letter eta with dasia
+    0x1F27,  // -> letter eta with dasia and perispomeni
+    0x1F28,  // capital eta with psili
+    0x1F2E,  // -> capital eta with psili and perispomeni
+    0x1F29,  // capital eta with dasia
+    0x1F2F,  // -> capital eta with dasia and perispomeni
+    0x1F30,  // letter iota with psili
+    0x1F36,  // -> letter iota with psili and perispomeni
+    0x1F31,  // letter iota with dasia
+    0x1F37,  // -> letter iota with dasia and perispomeni
+    0x1F38,  // capital iota with psili
+    0x1F3E,  // -> capital iota with psili and perispomeni
+    0x1F39,  // capital iota with dasia
+    0x1F3F,  // -> capital iota with dasia and perispomeni
+    0x1F50,  // letter upsilon with psili
+    0x1F56,  // -> letter upsilon with psili and perispomeni
+    0x1F51,  // letter upsilon with dasia
+    0x1F57,  // -> letter upsilon with dasia and perispomeni
+    0x1F59,  // capital upsilon with dasia
+    0x1F5F,  // -> capital upsilon with dasia and perispomeni
+    0x1F60,  // letter omega with psili
+    0x1F66,  // -> letter omega with psili and perispomeni
+    0x1F61,  // letter omega with dasia
+    0x1F67,  // -> letter omega with dasia and perispomeni
+    0x1F68,  // capital omega with psili
+    0x1F6E,  // -> capital omega with psili and perispomeni
+    0x1F69,  // capital omega with dasia
+    0x1F6F,  // -> capital omega with dasia and perispomeni
+    //   internal dead_key table
+    0x0009,          // number of entries
+    0x0000,  // U+0000
+    0x2DF6,
+    0x0301,  // combining acute accent
+    0x2E6A,
+    0x0302,  // combining circumflex accent
+    0x2E76,
+    0x0304,  // combining macron
+    0x2E86,
+    0x0306,  // combining breve
+    0x2E8E,
+    0x0308,  // combining diaeresis
+    0x2E96,
+    0x0313,  // combining comma above
+    0x2EA2,
+    0x0314,  // combining reversed comma above
+    0x2EB8,
+    0x031B,  // combining horn
+    0x2ED0,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x0303,  // combining tilde
+    0x007E,  // -> tilde
+
+    // offset 0x2DF6:
+    //   prefix:
+    //     Dead<combining tilde>
+    //     Compose
+    //   internal character table
+    0x0007,          // number of entries
+    0x0022,  // quotation mark
+    0x2E08,
+    0x0028,  // left parenthesis
+    0x2E10,
+    0x0029,  // right parenthesis
+    0x2E28,
+    0x002B,  // plus sign
+    0x2E3E,
+    0x0055,  // capital u
+    0x2E4A,
+    0x005E,  // circumflex accent
+    0x2E52,
+    0x0062,  // letter b
+    0x2E62,
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2E08:
+    //   prefix:
+    //     Dead<combining tilde>
+    //     Compose
+    //     <quotation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x03B9,  // letter iota
+    0x1FD7,  // -> letter iota with dialytika and perispomeni
+    0x03C5,  // letter upsilon
+    0x1FE7,  // -> letter upsilon with dialytika and perispomeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2E10:
+    //   prefix:
+    //     Dead<combining tilde>
+    //     Compose
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000A,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0F,  // -> capital alpha with dasia and perispomeni
+    0x0397,  // capital eta
+    0x1F2F,  // -> capital eta with dasia and perispomeni
+    0x0399,  // capital iota
+    0x1F3F,  // -> capital iota with dasia and perispomeni
+    0x03A5,  // capital upsilon
+    0x1F5F,  // -> capital upsilon with dasia and perispomeni
+    0x03A9,  // capital omega
+    0x1F6F,  // -> capital omega with dasia and perispomeni
+    0x03B1,  // letter alpha
+    0x1F07,  // -> letter alpha with dasia and perispomeni
+    0x03B7,  // letter eta
+    0x1F27,  // -> letter eta with dasia and perispomeni
+    0x03B9,  // letter iota
+    0x1F37,  // -> letter iota with dasia and perispomeni
+    0x03C5,  // letter upsilon
+    0x1F57,  // -> letter upsilon with dasia and perispomeni
+    0x03C9,  // letter omega
+    0x1F67,  // -> letter omega with dasia and perispomeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2E28:
+    //   prefix:
+    //     Dead<combining tilde>
+    //     Compose
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0009,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0E,  // -> capital alpha with psili and perispomeni
+    0x0397,  // capital eta
+    0x1F2E,  // -> capital eta with psili and perispomeni
+    0x0399,  // capital iota
+    0x1F3E,  // -> capital iota with psili and perispomeni
+    0x03A9,  // capital omega
+    0x1F6E,  // -> capital omega with psili and perispomeni
+    0x03B1,  // letter alpha
+    0x1F06,  // -> letter alpha with psili and perispomeni
+    0x03B7,  // letter eta
+    0x1F26,  // -> letter eta with psili and perispomeni
+    0x03B9,  // letter iota
+    0x1F36,  // -> letter iota with psili and perispomeni
+    0x03C5,  // letter upsilon
+    0x1F56,  // -> letter upsilon with psili and perispomeni
+    0x03C9,  // letter omega
+    0x1F66,  // -> letter omega with psili and perispomeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2E3E:
+    //   prefix:
+    //     Dead<combining tilde>
+    //     Compose
+    //     <plus sign>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EE0,  // -> capital o with horn and tilde
+    0x0055,  // capital u
+    0x1EEE,  // -> capital u with horn and tilde
+    0x006F,  // letter o
+    0x1EE1,  // -> letter o with horn and tilde
+    0x0075,  // letter u
+    0x1EEF,  // -> letter u with horn and tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2E4A:
+    //   prefix:
+    //     Dead<combining tilde>
+    //     Compose
+    //     <latin capital letter u>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB4,  // -> capital a with breve and tilde
+    0x0061,  // letter a
+    0x1EB5,  // -> letter a with breve and tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2E52:
+    //   prefix:
+    //     Dead<combining tilde>
+    //     Compose
+    //     <circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EAA,  // -> capital a with circumflex and tilde
+    0x0045,  // capital e
+    0x1EC4,  // -> capital e with circumflex and tilde
+    0x004F,  // capital o
+    0x1ED6,  // -> capital o with circumflex and tilde
+    0x0061,  // letter a
+    0x1EAB,  // -> letter a with circumflex and tilde
+    0x0065,  // letter e
+    0x1EC5,  // -> letter e with circumflex and tilde
+    0x006F,  // letter o
+    0x1ED7,  // -> letter o with circumflex and tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2E62:
+    //   prefix:
+    //     Dead<combining tilde>
+    //     Compose
+    //     <latin small letter b>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB4,  // -> capital a with breve and tilde
+    0x0061,  // letter a
+    0x1EB5,  // -> letter a with breve and tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2E6A:
+    //   prefix:
+    //     Dead<combining tilde>
+    //     Dead<combining acute accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1E4C,  // -> capital o with tilde and acute
+    0x0055,  // capital u
+    0x1E78,  // -> capital u with tilde and acute
+    0x006F,  // letter o
+    0x1E4D,  // -> letter o with tilde and acute
+    0x0075,  // letter u
+    0x1E79,  // -> letter u with tilde and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2E76:
+    //   prefix:
+    //     Dead<combining tilde>
+    //     Dead<combining circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EAA,  // -> capital a with circumflex and tilde
+    0x0045,  // capital e
+    0x1EC4,  // -> capital e with circumflex and tilde
+    0x004F,  // capital o
+    0x1ED6,  // -> capital o with circumflex and tilde
+    0x0061,  // letter a
+    0x1EAB,  // -> letter a with circumflex and tilde
+    0x0065,  // letter e
+    0x1EC5,  // -> letter e with circumflex and tilde
+    0x006F,  // letter o
+    0x1ED7,  // -> letter o with circumflex and tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2E86:
+    //   prefix:
+    //     Dead<combining tilde>
+    //     Dead<combining macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x022C,  // -> capital o with tilde and macron
+    0x006F,  // letter o
+    0x022D,  // -> letter o with tilde and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2E8E:
+    //   prefix:
+    //     Dead<combining tilde>
+    //     Dead<combining breve>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB4,  // -> capital a with breve and tilde
+    0x0061,  // letter a
+    0x1EB5,  // -> letter a with breve and tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2E96:
+    //   prefix:
+    //     Dead<combining tilde>
+    //     Dead<combining diaeresis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1E4E,  // -> capital o with tilde and diaeresis
+    0x006F,  // letter o
+    0x1E4F,  // -> letter o with tilde and diaeresis
+    0x03B9,  // letter iota
+    0x1FD7,  // -> letter iota with dialytika and perispomeni
+    0x03C5,  // letter upsilon
+    0x1FE7,  // -> letter upsilon with dialytika and perispomeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2EA2:
+    //   prefix:
+    //     Dead<combining tilde>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0009,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0E,  // -> capital alpha with psili and perispomeni
+    0x0397,  // capital eta
+    0x1F2E,  // -> capital eta with psili and perispomeni
+    0x0399,  // capital iota
+    0x1F3E,  // -> capital iota with psili and perispomeni
+    0x03A9,  // capital omega
+    0x1F6E,  // -> capital omega with psili and perispomeni
+    0x03B1,  // letter alpha
+    0x1F06,  // -> letter alpha with psili and perispomeni
+    0x03B7,  // letter eta
+    0x1F26,  // -> letter eta with psili and perispomeni
+    0x03B9,  // letter iota
+    0x1F36,  // -> letter iota with psili and perispomeni
+    0x03C5,  // letter upsilon
+    0x1F56,  // -> letter upsilon with psili and perispomeni
+    0x03C9,  // letter omega
+    0x1F66,  // -> letter omega with psili and perispomeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2EB8:
+    //   prefix:
+    //     Dead<combining tilde>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000A,          // number of entries
+    0x0391,  // capital alpha
+    0x1F0F,  // -> capital alpha with dasia and perispomeni
+    0x0397,  // capital eta
+    0x1F2F,  // -> capital eta with dasia and perispomeni
+    0x0399,  // capital iota
+    0x1F3F,  // -> capital iota with dasia and perispomeni
+    0x03A5,  // capital upsilon
+    0x1F5F,  // -> capital upsilon with dasia and perispomeni
+    0x03A9,  // capital omega
+    0x1F6F,  // -> capital omega with dasia and perispomeni
+    0x03B1,  // letter alpha
+    0x1F07,  // -> letter alpha with dasia and perispomeni
+    0x03B7,  // letter eta
+    0x1F27,  // -> letter eta with dasia and perispomeni
+    0x03B9,  // letter iota
+    0x1F37,  // -> letter iota with dasia and perispomeni
+    0x03C5,  // letter upsilon
+    0x1F57,  // -> letter upsilon with dasia and perispomeni
+    0x03C9,  // letter omega
+    0x1F67,  // -> letter omega with dasia and perispomeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2ED0:
+    //   prefix:
+    //     Dead<combining tilde>
+    //     Dead<combining horn>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EE0,  // -> capital o with horn and tilde
+    0x0055,  // capital u
+    0x1EEE,  // -> capital u with horn and tilde
+    0x006F,  // letter o
+    0x1EE1,  // -> letter o with horn and tilde
+    0x0075,  // letter u
+    0x1EEF,  // -> letter u with horn and tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2EDC:
+    //   prefix:
+    //     Dead<combining macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0038,          // number of entries
+    0x0020,  // space
+    0x00AF,  // -> macron
+    0x0041,  // capital a
+    0x0100,  // -> capital a with macron
+    0x0045,  // capital e
+    0x0112,  // -> capital e with macron
+    0x0047,  // capital g
+    0x1E20,  // -> capital g with macron
+    0x0049,  // capital i
+    0x012A,  // -> capital i with macron
+    0x004F,  // capital o
+    0x014C,  // -> capital o with macron
+    0x0055,  // capital u
+    0x016A,  // -> capital u with macron
+    0x0056,  // capital v
+    0x01D5,  // -> capital u with diaeresis and macron
+    0x0059,  // capital y
+    0x0232,  // -> capital y with macron
+    0x0061,  // letter a
+    0x0101,  // -> letter a with macron
+    0x0065,  // letter e
+    0x0113,  // -> letter e with macron
+    0x0067,  // letter g
+    0x1E21,  // -> letter g with macron
+    0x0069,  // letter i
+    0x012B,  // -> letter i with macron
+    0x006F,  // letter o
+    0x014D,  // -> letter o with macron
+    0x0075,  // letter u
+    0x016B,  // -> letter u with macron
+    0x0076,  // letter v
+    0x01D6,  // -> letter u with diaeresis and macron
+    0x0079,  // letter y
+    0x0233,  // -> letter y with macron
+    0x00A0,  // no-break space
+    0x0304,  // -> combining macron
+    0x00C4,  // capital a with diaeresis
+    0x01DE,  // -> capital a with diaeresis and macron
+    0x00C6,  // capital ae
+    0x01E2,  // -> capital ae with macron
+    0x00C8,  // capital e with grave
+    0x1E14,  // -> capital e with macron and grave
+    0x00C9,  // capital e with acute
+    0x1E16,  // -> capital e with macron and acute
+    0x00D2,  // capital o with grave
+    0x1E50,  // -> capital o with macron and grave
+    0x00D3,  // capital o with acute
+    0x1E52,  // -> capital o with macron and acute
+    0x00D5,  // capital o with tilde
+    0x022C,  // -> capital o with tilde and macron
+    0x00D6,  // capital o with diaeresis
+    0x022A,  // -> capital o with diaeresis and macron
+    0x00DC,  // capital u with diaeresis
+    0x01D5,  // -> capital u with diaeresis and macron
+    0x00E4,  // letter a with diaeresis
+    0x01DF,  // -> letter a with diaeresis and macron
+    0x00E6,  // letter ae
+    0x01E3,  // -> letter ae with macron
+    0x00E8,  // letter e with grave
+    0x1E15,  // -> letter e with macron and grave
+    0x00E9,  // letter e with acute
+    0x1E17,  // -> letter e with macron and acute
+    0x00F2,  // letter o with grave
+    0x1E51,  // -> letter o with macron and grave
+    0x00F3,  // letter o with acute
+    0x1E53,  // -> letter o with macron and acute
+    0x00F5,  // letter o with tilde
+    0x022D,  // -> letter o with tilde and macron
+    0x00F6,  // letter o with diaeresis
+    0x022B,  // -> letter o with diaeresis and macron
+    0x00FC,  // letter u with diaeresis
+    0x01D6,  // -> letter u with diaeresis and macron
+    0x0119,  // letter e with ogonek
+    0x01EC,  // -> capital o with ogonek and macron
+    0x01EB,  // letter o with ogonek
+    0x01ED,  // -> letter o with ogonek and macron
+    0x0226,  // capital a with dot above
+    0x01E0,  // -> capital a with dot above and macron
+    0x0227,  // letter a with dot above
+    0x01E1,  // -> letter a with dot above and macron
+    0x022E,  // capital o with dot above
+    0x0230,  // -> capital o with dot above and macron
+    0x022F,  // letter o with dot above
+    0x0231,  // -> letter o with dot above and macron
+    0x0391,  // capital alpha
+    0x1FB9,  // -> capital alpha with macron
+    0x0399,  // capital iota
+    0x1FD9,  // -> capital iota with macron
+    0x03A5,  // capital upsilon
+    0x1FE9,  // -> capital upsilon with macron
+    0x03B1,  // letter alpha
+    0x1FB1,  // -> letter alpha with macron
+    0x03B9,  // letter iota
+    0x1FD1,  // -> letter iota with macron
+    0x03C5,  // letter upsilon
+    0x1FE1,  // -> letter upsilon with macron
+    0x0418,  // cyrillic capital i
+    0x04E2,  // -> cyrillic capital i with macron
+    0x0423,  // cyrillic capital u
+    0x04EE,  // -> cyrillic capital u with macron
+    0x0438,  // cyrillic small i
+    0x04E3,  // -> cyrillic small i with macron
+    0x0443,  // cyrillic small u
+    0x04EF,  // -> cyrillic small u with macron
+    0x1E36,  // capital l with dot below
+    0x1E38,  // -> capital l with dot below and macron
+    0x1E37,  // letter l with dot below
+    0x1E39,  // -> letter l with dot below and macron
+    0x1E5A,  // capital r with dot below
+    0x1E5C,  // -> capital r with dot below and macron
+    0x1E5B,  // letter r with dot below
+    0x1E5D,  // -> letter r with dot below and macron
+    //   internal dead_key table
+    0x0008,          // number of entries
+    0x0000,  // U+0000
+    0x2F62,
+    0x0300,  // combining grave accent
+    0x2FA8,
+    0x0301,  // combining acute accent
+    0x2FB4,
+    0x0303,  // combining tilde
+    0x2FC0,
+    0x0307,  // combining dot above
+    0x2FC8,
+    0x0308,  // combining diaeresis
+    0x2FD4,
+    0x0323,  // combining dot below
+    0x2FE4,
+    0x0328,  // combining ogonek
+    0x2FF0,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x0304,  // combining macron
+    0x00AF,  // -> macron
+
+    // offset 0x2F62:
+    //   prefix:
+    //     Dead<combining macron>
+    //     Compose
+    //   internal character table
+    0x0005,          // number of entries
+    0x0021,  // exclamation mark
+    0x2F70,
+    0x0022,  // quotation mark
+    0x2F7C,
+    0x002E,  // full stop
+    0x2F8C,
+    0x003B,  // semicolon
+    0x2F98,
+    0x007E,  // tilde
+    0x2FA0,
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2F70:
+    //   prefix:
+    //     Dead<combining macron>
+    //     Compose
+    //     <exclamation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004C,  // capital l
+    0x1E38,  // -> capital l with dot below and macron
+    0x0052,  // capital r
+    0x1E5C,  // -> capital r with dot below and macron
+    0x006C,  // letter l
+    0x1E39,  // -> letter l with dot below and macron
+    0x0072,  // letter r
+    0x1E5D,  // -> letter r with dot below and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2F7C:
+    //   prefix:
+    //     Dead<combining macron>
+    //     Compose
+    //     <quotation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x01DE,  // -> capital a with diaeresis and macron
+    0x004F,  // capital o
+    0x022A,  // -> capital o with diaeresis and macron
+    0x0055,  // capital u
+    0x01D5,  // -> capital u with diaeresis and macron
+    0x0061,  // letter a
+    0x01DF,  // -> letter a with diaeresis and macron
+    0x006F,  // letter o
+    0x022B,  // -> letter o with diaeresis and macron
+    0x0075,  // letter u
+    0x01D6,  // -> letter u with diaeresis and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2F8C:
+    //   prefix:
+    //     Dead<combining macron>
+    //     Compose
+    //     <full stop>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0041,  // capital a
+    0x01E0,  // -> capital a with dot above and macron
+    0x004F,  // capital o
+    0x0230,  // -> capital o with dot above and macron
+    0x0061,  // letter a
+    0x01E1,  // -> letter a with dot above and macron
+    0x006F,  // letter o
+    0x0231,  // -> letter o with dot above and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2F98:
+    //   prefix:
+    //     Dead<combining macron>
+    //     Compose
+    //     <semicolon>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x01EC,  // -> capital o with ogonek and macron
+    0x006F,  // letter o
+    0x01ED,  // -> letter o with ogonek and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2FA0:
+    //   prefix:
+    //     Dead<combining macron>
+    //     Compose
+    //     <tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x022C,  // -> capital o with tilde and macron
+    0x006F,  // letter o
+    0x022D,  // -> letter o with tilde and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2FA8:
+    //   prefix:
+    //     Dead<combining macron>
+    //     Dead<combining grave accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0045,  // capital e
+    0x1E14,  // -> capital e with macron and grave
+    0x004F,  // capital o
+    0x1E50,  // -> capital o with macron and grave
+    0x0065,  // letter e
+    0x1E15,  // -> letter e with macron and grave
+    0x006F,  // letter o
+    0x1E51,  // -> letter o with macron and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2FB4:
+    //   prefix:
+    //     Dead<combining macron>
+    //     Dead<combining acute accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0045,  // capital e
+    0x1E16,  // -> capital e with macron and acute
+    0x004F,  // capital o
+    0x1E52,  // -> capital o with macron and acute
+    0x0065,  // letter e
+    0x1E17,  // -> letter e with macron and acute
+    0x006F,  // letter o
+    0x1E53,  // -> letter o with macron and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2FC0:
+    //   prefix:
+    //     Dead<combining macron>
+    //     Dead<combining tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x022C,  // -> capital o with tilde and macron
+    0x006F,  // letter o
+    0x022D,  // -> letter o with tilde and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2FC8:
+    //   prefix:
+    //     Dead<combining macron>
+    //     Dead<combining dot above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0041,  // capital a
+    0x01E0,  // -> capital a with dot above and macron
+    0x004F,  // capital o
+    0x0230,  // -> capital o with dot above and macron
+    0x0061,  // letter a
+    0x01E1,  // -> letter a with dot above and macron
+    0x006F,  // letter o
+    0x0231,  // -> letter o with dot above and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2FD4:
+    //   prefix:
+    //     Dead<combining macron>
+    //     Dead<combining diaeresis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x01DE,  // -> capital a with diaeresis and macron
+    0x004F,  // capital o
+    0x022A,  // -> capital o with diaeresis and macron
+    0x0055,  // capital u
+    0x01D5,  // -> capital u with diaeresis and macron
+    0x0061,  // letter a
+    0x01DF,  // -> letter a with diaeresis and macron
+    0x006F,  // letter o
+    0x022B,  // -> letter o with diaeresis and macron
+    0x0075,  // letter u
+    0x01D6,  // -> letter u with diaeresis and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2FE4:
+    //   prefix:
+    //     Dead<combining macron>
+    //     Dead<combining dot below>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004C,  // capital l
+    0x1E38,  // -> capital l with dot below and macron
+    0x0052,  // capital r
+    0x1E5C,  // -> capital r with dot below and macron
+    0x006C,  // letter l
+    0x1E39,  // -> letter l with dot below and macron
+    0x0072,  // letter r
+    0x1E5D,  // -> letter r with dot below and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2FF0:
+    //   prefix:
+    //     Dead<combining macron>
+    //     Dead<combining ogonek>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x01EC,  // -> capital o with ogonek and macron
+    0x006F,  // letter o
+    0x01ED,  // -> letter o with ogonek and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x2FF8:
+    //   prefix:
+    //     Dead<combining breve>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0028,          // number of entries
+    0x0020,  // space
+    0x02D8,  // -> breve
+    0x0041,  // capital a
+    0x0102,  // -> capital a with breve
+    0x0045,  // capital e
+    0x0114,  // -> capital e with breve
+    0x0047,  // capital g
+    0x011E,  // -> capital g with breve
+    0x0049,  // capital i
+    0x012C,  // -> capital i with breve
+    0x004F,  // capital o
+    0x014E,  // -> capital o with breve
+    0x0055,  // capital u
+    0x016C,  // -> capital u with breve
+    0x0061,  // letter a
+    0x0103,  // -> letter a with breve
+    0x0065,  // letter e
+    0x0115,  // -> letter e with breve
+    0x0067,  // letter g
+    0x011F,  // -> letter g with breve
+    0x0069,  // letter i
+    0x012D,  // -> letter i with breve
+    0x006F,  // letter o
+    0x014F,  // -> letter o with breve
+    0x0075,  // letter u
+    0x016D,  // -> letter u with breve
+    0x00A0,  // no-break space
+    0x0306,  // -> combining breve
+    0x00C0,  // capital a with grave
+    0x1EB0,  // -> capital a with breve and grave
+    0x00C1,  // capital a with acute
+    0x1EAE,  // -> capital a with breve and acute
+    0x00C3,  // capital a with tilde
+    0x1EB4,  // -> capital a with breve and tilde
+    0x00E0,  // letter a with grave
+    0x1EB1,  // -> letter a with breve and grave
+    0x00E1,  // letter a with acute
+    0x1EAF,  // -> letter a with breve and acute
+    0x00E3,  // letter a with tilde
+    0x1EB5,  // -> letter a with breve and tilde
+    0x0228,  // capital e with cedilla
+    0x1E1C,  // -> capital e with cedilla and breve
+    0x0229,  // letter e with cedilla
+    0x1E1D,  // -> letter e with cedilla and breve
+    0x0391,  // capital alpha
+    0x1FB8,  // -> capital alpha with vrachy
+    0x0399,  // capital iota
+    0x1FD8,  // -> capital iota with vrachy
+    0x03A5,  // capital upsilon
+    0x1FE8,  // -> capital upsilon with vrachy
+    0x03B1,  // letter alpha
+    0x1FB0,  // -> letter alpha with vrachy
+    0x03B9,  // letter iota
+    0x1FD0,  // -> letter iota with vrachy
+    0x03C5,  // letter upsilon
+    0x1FE0,  // -> letter upsilon with vrachy
+    0x0410,  // cyrillic capital a
+    0x04D0,  // -> cyrillic capital a with breve
+    0x0415,  // cyrillic capital ie
+    0x04D6,  // -> cyrillic capital ie with breve
+    0x0416,  // cyrillic capital zhe
+    0x04C1,  // -> cyrillic capital zhe with breve
+    0x0418,  // cyrillic capital i
+    0x0419,  // -> cyrillic capital short i
+    0x0423,  // cyrillic capital u
+    0x040E,  // -> cyrillic capital short u
+    0x0430,  // cyrillic small a
+    0x04D1,  // -> cyrillic small a with breve
+    0x0435,  // cyrillic small ie
+    0x04D7,  // -> cyrillic small ie with breve
+    0x0436,  // cyrillic small zhe
+    0x04C2,  // -> cyrillic small zhe with breve
+    0x0438,  // cyrillic small i
+    0x0439,  // -> cyrillic small short i
+    0x0443,  // cyrillic small u
+    0x045E,  // -> cyrillic small short u
+    0x1EA0,  // capital a with dot below
+    0x1EB6,  // -> capital a with breve and dot below
+    0x1EA1,  // letter a with dot below
+    0x1EB7,  // -> letter a with breve and dot below
+    //   internal dead_key table
+    0x0007,          // number of entries
+    0x0000,  // U+0000
+    0x305C,
+    0x0300,  // combining grave accent
+    0x307E,
+    0x0301,  // combining acute accent
+    0x3086,
+    0x0303,  // combining tilde
+    0x308E,
+    0x0309,  // combining hook above
+    0x3096,
+    0x0323,  // combining dot below
+    0x309E,
+    0x0327,  // combining cedilla
+    0x30A6,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x0306,  // combining breve
+    0x02D8,  // -> breve
+
+    // offset 0x305C:
+    //   prefix:
+    //     Dead<combining breve>
+    //     Compose
+    //   internal character table
+    0x0003,          // number of entries
+    0x0021,  // exclamation mark
+    0x3066,
+    0x002C,  // comma
+    0x306E,
+    0x00B8,  // cedilla
+    0x3076,
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3066:
+    //   prefix:
+    //     Dead<combining breve>
+    //     Compose
+    //     <exclamation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB6,  // -> capital a with breve and dot below
+    0x0061,  // letter a
+    0x1EB7,  // -> letter a with breve and dot below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x306E:
+    //   prefix:
+    //     Dead<combining breve>
+    //     Compose
+    //     <comma>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0045,  // capital e
+    0x1E1C,  // -> capital e with cedilla and breve
+    0x0065,  // letter e
+    0x1E1D,  // -> letter e with cedilla and breve
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3076:
+    //   prefix:
+    //     Dead<combining breve>
+    //     Compose
+    //     <cedilla>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0045,  // capital e
+    0x1E1C,  // -> capital e with cedilla and breve
+    0x0065,  // letter e
+    0x1E1D,  // -> letter e with cedilla and breve
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x307E:
+    //   prefix:
+    //     Dead<combining breve>
+    //     Dead<combining grave accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB0,  // -> capital a with breve and grave
+    0x0061,  // letter a
+    0x1EB1,  // -> letter a with breve and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3086:
+    //   prefix:
+    //     Dead<combining breve>
+    //     Dead<combining acute accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EAE,  // -> capital a with breve and acute
+    0x0061,  // letter a
+    0x1EAF,  // -> letter a with breve and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x308E:
+    //   prefix:
+    //     Dead<combining breve>
+    //     Dead<combining tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB4,  // -> capital a with breve and tilde
+    0x0061,  // letter a
+    0x1EB5,  // -> letter a with breve and tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3096:
+    //   prefix:
+    //     Dead<combining breve>
+    //     Dead<combining hook above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB2,  // -> capital a with breve and hook above
+    0x0061,  // letter a
+    0x1EB3,  // -> letter a with breve and hook above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x309E:
+    //   prefix:
+    //     Dead<combining breve>
+    //     Dead<combining dot below>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB6,  // -> capital a with breve and dot below
+    0x0061,  // letter a
+    0x1EB7,  // -> letter a with breve and dot below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x30A6:
+    //   prefix:
+    //     Dead<combining breve>
+    //     Dead<combining cedilla>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0045,  // capital e
+    0x1E1C,  // -> capital e with cedilla and breve
+    0x0065,  // letter e
+    0x1E1D,  // -> letter e with cedilla and breve
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x30AE:
+    //   prefix:
+    //     Dead<combining dot above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0038,          // number of entries
+    0x0020,  // space
+    0x02D9,  // -> dot above
+    0x0041,  // capital a
+    0x0226,  // -> capital a with dot above
+    0x0042,  // capital b
+    0x1E02,  // -> capital b with dot above
+    0x0043,  // capital c
+    0x010A,  // -> capital c with dot above
+    0x0044,  // capital d
+    0x1E0A,  // -> capital d with dot above
+    0x0045,  // capital e
+    0x0116,  // -> capital e with dot above
+    0x0046,  // capital f
+    0x1E1E,  // -> capital f with dot above
+    0x0047,  // capital g
+    0x0120,  // -> capital g with dot above
+    0x0048,  // capital h
+    0x1E22,  // -> capital h with dot above
+    0x0049,  // capital i
+    0x0130,  // -> capital i with dot above
+    0x004C,  // capital l
+    0x013F,  // -> capital l with middle dot
+    0x004D,  // capital m
+    0x1E40,  // -> capital m with dot above
+    0x004E,  // capital n
+    0x1E44,  // -> capital n with dot above
+    0x004F,  // capital o
+    0x022E,  // -> capital o with dot above
+    0x0050,  // capital p
+    0x1E56,  // -> capital p with dot above
+    0x0052,  // capital r
+    0x1E58,  // -> capital r with dot above
+    0x0053,  // capital s
+    0x1E60,  // -> capital s with dot above
+    0x0054,  // capital t
+    0x1E6A,  // -> capital t with dot above
+    0x0057,  // capital w
+    0x1E86,  // -> capital w with dot above
+    0x0058,  // capital x
+    0x1E8A,  // -> capital x with dot above
+    0x0059,  // capital y
+    0x1E8E,  // -> capital y with dot above
+    0x005A,  // capital z
+    0x017B,  // -> capital z with dot above
+    0x0061,  // letter a
+    0x0227,  // -> letter a with dot above
+    0x0062,  // letter b
+    0x1E03,  // -> letter b with dot above
+    0x0063,  // letter c
+    0x010B,  // -> letter c with dot above
+    0x0064,  // letter d
+    0x1E0B,  // -> letter d with dot above
+    0x0065,  // letter e
+    0x0117,  // -> letter e with dot above
+    0x0066,  // letter f
+    0x1E1F,  // -> letter f with dot above
+    0x0067,  // letter g
+    0x0121,  // -> letter g with dot above
+    0x0068,  // letter h
+    0x1E23,  // -> letter h with dot above
+    0x0069,  // letter i
+    0x0131,  // -> letter dotless i
+    0x006A,  // letter j
+    0x0237,  // -> letter dotless j
+    0x006C,  // letter l
+    0x0140,  // -> letter l with middle dot
+    0x006D,  // letter m
+    0x1E41,  // -> letter m with dot above
+    0x006E,  // letter n
+    0x1E45,  // -> letter n with dot above
+    0x006F,  // letter o
+    0x022F,  // -> letter o with dot above
+    0x0070,  // letter p
+    0x1E57,  // -> letter p with dot above
+    0x0072,  // letter r
+    0x1E59,  // -> letter r with dot above
+    0x0073,  // letter s
+    0x1E61,  // -> letter s with dot above
+    0x0074,  // letter t
+    0x1E6B,  // -> letter t with dot above
+    0x0077,  // letter w
+    0x1E87,  // -> letter w with dot above
+    0x0078,  // letter x
+    0x1E8B,  // -> letter x with dot above
+    0x0079,  // letter y
+    0x1E8F,  // -> letter y with dot above
+    0x007A,  // letter z
+    0x017C,  // -> letter z with dot above
+    0x00A0,  // no-break space
+    0x0307,  // -> combining dot above
+    0x0100,  // capital a with macron
+    0x01E0,  // -> capital a with dot above and macron
+    0x0101,  // letter a with macron
+    0x01E1,  // -> letter a with dot above and macron
+    0x014C,  // capital o with macron
+    0x0230,  // -> capital o with dot above and macron
+    0x014D,  // letter o with macron
+    0x0231,  // -> letter o with dot above and macron
+    0x015A,  // capital s with acute
+    0x1E64,  // -> capital s with acute and dot above
+    0x015B,  // letter s with acute
+    0x1E65,  // -> letter s with acute and dot above
+    0x0160,  // capital s with caron
+    0x1E66,  // -> capital s with caron and dot above
+    0x0161,  // letter s with caron
+    0x1E67,  // -> letter s with caron and dot above
+    0x017F,  // letter long s
+    0x1E9B,  // -> letter long s with dot above
+    0x1E62,  // capital s with dot below
+    0x1E68,  // -> capital s with dot below and dot above
+    0x1E63,  // letter s with dot below
+    0x1E69,  // -> letter s with dot below and dot above
+    //   internal dead_key table
+    0x0006,          // number of entries
+    0x0000,  // U+0000
+    0x3130,
+    0x0301,  // combining acute accent
+    0x315C,
+    0x0304,  // combining macron
+    0x3164,
+    0x030C,  // combining caron
+    0x3170,
+    0x0323,  // combining dot below
+    0x3178,
+    0x0338,  // combining long solidus overlay
+    0x3180,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x0307,  // combining dot above
+    0x02D9,  // -> dot above
+
+    // offset 0x3130:
+    //   prefix:
+    //     Dead<combining dot above>
+    //     Compose
+    //   internal character table
+    0x0004,          // number of entries
+    0x0021,  // exclamation mark
+    0x313C,
+    0x0027,  // apostrophe
+    0x3144,
+    0x0063,  // letter c
+    0x314C,
+    0x00B4,  // acute accent
+    0x3154,
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x313C:
+    //   prefix:
+    //     Dead<combining dot above>
+    //     Compose
+    //     <exclamation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0053,  // capital s
+    0x1E68,  // -> capital s with dot below and dot above
+    0x0073,  // letter s
+    0x1E69,  // -> letter s with dot below and dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3144:
+    //   prefix:
+    //     Dead<combining dot above>
+    //     Compose
+    //     <apostrophe>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0053,  // capital s
+    0x1E64,  // -> capital s with acute and dot above
+    0x0073,  // letter s
+    0x1E65,  // -> letter s with acute and dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x314C:
+    //   prefix:
+    //     Dead<combining dot above>
+    //     Compose
+    //     <latin small letter c>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0053,  // capital s
+    0x1E66,  // -> capital s with caron and dot above
+    0x0073,  // letter s
+    0x1E67,  // -> letter s with caron and dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3154:
+    //   prefix:
+    //     Dead<combining dot above>
+    //     Compose
+    //     <acute accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0053,  // capital s
+    0x1E64,  // -> capital s with acute and dot above
+    0x0073,  // letter s
+    0x1E65,  // -> letter s with acute and dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x315C:
+    //   prefix:
+    //     Dead<combining dot above>
+    //     Dead<combining acute accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0053,  // capital s
+    0x1E64,  // -> capital s with acute and dot above
+    0x0073,  // letter s
+    0x1E65,  // -> letter s with acute and dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3164:
+    //   prefix:
+    //     Dead<combining dot above>
+    //     Dead<combining macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x0041,  // capital a
+    0x01E0,  // -> capital a with dot above and macron
+    0x004F,  // capital o
+    0x0230,  // -> capital o with dot above and macron
+    0x0061,  // letter a
+    0x01E1,  // -> letter a with dot above and macron
+    0x006F,  // letter o
+    0x0231,  // -> letter o with dot above and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3170:
+    //   prefix:
+    //     Dead<combining dot above>
+    //     Dead<combining caron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0053,  // capital s
+    0x1E66,  // -> capital s with caron and dot above
+    0x0073,  // letter s
+    0x1E67,  // -> letter s with caron and dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3178:
+    //   prefix:
+    //     Dead<combining dot above>
+    //     Dead<combining dot below>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0053,  // capital s
+    0x1E68,  // -> capital s with dot below and dot above
+    0x0073,  // letter s
+    0x1E69,  // -> letter s with dot below and dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3180:
+    //   prefix:
+    //     Dead<combining dot above>
+    //     Dead<combining long solidus overlay>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x006A,  // letter j
+    0x025F,  // -> letter dotless j with stroke
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3186:
+    //   prefix:
+    //     Dead<combining diaeresis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0045,          // number of entries
+    0x0020,  // space
+    0x0022,  // -> quotation mark
+    0x0027,  // apostrophe
+    0x0344,  // -> combining greek dialytika tonos
+    0x0041,  // capital a
+    0x00C4,  // -> capital a with diaeresis
+    0x0045,  // capital e
+    0x00CB,  // -> capital e with diaeresis
+    0x0048,  // capital h
+    0x1E26,  // -> capital h with diaeresis
+    0x0049,  // capital i
+    0x00CF,  // -> capital i with diaeresis
+    0x004F,  // capital o
+    0x00D6,  // -> capital o with diaeresis
+    0x0055,  // capital u
+    0x00DC,  // -> capital u with diaeresis
+    0x0057,  // capital w
+    0x1E84,  // -> capital w with diaeresis
+    0x0058,  // capital x
+    0x1E8C,  // -> capital x with diaeresis
+    0x0059,  // capital y
+    0x0178,  // -> capital y with diaeresis
+    0x0061,  // letter a
+    0x00E4,  // -> letter a with diaeresis
+    0x0065,  // letter e
+    0x00EB,  // -> letter e with diaeresis
+    0x0068,  // letter h
+    0x1E27,  // -> letter h with diaeresis
+    0x0069,  // letter i
+    0x00EF,  // -> letter i with diaeresis
+    0x006F,  // letter o
+    0x00F6,  // -> letter o with diaeresis
+    0x0074,  // letter t
+    0x1E97,  // -> letter t with diaeresis
+    0x0075,  // letter u
+    0x00FC,  // -> letter u with diaeresis
+    0x0077,  // letter w
+    0x1E85,  // -> letter w with diaeresis
+    0x0078,  // letter x
+    0x1E8D,  // -> letter x with diaeresis
+    0x0079,  // letter y
+    0x00FF,  // -> letter y with diaeresis
+    0x00A0,  // no-break space
+    0x0308,  // -> combining diaeresis
+    0x00B4,  // acute accent
+    0x0344,  // -> combining greek dialytika tonos
+    0x00CD,  // capital i with acute
+    0x1E2E,  // -> capital i with diaeresis and acute
+    0x00D5,  // capital o with tilde
+    0x1E4E,  // -> capital o with tilde and diaeresis
+    0x00D9,  // capital u with grave
+    0x01DB,  // -> capital u with diaeresis and grave
+    0x00DA,  // capital u with acute
+    0x01D7,  // -> capital u with diaeresis and acute
+    0x00ED,  // letter i with acute
+    0x1E2F,  // -> letter i with diaeresis and acute
+    0x00F5,  // letter o with tilde
+    0x1E4F,  // -> letter o with tilde and diaeresis
+    0x00F9,  // letter u with grave
+    0x01DC,  // -> letter u with diaeresis and grave
+    0x00FA,  // letter u with acute
+    0x01D8,  // -> letter u with diaeresis and acute
+    0x0100,  // capital a with macron
+    0x01DE,  // -> capital a with diaeresis and macron
+    0x0101,  // letter a with macron
+    0x01DF,  // -> letter a with diaeresis and macron
+    0x014C,  // capital o with macron
+    0x022A,  // -> capital o with diaeresis and macron
+    0x014D,  // letter o with macron
+    0x022B,  // -> letter o with diaeresis and macron
+    0x016A,  // capital u with macron
+    0x1E7A,  // -> capital u with macron and diaeresis
+    0x016B,  // letter u with macron
+    0x1E7B,  // -> letter u with macron and diaeresis
+    0x01D3,  // capital u with caron
+    0x01D9,  // -> capital u with diaeresis and caron
+    0x01D4,  // letter u with caron
+    0x01DA,  // -> letter u with diaeresis and caron
+    0x0399,  // capital iota
+    0x03AA,  // -> capital iota with dialytika
+    0x03A5,  // capital upsilon
+    0x03AB,  // -> capital upsilon with dialytika
+    0x03B9,  // letter iota
+    0x03CA,  // -> letter iota with dialytika
+    0x03C5,  // letter upsilon
+    0x03CB,  // -> letter upsilon with dialytika
+    0x0406,  // cyrillic capital byelorussian-ukrainian i
+    0x0407,  // -> cyrillic capital yi
+    0x0410,  // cyrillic capital a
+    0x04D2,  // -> cyrillic capital a with diaeresis
+    0x0415,  // cyrillic capital ie
+    0x0401,  // -> cyrillic capital io
+    0x0416,  // cyrillic capital zhe
+    0x04DC,  // -> cyrillic capital zhe with diaeresis
+    0x0417,  // cyrillic capital ze
+    0x04DE,  // -> cyrillic capital ze with diaeresis
+    0x0418,  // cyrillic capital i
+    0x04E4,  // -> cyrillic capital i with diaeresis
+    0x041E,  // cyrillic capital o
+    0x04E6,  // -> cyrillic capital o with diaeresis
+    0x0423,  // cyrillic capital u
+    0x04F0,  // -> cyrillic capital u with diaeresis
+    0x0427,  // cyrillic capital che
+    0x04F4,  // -> cyrillic capital che with diaeresis
+    0x042B,  // cyrillic capital yeru
+    0x04F8,  // -> cyrillic capital yeru with diaeresis
+    0x042D,  // cyrillic capital e
+    0x04EC,  // -> cyrillic capital e with diaeresis
+    0x0430,  // cyrillic small a
+    0x04D3,  // -> cyrillic small a with diaeresis
+    0x0435,  // cyrillic small ie
+    0x0451,  // -> cyrillic small io
+    0x0436,  // cyrillic small zhe
+    0x04DD,  // -> cyrillic small zhe with diaeresis
+    0x0437,  // cyrillic small ze
+    0x04DF,  // -> cyrillic small ze with diaeresis
+    0x0438,  // cyrillic small i
+    0x04E5,  // -> cyrillic small i with diaeresis
+    0x043E,  // cyrillic small o
+    0x04E7,  // -> cyrillic small o with diaeresis
+    0x0443,  // cyrillic small u
+    0x04F1,  // -> cyrillic small u with diaeresis
+    0x0447,  // cyrillic small che
+    0x04F5,  // -> cyrillic small che with diaeresis
+    0x044B,  // cyrillic small yeru
+    0x04F9,  // -> cyrillic small yeru with diaeresis
+    0x044D,  // cyrillic small e
+    0x04ED,  // -> cyrillic small e with diaeresis
+    0x0456,  // cyrillic small byelorussian-ukrainian i
+    0x0457,  // -> cyrillic small yi
+    0x04E8,  // cyrillic capital barred o
+    0x04EA,  // -> cyrillic capital barred o with diaeresis
+    0x04E9,  // cyrillic small barred o
+    0x04EB,  // -> cyrillic small barred o with diaeresis
+    0x30EA,  // katakana ri
+    0x04DA,  // -> cyrillic capital schwa with diaeresis
+    0x30EB,  // katakana ru
+    0x04DB,  // -> cyrillic small schwa with diaeresis
+    //   internal dead_key table
+    0x0006,          // number of entries
+    0x0000,  // U+0000
+    0x3222,
+    0x0300,  // combining grave accent
+    0x3244,
+    0x0301,  // combining acute accent
+    0x324C,
+    0x0303,  // combining tilde
+    0x325E,
+    0x0304,  // combining macron
+    0x3266,
+    0x030C,  // combining caron
+    0x3276,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x0308,  // combining diaeresis
+    0x00A8,  // -> diaeresis
+
+    // offset 0x3222:
+    //   prefix:
+    //     Dead<combining diaeresis>
+    //     Compose
+    //   internal character table
+    0x0003,          // number of entries
+    0x005F,  // low line
+    0x322C,
+    0x007E,  // tilde
+    0x3234,
+    0x00AF,  // macron
+    0x323C,
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x322C:
+    //   prefix:
+    //     Dead<combining diaeresis>
+    //     Compose
+    //     <low line>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0055,  // capital u
+    0x1E7A,  // -> capital u with macron and diaeresis
+    0x0075,  // letter u
+    0x1E7B,  // -> letter u with macron and diaeresis
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3234:
+    //   prefix:
+    //     Dead<combining diaeresis>
+    //     Compose
+    //     <tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x1E4E,  // -> capital o with tilde and diaeresis
+    0x006F,  // letter o
+    0x1E4F,  // -> letter o with tilde and diaeresis
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x323C:
+    //   prefix:
+    //     Dead<combining diaeresis>
+    //     Compose
+    //     <macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0055,  // capital u
+    0x1E7A,  // -> capital u with macron and diaeresis
+    0x0075,  // letter u
+    0x1E7B,  // -> letter u with macron and diaeresis
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3244:
+    //   prefix:
+    //     Dead<combining diaeresis>
+    //     Dead<combining grave accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0055,  // capital u
+    0x01DB,  // -> capital u with diaeresis and grave
+    0x0075,  // letter u
+    0x01DC,  // -> letter u with diaeresis and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x324C:
+    //   prefix:
+    //     Dead<combining diaeresis>
+    //     Dead<combining acute accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0007,          // number of entries
+    0x0020,  // space
+    0x0385,  // -> dialytika tonos
+    0x0049,  // capital i
+    0x1E2E,  // -> capital i with diaeresis and acute
+    0x0055,  // capital u
+    0x01D7,  // -> capital u with diaeresis and acute
+    0x0069,  // letter i
+    0x1E2F,  // -> letter i with diaeresis and acute
+    0x0075,  // letter u
+    0x01D8,  // -> letter u with diaeresis and acute
+    0x03B9,  // letter iota
+    0x0390,  // -> letter iota with dialytika and tonos
+    0x03C5,  // letter upsilon
+    0x03B0,  // -> letter upsilon with dialytika and tonos
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x325E:
+    //   prefix:
+    //     Dead<combining diaeresis>
+    //     Dead<combining tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x1E4E,  // -> capital o with tilde and diaeresis
+    0x006F,  // letter o
+    0x1E4F,  // -> letter o with tilde and diaeresis
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3266:
+    //   prefix:
+    //     Dead<combining diaeresis>
+    //     Dead<combining macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x01DE,  // -> capital a with diaeresis and macron
+    0x004F,  // capital o
+    0x022A,  // -> capital o with diaeresis and macron
+    0x0055,  // capital u
+    0x1E7A,  // -> capital u with macron and diaeresis
+    0x0061,  // letter a
+    0x01DF,  // -> letter a with diaeresis and macron
+    0x006F,  // letter o
+    0x022B,  // -> letter o with diaeresis and macron
+    0x0075,  // letter u
+    0x1E7B,  // -> letter u with macron and diaeresis
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3276:
+    //   prefix:
+    //     Dead<combining diaeresis>
+    //     Dead<combining caron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0055,  // capital u
+    0x01D9,  // -> capital u with diaeresis and caron
+    0x0075,  // letter u
+    0x01DA,  // -> letter u with diaeresis and caron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x327E:
+    //   prefix:
+    //     Dead<combining hook above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x003B,          // number of entries
+    0x0020,  // space
+    0x0309,  // -> combining hook above
+    0x0041,  // capital a
+    0x1EA2,  // -> capital a with hook above
+    0x0042,  // capital b
+    0x0181,  // -> capital b with hook
+    0x0043,  // capital c
+    0x0187,  // -> capital c with hook
+    0x0044,  // capital d
+    0x018A,  // -> capital d with hook
+    0x0045,  // capital e
+    0x1EBA,  // -> capital e with hook above
+    0x0046,  // capital f
+    0x0191,  // -> capital f with hook
+    0x0047,  // capital g
+    0x0193,  // -> capital g with hook
+    0x0049,  // capital i
+    0x1EC8,  // -> capital i with hook above
+    0x004B,  // capital k
+    0x0198,  // -> capital k with hook
+    0x004D,  // capital m
+    0x2C6E,  // -> capital m with hook
+    0x004E,  // capital n
+    0x019D,  // -> capital n with left hook
+    0x004F,  // capital o
+    0x1ECE,  // -> capital o with hook above
+    0x0050,  // capital p
+    0x01A4,  // -> capital p with hook
+    0x0054,  // capital t
+    0x01AC,  // -> capital t with hook
+    0x0055,  // capital u
+    0x1EE6,  // -> capital u with hook above
+    0x0056,  // capital v
+    0x01B2,  // -> capital v with hook
+    0x0057,  // capital w
+    0x2C72,  // -> capital w with hook
+    0x0059,  // capital y
+    0x1EF6,  // -> capital y with hook above
+    0x005A,  // capital z
+    0x0224,  // -> capital z with hook
+    0x0061,  // letter a
+    0x1EA3,  // -> letter a with hook above
+    0x0062,  // letter b
+    0x0253,  // -> letter b with hook
+    0x0063,  // letter c
+    0x0188,  // -> letter c with hook
+    0x0064,  // letter d
+    0x0257,  // -> letter d with hook
+    0x0065,  // letter e
+    0x1EBB,  // -> letter e with hook above
+    0x0066,  // letter f
+    0x0192,  // -> letter f with hook
+    0x0067,  // letter g
+    0x0260,  // -> letter g with hook
+    0x0068,  // letter h
+    0x0266,  // -> letter h with hook
+    0x0069,  // letter i
+    0x1EC9,  // -> letter i with hook above
+    0x006B,  // letter k
+    0x0199,  // -> letter k with hook
+    0x006D,  // letter m
+    0x0271,  // -> letter m with hook
+    0x006E,  // letter n
+    0x0272,  // -> letter n with left hook
+    0x006F,  // letter o
+    0x1ECF,  // -> letter o with hook above
+    0x0070,  // letter p
+    0x01A5,  // -> letter p with hook
+    0x0071,  // letter q
+    0x02A0,  // -> letter q with hook
+    0x0073,  // letter s
+    0x0282,  // -> letter s with hook
+    0x0074,  // letter t
+    0x01AD,  // -> letter t with hook
+    0x0075,  // letter u
+    0x1EE7,  // -> letter u with hook above
+    0x0076,  // letter v
+    0x028B,  // -> letter v with hook
+    0x0077,  // letter w
+    0x2C73,  // -> letter w with hook
+    0x0079,  // letter y
+    0x1EF7,  // -> letter y with hook above
+    0x007A,  // letter z
+    0x0225,  // -> letter z with hook
+    0x00A0,  // no-break space
+    0x0309,  // -> combining hook above
+    0x00C2,  // capital a with circumflex
+    0x1EA8,  // -> capital a with circumflex and hook above
+    0x00CA,  // capital e with circumflex
+    0x1EC2,  // -> capital e with circumflex and hook above
+    0x00D4,  // capital o with circumflex
+    0x1ED4,  // -> capital o with circumflex and hook above
+    0x00E2,  // letter a with circumflex
+    0x1EA9,  // -> letter a with circumflex and hook above
+    0x00EA,  // letter e with circumflex
+    0x1EC3,  // -> letter e with circumflex and hook above
+    0x00F4,  // letter o with circumflex
+    0x1ED5,  // -> letter o with circumflex and hook above
+    0x0102,  // capital a with breve
+    0x1EB2,  // -> capital a with breve and hook above
+    0x0103,  // letter a with breve
+    0x1EB3,  // -> letter a with breve and hook above
+    0x0104,  // capital a with ogonek
+    0x1EDF,  // -> letter o with horn and hook above
+    0x017B,  // capital z with dot above
+    0x1EEC,  // -> capital u with horn and hook above
+    0x01A0,  // capital o with horn
+    0x1EDE,  // -> capital o with horn and hook above
+    0x01B0,  // letter u with horn
+    0x1EED,  // -> letter u with horn and hook above
+    0x0256,  // letter d with tail
+    0x1D91,  // -> letter d with hook and tail
+    0x025C,  // letter reversed open e
+    0x025D,  // -> letter reversed open e with hook
+    0x025F,  // letter dotless j with stroke
+    0x0284,  // -> letter dotless j with stroke and hook
+    0x0279,  // letter turned r
+    0x027B,  // -> letter turned r with hook
+    //   internal dead_key table
+    0x0004,          // number of entries
+    0x0000,  // U+0000
+    0x3302,
+    0x0302,  // combining circumflex accent
+    0x333A,
+    0x0306,  // combining breve
+    0x334A,
+    0x031B,  // combining horn
+    0x3352,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x0309,  // combining hook above
+    0x0309,  // -> combining hook above
+
+    // offset 0x3302:
+    //   prefix:
+    //     Dead<combining hook above>
+    //     Compose
+    //   internal character table
+    0x0004,          // number of entries
+    0x002B,  // plus sign
+    0x330E,
+    0x0055,  // capital u
+    0x331A,
+    0x005E,  // circumflex accent
+    0x3322,
+    0x0062,  // letter b
+    0x3332,
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x330E:
+    //   prefix:
+    //     Dead<combining hook above>
+    //     Compose
+    //     <plus sign>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EDE,  // -> capital o with horn and hook above
+    0x0055,  // capital u
+    0x1EEC,  // -> capital u with horn and hook above
+    0x006F,  // letter o
+    0x1EDF,  // -> letter o with horn and hook above
+    0x0075,  // letter u
+    0x1EED,  // -> letter u with horn and hook above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x331A:
+    //   prefix:
+    //     Dead<combining hook above>
+    //     Compose
+    //     <latin capital letter u>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB2,  // -> capital a with breve and hook above
+    0x0061,  // letter a
+    0x1EB3,  // -> letter a with breve and hook above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3322:
+    //   prefix:
+    //     Dead<combining hook above>
+    //     Compose
+    //     <circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EA8,  // -> capital a with circumflex and hook above
+    0x0045,  // capital e
+    0x1EC2,  // -> capital e with circumflex and hook above
+    0x004F,  // capital o
+    0x1ED4,  // -> capital o with circumflex and hook above
+    0x0061,  // letter a
+    0x1EA9,  // -> letter a with circumflex and hook above
+    0x0065,  // letter e
+    0x1EC3,  // -> letter e with circumflex and hook above
+    0x006F,  // letter o
+    0x1ED5,  // -> letter o with circumflex and hook above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3332:
+    //   prefix:
+    //     Dead<combining hook above>
+    //     Compose
+    //     <latin small letter b>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB2,  // -> capital a with breve and hook above
+    0x0061,  // letter a
+    0x1EB3,  // -> letter a with breve and hook above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x333A:
+    //   prefix:
+    //     Dead<combining hook above>
+    //     Dead<combining circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EA8,  // -> capital a with circumflex and hook above
+    0x0045,  // capital e
+    0x1EC2,  // -> capital e with circumflex and hook above
+    0x004F,  // capital o
+    0x1ED4,  // -> capital o with circumflex and hook above
+    0x0061,  // letter a
+    0x1EA9,  // -> letter a with circumflex and hook above
+    0x0065,  // letter e
+    0x1EC3,  // -> letter e with circumflex and hook above
+    0x006F,  // letter o
+    0x1ED5,  // -> letter o with circumflex and hook above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x334A:
+    //   prefix:
+    //     Dead<combining hook above>
+    //     Dead<combining breve>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB2,  // -> capital a with breve and hook above
+    0x0061,  // letter a
+    0x1EB3,  // -> letter a with breve and hook above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3352:
+    //   prefix:
+    //     Dead<combining hook above>
+    //     Dead<combining horn>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EDE,  // -> capital o with horn and hook above
+    0x0055,  // capital u
+    0x1EEC,  // -> capital u with horn and hook above
+    0x006F,  // letter o
+    0x1EDF,  // -> letter o with horn and hook above
+    0x0075,  // letter u
+    0x1EED,  // -> letter u with horn and hook above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x335E:
+    //   prefix:
+    //     Dead<combining ring above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000A,          // number of entries
+    0x0020,  // space
+    0x00B0,  // -> degree sign
+    0x0041,  // capital a
+    0x00C5,  // -> capital a with ring above
+    0x0055,  // capital u
+    0x016E,  // -> capital u with ring above
+    0x0061,  // letter a
+    0x00E5,  // -> letter a with ring above
+    0x0075,  // letter u
+    0x016F,  // -> letter u with ring above
+    0x0077,  // letter w
+    0x1E98,  // -> letter w with ring above
+    0x0079,  // letter y
+    0x1E99,  // -> letter y with ring above
+    0x00A0,  // no-break space
+    0x030A,  // -> combining ring above
+    0x00C1,  // capital a with acute
+    0x01FA,  // -> capital a with ring above and acute
+    0x00E1,  // letter a with acute
+    0x01FB,  // -> letter a with ring above and acute
+    //   internal dead_key table
+    0x0001,          // number of entries
+    0x0301,  // combining acute accent
+    0x337A,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x030A,  // combining ring above
+    0x00B0,  // -> degree sign
+
+    // offset 0x337A:
+    //   prefix:
+    //     Dead<combining ring above>
+    //     Dead<combining acute accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x01FA,  // -> capital a with ring above and acute
+    0x0061,  // letter a
+    0x01FB,  // -> letter a with ring above and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3382:
+    //   prefix:
+    //     Dead<combining double acute accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0008,          // number of entries
+    0x0020,  // space
+    0x02DD,  // -> double acute accent
+    0x004F,  // capital o
+    0x0150,  // -> capital o with double acute
+    0x0055,  // capital u
+    0x0170,  // -> capital u with double acute
+    0x006F,  // letter o
+    0x0151,  // -> letter o with double acute
+    0x0075,  // letter u
+    0x0171,  // -> letter u with double acute
+    0x00A0,  // no-break space
+    0x030B,  // -> combining double acute accent
+    0x0423,  // cyrillic capital u
+    0x04F2,  // -> cyrillic capital u with double acute
+    0x0443,  // cyrillic small u
+    0x04F3,  // -> cyrillic small u with double acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x030B,  // combining double acute accent
+    0x02DD,  // -> double acute accent
+
+    // offset 0x3398:
+    //   prefix:
+    //     Dead<combining caron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0039,          // number of entries
+    0x0020,  // space
+    0x02C7,  // -> caron
+    0x0028,  // left parenthesis
+    0x208D,  // -> subscript left parenthesis
+    0x0029,  // right parenthesis
+    0x208E,  // -> subscript right parenthesis
+    0x002B,  // plus sign
+    0x208A,  // -> subscript plus sign
+    0x002D,  // hyphen-minus
+    0x208B,  // -> subscript minus
+    0x0030,  // digit zero
+    0x2080,  // -> subscript zero
+    0x0031,  // digit one
+    0x2081,  // -> subscript one
+    0x0032,  // digit two
+    0x2082,  // -> subscript two
+    0x0033,  // digit three
+    0x2083,  // -> subscript three
+    0x0034,  // digit four
+    0x2084,  // -> subscript four
+    0x0035,  // digit five
+    0x2085,  // -> subscript five
+    0x0036,  // digit six
+    0x2086,  // -> subscript six
+    0x0037,  // digit seven
+    0x2087,  // -> subscript seven
+    0x0038,  // digit eight
+    0x2088,  // -> subscript eight
+    0x0039,  // digit nine
+    0x2089,  // -> subscript nine
+    0x003D,  // equals sign
+    0x208C,  // -> subscript equals sign
+    0x0041,  // capital a
+    0x01CD,  // -> capital a with caron
+    0x0043,  // capital c
+    0x010C,  // -> capital c with caron
+    0x0044,  // capital d
+    0x010E,  // -> capital d with caron
+    0x0045,  // capital e
+    0x011A,  // -> capital e with caron
+    0x0047,  // capital g
+    0x01E6,  // -> capital g with caron
+    0x0048,  // capital h
+    0x021E,  // -> capital h with caron
+    0x0049,  // capital i
+    0x01CF,  // -> capital i with caron
+    0x004B,  // capital k
+    0x01E8,  // -> capital k with caron
+    0x004C,  // capital l
+    0x013D,  // -> capital l with caron
+    0x004E,  // capital n
+    0x0147,  // -> capital n with caron
+    0x004F,  // capital o
+    0x01D1,  // -> capital o with caron
+    0x0052,  // capital r
+    0x0158,  // -> capital r with caron
+    0x0053,  // capital s
+    0x0160,  // -> capital s with caron
+    0x0054,  // capital t
+    0x0164,  // -> capital t with caron
+    0x0055,  // capital u
+    0x01D3,  // -> capital u with caron
+    0x0056,  // capital v
+    0x01D9,  // -> capital u with diaeresis and caron
+    0x005A,  // capital z
+    0x017D,  // -> capital z with caron
+    0x0061,  // letter a
+    0x01CE,  // -> letter a with caron
+    0x0063,  // letter c
+    0x010D,  // -> letter c with caron
+    0x0064,  // letter d
+    0x010F,  // -> letter d with caron
+    0x0065,  // letter e
+    0x011B,  // -> letter e with caron
+    0x0067,  // letter g
+    0x01E7,  // -> letter g with caron
+    0x0068,  // letter h
+    0x021F,  // -> letter h with caron
+    0x0069,  // letter i
+    0x01D0,  // -> letter i with caron
+    0x006A,  // letter j
+    0x01F0,  // -> letter j with caron
+    0x006B,  // letter k
+    0x01E9,  // -> letter k with caron
+    0x006C,  // letter l
+    0x013E,  // -> letter l with caron
+    0x006E,  // letter n
+    0x0148,  // -> letter n with caron
+    0x006F,  // letter o
+    0x01D2,  // -> letter o with caron
+    0x0072,  // letter r
+    0x0159,  // -> letter r with caron
+    0x0073,  // letter s
+    0x0161,  // -> letter s with caron
+    0x0074,  // letter t
+    0x0165,  // -> letter t with caron
+    0x0075,  // letter u
+    0x01D4,  // -> letter u with caron
+    0x0076,  // letter v
+    0x01DA,  // -> letter u with diaeresis and caron
+    0x007A,  // letter z
+    0x017E,  // -> letter z with caron
+    0x00A0,  // no-break space
+    0x030C,  // -> combining caron
+    0x00DC,  // capital u with diaeresis
+    0x01D9,  // -> capital u with diaeresis and caron
+    0x00FC,  // letter u with diaeresis
+    0x01DA,  // -> letter u with diaeresis and caron
+    0x0148,  // letter n with caron
+    0x01C5,  // -> capital d with small z with caron
+    0x0292,  // letter ezh
+    0x01EF,  // -> letter ezh with caron
+    0x02C7,  // caron
+    0x01EE,  // -> capital ezh with caron
+    //   internal dead_key table
+    0x0003,          // number of entries
+    0x0000,  // U+0000
+    0x3416,
+    0x0307,  // combining dot above
+    0x3424,
+    0x0308,  // combining diaeresis
+    0x342C,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x030C,  // combining caron
+    0x02C7,  // -> caron
+
+    // offset 0x3416:
+    //   prefix:
+    //     Dead<combining caron>
+    //     Compose
+    //   internal character table
+    0x0001,          // number of entries
+    0x0022,  // quotation mark
+    0x341C,
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x341C:
+    //   prefix:
+    //     Dead<combining caron>
+    //     Compose
+    //     <quotation mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0055,  // capital u
+    0x01D9,  // -> capital u with diaeresis and caron
+    0x0075,  // letter u
+    0x01DA,  // -> letter u with diaeresis and caron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3424:
+    //   prefix:
+    //     Dead<combining caron>
+    //     Dead<combining dot above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0053,  // capital s
+    0x1E66,  // -> capital s with caron and dot above
+    0x0073,  // letter s
+    0x1E67,  // -> letter s with caron and dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x342C:
+    //   prefix:
+    //     Dead<combining caron>
+    //     Dead<combining diaeresis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0055,  // capital u
+    0x01D9,  // -> capital u with diaeresis and caron
+    0x0075,  // letter u
+    0x01DA,  // -> letter u with diaeresis and caron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3434:
+    //   prefix:
+    //     Dead<combining double grave accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000E,          // number of entries
+    0x0041,  // capital a
+    0x0200,  // -> capital a with double grave
+    0x0045,  // capital e
+    0x0204,  // -> capital e with double grave
+    0x0049,  // capital i
+    0x0208,  // -> capital i with double grave
+    0x004F,  // capital o
+    0x020C,  // -> capital o with double grave
+    0x0052,  // capital r
+    0x0210,  // -> capital r with double grave
+    0x0055,  // capital u
+    0x0214,  // -> capital u with double grave
+    0x0061,  // letter a
+    0x0201,  // -> letter a with double grave
+    0x0065,  // letter e
+    0x0205,  // -> letter e with double grave
+    0x0069,  // letter i
+    0x0209,  // -> letter i with double grave
+    0x006F,  // letter o
+    0x020D,  // -> letter o with double grave
+    0x0072,  // letter r
+    0x0211,  // -> letter r with double grave
+    0x0075,  // letter u
+    0x0215,  // -> letter u with double grave
+    0x0474,  // cyrillic capital izhitsa
+    0x0476,  // -> cyrillic capital izhitsa with double grave accent
+    0x0475,  // cyrillic small izhitsa
+    0x0477,  // -> cyrillic small izhitsa with double grave accent
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3454:
+    //   prefix:
+    //     Dead<combining inverted breve>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000C,          // number of entries
+    0x0041,  // capital a
+    0x0202,  // -> capital a with inverted breve
+    0x0045,  // capital e
+    0x0206,  // -> capital e with inverted breve
+    0x0049,  // capital i
+    0x020A,  // -> capital i with inverted breve
+    0x004F,  // capital o
+    0x020E,  // -> capital o with inverted breve
+    0x0052,  // capital r
+    0x0212,  // -> capital r with inverted breve
+    0x0055,  // capital u
+    0x0216,  // -> capital u with inverted breve
+    0x0061,  // letter a
+    0x0203,  // -> letter a with inverted breve
+    0x0065,  // letter e
+    0x0207,  // -> letter e with inverted breve
+    0x0069,  // letter i
+    0x020B,  // -> letter i with inverted breve
+    0x006F,  // letter o
+    0x020F,  // -> letter o with inverted breve
+    0x0072,  // letter r
+    0x0213,  // -> letter r with inverted breve
+    0x0075,  // letter u
+    0x0217,  // -> letter u with inverted breve
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3470:
+    //   prefix:
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000E,          // number of entries
+    0x0391,  // capital alpha
+    0x1F08,  // -> capital alpha with psili
+    0x0395,  // capital epsilon
+    0x1F18,  // -> capital epsilon with psili
+    0x0397,  // capital eta
+    0x1F28,  // -> capital eta with psili
+    0x0399,  // capital iota
+    0x1F38,  // -> capital iota with psili
+    0x039F,  // capital omicron
+    0x1F48,  // -> capital omicron with psili
+    0x03A9,  // capital omega
+    0x1F68,  // -> capital omega with psili
+    0x03B1,  // letter alpha
+    0x1F00,  // -> letter alpha with psili
+    0x03B5,  // letter epsilon
+    0x1F10,  // -> letter epsilon with psili
+    0x03B7,  // letter eta
+    0x1F20,  // -> letter eta with psili
+    0x03B9,  // letter iota
+    0x1F30,  // -> letter iota with psili
+    0x03BF,  // letter omicron
+    0x1F40,  // -> letter omicron with psili
+    0x03C1,  // letter rho
+    0x1FE4,  // -> letter rho with psili
+    0x03C5,  // letter upsilon
+    0x1F50,  // -> letter upsilon with psili
+    0x03C9,  // letter omega
+    0x1F60,  // -> letter omega with psili
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3490:
+    //   prefix:
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0010,          // number of entries
+    0x0391,  // capital alpha
+    0x1F09,  // -> capital alpha with dasia
+    0x0395,  // capital epsilon
+    0x1F19,  // -> capital epsilon with dasia
+    0x0397,  // capital eta
+    0x1F29,  // -> capital eta with dasia
+    0x0399,  // capital iota
+    0x1F39,  // -> capital iota with dasia
+    0x039F,  // capital omicron
+    0x1F49,  // -> capital omicron with dasia
+    0x03A1,  // capital rho
+    0x1FEC,  // -> capital rho with dasia
+    0x03A5,  // capital upsilon
+    0x1F59,  // -> capital upsilon with dasia
+    0x03A9,  // capital omega
+    0x1F69,  // -> capital omega with dasia
+    0x03B1,  // letter alpha
+    0x1F01,  // -> letter alpha with dasia
+    0x03B5,  // letter epsilon
+    0x1F11,  // -> letter epsilon with dasia
+    0x03B7,  // letter eta
+    0x1F21,  // -> letter eta with dasia
+    0x03B9,  // letter iota
+    0x1F31,  // -> letter iota with dasia
+    0x03BF,  // letter omicron
+    0x1F41,  // -> letter omicron with dasia
+    0x03C1,  // letter rho
+    0x1FE5,  // -> letter rho with dasia
+    0x03C5,  // letter upsilon
+    0x1F51,  // -> letter upsilon with dasia
+    0x03C9,  // letter omega
+    0x1F61,  // -> letter omega with dasia
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x34B4:
+    //   prefix:
+    //     Dead<combining horn>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0012,          // number of entries
+    0x0020,  // space
+    0x031B,  // -> combining horn
+    0x004F,  // capital o
+    0x01A0,  // -> capital o with horn
+    0x0055,  // capital u
+    0x01AF,  // -> capital u with horn
+    0x006F,  // letter o
+    0x01A1,  // -> letter o with horn
+    0x0075,  // letter u
+    0x01B0,  // -> letter u with horn
+    0x00A0,  // no-break space
+    0x031B,  // -> combining horn
+    0x00D2,  // capital o with grave
+    0x1EDC,  // -> capital o with horn and grave
+    0x00D3,  // capital o with acute
+    0x1EDA,  // -> capital o with horn and acute
+    0x00D5,  // capital o with tilde
+    0x1EE0,  // -> capital o with horn and tilde
+    0x00D9,  // capital u with grave
+    0x1EEA,  // -> capital u with horn and grave
+    0x00DA,  // capital u with acute
+    0x1EE8,  // -> capital u with horn and acute
+    0x00F2,  // letter o with grave
+    0x1EDD,  // -> letter o with horn and grave
+    0x00F3,  // letter o with acute
+    0x1EDB,  // -> letter o with horn and acute
+    0x00F5,  // letter o with tilde
+    0x1EE1,  // -> letter o with horn and tilde
+    0x00F9,  // letter u with grave
+    0x1EEB,  // -> letter u with horn and grave
+    0x00FA,  // letter u with acute
+    0x1EE9,  // -> letter u with horn and acute
+    0x0168,  // capital u with tilde
+    0x1EEE,  // -> capital u with horn and tilde
+    0x0169,  // letter u with tilde
+    0x1EEF,  // -> letter u with horn and tilde
+    //   internal dead_key table
+    0x0005,          // number of entries
+    0x0300,  // combining grave accent
+    0x34E8,
+    0x0301,  // combining acute accent
+    0x34F4,
+    0x0303,  // combining tilde
+    0x3500,
+    0x0309,  // combining hook above
+    0x350C,
+    0x0323,  // combining dot below
+    0x3518,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x031B,  // combining horn
+    0x031B,  // -> combining horn
+
+    // offset 0x34E8:
+    //   prefix:
+    //     Dead<combining horn>
+    //     Dead<combining grave accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EDC,  // -> capital o with horn and grave
+    0x0055,  // capital u
+    0x1EEA,  // -> capital u with horn and grave
+    0x006F,  // letter o
+    0x1EDD,  // -> letter o with horn and grave
+    0x0075,  // letter u
+    0x1EEB,  // -> letter u with horn and grave
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x34F4:
+    //   prefix:
+    //     Dead<combining horn>
+    //     Dead<combining acute accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EDA,  // -> capital o with horn and acute
+    0x0055,  // capital u
+    0x1EE8,  // -> capital u with horn and acute
+    0x006F,  // letter o
+    0x1EDB,  // -> letter o with horn and acute
+    0x0075,  // letter u
+    0x1EE9,  // -> letter u with horn and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3500:
+    //   prefix:
+    //     Dead<combining horn>
+    //     Dead<combining tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EE0,  // -> capital o with horn and tilde
+    0x0055,  // capital u
+    0x1EEE,  // -> capital u with horn and tilde
+    0x006F,  // letter o
+    0x1EE1,  // -> letter o with horn and tilde
+    0x0075,  // letter u
+    0x1EEF,  // -> letter u with horn and tilde
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x350C:
+    //   prefix:
+    //     Dead<combining horn>
+    //     Dead<combining hook above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EDE,  // -> capital o with horn and hook above
+    0x0055,  // capital u
+    0x1EEC,  // -> capital u with horn and hook above
+    0x006F,  // letter o
+    0x1EDF,  // -> letter o with horn and hook above
+    0x0075,  // letter u
+    0x1EED,  // -> letter u with horn and hook above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3518:
+    //   prefix:
+    //     Dead<combining horn>
+    //     Dead<combining dot below>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EE2,  // -> capital o with horn and dot below
+    0x0055,  // capital u
+    0x1EF0,  // -> capital u with horn and dot below
+    0x006F,  // letter o
+    0x1EE3,  // -> letter o with horn and dot below
+    0x0075,  // letter u
+    0x1EF1,  // -> letter u with horn and dot below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3524:
+    //   prefix:
+    //     Dead<combining dot below>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0037,          // number of entries
+    0x0020,  // space
+    0x0323,  // -> combining dot below
+    0x002B,  // plus sign
+    0x2A25,  // -> plus sign with dot below
+    0x002D,  // hyphen-minus
+    0x2A2A,  // -> minus sign with dot below
+    0x003D,  // equals sign
+    0x2A66,  // -> equals sign with dot below
+    0x0041,  // capital a
+    0x1EA0,  // -> capital a with dot below
+    0x0042,  // capital b
+    0x1E04,  // -> capital b with dot below
+    0x0044,  // capital d
+    0x1E0C,  // -> capital d with dot below
+    0x0045,  // capital e
+    0x1EB8,  // -> capital e with dot below
+    0x0048,  // capital h
+    0x1E24,  // -> capital h with dot below
+    0x0049,  // capital i
+    0x1ECA,  // -> capital i with dot below
+    0x004B,  // capital k
+    0x1E32,  // -> capital k with dot below
+    0x004C,  // capital l
+    0x1E36,  // -> capital l with dot below
+    0x004D,  // capital m
+    0x1E42,  // -> capital m with dot below
+    0x004E,  // capital n
+    0x1E46,  // -> capital n with dot below
+    0x004F,  // capital o
+    0x1ECC,  // -> capital o with dot below
+    0x0052,  // capital r
+    0x1E5A,  // -> capital r with dot below
+    0x0053,  // capital s
+    0x1E62,  // -> capital s with dot below
+    0x0054,  // capital t
+    0x1E6C,  // -> capital t with dot below
+    0x0055,  // capital u
+    0x1EE4,  // -> capital u with dot below
+    0x0056,  // capital v
+    0x1E7E,  // -> capital v with dot below
+    0x0057,  // capital w
+    0x1E88,  // -> capital w with dot below
+    0x0059,  // capital y
+    0x1EF4,  // -> capital y with dot below
+    0x005A,  // capital z
+    0x1E92,  // -> capital z with dot below
+    0x0061,  // letter a
+    0x1EA1,  // -> letter a with dot below
+    0x0062,  // letter b
+    0x1E05,  // -> letter b with dot below
+    0x0064,  // letter d
+    0x1E0D,  // -> letter d with dot below
+    0x0065,  // letter e
+    0x1EB9,  // -> letter e with dot below
+    0x0068,  // letter h
+    0x1E25,  // -> letter h with dot below
+    0x0069,  // letter i
+    0x1ECB,  // -> letter i with dot below
+    0x006B,  // letter k
+    0x1E33,  // -> letter k with dot below
+    0x006C,  // letter l
+    0x1E37,  // -> letter l with dot below
+    0x006D,  // letter m
+    0x1E43,  // -> letter m with dot below
+    0x006E,  // letter n
+    0x1E47,  // -> letter n with dot below
+    0x006F,  // letter o
+    0x1ECD,  // -> letter o with dot below
+    0x0072,  // letter r
+    0x1E5B,  // -> letter r with dot below
+    0x0073,  // letter s
+    0x1E63,  // -> letter s with dot below
+    0x0074,  // letter t
+    0x1E6D,  // -> letter t with dot below
+    0x0075,  // letter u
+    0x1EE5,  // -> letter u with dot below
+    0x0076,  // letter v
+    0x1E7F,  // -> letter v with dot below
+    0x0077,  // letter w
+    0x1E89,  // -> letter w with dot below
+    0x0079,  // letter y
+    0x1EF5,  // -> letter y with dot below
+    0x007A,  // letter z
+    0x1E93,  // -> letter z with dot below
+    0x00A0,  // no-break space
+    0x0323,  // -> combining dot below
+    0x00C2,  // capital a with circumflex
+    0x1EAC,  // -> capital a with circumflex and dot below
+    0x00CA,  // capital e with circumflex
+    0x1EC6,  // -> capital e with circumflex and dot below
+    0x00D4,  // capital o with circumflex
+    0x1ED8,  // -> capital o with circumflex and dot below
+    0x00E2,  // letter a with circumflex
+    0x1EAD,  // -> letter a with circumflex and dot below
+    0x00EA,  // letter e with circumflex
+    0x1EC7,  // -> letter e with circumflex and dot below
+    0x00F4,  // letter o with circumflex
+    0x1ED9,  // -> letter o with circumflex and dot below
+    0x0102,  // capital a with breve
+    0x1EB6,  // -> capital a with breve and dot below
+    0x0103,  // letter a with breve
+    0x1EB7,  // -> letter a with breve and dot below
+    0x0104,  // capital a with ogonek
+    0x1EE3,  // -> letter o with horn and dot below
+    0x017B,  // capital z with dot above
+    0x1EF0,  // -> capital u with horn and dot below
+    0x01A0,  // capital o with horn
+    0x1EE2,  // -> capital o with horn and dot below
+    0x01B0,  // letter u with horn
+    0x1EF1,  // -> letter u with horn and dot below
+    //   internal dead_key table
+    0x0006,          // number of entries
+    0x0000,  // U+0000
+    0x35A4,
+    0x0302,  // combining circumflex accent
+    0x35B6,
+    0x0304,  // combining macron
+    0x35C6,
+    0x0306,  // combining breve
+    0x35D2,
+    0x0307,  // combining dot above
+    0x35DA,
+    0x031B,  // combining horn
+    0x35E2,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x0323,  // combining dot below
+    0x0323,  // -> combining dot below
+
+    // offset 0x35A4:
+    //   prefix:
+    //     Dead<combining dot below>
+    //     Compose
+    //   internal character table
+    0x0001,          // number of entries
+    0x002B,  // plus sign
+    0x35AA,
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x35AA:
+    //   prefix:
+    //     Dead<combining dot below>
+    //     Compose
+    //     <plus sign>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EE2,  // -> capital o with horn and dot below
+    0x0055,  // capital u
+    0x1EF0,  // -> capital u with horn and dot below
+    0x006F,  // letter o
+    0x1EE3,  // -> letter o with horn and dot below
+    0x0075,  // letter u
+    0x1EF1,  // -> letter u with horn and dot below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x35B6:
+    //   prefix:
+    //     Dead<combining dot below>
+    //     Dead<combining circumflex accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0041,  // capital a
+    0x1EAC,  // -> capital a with circumflex and dot below
+    0x0045,  // capital e
+    0x1EC6,  // -> capital e with circumflex and dot below
+    0x004F,  // capital o
+    0x1ED8,  // -> capital o with circumflex and dot below
+    0x0061,  // letter a
+    0x1EAD,  // -> letter a with circumflex and dot below
+    0x0065,  // letter e
+    0x1EC7,  // -> letter e with circumflex and dot below
+    0x006F,  // letter o
+    0x1ED9,  // -> letter o with circumflex and dot below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x35C6:
+    //   prefix:
+    //     Dead<combining dot below>
+    //     Dead<combining macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004C,  // capital l
+    0x1E38,  // -> capital l with dot below and macron
+    0x0052,  // capital r
+    0x1E5C,  // -> capital r with dot below and macron
+    0x006C,  // letter l
+    0x1E39,  // -> letter l with dot below and macron
+    0x0072,  // letter r
+    0x1E5D,  // -> letter r with dot below and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x35D2:
+    //   prefix:
+    //     Dead<combining dot below>
+    //     Dead<combining breve>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0041,  // capital a
+    0x1EB6,  // -> capital a with breve and dot below
+    0x0061,  // letter a
+    0x1EB7,  // -> letter a with breve and dot below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x35DA:
+    //   prefix:
+    //     Dead<combining dot below>
+    //     Dead<combining dot above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0053,  // capital s
+    0x1E68,  // -> capital s with dot below and dot above
+    0x0073,  // letter s
+    0x1E69,  // -> letter s with dot below and dot above
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x35E2:
+    //   prefix:
+    //     Dead<combining dot below>
+    //     Dead<combining horn>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0004,          // number of entries
+    0x004F,  // capital o
+    0x1EE2,  // -> capital o with horn and dot below
+    0x0055,  // capital u
+    0x1EF0,  // -> capital u with horn and dot below
+    0x006F,  // letter o
+    0x1EE3,  // -> letter o with horn and dot below
+    0x0075,  // letter u
+    0x1EF1,  // -> letter u with horn and dot below
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x35EE:
+    //   prefix:
+    //     Dead<combining cedilla>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x001D,          // number of entries
+    0x0020,  // space
+    0x00B8,  // -> cedilla
+    0x0043,  // capital c
+    0x00C7,  // -> capital c with cedilla
+    0x0044,  // capital d
+    0x1E10,  // -> capital d with cedilla
+    0x0045,  // capital e
+    0x0228,  // -> capital e with cedilla
+    0x0047,  // capital g
+    0x0122,  // -> capital g with cedilla
+    0x0048,  // capital h
+    0x1E28,  // -> capital h with cedilla
+    0x004B,  // capital k
+    0x0136,  // -> capital k with cedilla
+    0x004C,  // capital l
+    0x013B,  // -> capital l with cedilla
+    0x004E,  // capital n
+    0x0145,  // -> capital n with cedilla
+    0x0052,  // capital r
+    0x0156,  // -> capital r with cedilla
+    0x0053,  // capital s
+    0x015E,  // -> capital s with cedilla
+    0x0054,  // capital t
+    0x0162,  // -> capital t with cedilla
+    0x0063,  // letter c
+    0x00E7,  // -> letter c with cedilla
+    0x0064,  // letter d
+    0x1E11,  // -> letter d with cedilla
+    0x0065,  // letter e
+    0x0229,  // -> letter e with cedilla
+    0x0067,  // letter g
+    0x0123,  // -> letter g with cedilla
+    0x0068,  // letter h
+    0x1E29,  // -> letter h with cedilla
+    0x006B,  // letter k
+    0x0137,  // -> letter k with cedilla
+    0x006C,  // letter l
+    0x013C,  // -> letter l with cedilla
+    0x006E,  // letter n
+    0x0146,  // -> letter n with cedilla
+    0x0072,  // letter r
+    0x0157,  // -> letter r with cedilla
+    0x0073,  // letter s
+    0x015F,  // -> letter s with cedilla
+    0x0074,  // letter t
+    0x0163,  // -> letter t with cedilla
+    0x00A0,  // no-break space
+    0x0327,  // -> combining cedilla
+    0x00A2,  // cent sign
+    0x20B5,  // -> cedi sign
+    0x0106,  // capital c with acute
+    0x1E08,  // -> capital c with cedilla and acute
+    0x0107,  // letter c with acute
+    0x1E09,  // -> letter c with cedilla and acute
+    0x0114,  // capital e with breve
+    0x1E1C,  // -> capital e with cedilla and breve
+    0x0115,  // letter e with breve
+    0x1E1D,  // -> letter e with cedilla and breve
+    //   internal dead_key table
+    0x0002,          // number of entries
+    0x0301,  // combining acute accent
+    0x3632,
+    0x0306,  // combining breve
+    0x363A,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x0327,  // combining cedilla
+    0x00B8,  // -> cedilla
+
+    // offset 0x3632:
+    //   prefix:
+    //     Dead<combining cedilla>
+    //     Dead<combining acute accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0043,  // capital c
+    0x1E08,  // -> capital c with cedilla and acute
+    0x0063,  // letter c
+    0x1E09,  // -> letter c with cedilla and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x363A:
+    //   prefix:
+    //     Dead<combining cedilla>
+    //     Dead<combining breve>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x0045,  // capital e
+    0x1E1C,  // -> capital e with cedilla and breve
+    0x0065,  // letter e
+    0x1E1D,  // -> letter e with cedilla and breve
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3642:
+    //   prefix:
+    //     Dead<combining ogonek>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000E,          // number of entries
+    0x0020,  // space
+    0x02DB,  // -> ogonek
+    0x0041,  // capital a
+    0x0104,  // -> capital a with ogonek
+    0x0045,  // capital e
+    0x0118,  // -> capital e with ogonek
+    0x0049,  // capital i
+    0x012E,  // -> capital i with ogonek
+    0x004F,  // capital o
+    0x01EA,  // -> capital o with ogonek
+    0x0055,  // capital u
+    0x0172,  // -> capital u with ogonek
+    0x0061,  // letter a
+    0x0105,  // -> letter a with ogonek
+    0x0065,  // letter e
+    0x0119,  // -> letter e with ogonek
+    0x0069,  // letter i
+    0x012F,  // -> letter i with ogonek
+    0x006F,  // letter o
+    0x01EB,  // -> letter o with ogonek
+    0x0075,  // letter u
+    0x0173,  // -> letter u with ogonek
+    0x00A0,  // no-break space
+    0x0328,  // -> combining ogonek
+    0x014C,  // capital o with macron
+    0x01EC,  // -> capital o with ogonek and macron
+    0x014D,  // letter o with macron
+    0x01ED,  // -> letter o with ogonek and macron
+    //   internal dead_key table
+    0x0001,          // number of entries
+    0x0304,  // combining macron
+    0x3666,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x0328,  // combining ogonek
+    0x02DB,  // -> ogonek
+
+    // offset 0x3666:
+    //   prefix:
+    //     Dead<combining ogonek>
+    //     Dead<combining macron>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x01EC,  // -> capital o with ogonek and macron
+    0x006F,  // letter o
+    0x01ED,  // -> letter o with ogonek and macron
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x366E:
+    //   prefix:
+    //     Dead<combining long solidus overlay>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x002E,          // number of entries
+    0x0020,  // space
+    0x002F,  // -> solidus
+    0x0032,  // digit two
+    0x01BB,  // -> letter two with stroke
+    0x003C,  // less-than sign
+    0x226E,  // -> not less-than
+    0x003D,  // equals sign
+    0x2260,  // -> not equal to
+    0x003E,  // greater-than sign
+    0x226F,  // -> not greater-than
+    0x0041,  // capital a
+    0x023A,  // -> capital a with stroke
+    0x0042,  // capital b
+    0x0243,  // -> capital b with stroke
+    0x0043,  // capital c
+    0x023B,  // -> capital c with stroke
+    0x0044,  // capital d
+    0x0110,  // -> capital d with stroke
+    0x0045,  // capital e
+    0x0246,  // -> capital e with stroke
+    0x0047,  // capital g
+    0x01E4,  // -> capital g with stroke
+    0x0048,  // capital h
+    0x0126,  // -> capital h with stroke
+    0x0049,  // capital i
+    0x0197,  // -> capital i with stroke
+    0x004A,  // capital j
+    0x0248,  // -> capital j with stroke
+    0x004C,  // capital l
+    0x0141,  // -> capital l with stroke
+    0x004F,  // capital o
+    0x00D8,  // -> capital o with stroke
+    0x0050,  // capital p
+    0x2C63,  // -> capital p with stroke
+    0x0052,  // capital r
+    0x024C,  // -> capital r with stroke
+    0x0054,  // capital t
+    0x0166,  // -> capital t with stroke
+    0x0055,  // capital u
+    0x0244,  // -> capital u bar
+    0x0059,  // capital y
+    0x024E,  // -> capital y with stroke
+    0x005A,  // capital z
+    0x01B5,  // -> capital z with stroke
+    0x0061,  // letter a
+    0x2C65,  // -> letter a with stroke
+    0x0062,  // letter b
+    0x0180,  // -> letter b with stroke
+    0x0063,  // letter c
+    0x023C,  // -> letter c with stroke
+    0x0064,  // letter d
+    0x0111,  // -> letter d with stroke
+    0x0065,  // letter e
+    0x0247,  // -> letter e with stroke
+    0x0067,  // letter g
+    0x01E5,  // -> letter g with stroke
+    0x0068,  // letter h
+    0x0127,  // -> letter h with stroke
+    0x0069,  // letter i
+    0x0268,  // -> letter i with stroke
+    0x006A,  // letter j
+    0x0249,  // -> letter j with stroke
+    0x006C,  // letter l
+    0x0142,  // -> letter l with stroke
+    0x006F,  // letter o
+    0x00F8,  // -> letter o with stroke
+    0x0070,  // letter p
+    0x1D7D,  // -> letter p with stroke
+    0x0072,  // letter r
+    0x024D,  // -> letter r with stroke
+    0x0074,  // letter t
+    0x0167,  // -> letter t with stroke
+    0x0075,  // letter u
+    0x0289,  // -> letter u bar
+    0x0079,  // letter y
+    0x024F,  // -> letter y with stroke
+    0x007A,  // letter z
+    0x01B6,  // -> letter z with stroke
+    0x00A0,  // no-break space
+    0x0338,  // -> combining long solidus overlay
+    0x00D3,  // capital o with acute
+    0x01FE,  // -> capital o with stroke and acute
+    0x00F3,  // letter o with acute
+    0x01FF,  // -> letter o with stroke and acute
+    0x0237,  // letter dotless j
+    0x025F,  // -> letter dotless j with stroke
+    0x0269,  // letter iota
+    0x1D7C,  // -> letter iota with stroke
+    0x2264,  // less-than or equal to
+    0x2270,  // -> neither less-than nor equal to
+    0x2265,  // greater-than or equal to
+    0x2271,  // -> neither greater-than nor equal to
+    //   internal dead_key table
+    0x0002,          // number of entries
+    0x0301,  // combining acute accent
+    0x36D4,
+    0x0307,  // combining dot above
+    0x36DC,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x0338,  // combining long solidus overlay
+    0x002F,  // -> solidus
+
+    // offset 0x36D4:
+    //   prefix:
+    //     Dead<combining long solidus overlay>
+    //     Dead<combining acute accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0002,          // number of entries
+    0x004F,  // capital o
+    0x01FE,  // -> capital o with stroke and acute
+    0x006F,  // letter o
+    0x01FF,  // -> letter o with stroke and acute
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x36DC:
+    //   prefix:
+    //     Dead<combining long solidus overlay>
+    //     Dead<combining dot above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0001,          // number of entries
+    0x006A,  // letter j
+    0x025F,  // -> letter dotless j with stroke
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x36E2:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0040,          // number of entries
+    0x0020,  // space
+    0x037A,  // -> ypogegrammeni
+    0x0391,  // capital alpha
+    0x1FBC,  // -> capital alpha with prosgegrammeni
+    0x0397,  // capital eta
+    0x1FCC,  // -> capital eta with prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FFC,  // -> capital omega with prosgegrammeni
+    0x03AC,  // letter alpha with tonos
+    0x1FB4,  // -> letter alpha with oxia and ypogegrammeni
+    0x03AE,  // letter eta with tonos
+    0x1FC4,  // -> letter eta with oxia and ypogegrammeni
+    0x03B1,  // letter alpha
+    0x1FB3,  // -> letter alpha with ypogegrammeni
+    0x03B7,  // letter eta
+    0x1FC3,  // -> letter eta with ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FF3,  // -> letter omega with ypogegrammeni
+    0x03CE,  // letter omega with tonos
+    0x1FF4,  // -> letter omega with oxia and ypogegrammeni
+    0x1F00,  // letter alpha with psili
+    0x1F80,  // -> letter alpha with psili and ypogegrammeni
+    0x1F01,  // letter alpha with dasia
+    0x1F81,  // -> letter alpha with dasia and ypogegrammeni
+    0x1F02,  // letter alpha with psili and varia
+    0x1F82,  // -> letter alpha with psili and varia and ypogegrammeni
+    0x1F03,  // letter alpha with dasia and varia
+    0x1F83,  // -> letter alpha with dasia and varia and ypogegrammeni
+    0x1F04,  // letter alpha with psili and oxia
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x1F05,  // letter alpha with dasia and oxia
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x1F06,  // letter alpha with psili and perispomeni
+    0x1F86,  // -> letter alpha with psili and perispomeni and ypogegrammeni
+    0x1F07,  // letter alpha with dasia and perispomeni
+    0x1F87,  // -> letter alpha with dasia and perispomeni and ypogegrammeni
+    0x1F08,  // capital alpha with psili
+    0x1F88,  // -> capital alpha with psili and prosgegrammeni
+    0x1F09,  // capital alpha with dasia
+    0x1F89,  // -> capital alpha with dasia and prosgegrammeni
+    0x1F0A,  // capital alpha with psili and varia
+    0x1F8A,  // -> capital alpha with psili and varia and prosgegrammeni
+    0x1F0B,  // capital alpha with dasia and varia
+    0x1F8B,  // -> capital alpha with dasia and varia and prosgegrammeni
+    0x1F0C,  // capital alpha with psili and oxia
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x1F0D,  // capital alpha with dasia and oxia
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x1F0E,  // capital alpha with psili and perispomeni
+    0x1F8E,  // -> capital alpha with psili and perispomeni and prosgegrammeni
+    0x1F0F,  // capital alpha with dasia and perispomeni
+    0x1F8F,  // -> capital alpha with dasia and perispomeni and prosgegrammeni
+    0x1F20,  // letter eta with psili
+    0x1F90,  // -> letter eta with psili and ypogegrammeni
+    0x1F21,  // letter eta with dasia
+    0x1F91,  // -> letter eta with dasia and ypogegrammeni
+    0x1F22,  // letter eta with psili and varia
+    0x1F92,  // -> letter eta with psili and varia and ypogegrammeni
+    0x1F23,  // letter eta with dasia and varia
+    0x1F93,  // -> letter eta with dasia and varia and ypogegrammeni
+    0x1F24,  // letter eta with psili and oxia
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x1F25,  // letter eta with dasia and oxia
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x1F26,  // letter eta with psili and perispomeni
+    0x1F96,  // -> letter eta with psili and perispomeni and ypogegrammeni
+    0x1F27,  // letter eta with dasia and perispomeni
+    0x1F97,  // -> letter eta with dasia and perispomeni and ypogegrammeni
+    0x1F28,  // capital eta with psili
+    0x1F98,  // -> capital eta with psili and prosgegrammeni
+    0x1F29,  // capital eta with dasia
+    0x1F99,  // -> capital eta with dasia and prosgegrammeni
+    0x1F2A,  // capital eta with psili and varia
+    0x1F9A,  // -> capital eta with psili and varia and prosgegrammeni
+    0x1F2B,  // capital eta with dasia and varia
+    0x1F9B,  // -> capital eta with dasia and varia and prosgegrammeni
+    0x1F2C,  // capital eta with psili and oxia
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x1F2D,  // capital eta with dasia and oxia
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x1F2E,  // capital eta with psili and perispomeni
+    0x1F9E,  // -> capital eta with psili and perispomeni and prosgegrammeni
+    0x1F2F,  // capital eta with dasia and perispomeni
+    0x1F9F,  // -> capital eta with dasia and perispomeni and prosgegrammeni
+    0x1F60,  // letter omega with psili
+    0x1FA0,  // -> letter omega with psili and ypogegrammeni
+    0x1F61,  // letter omega with dasia
+    0x1FA1,  // -> letter omega with dasia and ypogegrammeni
+    0x1F62,  // letter omega with psili and varia
+    0x1FA2,  // -> letter omega with psili and varia and ypogegrammeni
+    0x1F63,  // letter omega with dasia and varia
+    0x1FA3,  // -> letter omega with dasia and varia and ypogegrammeni
+    0x1F64,  // letter omega with psili and oxia
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    0x1F65,  // letter omega with dasia and oxia
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    0x1F66,  // letter omega with psili and perispomeni
+    0x1FA6,  // -> letter omega with psili and perispomeni and ypogegrammeni
+    0x1F67,  // letter omega with dasia and perispomeni
+    0x1FA7,  // -> letter omega with dasia and perispomeni and ypogegrammeni
+    0x1F68,  // capital omega with psili
+    0x1FA8,  // -> capital omega with psili and prosgegrammeni
+    0x1F69,  // capital omega with dasia
+    0x1FA9,  // -> capital omega with dasia and prosgegrammeni
+    0x1F6A,  // capital omega with psili and varia
+    0x1FAA,  // -> capital omega with psili and varia and prosgegrammeni
+    0x1F6B,  // capital omega with dasia and varia
+    0x1FAB,  // -> capital omega with dasia and varia and prosgegrammeni
+    0x1F6C,  // capital omega with psili and oxia
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x1F6D,  // capital omega with dasia and oxia
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    0x1F6E,  // capital omega with psili and perispomeni
+    0x1FAE,  // -> capital omega with psili and perispomeni and prosgegrammeni
+    0x1F6F,  // capital omega with dasia and perispomeni
+    0x1FAF,  // -> capital omega with dasia and perispomeni and prosgegrammeni
+    0x1F70,  // letter alpha with varia
+    0x1FB2,  // -> letter alpha with varia and ypogegrammeni
+    0x1F74,  // letter eta with varia
+    0x1FC2,  // -> letter eta with varia and ypogegrammeni
+    0x1F7C,  // letter omega with varia
+    0x1FF2,  // -> letter omega with varia and ypogegrammeni
+    0x1FB6,  // letter alpha with perispomeni
+    0x1FB7,  // -> letter alpha with perispomeni and ypogegrammeni
+    0x1FC6,  // letter eta with perispomeni
+    0x1FC7,  // -> letter eta with perispomeni and ypogegrammeni
+    0x1FF6,  // letter omega with perispomeni
+    0x1FF7,  // -> letter omega with perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0006,          // number of entries
+    0x0000,  // U+0000
+    0x3774,
+    0x0300,  // combining grave accent
+    0x394C,
+    0x0301,  // combining acute accent
+    0x39BC,
+    0x0303,  // combining tilde
+    0x3A2C,
+    0x0313,  // combining comma above
+    0x3A9C,
+    0x0314,  // combining reversed comma above
+    0x3AAC,
+    //   leaf dead_key table
+    0x0001,          // number of entries
+    0x0345,  // combining greek ypogegrammeni
+    0x037A,  // -> ypogegrammeni
+
+    // offset 0x3774:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //   internal character table
+    0x0006,          // number of entries
+    0x0027,  // apostrophe
+    0x3784,
+    0x0028,  // left parenthesis
+    0x37EE,
+    0x0029,  // right parenthesis
+    0x37FE,
+    0x0060,  // grave accent
+    0x380E,
+    0x007E,  // tilde
+    0x3878,
+    0x00B4,  // acute accent
+    0x38E2,
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3784:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <apostrophe>
+    //   internal character table
+    0x0002,          // number of entries
+    0x0028,  // left parenthesis
+    0x37AE,
+    0x0029,  // right parenthesis
+    0x37BE,
+    //   leaf character table
+    0x000F,          // number of entries
+    0x03B1,  // letter alpha
+    0x1FB4,  // -> letter alpha with oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1FC4,  // -> letter eta with oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FF4,  // -> letter omega with oxia and ypogegrammeni
+    0x1F00,  // letter alpha with psili
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x1F01,  // letter alpha with dasia
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x1F08,  // capital alpha with psili
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x1F09,  // capital alpha with dasia
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x1F20,  // letter eta with psili
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x1F21,  // letter eta with dasia
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x1F28,  // capital eta with psili
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x1F29,  // capital eta with dasia
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x1F60,  // letter omega with psili
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    0x1F61,  // letter omega with dasia
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    0x1F68,  // capital omega with psili
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x1F69,  // capital omega with dasia
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    //   internal dead_key table
+    0x0002,          // number of entries
+    0x0313,  // combining comma above
+    0x37CE,
+    0x0314,  // combining reversed comma above
+    0x37DE,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x37AE:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <apostrophe>
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x37BE:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <apostrophe>
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x37CE:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <apostrophe>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x37DE:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <apostrophe>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x37EE:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F89,  // -> capital alpha with dasia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F99,  // -> capital eta with dasia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FA9,  // -> capital omega with dasia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F81,  // -> letter alpha with dasia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F91,  // -> letter eta with dasia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA1,  // -> letter omega with dasia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x37FE:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F88,  // -> capital alpha with psili and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F98,  // -> capital eta with psili and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FA8,  // -> capital omega with psili and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F80,  // -> letter alpha with psili and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F90,  // -> letter eta with psili and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA0,  // -> letter omega with psili and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x380E:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <grave accent>
+    //   internal character table
+    0x0002,          // number of entries
+    0x0028,  // left parenthesis
+    0x3838,
+    0x0029,  // right parenthesis
+    0x3848,
+    //   leaf character table
+    0x000F,          // number of entries
+    0x03B1,  // letter alpha
+    0x1FB2,  // -> letter alpha with varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1FC2,  // -> letter eta with varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FF2,  // -> letter omega with varia and ypogegrammeni
+    0x1F00,  // letter alpha with psili
+    0x1F82,  // -> letter alpha with psili and varia and ypogegrammeni
+    0x1F01,  // letter alpha with dasia
+    0x1F83,  // -> letter alpha with dasia and varia and ypogegrammeni
+    0x1F08,  // capital alpha with psili
+    0x1F8A,  // -> capital alpha with psili and varia and prosgegrammeni
+    0x1F09,  // capital alpha with dasia
+    0x1F8B,  // -> capital alpha with dasia and varia and prosgegrammeni
+    0x1F20,  // letter eta with psili
+    0x1F92,  // -> letter eta with psili and varia and ypogegrammeni
+    0x1F21,  // letter eta with dasia
+    0x1F93,  // -> letter eta with dasia and varia and ypogegrammeni
+    0x1F28,  // capital eta with psili
+    0x1F9A,  // -> capital eta with psili and varia and prosgegrammeni
+    0x1F29,  // capital eta with dasia
+    0x1F9B,  // -> capital eta with dasia and varia and prosgegrammeni
+    0x1F60,  // letter omega with psili
+    0x1FA2,  // -> letter omega with psili and varia and ypogegrammeni
+    0x1F61,  // letter omega with dasia
+    0x1FA3,  // -> letter omega with dasia and varia and ypogegrammeni
+    0x1F68,  // capital omega with psili
+    0x1FAA,  // -> capital omega with psili and varia and prosgegrammeni
+    0x1F69,  // capital omega with dasia
+    0x1FAB,  // -> capital omega with dasia and varia and prosgegrammeni
+    //   internal dead_key table
+    0x0002,          // number of entries
+    0x0313,  // combining comma above
+    0x3858,
+    0x0314,  // combining reversed comma above
+    0x3868,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3838:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <grave accent>
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8B,  // -> capital alpha with dasia and varia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9B,  // -> capital eta with dasia and varia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAB,  // -> capital omega with dasia and varia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F83,  // -> letter alpha with dasia and varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F93,  // -> letter eta with dasia and varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA3,  // -> letter omega with dasia and varia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3848:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <grave accent>
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8A,  // -> capital alpha with psili and varia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9A,  // -> capital eta with psili and varia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAA,  // -> capital omega with psili and varia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F82,  // -> letter alpha with psili and varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F92,  // -> letter eta with psili and varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA2,  // -> letter omega with psili and varia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3858:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <grave accent>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8A,  // -> capital alpha with psili and varia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9A,  // -> capital eta with psili and varia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAA,  // -> capital omega with psili and varia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F82,  // -> letter alpha with psili and varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F92,  // -> letter eta with psili and varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA2,  // -> letter omega with psili and varia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3868:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <grave accent>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8B,  // -> capital alpha with dasia and varia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9B,  // -> capital eta with dasia and varia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAB,  // -> capital omega with dasia and varia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F83,  // -> letter alpha with dasia and varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F93,  // -> letter eta with dasia and varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA3,  // -> letter omega with dasia and varia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3878:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <tilde>
+    //   internal character table
+    0x0002,          // number of entries
+    0x0028,  // left parenthesis
+    0x38A2,
+    0x0029,  // right parenthesis
+    0x38B2,
+    //   leaf character table
+    0x000F,          // number of entries
+    0x03B1,  // letter alpha
+    0x1FB7,  // -> letter alpha with perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1FC7,  // -> letter eta with perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FF7,  // -> letter omega with perispomeni and ypogegrammeni
+    0x1F00,  // letter alpha with psili
+    0x1F86,  // -> letter alpha with psili and perispomeni and ypogegrammeni
+    0x1F01,  // letter alpha with dasia
+    0x1F87,  // -> letter alpha with dasia and perispomeni and ypogegrammeni
+    0x1F08,  // capital alpha with psili
+    0x1F8E,  // -> capital alpha with psili and perispomeni and prosgegrammeni
+    0x1F09,  // capital alpha with dasia
+    0x1F8F,  // -> capital alpha with dasia and perispomeni and prosgegrammeni
+    0x1F20,  // letter eta with psili
+    0x1F96,  // -> letter eta with psili and perispomeni and ypogegrammeni
+    0x1F21,  // letter eta with dasia
+    0x1F97,  // -> letter eta with dasia and perispomeni and ypogegrammeni
+    0x1F28,  // capital eta with psili
+    0x1F9E,  // -> capital eta with psili and perispomeni and prosgegrammeni
+    0x1F29,  // capital eta with dasia
+    0x1F9F,  // -> capital eta with dasia and perispomeni and prosgegrammeni
+    0x1F60,  // letter omega with psili
+    0x1FA6,  // -> letter omega with psili and perispomeni and ypogegrammeni
+    0x1F61,  // letter omega with dasia
+    0x1FA7,  // -> letter omega with dasia and perispomeni and ypogegrammeni
+    0x1F68,  // capital omega with psili
+    0x1FAE,  // -> capital omega with psili and perispomeni and prosgegrammeni
+    0x1F69,  // capital omega with dasia
+    0x1FAF,  // -> capital omega with dasia and perispomeni and prosgegrammeni
+    //   internal dead_key table
+    0x0002,          // number of entries
+    0x0313,  // combining comma above
+    0x38C2,
+    0x0314,  // combining reversed comma above
+    0x38D2,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x38A2:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <tilde>
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8F,  // -> capital alpha with dasia and perispomeni and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9F,  // -> capital eta with dasia and perispomeni and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAF,  // -> capital omega with dasia and perispomeni and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F87,  // -> letter alpha with dasia and perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F97,  // -> letter eta with dasia and perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA7,  // -> letter omega with dasia and perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x38B2:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <tilde>
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8E,  // -> capital alpha with psili and perispomeni and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9E,  // -> capital eta with psili and perispomeni and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAE,  // -> capital omega with psili and perispomeni and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F86,  // -> letter alpha with psili and perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F96,  // -> letter eta with psili and perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA6,  // -> letter omega with psili and perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x38C2:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <tilde>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8E,  // -> capital alpha with psili and perispomeni and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9E,  // -> capital eta with psili and perispomeni and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAE,  // -> capital omega with psili and perispomeni and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F86,  // -> letter alpha with psili and perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F96,  // -> letter eta with psili and perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA6,  // -> letter omega with psili and perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x38D2:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <tilde>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8F,  // -> capital alpha with dasia and perispomeni and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9F,  // -> capital eta with dasia and perispomeni and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAF,  // -> capital omega with dasia and perispomeni and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F87,  // -> letter alpha with dasia and perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F97,  // -> letter eta with dasia and perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA7,  // -> letter omega with dasia and perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x38E2:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <acute accent>
+    //   internal character table
+    0x0002,          // number of entries
+    0x0028,  // left parenthesis
+    0x390C,
+    0x0029,  // right parenthesis
+    0x391C,
+    //   leaf character table
+    0x000F,          // number of entries
+    0x03B1,  // letter alpha
+    0x1FB4,  // -> letter alpha with oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1FC4,  // -> letter eta with oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FF4,  // -> letter omega with oxia and ypogegrammeni
+    0x1F00,  // letter alpha with psili
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x1F01,  // letter alpha with dasia
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x1F08,  // capital alpha with psili
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x1F09,  // capital alpha with dasia
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x1F20,  // letter eta with psili
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x1F21,  // letter eta with dasia
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x1F28,  // capital eta with psili
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x1F29,  // capital eta with dasia
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x1F60,  // letter omega with psili
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    0x1F61,  // letter omega with dasia
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    0x1F68,  // capital omega with psili
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x1F69,  // capital omega with dasia
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    //   internal dead_key table
+    0x0002,          // number of entries
+    0x0313,  // combining comma above
+    0x392C,
+    0x0314,  // combining reversed comma above
+    0x393C,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x390C:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <acute accent>
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x391C:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <acute accent>
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x392C:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <acute accent>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x393C:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Compose
+    //     <acute accent>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x394C:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining grave accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000F,          // number of entries
+    0x03B1,  // letter alpha
+    0x1FB2,  // -> letter alpha with varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1FC2,  // -> letter eta with varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FF2,  // -> letter omega with varia and ypogegrammeni
+    0x1F00,  // letter alpha with psili
+    0x1F82,  // -> letter alpha with psili and varia and ypogegrammeni
+    0x1F01,  // letter alpha with dasia
+    0x1F83,  // -> letter alpha with dasia and varia and ypogegrammeni
+    0x1F08,  // capital alpha with psili
+    0x1F8A,  // -> capital alpha with psili and varia and prosgegrammeni
+    0x1F09,  // capital alpha with dasia
+    0x1F8B,  // -> capital alpha with dasia and varia and prosgegrammeni
+    0x1F20,  // letter eta with psili
+    0x1F92,  // -> letter eta with psili and varia and ypogegrammeni
+    0x1F21,  // letter eta with dasia
+    0x1F93,  // -> letter eta with dasia and varia and ypogegrammeni
+    0x1F28,  // capital eta with psili
+    0x1F9A,  // -> capital eta with psili and varia and prosgegrammeni
+    0x1F29,  // capital eta with dasia
+    0x1F9B,  // -> capital eta with dasia and varia and prosgegrammeni
+    0x1F60,  // letter omega with psili
+    0x1FA2,  // -> letter omega with psili and varia and ypogegrammeni
+    0x1F61,  // letter omega with dasia
+    0x1FA3,  // -> letter omega with dasia and varia and ypogegrammeni
+    0x1F68,  // capital omega with psili
+    0x1FAA,  // -> capital omega with psili and varia and prosgegrammeni
+    0x1F69,  // capital omega with dasia
+    0x1FAB,  // -> capital omega with dasia and varia and prosgegrammeni
+    //   internal dead_key table
+    0x0003,          // number of entries
+    0x0000,  // U+0000
+    0x3974,
+    0x0313,  // combining comma above
+    0x399C,
+    0x0314,  // combining reversed comma above
+    0x39AC,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3974:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining grave accent>
+    //     Compose
+    //   internal character table
+    0x0002,          // number of entries
+    0x0028,  // left parenthesis
+    0x397C,
+    0x0029,  // right parenthesis
+    0x398C,
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x397C:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining grave accent>
+    //     Compose
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8B,  // -> capital alpha with dasia and varia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9B,  // -> capital eta with dasia and varia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAB,  // -> capital omega with dasia and varia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F83,  // -> letter alpha with dasia and varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F93,  // -> letter eta with dasia and varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA3,  // -> letter omega with dasia and varia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x398C:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining grave accent>
+    //     Compose
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8A,  // -> capital alpha with psili and varia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9A,  // -> capital eta with psili and varia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAA,  // -> capital omega with psili and varia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F82,  // -> letter alpha with psili and varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F92,  // -> letter eta with psili and varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA2,  // -> letter omega with psili and varia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x399C:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining grave accent>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8A,  // -> capital alpha with psili and varia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9A,  // -> capital eta with psili and varia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAA,  // -> capital omega with psili and varia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F82,  // -> letter alpha with psili and varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F92,  // -> letter eta with psili and varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA2,  // -> letter omega with psili and varia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x39AC:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining grave accent>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8B,  // -> capital alpha with dasia and varia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9B,  // -> capital eta with dasia and varia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAB,  // -> capital omega with dasia and varia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F83,  // -> letter alpha with dasia and varia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F93,  // -> letter eta with dasia and varia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA3,  // -> letter omega with dasia and varia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x39BC:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining acute accent>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000F,          // number of entries
+    0x03B1,  // letter alpha
+    0x1FB4,  // -> letter alpha with oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1FC4,  // -> letter eta with oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FF4,  // -> letter omega with oxia and ypogegrammeni
+    0x1F00,  // letter alpha with psili
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x1F01,  // letter alpha with dasia
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x1F08,  // capital alpha with psili
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x1F09,  // capital alpha with dasia
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x1F20,  // letter eta with psili
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x1F21,  // letter eta with dasia
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x1F28,  // capital eta with psili
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x1F29,  // capital eta with dasia
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x1F60,  // letter omega with psili
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    0x1F61,  // letter omega with dasia
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    0x1F68,  // capital omega with psili
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x1F69,  // capital omega with dasia
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    //   internal dead_key table
+    0x0003,          // number of entries
+    0x0000,  // U+0000
+    0x39E4,
+    0x0313,  // combining comma above
+    0x3A0C,
+    0x0314,  // combining reversed comma above
+    0x3A1C,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x39E4:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining acute accent>
+    //     Compose
+    //   internal character table
+    0x0002,          // number of entries
+    0x0028,  // left parenthesis
+    0x39EC,
+    0x0029,  // right parenthesis
+    0x39FC,
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x39EC:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining acute accent>
+    //     Compose
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x39FC:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining acute accent>
+    //     Compose
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3A0C:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining acute accent>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8C,  // -> capital alpha with psili and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9C,  // -> capital eta with psili and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAC,  // -> capital omega with psili and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F84,  // -> letter alpha with psili and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F94,  // -> letter eta with psili and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA4,  // -> letter omega with psili and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3A1C:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining acute accent>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8D,  // -> capital alpha with dasia and oxia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9D,  // -> capital eta with dasia and oxia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAD,  // -> capital omega with dasia and oxia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F85,  // -> letter alpha with dasia and oxia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F95,  // -> letter eta with dasia and oxia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA5,  // -> letter omega with dasia and oxia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3A2C:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining tilde>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000F,          // number of entries
+    0x03B1,  // letter alpha
+    0x1FB7,  // -> letter alpha with perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1FC7,  // -> letter eta with perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FF7,  // -> letter omega with perispomeni and ypogegrammeni
+    0x1F00,  // letter alpha with psili
+    0x1F86,  // -> letter alpha with psili and perispomeni and ypogegrammeni
+    0x1F01,  // letter alpha with dasia
+    0x1F87,  // -> letter alpha with dasia and perispomeni and ypogegrammeni
+    0x1F08,  // capital alpha with psili
+    0x1F8E,  // -> capital alpha with psili and perispomeni and prosgegrammeni
+    0x1F09,  // capital alpha with dasia
+    0x1F8F,  // -> capital alpha with dasia and perispomeni and prosgegrammeni
+    0x1F20,  // letter eta with psili
+    0x1F96,  // -> letter eta with psili and perispomeni and ypogegrammeni
+    0x1F21,  // letter eta with dasia
+    0x1F97,  // -> letter eta with dasia and perispomeni and ypogegrammeni
+    0x1F28,  // capital eta with psili
+    0x1F9E,  // -> capital eta with psili and perispomeni and prosgegrammeni
+    0x1F29,  // capital eta with dasia
+    0x1F9F,  // -> capital eta with dasia and perispomeni and prosgegrammeni
+    0x1F60,  // letter omega with psili
+    0x1FA6,  // -> letter omega with psili and perispomeni and ypogegrammeni
+    0x1F61,  // letter omega with dasia
+    0x1FA7,  // -> letter omega with dasia and perispomeni and ypogegrammeni
+    0x1F68,  // capital omega with psili
+    0x1FAE,  // -> capital omega with psili and perispomeni and prosgegrammeni
+    0x1F69,  // capital omega with dasia
+    0x1FAF,  // -> capital omega with dasia and perispomeni and prosgegrammeni
+    //   internal dead_key table
+    0x0003,          // number of entries
+    0x0000,  // U+0000
+    0x3A54,
+    0x0313,  // combining comma above
+    0x3A7C,
+    0x0314,  // combining reversed comma above
+    0x3A8C,
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3A54:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining tilde>
+    //     Compose
+    //   internal character table
+    0x0002,          // number of entries
+    0x0028,  // left parenthesis
+    0x3A5C,
+    0x0029,  // right parenthesis
+    0x3A6C,
+    //   leaf character table
+    0x0000,          // number of entries
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3A5C:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining tilde>
+    //     Compose
+    //     <left parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8F,  // -> capital alpha with dasia and perispomeni and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9F,  // -> capital eta with dasia and perispomeni and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAF,  // -> capital omega with dasia and perispomeni and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F87,  // -> letter alpha with dasia and perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F97,  // -> letter eta with dasia and perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA7,  // -> letter omega with dasia and perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3A6C:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining tilde>
+    //     Compose
+    //     <right parenthesis>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8E,  // -> capital alpha with psili and perispomeni and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9E,  // -> capital eta with psili and perispomeni and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAE,  // -> capital omega with psili and perispomeni and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F86,  // -> letter alpha with psili and perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F96,  // -> letter eta with psili and perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA6,  // -> letter omega with psili and perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3A7C:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining tilde>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8E,  // -> capital alpha with psili and perispomeni and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9E,  // -> capital eta with psili and perispomeni and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAE,  // -> capital omega with psili and perispomeni and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F86,  // -> letter alpha with psili and perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F96,  // -> letter eta with psili and perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA6,  // -> letter omega with psili and perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3A8C:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining tilde>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F8F,  // -> capital alpha with dasia and perispomeni and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F9F,  // -> capital eta with dasia and perispomeni and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FAF,  // -> capital omega with dasia and perispomeni and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F87,  // -> letter alpha with dasia and perispomeni and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F97,  // -> letter eta with dasia and perispomeni and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA7,  // -> letter omega with dasia and perispomeni and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3A9C:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F88,  // -> capital alpha with psili and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F98,  // -> capital eta with psili and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FA8,  // -> capital omega with psili and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F80,  // -> letter alpha with psili and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F90,  // -> letter eta with psili and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA0,  // -> letter omega with psili and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3AAC:
+    //   prefix:
+    //     Dead<combining greek ypogegrammeni>
+    //     Dead<combining reversed comma above>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0006,          // number of entries
+    0x0391,  // capital alpha
+    0x1F89,  // -> capital alpha with dasia and prosgegrammeni
+    0x0397,  // capital eta
+    0x1F99,  // -> capital eta with dasia and prosgegrammeni
+    0x03A9,  // capital omega
+    0x1FA9,  // -> capital omega with dasia and prosgegrammeni
+    0x03B1,  // letter alpha
+    0x1F81,  // -> letter alpha with dasia and ypogegrammeni
+    0x03B7,  // letter eta
+    0x1F91,  // -> letter eta with dasia and ypogegrammeni
+    0x03C9,  // letter omega
+    0x1FA1,  // -> letter omega with dasia and ypogegrammeni
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3ABC:
+    //   prefix:
+    //     Dead<combining katakana-hiragana voiced sound mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x0030,          // number of entries
+    0x3046,  // hiragana u
+    0x3094,  // -> hiragana vu
+    0x304B,  // hiragana ka
+    0x304C,  // -> hiragana ga
+    0x304D,  // hiragana ki
+    0x304E,  // -> hiragana gi
+    0x304F,  // hiragana ku
+    0x3050,  // -> hiragana gu
+    0x3051,  // hiragana ke
+    0x3052,  // -> hiragana ge
+    0x3053,  // hiragana ko
+    0x3054,  // -> hiragana go
+    0x3055,  // hiragana sa
+    0x3056,  // -> hiragana za
+    0x3057,  // hiragana si
+    0x3058,  // -> hiragana zi
+    0x3059,  // hiragana su
+    0x305A,  // -> hiragana zu
+    0x305B,  // hiragana se
+    0x305C,  // -> hiragana ze
+    0x305D,  // hiragana so
+    0x305E,  // -> hiragana zo
+    0x305F,  // hiragana ta
+    0x3060,  // -> hiragana da
+    0x3061,  // hiragana ti
+    0x3062,  // -> hiragana di
+    0x3064,  // hiragana tu
+    0x3065,  // -> hiragana du
+    0x3066,  // hiragana te
+    0x3067,  // -> hiragana de
+    0x3068,  // hiragana to
+    0x3069,  // -> hiragana do
+    0x306F,  // hiragana ha
+    0x3070,  // -> hiragana ba
+    0x3072,  // hiragana hi
+    0x3073,  // -> hiragana bi
+    0x3075,  // hiragana hu
+    0x3076,  // -> hiragana bu
+    0x3078,  // hiragana he
+    0x3079,  // -> hiragana be
+    0x307B,  // hiragana ho
+    0x307C,  // -> hiragana bo
+    0x309D,  // hiragana iteration mark
+    0x309E,  // -> hiragana voiced iteration mark
+    0x30A6,  // katakana u
+    0x30F4,  // -> katakana vu
+    0x30AB,  // katakana ka
+    0x30AC,  // -> katakana ga
+    0x30AD,  // katakana ki
+    0x30AE,  // -> katakana gi
+    0x30AF,  // katakana ku
+    0x30B0,  // -> katakana gu
+    0x30B1,  // katakana ke
+    0x30B2,  // -> katakana ge
+    0x30B3,  // katakana ko
+    0x30B4,  // -> katakana go
+    0x30B5,  // katakana sa
+    0x30B6,  // -> katakana za
+    0x30B7,  // katakana si
+    0x30B8,  // -> katakana zi
+    0x30B9,  // katakana su
+    0x30BA,  // -> katakana zu
+    0x30BB,  // katakana se
+    0x30BC,  // -> katakana ze
+    0x30BD,  // katakana so
+    0x30BE,  // -> katakana zo
+    0x30BF,  // katakana ta
+    0x30C0,  // -> katakana da
+    0x30C1,  // katakana ti
+    0x30C2,  // -> katakana di
+    0x30C4,  // katakana tu
+    0x30C5,  // -> katakana du
+    0x30C6,  // katakana te
+    0x30C7,  // -> katakana de
+    0x30C8,  // katakana to
+    0x30C9,  // -> katakana do
+    0x30CF,  // katakana ha
+    0x30D0,  // -> katakana ba
+    0x30D2,  // katakana hi
+    0x30D3,  // -> katakana bi
+    0x30D5,  // katakana hu
+    0x30D6,  // -> katakana bu
+    0x30D8,  // katakana he
+    0x30D9,  // -> katakana be
+    0x30DB,  // katakana ho
+    0x30DC,  // -> katakana bo
+    0x30EF,  // katakana wa
+    0x30F7,  // -> katakana va
+    0x30F0,  // katakana wi
+    0x30F8,  // -> katakana vi
+    0x30F1,  // katakana we
+    0x30F9,  // -> katakana ve
+    0x30F2,  // katakana wo
+    0x30FA,  // -> katakana vo
+    0x30FD,  // katakana iteration mark
+    0x30FE,  // -> katakana voiced iteration mark
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+
+    // offset 0x3B20:
+    //   prefix:
+    //     Dead<combining katakana-hiragana semi-voiced sound mark>
+    //   internal character table
+    0x0000,          // number of entries
+    //   leaf character table
+    0x000A,          // number of entries
+    0x306F,  // hiragana ha
+    0x3071,  // -> hiragana pa
+    0x3072,  // hiragana hi
+    0x3074,  // -> hiragana pi
+    0x3075,  // hiragana hu
+    0x3077,  // -> hiragana pu
+    0x3078,  // hiragana he
+    0x307A,  // -> hiragana pe
+    0x307B,  // hiragana ho
+    0x307D,  // -> hiragana po
+    0x30CF,  // katakana ha
+    0x30D1,  // -> katakana pa
+    0x30D2,  // katakana hi
+    0x30D4,  // -> katakana pi
+    0x30D5,  // katakana hu
+    0x30D7,  // -> katakana pu
+    0x30D8,  // katakana he
+    0x30DA,  // -> katakana pe
+    0x30DB,  // katakana ho
+    0x30DD,  // -> katakana po
+    //   internal dead_key table
+    0x0000,          // number of entries
+    //   leaf dead_key table
+    0x0000,          // number of entries
+};
+
+static const ui::TreeComposeChecker::CompositionData kCompositions = {
+  5, // maximum sequence length
+  15160, // tree array entries
+  kCompositionsTree
+};
+
+#endif  // CHARACTER_COMPOSER_DATA_H_
--- a/ui/base/ime/character_composer.h	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/base/ime/character_composer.h	2019-05-17 18:57:25.672000000 +0300
@@ -0,0 +1,131 @@
+// Copyright 2013 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#ifndef UI_BASE_IME_CHARACTER_COMPOSER_H_
+#define UI_BASE_IME_CHARACTER_COMPOSER_H_
+
+#include <stddef.h>
+#include <stdint.h>
+
+#include <vector>
+
+#include "base/macros.h"
+#include "base/strings/string_util.h"
+#include "ui/base/ime/ui_base_ime_types_export.h"
+#include "ui/events/keycodes/dom/dom_key.h"
+
+namespace ui {
+class KeyEvent;
+
+// A class to recognize compose and dead key sequence.
+// Outputs composed character.
+class UI_BASE_IME_TYPES_EXPORT CharacterComposer {
+ public:
+  using ComposeBuffer = std::vector<DomKey>;
+
+  CharacterComposer();
+  ~CharacterComposer();
+
+  void Reset();
+
+  // Filters keypress.
+  // Returns true if the keypress is recognized as a part of composition
+  // sequence.
+  // Fabricated events which don't have the native event, are not supported.
+  bool FilterKeyPress(const ui::KeyEvent& event);
+
+  // Returns a string consisting of composed character.
+  // Empty string is returned when there is no composition result.
+  const base::string16& composed_character() const {
+    return composed_character_;
+  }
+
+  // Returns the preedit string.
+  const base::string16& preedit_string() const { return preedit_string_; }
+
+ private:
+  // An enum to describe composition mode.
+  enum CompositionMode {
+    // This is the initial state.
+    // Composite a character with dead-keys and compose-key.
+    KEY_SEQUENCE_MODE,
+    // Composite a character with a hexadecimal unicode sequence.
+    HEX_MODE,
+  };
+
+  // Filters keypress in key sequence mode.
+  bool FilterKeyPressSequenceMode(const ui::KeyEvent& event);
+
+  // Filters keypress in hexadecimal mode.
+  bool FilterKeyPressHexMode(const ui::KeyEvent& event);
+
+  // Commit a character composed from hexadecimal uncode sequence
+  void CommitHex();
+
+  // Updates preedit string in hexadecimal mode.
+  void UpdatePreeditStringHexMode();
+
+  // Remembers keypresses previously filtered.
+  std::vector<DomKey> compose_buffer_;
+
+  // Records hexadecimal digits previously filtered.
+  std::vector<unsigned int> hex_buffer_;
+
+  // A string representing the composed character.
+  base::string16 composed_character_;
+
+  // Preedit string.
+  base::string16 preedit_string_;
+
+  // Composition mode which this instance is in.
+  CompositionMode composition_mode_;
+
+  DISALLOW_COPY_AND_ASSIGN(CharacterComposer);
+};
+
+// Abstract class for determining whether a ComposeBuffer forms a valid
+// character composition sequence.
+class ComposeChecker {
+ public:
+  enum class CheckSequenceResult {
+    // The sequence is not a composition sequence or the prefix of any
+    // composition sequence.
+    NO_MATCH,
+    // The sequence is a prefix of one or more composition sequences.
+    PREFIX_MATCH,
+    // The sequence matches a composition sequence.
+    FULL_MATCH
+  };
+  ComposeChecker() {}
+  virtual ~ComposeChecker() {}
+  virtual CheckSequenceResult CheckSequence(
+      const ui::CharacterComposer::ComposeBuffer& sequence,
+      uint32_t* composed_character) const = 0;
+
+ private:
+  DISALLOW_COPY_AND_ASSIGN(ComposeChecker);
+};
+
+// Implementation of |ComposeChecker| using a compact generated tree.
+class TreeComposeChecker : public ComposeChecker {
+ public:
+  struct CompositionData {
+    size_t maximum_sequence_length;
+    int tree_entries;
+    const uint16_t* tree;
+  };
+
+  explicit TreeComposeChecker(const CompositionData& data) : data_(data) {}
+  CheckSequenceResult CheckSequence(
+      const ui::CharacterComposer::ComposeBuffer& sequence,
+      uint32_t* composed_character) const override;
+
+ private:
+  bool Find(uint16_t index, uint16_t size, uint16_t key, uint16_t* value) const;
+  const CompositionData& data_;
+};
+
+}  // namespace ui
+
+#endif  // UI_BASE_IME_CHARACTER_COMPOSER_H_
--- a/ui/base/ime/character_composer_sequences.txt	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/base/ime/character_composer_sequences.txt	2019-05-17 18:57:25.676000000 +0300
@@ -0,0 +1,5014 @@
+# Character composer sequences for ChromeOS.
+
+Compose <space> <space> <no-break space>
+Compose <space> <'> <'>
+Compose <space> <(> <breve>
+Compose <space> <,> <cedilla>
+Compose <space> <-> <~>
+Compose <space> <.> <punctuation space>
+Compose <space> '<' <caron>
+Compose <space> '>' <^>
+Compose <space> <^> <^>
+Compose <space> <`> <`>
+Compose <space> <~> <~>
+Compose <!> Dead<combining horn> <O> <latin capital letter o with horn and dot below>
+Compose <!> Dead<combining horn> <U> <latin capital letter u with horn and dot below>
+Compose <!> Dead<combining horn> <o> <latin small letter o with horn and dot below>
+Compose <!> Dead<combining horn> <u> <latin small letter u with horn and dot below>
+Compose <!> <!> <inverted exclamation mark>
+Compose <!> <+> <O> <latin capital letter o with horn and dot below>
+Compose <!> <+> <U> <latin capital letter u with horn and dot below>
+Compose <!> <+> <o> <latin small letter o with horn and dot below>
+Compose <!> <+> <u> <latin small letter u with horn and dot below>
+Compose <!> <?> <interrobang>
+Compose <!> <A> <latin capital letter a with dot below>
+Compose <!> <B> <latin capital letter b with dot below>
+Compose <!> <D> <latin capital letter d with dot below>
+Compose <!> <E> <latin capital letter e with dot below>
+Compose <!> <H> <latin capital letter h with dot below>
+Compose <!> <I> <latin capital letter i with dot below>
+Compose <!> <K> <latin capital letter k with dot below>
+Compose <!> <L> <latin capital letter l with dot below>
+Compose <!> <M> <latin capital letter m with dot below>
+Compose <!> <N> <latin capital letter n with dot below>
+Compose <!> <O> <latin capital letter o with dot below>
+Compose <!> <P> <pilcrow sign>
+Compose <!> <R> <latin capital letter r with dot below>
+Compose <!> <S> <latin capital letter s with dot below>
+Compose <!> <T> <latin capital letter t with dot below>
+Compose <!> <U> <latin capital letter u with dot below>
+Compose <!> <V> <latin capital letter v with dot below>
+Compose <!> <W> <latin capital letter w with dot below>
+Compose <!> <Y> <latin capital letter y with dot below>
+Compose <!> <Z> <latin capital letter z with dot below>
+Compose <!> <^> <broken bar>
+Compose <!> <a> <latin small letter a with dot below>
+Compose <!> <b> <latin small letter b with dot below>
+Compose <!> <d> <latin small letter d with dot below>
+Compose <!> <e> <latin small letter e with dot below>
+Compose <!> <h> <latin small letter h with dot below>
+Compose <!> <i> <latin small letter i with dot below>
+Compose <!> <k> <latin small letter k with dot below>
+Compose <!> <l> <latin small letter l with dot below>
+Compose <!> <m> <latin small letter m with dot below>
+Compose <!> <n> <latin small letter n with dot below>
+Compose <!> <o> <latin small letter o with dot below>
+Compose <!> <p> <pilcrow sign>
+Compose <!> <r> <latin small letter r with dot below>
+Compose <!> <s> <latin small letter s with dot below>
+Compose <!> <t> <latin small letter t with dot below>
+Compose <!> <u> <latin small letter u with dot below>
+Compose <!> <v> <latin small letter v with dot below>
+Compose <!> <w> <latin small letter w with dot below>
+Compose <!> <y> <latin small letter y with dot below>
+Compose <!> <z> <latin small letter z with dot below>
+Compose <"> Dead<combining acute accent> <combining greek dialytika tonos>
+Compose <"> Dead<combining tilde> <O> <latin capital letter o with tilde and diaeresis>
+Compose <"> Dead<combining tilde> <o> <latin small letter o with tilde and diaeresis>
+Compose <"> Dead<combining macron> <U> <latin capital letter u with macron and diaeresis>
+Compose <"> Dead<combining macron> <u> <latin small letter u with macron and diaeresis>
+Compose <"> <"> <diaeresis>
+Compose <"> <'> <space> <greek dialytika tonos>
+Compose <"> <'> <combining greek dialytika tonos>
+Compose <"> <'> <greek small letter iota> <greek small letter iota with dialytika and tonos>
+Compose <"> <'> <greek small letter upsilon> <greek small letter upsilon with dialytika and tonos>
+Compose <"> <,> <double low-9 quotation mark>
+Compose <"> </> <double prime quotation mark>
+Compose <"> '<' <left double quotation mark>
+Compose <"> '>' <right double quotation mark>
+Compose <"> <A> <latin capital letter a with diaeresis>
+Compose <"> <E> <latin capital letter e with diaeresis>
+Compose <"> <H> <latin capital letter h with diaeresis>
+Compose <"> <I> <latin capital letter i with diaeresis>
+Compose <"> <O> <latin capital letter o with diaeresis>
+Compose <"> <U> <latin capital letter u with diaeresis>
+Compose <"> <W> <latin capital letter w with diaeresis>
+Compose <"> <X> <latin capital letter x with diaeresis>
+Compose <"> <Y> <latin capital letter y with diaeresis>
+Compose <"> <\> <reversed double prime quotation mark>
+Compose <"> <_> <U> <latin capital letter u with macron and diaeresis>
+Compose <"> <_> <u> <latin small letter u with macron and diaeresis>
+Compose <"> <a> <latin small letter a with diaeresis>
+Compose <"> <e> <latin small letter e with diaeresis>
+Compose <"> <h> <latin small letter h with diaeresis>
+Compose <"> <i> <latin small letter i with diaeresis>
+Compose <"> <o> <latin small letter o with diaeresis>
+Compose <"> <t> <latin small letter t with diaeresis>
+Compose <"> <u> <latin small letter u with diaeresis>
+Compose <"> <w> <latin small letter w with diaeresis>
+Compose <"> <x> <latin small letter x with diaeresis>
+Compose <"> <y> <latin small letter y with diaeresis>
+Compose <"> <~> <O> <latin capital letter o with tilde and diaeresis>
+Compose <"> <~> <o> <latin small letter o with tilde and diaeresis>
+Compose <"> <macron> <U> <latin capital letter u with macron and diaeresis>
+Compose <"> <macron> <u> <latin small letter u with macron and diaeresis>
+Compose <"> <acute accent> <combining greek dialytika tonos>
+Compose <"> <latin capital letter o with tilde> <latin capital letter o with tilde and diaeresis>
+Compose <"> <latin small letter o with tilde> <latin small letter o with tilde and diaeresis>
+Compose <"> <latin capital letter o with macron> <greek upsilon with diaeresis and hook symbol>
+Compose <"> <latin capital letter u with macron> <latin capital letter u with macron and diaeresis>
+Compose <"> <latin small letter u with macron> <latin small letter u with macron and diaeresis>
+Compose <"> <greek capital letter iota> <greek capital letter iota with dialytika>
+Compose <"> <greek capital letter upsilon> <greek capital letter upsilon with dialytika>
+Compose <"> <greek small letter iota> <greek small letter iota with dialytika>
+Compose <"> <greek small letter upsilon> <greek small letter upsilon with dialytika>
+Compose <"> <cyrillic capital letter byelorussian-ukrainian i> <cyrillic capital letter yi>
+Compose <"> <cyrillic capital letter a> <cyrillic capital letter a with diaeresis>
+Compose <"> <cyrillic capital letter ie> <cyrillic capital letter io>
+Compose <"> <cyrillic capital letter zhe> <cyrillic capital letter zhe with diaeresis>
+Compose <"> <cyrillic capital letter ze> <cyrillic capital letter ze with diaeresis>
+Compose <"> <cyrillic capital letter i> <cyrillic capital letter i with diaeresis>
+Compose <"> <cyrillic capital letter o> <cyrillic capital letter o with diaeresis>
+Compose <"> <cyrillic capital letter u> <cyrillic capital letter u with diaeresis>
+Compose <"> <cyrillic capital letter che> <cyrillic capital letter che with diaeresis>
+Compose <"> <cyrillic capital letter yeru> <cyrillic capital letter yeru with diaeresis>
+Compose <"> <cyrillic capital letter e> <cyrillic capital letter e with diaeresis>
+Compose <"> <cyrillic small letter a> <cyrillic small letter a with diaeresis>
+Compose <"> <cyrillic small letter ie> <cyrillic small letter io>
+Compose <"> <cyrillic small letter zhe> <cyrillic small letter zhe with diaeresis>
+Compose <"> <cyrillic small letter ze> <cyrillic small letter ze with diaeresis>
+Compose <"> <cyrillic small letter i> <cyrillic small letter i with diaeresis>
+Compose <"> <cyrillic small letter o> <cyrillic small letter o with diaeresis>
+Compose <"> <cyrillic small letter u> <cyrillic small letter u with diaeresis>
+Compose <"> <cyrillic small letter che> <cyrillic small letter che with diaeresis>
+Compose <"> <cyrillic small letter yeru> <cyrillic small letter yeru with diaeresis>
+Compose <"> <cyrillic small letter e> <cyrillic small letter e with diaeresis>
+Compose <"> <cyrillic small letter byelorussian-ukrainian i> <cyrillic small letter yi>
+Compose <"> <cyrillic capital letter barred o> <cyrillic capital letter barred o with diaeresis>
+Compose <"> <cyrillic small letter barred o> <cyrillic small letter barred o with diaeresis>
+Compose <"> <katakana letter ri> <cyrillic capital letter schwa with diaeresis>
+Compose <"> <katakana letter ru> <cyrillic small letter schwa with diaeresis>
+Compose <#> <#> <music sharp sign>
+Compose <#> <b> <music flat sign>
+Compose <#> <f> <music natural sign>
+Compose <%> <o> <per mille sign>
+Compose <'> Dead<combining circumflex accent> <A> <latin capital letter a with circumflex and acute>
+Compose <'> Dead<combining circumflex accent> <E> <latin capital letter e with circumflex and acute>
+Compose <'> Dead<combining circumflex accent> <O> <latin capital letter o with circumflex and acute>
+Compose <'> Dead<combining circumflex accent> <a> <latin small letter a with circumflex and acute>
+Compose <'> Dead<combining circumflex accent> <e> <latin small letter e with circumflex and acute>
+Compose <'> Dead<combining circumflex accent> <o> <latin small letter o with circumflex and acute>
+Compose <'> Dead<combining tilde> <O> <latin capital letter o with tilde and acute>
+Compose <'> Dead<combining tilde> <U> <latin capital letter u with tilde and acute>
+Compose <'> Dead<combining tilde> <o> <latin small letter o with tilde and acute>
+Compose <'> Dead<combining tilde> <u> <latin small letter u with tilde and acute>
+Compose <'> Dead<combining macron> <E> <latin capital letter e with macron and acute>
+Compose <'> Dead<combining macron> <O> <latin capital letter o with macron and acute>
+Compose <'> Dead<combining macron> <e> <latin small letter e with macron and acute>
+Compose <'> Dead<combining macron> <o> <latin small letter o with macron and acute>
+Compose <'> Dead<combining breve> <A> <latin capital letter a with breve and acute>
+Compose <'> Dead<combining breve> <a> <latin small letter a with breve and acute>
+Compose <'> Dead<combining diaeresis> <I> <latin capital letter i with diaeresis and acute>
+Compose <'> Dead<combining diaeresis> <U> <latin capital letter u with diaeresis and acute>
+Compose <'> Dead<combining diaeresis> <i> <latin small letter i with diaeresis and acute>
+Compose <'> Dead<combining diaeresis> <u> <latin small letter u with diaeresis and acute>
+Compose <'> Dead<combining diaeresis> <greek small letter iota> <greek small letter iota with dialytika and tonos>
+Compose <'> Dead<combining diaeresis> <greek small letter upsilon> <greek small letter upsilon with dialytika and tonos>
+Compose <'> Dead<combining ring above> <A> <latin capital letter a with ring above and acute>
+Compose <'> Dead<combining ring above> <a> <latin small letter a with ring above and acute>
+Compose <'> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and oxia>
+Compose <'> Dead<combining comma above> <greek capital letter epsilon> <greek capital letter epsilon with psili and oxia>
+Compose <'> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and oxia>
+Compose <'> Dead<combining comma above> <greek capital letter iota> <greek capital letter iota with psili and oxia>
+Compose <'> Dead<combining comma above> <greek capital letter omicron> <greek capital letter omicron with psili and oxia>
+Compose <'> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and oxia>
+Compose <'> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and oxia>
+Compose <'> Dead<combining comma above> <greek small letter epsilon> <greek small letter epsilon with psili and oxia>
+Compose <'> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and oxia>
+Compose <'> Dead<combining comma above> <greek small letter iota> <greek small letter iota with psili and oxia>
+Compose <'> Dead<combining comma above> <greek small letter omicron> <greek small letter omicron with psili and oxia>
+Compose <'> Dead<combining comma above> <greek small letter upsilon> <greek small letter upsilon with psili and oxia>
+Compose <'> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and oxia>
+Compose <'> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia>
+Compose <'> Dead<combining reversed comma above> <greek capital letter epsilon> <greek capital letter epsilon with dasia and oxia>
+Compose <'> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and oxia>
+Compose <'> Dead<combining reversed comma above> <greek capital letter iota> <greek capital letter iota with dasia and oxia>
+Compose <'> Dead<combining reversed comma above> <greek capital letter omicron> <greek capital letter omicron with dasia and oxia>
+Compose <'> Dead<combining reversed comma above> <greek capital letter upsilon> <greek capital letter upsilon with dasia and oxia>
+Compose <'> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and oxia>
+Compose <'> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and oxia>
+Compose <'> Dead<combining reversed comma above> <greek small letter epsilon> <greek small letter epsilon with dasia and oxia>
+Compose <'> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and oxia>
+Compose <'> Dead<combining reversed comma above> <greek small letter iota> <greek small letter iota with dasia and oxia>
+Compose <'> Dead<combining reversed comma above> <greek small letter omicron> <greek small letter omicron with dasia and oxia>
+Compose <'> Dead<combining reversed comma above> <greek small letter upsilon> <greek small letter upsilon with dasia and oxia>
+Compose <'> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and oxia>
+Compose <'> Dead<combining horn> <O> <latin capital letter o with horn and acute>
+Compose <'> Dead<combining horn> <U> <latin capital letter u with horn and acute>
+Compose <'> Dead<combining horn> <o> <latin small letter o with horn and acute>
+Compose <'> Dead<combining horn> <u> <latin small letter u with horn and acute>
+Compose <'> Dead<combining cedilla> <C> <latin capital letter c with cedilla and acute>
+Compose <'> Dead<combining cedilla> <c> <latin small letter c with cedilla and acute>
+Compose <'> <space> <'>
+Compose <'> <"> <space> <greek dialytika tonos>
+Compose <'> <"> <I> <latin capital letter i with diaeresis and acute>
+Compose <'> <"> <U> <latin capital letter u with diaeresis and acute>
+Compose <'> <"> <i> <latin small letter i with diaeresis and acute>
+Compose <'> <"> <u> <latin small letter u with diaeresis and acute>
+Compose <'> <"> <greek small letter iota> <greek small letter iota with dialytika and tonos>
+Compose <'> <"> <greek small letter upsilon> <greek small letter upsilon with dialytika and tonos>
+Compose <'> <'> <acute accent>
+Compose <'> <(> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia>
+Compose <'> <(> <greek capital letter epsilon> <greek capital letter epsilon with dasia and oxia>
+Compose <'> <(> <greek capital letter eta> <greek capital letter eta with dasia and oxia>
+Compose <'> <(> <greek capital letter iota> <greek capital letter iota with dasia and oxia>
+Compose <'> <(> <greek capital letter omicron> <greek capital letter omicron with dasia and oxia>
+Compose <'> <(> <greek capital letter upsilon> <greek capital letter upsilon with dasia and oxia>
+Compose <'> <(> <greek capital letter omega> <greek capital letter omega with dasia and oxia>
+Compose <'> <(> <greek small letter alpha> <greek small letter alpha with dasia and oxia>
+Compose <'> <(> <greek small letter epsilon> <greek small letter epsilon with dasia and oxia>
+Compose <'> <(> <greek small letter eta> <greek small letter eta with dasia and oxia>
+Compose <'> <(> <greek small letter iota> <greek small letter iota with dasia and oxia>
+Compose <'> <(> <greek small letter omicron> <greek small letter omicron with dasia and oxia>
+Compose <'> <(> <greek small letter upsilon> <greek small letter upsilon with dasia and oxia>
+Compose <'> <(> <greek small letter omega> <greek small letter omega with dasia and oxia>
+Compose <'> <)> <greek capital letter alpha> <greek capital letter alpha with psili and oxia>
+Compose <'> <)> <greek capital letter epsilon> <greek capital letter epsilon with psili and oxia>
+Compose <'> <)> <greek capital letter eta> <greek capital letter eta with psili and oxia>
+Compose <'> <)> <greek capital letter iota> <greek capital letter iota with psili and oxia>
+Compose <'> <)> <greek capital letter omicron> <greek capital letter omicron with psili and oxia>
+Compose <'> <)> <greek capital letter omega> <greek capital letter omega with psili and oxia>
+Compose <'> <)> <greek small letter alpha> <greek small letter alpha with psili and oxia>
+Compose <'> <)> <greek small letter epsilon> <greek small letter epsilon with psili and oxia>
+Compose <'> <)> <greek small letter eta> <greek small letter eta with psili and oxia>
+Compose <'> <)> <greek small letter iota> <greek small letter iota with psili and oxia>
+Compose <'> <)> <greek small letter omicron> <greek small letter omicron with psili and oxia>
+Compose <'> <)> <greek small letter upsilon> <greek small letter upsilon with psili and oxia>
+Compose <'> <)> <greek small letter omega> <greek small letter omega with psili and oxia>
+Compose <'> <+> <O> <latin capital letter o with horn and acute>
+Compose <'> <+> <U> <latin capital letter u with horn and acute>
+Compose <'> <+> <o> <latin small letter o with horn and acute>
+Compose <'> <+> <u> <latin small letter u with horn and acute>
+Compose <'> <,> <single low-9 quotation mark>
+Compose <'> </> <O> <latin capital letter o with stroke and acute>
+Compose <'> </> <o> <latin small letter o with stroke and acute>
+Compose <'> '<' <left single quotation mark>
+Compose <'> '>' <right single quotation mark>
+Compose <'> <A> <latin capital letter a with acute>
+Compose <'> <C> <latin capital letter c with cedilla>
+Compose <'> <E> <latin capital letter e with acute>
+Compose <'> <G> <latin capital letter g with acute>
+Compose <'> <I> <latin capital letter i with acute>
+Compose <'> <K> <latin capital letter k with acute>
+Compose <'> <L> <latin capital letter l with acute>
+Compose <'> <M> <latin capital letter m with acute>
+Compose <'> <N> <latin capital letter n with acute>
+Compose <'> <O> <latin capital letter o with acute>
+Compose <'> <P> <latin capital letter p with acute>
+Compose <'> <R> <latin capital letter r with acute>
+Compose <'> <S> <latin capital letter s with acute>
+Compose <'> <U> <latin capital letter u with acute>
+Compose <'> <W> <latin capital letter w with acute>
+Compose <'> <Y> <latin capital letter y with acute>
+Compose <'> <Z> <latin capital letter z with acute>
+Compose <'> <^> <A> <latin capital letter a with circumflex and acute>
+Compose <'> <^> <E> <latin capital letter e with circumflex and acute>
+Compose <'> <^> <O> <latin capital letter o with circumflex and acute>
+Compose <'> <^> <a> <latin small letter a with circumflex and acute>
+Compose <'> <^> <e> <latin small letter e with circumflex and acute>
+Compose <'> <^> <o> <latin small letter o with circumflex and acute>
+Compose <'> <_> <E> <latin capital letter e with macron and acute>
+Compose <'> <_> <O> <latin capital letter o with macron and acute>
+Compose <'> <_> <e> <latin small letter e with macron and acute>
+Compose <'> <_> <o> <latin small letter o with macron and acute>
+Compose <'> <a> <latin small letter a with acute>
+Compose <'> <b> <A> <latin capital letter a with breve and acute>
+Compose <'> <b> <a> <latin small letter a with breve and acute>
+Compose <'> <c> <latin small letter c with cedilla>
+Compose <'> <e> <latin small letter e with acute>
+Compose <'> <g> <latin small letter g with acute>
+Compose <'> <i> <latin small letter i with acute>
+Compose <'> <k> <latin small letter k with acute>
+Compose <'> <l> <latin small letter l with acute>
+Compose <'> <m> <latin small letter m with acute>
+Compose <'> <n> <latin small letter n with acute>
+Compose <'> <o> <latin small letter o with acute>
+Compose <'> <p> <latin small letter p with acute>
+Compose <'> <r> <latin small letter r with acute>
+Compose <'> <s> <latin small letter s with acute>
+Compose <'> <u> <latin small letter u with acute>
+Compose <'> <w> <latin small letter w with acute>
+Compose <'> <y> <latin small letter y with acute>
+Compose <'> <z> <latin small letter z with acute>
+Compose <'> <~> <O> <latin capital letter o with tilde and acute>
+Compose <'> <~> <U> <latin capital letter u with tilde and acute>
+Compose <'> <~> <o> <latin small letter o with tilde and acute>
+Compose <'> <~> <u> <latin small letter u with tilde and acute>
+Compose <'> <macron> <E> <latin capital letter e with macron and acute>
+Compose <'> <macron> <O> <latin capital letter o with macron and acute>
+Compose <'> <macron> <e> <latin small letter e with macron and acute>
+Compose <'> <macron> <o> <latin small letter o with macron and acute>
+Compose <'> <cedilla> <C> <latin capital letter c with cedilla and acute>
+Compose <'> <cedilla> <c> <latin small letter c with cedilla and acute>
+Compose <'> <latin capital letter a with circumflex> <latin capital letter a with circumflex and acute>
+Compose <'> <latin capital letter a with ring above> <latin capital letter a with ring above and acute>
+Compose <'> <latin capital letter ae> <latin capital letter ae with acute>
+Compose <'> <latin capital letter c with cedilla> <latin capital letter c with cedilla and acute>
+Compose <'> <latin capital letter e with circumflex> <latin capital letter e with circumflex and acute>
+Compose <'> <latin capital letter i with diaeresis> <latin capital letter i with diaeresis and acute>
+Compose <'> <latin capital letter o with circumflex> <latin capital letter o with circumflex and acute>
+Compose <'> <latin capital letter o with tilde> <latin capital letter o with tilde and acute>
+Compose <'> <latin capital letter o with stroke> <latin capital letter o with stroke and acute>
+Compose <'> <latin capital letter u with diaeresis> <latin capital letter u with diaeresis and acute>
+Compose <'> <latin small letter a with circumflex> <latin small letter a with circumflex and acute>
+Compose <'> <latin small letter a with ring above> <latin small letter a with ring above and acute>
+Compose <'> <latin small letter ae> <latin small letter ae with acute>
+Compose <'> <latin small letter c with cedilla> <latin small letter c with cedilla and acute>
+Compose <'> <latin small letter e with circumflex> <latin small letter e with circumflex and acute>
+Compose <'> <latin small letter i with diaeresis> <latin small letter i with diaeresis and acute>
+Compose <'> <latin small letter o with circumflex> <latin small letter o with circumflex and acute>
+Compose <'> <latin small letter o with tilde> <latin small letter o with tilde and acute>
+Compose <'> <latin small letter o with stroke> <latin small letter o with stroke and acute>
+Compose <'> <latin small letter u with diaeresis> <latin small letter u with diaeresis and acute>
+Compose <'> <latin capital letter a with breve> <latin capital letter a with breve and acute>
+Compose <'> <latin small letter a with breve> <latin small letter a with breve and acute>
+Compose <'> <latin capital letter e with macron> <latin capital letter e with macron and acute>
+Compose <'> <latin small letter e with macron> <latin small letter e with macron and acute>
+Compose <'> <latin capital letter o with macron> <latin capital letter o with macron and acute>
+Compose <'> <latin small letter o with macron> <latin small letter o with macron and acute>
+Compose <'> <latin capital letter u with tilde> <latin capital letter u with tilde and acute>
+Compose <'> <latin small letter u with tilde> <latin small letter u with tilde and acute>
+Compose <'> <greek capital letter alpha> <greek capital letter alpha with tonos>
+Compose <'> <greek capital letter epsilon> <greek capital letter epsilon with tonos>
+Compose <'> <greek capital letter eta> <greek capital letter eta with tonos>
+Compose <'> <greek capital letter iota> <greek capital letter iota with tonos>
+Compose <'> <greek capital letter omicron> <greek capital letter omicron with tonos>
+Compose <'> <greek capital letter upsilon> <greek capital letter upsilon with tonos>
+Compose <'> <greek capital letter omega> <greek capital letter omega with tonos>
+Compose <'> <greek small letter alpha> <greek small letter alpha with tonos>
+Compose <'> <greek small letter epsilon> <greek small letter epsilon with tonos>
+Compose <'> <greek small letter eta> <greek small letter eta with tonos>
+Compose <'> <greek small letter iota> <greek small letter iota with tonos>
+Compose <'> <greek small letter omicron> <greek small letter omicron with tonos>
+Compose <'> <greek small letter upsilon> <greek small letter upsilon with tonos>
+Compose <'> <greek small letter omega> <greek small letter omega with tonos>
+Compose <'> <greek small letter iota with dialytika> <greek small letter iota with dialytika and tonos>
+Compose <'> <greek small letter upsilon with dialytika> <greek small letter upsilon with dialytika and tonos>
+Compose <'> <cyrillic capital letter ghe> <cyrillic capital letter gje>
+Compose <'> <cyrillic capital letter ka> <cyrillic capital letter kje>
+Compose <'> <cyrillic small letter ghe> <cyrillic small letter gje>
+Compose <'> <cyrillic small letter ka> <cyrillic small letter kje>
+Compose <'> <greek small letter alpha with psili> <greek small letter alpha with psili and oxia>
+Compose <'> <greek small letter alpha with dasia> <greek small letter alpha with dasia and oxia>
+Compose <'> <greek capital letter alpha with psili> <greek capital letter alpha with psili and oxia>
+Compose <'> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and oxia>
+Compose <'> <greek small letter epsilon with psili> <greek small letter epsilon with psili and oxia>
+Compose <'> <greek small letter epsilon with dasia> <greek small letter epsilon with dasia and oxia>
+Compose <'> <greek capital letter epsilon with psili> <greek capital letter epsilon with psili and oxia>
+Compose <'> <greek capital letter epsilon with dasia> <greek capital letter epsilon with dasia and oxia>
+Compose <'> <greek small letter eta with psili> <greek small letter eta with psili and oxia>
+Compose <'> <greek small letter eta with dasia> <greek small letter eta with dasia and oxia>
+Compose <'> <greek capital letter eta with psili> <greek capital letter eta with psili and oxia>
+Compose <'> <greek capital letter eta with dasia> <greek capital letter eta with dasia and oxia>
+Compose <'> <greek small letter iota with psili> <greek small letter iota with psili and oxia>
+Compose <'> <greek small letter iota with dasia> <greek small letter iota with dasia and oxia>
+Compose <'> <greek capital letter iota with psili> <greek capital letter iota with psili and oxia>
+Compose <'> <greek capital letter iota with dasia> <greek capital letter iota with dasia and oxia>
+Compose <'> <greek small letter omicron with psili> <greek small letter omicron with psili and oxia>
+Compose <'> <greek small letter omicron with dasia> <greek small letter omicron with dasia and oxia>
+Compose <'> <greek capital letter omicron with psili> <greek capital letter omicron with psili and oxia>
+Compose <'> <greek capital letter omicron with dasia> <greek capital letter omicron with dasia and oxia>
+Compose <'> <greek small letter upsilon with psili> <greek small letter upsilon with psili and oxia>
+Compose <'> <greek small letter upsilon with dasia> <greek small letter upsilon with dasia and oxia>
+Compose <'> <greek capital letter upsilon with dasia> <greek capital letter upsilon with dasia and oxia>
+Compose <'> <greek small letter omega with psili> <greek small letter omega with psili and oxia>
+Compose <'> <greek small letter omega with dasia> <greek small letter omega with dasia and oxia>
+Compose <'> <greek capital letter omega with psili> <greek capital letter omega with psili and oxia>
+Compose <'> <greek capital letter omega with dasia> <greek capital letter omega with dasia and oxia>
+Compose <(> <space> <space> <)> <circled number twenty two>
+Compose <(> <space> <)> <circled digit two>
+Compose <(> <space> <0> <)> <circled number twenty>
+Compose <(> <space> <1> <)> <circled number twenty one>
+Compose <(> <space> <2> <)> <circled number twenty two>
+Compose <(> <space> <3> <)> <circled number twenty three>
+Compose <(> <space> <4> <)> <circled number twenty four>
+Compose <(> <space> <5> <)> <circled number twenty five>
+Compose <(> <space> <6> <)> <circled number twenty six>
+Compose <(> <space> <7> <)> <circled number twenty seven>
+Compose <(> <space> <8> <)> <circled number twenty eight>
+Compose <(> <space> <9> <)> <circled number twenty nine>
+Compose <(> <space> <breve>
+Compose <(> <(> <[>
+Compose <(> <-> <{>
+Compose <(> <0> <)> <circled digit zero>
+Compose <(> <1> <space> <)> <circled number twelve>
+Compose <(> <1> <)> <circled digit one>
+Compose <(> <1> <0> <)> <circled number ten>
+Compose <(> <1> <1> <)> <circled number eleven>
+Compose <(> <1> <2> <)> <circled number twelve>
+Compose <(> <1> <3> <)> <circled number thirteen>
+Compose <(> <1> <4> <)> <circled number fourteen>
+Compose <(> <1> <5> <)> <circled number fifteen>
+Compose <(> <1> <6> <)> <circled number sixteen>
+Compose <(> <1> <7> <)> <circled number seventeen>
+Compose <(> <1> <8> <)> <circled number eighteen>
+Compose <(> <1> <9> <)> <circled number nineteen>
+Compose <(> <2> <space> <)> <circled number twenty two>
+Compose <(> <2> <)> <circled digit two>
+Compose <(> <2> <0> <)> <circled number twenty>
+Compose <(> <2> <1> <)> <circled number twenty one>
+Compose <(> <2> <2> <)> <circled number twenty two>
+Compose <(> <2> <3> <)> <circled number twenty three>
+Compose <(> <2> <4> <)> <circled number twenty four>
+Compose <(> <2> <5> <)> <circled number twenty five>
+Compose <(> <2> <6> <)> <circled number twenty six>
+Compose <(> <2> <7> <)> <circled number twenty seven>
+Compose <(> <2> <8> <)> <circled number twenty eight>
+Compose <(> <2> <9> <)> <circled number twenty nine>
+Compose <(> <3> <space> <)> <circled number thirty two>
+Compose <(> <3> <)> <circled digit three>
+Compose <(> <3> <0> <)> <circled number thirty>
+Compose <(> <3> <1> <)> <circled number thirty one>
+Compose <(> <3> <2> <)> <circled number thirty two>
+Compose <(> <3> <3> <)> <circled number thirty three>
+Compose <(> <3> <4> <)> <circled number thirty four>
+Compose <(> <3> <5> <)> <circled number thirty five>
+Compose <(> <3> <6> <)> <circled number thirty six>
+Compose <(> <3> <7> <)> <circled number thirty seven>
+Compose <(> <3> <8> <)> <circled number thirty eight>
+Compose <(> <3> <9> <)> <circled number thirty nine>
+Compose <(> <4> <space> <)> <circled number forty two>
+Compose <(> <4> <)> <circled digit four>
+Compose <(> <4> <0> <)> <circled number forty>
+Compose <(> <4> <1> <)> <circled number forty one>
+Compose <(> <4> <2> <)> <circled number forty two>
+Compose <(> <4> <3> <)> <circled number forty three>
+Compose <(> <4> <4> <)> <circled number forty four>
+Compose <(> <4> <5> <)> <circled number forty five>
+Compose <(> <4> <6> <)> <circled number forty six>
+Compose <(> <4> <7> <)> <circled number forty seven>
+Compose <(> <4> <8> <)> <circled number forty eight>
+Compose <(> <4> <9> <)> <circled number forty nine>
+Compose <(> <5> <)> <circled digit five>
+Compose <(> <5> <0> <)> <circled number fifty>
+Compose <(> <6> <)> <circled digit six>
+Compose <(> <7> <)> <circled digit seven>
+Compose <(> <8> <)> <circled digit eight>
+Compose <(> <9> <)> <circled digit nine>
+Compose <(> <A> <)> <circled latin capital letter a>
+Compose <(> <A> <latin capital letter a with breve>
+Compose <(> <B> <)> <circled latin capital letter b>
+Compose <(> <C> <)> <circled latin capital letter c>
+Compose <(> <D> <)> <circled latin capital letter d>
+Compose <(> <E> <)> <circled latin capital letter e>
+Compose <(> <F> <)> <circled latin capital letter f>
+Compose <(> <G> <)> <circled latin capital letter g>
+Compose <(> <G> <latin capital letter g with breve>
+Compose <(> <H> <)> <circled latin capital letter h>
+Compose <(> <I> <)> <circled latin capital letter i>
+Compose <(> <J> <)> <circled latin capital letter j>
+Compose <(> <K> <)> <circled latin capital letter k>
+Compose <(> <L> <)> <circled latin capital letter l>
+Compose <(> <M> <)> <circled latin capital letter m>
+Compose <(> <N> <)> <circled latin capital letter n>
+Compose <(> <O> <)> <circled latin capital letter o>
+Compose <(> <P> <)> <circled latin capital letter p>
+Compose <(> <Q> <)> <circled latin capital letter q>
+Compose <(> <R> <)> <circled latin capital letter r>
+Compose <(> <S> <)> <circled latin capital letter s>
+Compose <(> <T> <)> <circled latin capital letter t>
+Compose <(> <U> <)> <circled latin capital letter u>
+Compose <(> <V> <)> <circled latin capital letter v>
+Compose <(> <W> <)> <circled latin capital letter w>
+Compose <(> <X> <)> <circled latin capital letter x>
+Compose <(> <Y> <)> <circled latin capital letter y>
+Compose <(> <Z> <)> <circled latin capital letter z>
+Compose <(> <a> <)> <circled latin small letter a>
+Compose <(> <a> <latin small letter a with breve>
+Compose <(> <b> <)> <circled latin small letter b>
+Compose <(> <c> <)> <circled latin small letter c>
+Compose <(> <c> <copyright sign>
+Compose <(> <d> <)> <circled latin small letter d>
+Compose <(> <e> <)> <circled latin small letter e>
+Compose <(> <f> <)> <circled latin small letter f>
+Compose <(> <g> <)> <circled latin small letter g>
+Compose <(> <g> <latin small letter g with breve>
+Compose <(> <h> <)> <circled latin small letter h>
+Compose <(> <i> <)> <circled latin small letter i>
+Compose <(> <j> <)> <circled latin small letter j>
+Compose <(> <k> <)> <circled latin small letter k>
+Compose <(> <l> <)> <circled latin small letter l>
+Compose <(> <m> <)> <circled latin small letter m>
+Compose <(> <n> <)> <circled latin small letter n>
+Compose <(> <o> <)> <circled latin small letter o>
+Compose <(> <p> <)> <circled latin small letter p>
+Compose <(> <q> <)> <circled latin small letter q>
+Compose <(> <r> <)> <circled latin small letter r>
+Compose <(> <r> <registered sign>
+Compose <(> <s> <)> <circled latin small letter s>
+Compose <(> <t> <)> <circled latin small letter t>
+Compose <(> <u> <)> <circled latin small letter u>
+Compose <(> <v> <)> <circled latin small letter v>
+Compose <(> <w> <)> <circled latin small letter w>
+Compose <(> <x> <)> <circled latin small letter x>
+Compose <(> <y> <)> <circled latin small letter y>
+Compose <(> <z> <)> <circled latin small letter z>
+Compose <(> <greek capital letter alpha> <greek capital letter alpha with dasia>
+Compose <(> <greek capital letter epsilon> <greek capital letter epsilon with dasia>
+Compose <(> <greek capital letter eta> <greek capital letter eta with dasia>
+Compose <(> <greek capital letter iota> <greek capital letter iota with dasia>
+Compose <(> <greek capital letter omicron> <greek capital letter omicron with dasia>
+Compose <(> <greek capital letter rho> <greek capital letter rho with dasia>
+Compose <(> <greek capital letter upsilon> <greek capital letter upsilon with dasia>
+Compose <(> <greek capital letter omega> <greek capital letter omega with dasia>
+Compose <(> <greek small letter alpha> <greek small letter alpha with dasia>
+Compose <(> <greek small letter epsilon> <greek small letter epsilon with dasia>
+Compose <(> <greek small letter eta> <greek small letter eta with dasia>
+Compose <(> <greek small letter iota> <greek small letter iota with dasia>
+Compose <(> <greek small letter omicron> <greek small letter omicron with dasia>
+Compose <(> <greek small letter rho> <greek small letter rho with dasia>
+Compose <(> <greek small letter upsilon> <greek small letter upsilon with dasia>
+Compose <(> <greek small letter omega> <greek small letter omega with dasia>
+Compose <(> <hangul choseong kiyeok> <)> <circled hangul kiyeok>
+Compose <(> <hangul choseong kiyeok> <hangul jungseong a> <)> <circled hangul kiyeok a>
+Compose <(> <hangul choseong nieun> <)> <circled hangul nieun>
+Compose <(> <hangul choseong nieun> <hangul jungseong a> <)> <circled hangul nieun a>
+Compose <(> <hangul choseong tikeut> <)> <circled hangul tikeut>
+Compose <(> <hangul choseong tikeut> <hangul jungseong a> <)> <circled hangul tikeut a>
+Compose <(> <hangul choseong rieul> <)> <circled hangul rieul>
+Compose <(> <hangul choseong rieul> <hangul jungseong a> <)> <circled hangul rieul a>
+Compose <(> <hangul choseong mieum> <)> <circled hangul mieum>
+Compose <(> <hangul choseong mieum> <hangul jungseong a> <)> <circled hangul mieum a>
+Compose <(> <hangul choseong pieup> <)> <circled hangul pieup>
+Compose <(> <hangul choseong pieup> <hangul jungseong a> <)> <circled hangul pieup a>
+Compose <(> <hangul choseong sios> <)> <circled hangul sios>
+Compose <(> <hangul choseong sios> <hangul jungseong a> <)> <circled hangul sios a>
+Compose <(> <hangul choseong ieung> <)> <circled hangul ieung>
+Compose <(> <hangul choseong ieung> <hangul jungseong a> <)> <circled hangul ieung a>
+Compose <(> <hangul choseong cieuc> <)> <circled hangul cieuc>
+Compose <(> <hangul choseong cieuc> <hangul jungseong a> <)> <circled hangul cieuc a>
+Compose <(> <hangul choseong chieuch> <)> <circled hangul chieuch>
+Compose <(> <hangul choseong chieuch> <hangul jungseong a> <)> <circled hangul chieuch a>
+Compose <(> <hangul choseong khieukh> <)> <circled hangul khieukh>
+Compose <(> <hangul choseong khieukh> <hangul jungseong a> <)> <circled hangul khieukh a>
+Compose <(> <hangul choseong thieuth> <)> <circled hangul thieuth>
+Compose <(> <hangul choseong thieuth> <hangul jungseong a> <)> <circled hangul thieuth a>
+Compose <(> <hangul choseong phieuph> <)> <circled hangul phieuph>
+Compose <(> <hangul choseong phieuph> <hangul jungseong a> <)> <circled hangul phieuph a>
+Compose <(> <hangul choseong hieuh> <)> <circled hangul hieuh>
+Compose <(> <hangul choseong hieuh> <hangul jungseong a> <)> <circled hangul hieuh a>
+Compose <(> <katakana letter a> <)> <circled katakana a>
+Compose <(> <katakana letter i> <)> <circled katakana i>
+Compose <(> <katakana letter u> <)> <circled katakana u>
+Compose <(> <katakana letter e> <)> <circled katakana e>
+Compose <(> <katakana letter o> <)> <circled katakana o>
+Compose <(> <katakana letter ka> <)> <circled katakana ka>
+Compose <(> <katakana letter ki> <)> <circled katakana ki>
+Compose <(> <katakana letter ku> <)> <circled katakana ku>
+Compose <(> <katakana letter ke> <)> <circled katakana ke>
+Compose <(> <katakana letter ko> <)> <circled katakana ko>
+Compose <(> <katakana letter sa> <)> <circled katakana sa>
+Compose <(> <katakana letter si> <)> <circled katakana si>
+Compose <(> <katakana letter su> <)> <circled katakana su>
+Compose <(> <katakana letter se> <)> <circled katakana se>
+Compose <(> <katakana letter so> <)> <circled katakana so>
+Compose <(> <katakana letter ta> <)> <circled katakana ta>
+Compose <(> <katakana letter ti> <)> <circled katakana ti>
+Compose <(> <katakana letter tu> <)> <circled katakana tu>
+Compose <(> <katakana letter te> <)> <circled katakana te>
+Compose <(> <katakana letter to> <)> <circled katakana to>
+Compose <(> <katakana letter na> <)> <circled katakana na>
+Compose <(> <katakana letter ni> <)> <circled katakana ni>
+Compose <(> <katakana letter nu> <)> <circled katakana nu>
+Compose <(> <katakana letter ne> <)> <circled katakana ne>
+Compose <(> <katakana letter no> <)> <circled katakana no>
+Compose <(> <katakana letter ha> <)> <circled katakana ha>
+Compose <(> <katakana letter hi> <)> <circled katakana hi>
+Compose <(> <katakana letter hu> <)> <circled katakana hu>
+Compose <(> <katakana letter he> <)> <circled katakana he>
+Compose <(> <katakana letter ho> <)> <circled katakana ho>
+Compose <(> <katakana letter ma> <)> <circled katakana ma>
+Compose <(> <katakana letter mi> <)> <circled katakana mi>
+Compose <(> <katakana letter mu> <)> <circled katakana mu>
+Compose <(> <katakana letter me> <)> <circled katakana me>
+Compose <(> <katakana letter mo> <)> <circled katakana mo>
+Compose <(> <katakana letter ya> <)> <circled katakana ya>
+Compose <(> <katakana letter yu> <)> <circled katakana yu>
+Compose <(> <katakana letter yo> <)> <circled katakana yo>
+Compose <(> <katakana letter ra> <)> <circled katakana ra>
+Compose <(> <katakana letter ri> <)> <circled katakana ri>
+Compose <(> <katakana letter ru> <)> <circled katakana ru>
+Compose <(> <katakana letter re> <)> <circled katakana re>
+Compose <(> <katakana letter ro> <)> <circled katakana ro>
+Compose <(> <katakana letter wa> <)> <circled katakana wa>
+Compose <(> <katakana letter wi> <)> <circled katakana wi>
+Compose <(> <katakana letter we> <)> <circled katakana we>
+Compose <(> <katakana letter wo> <)> <circled katakana wo>
+Compose <(> <cjk unified ideograph-4e00> <)> <circled ideograph one>
+Compose <(> <cjk unified ideograph-4e03> <)> <circled ideograph seven>
+Compose <(> <cjk unified ideograph-4e09> <)> <circled ideograph three>
+Compose <(> <cjk unified ideograph-4e0a> <)> <circled ideograph high>
+Compose <(> <cjk unified ideograph-4e0b> <)> <circled ideograph low>
+Compose <(> <cjk unified ideograph-4e2d> <)> <circled ideograph centre>
+Compose <(> <cjk unified ideograph-4e5d> <)> <circled ideograph nine>
+Compose <(> <cjk unified ideograph-4e8c> <)> <circled ideograph two>
+Compose <(> <cjk unified ideograph-4e94> <)> <circled ideograph five>
+Compose <(> <cjk unified ideograph-4f01> <)> <circled ideograph enterprise>
+Compose <(> <cjk unified ideograph-4f11> <)> <circled ideograph rest>
+Compose <(> <cjk unified ideograph-512a> <)> <circled ideograph excellent>
+Compose <(> <cjk unified ideograph-516b> <)> <circled ideograph eight>
+Compose <(> <cjk unified ideograph-516d> <)> <circled ideograph six>
+Compose <(> <cjk unified ideograph-5199> <)> <circled ideograph copy>
+Compose <(> <cjk unified ideograph-52b4> <)> <circled ideograph labor>
+Compose <(> <cjk unified ideograph-533b> <)> <circled ideograph medicine>
+Compose <(> <cjk unified ideograph-5341> <)> <circled ideograph ten>
+Compose <(> <cjk unified ideograph-5354> <)> <circled ideograph alliance>
+Compose <(> <cjk unified ideograph-5370> <)> <circled ideograph print>
+Compose <(> <cjk unified ideograph-53f3> <)> <circled ideograph right>
+Compose <(> <cjk unified ideograph-540d> <)> <circled ideograph name>
+Compose <(> <cjk unified ideograph-56db> <)> <circled ideograph four>
+Compose <(> <cjk unified ideograph-571f> <)> <circled ideograph earth>
+Compose <(> <cjk unified ideograph-591c> <)> <circled ideograph night>
+Compose <(> <cjk unified ideograph-5973> <)> <circled ideograph female>
+Compose <(> <cjk unified ideograph-5b66> <)> <circled ideograph study>
+Compose <(> <cjk unified ideograph-5b97> <)> <circled ideograph religion>
+Compose <(> <cjk unified ideograph-5de6> <)> <circled ideograph left>
+Compose <(> <cjk unified ideograph-65e5> <)> <circled ideograph sun>
+Compose <(> <cjk unified ideograph-6708> <)> <circled ideograph moon>
+Compose <(> <cjk unified ideograph-6709> <)> <circled ideograph have>
+Compose <(> <cjk unified ideograph-6728> <)> <circled ideograph wood>
+Compose <(> <cjk unified ideograph-682a> <)> <circled ideograph stock>
+Compose <(> <cjk unified ideograph-6b63> <)> <circled ideograph correct>
+Compose <(> <cjk unified ideograph-6c34> <)> <circled ideograph water>
+Compose <(> <cjk unified ideograph-6ce8> <)> <circled ideograph attention>
+Compose <(> <cjk unified ideograph-706b> <)> <circled ideograph fire>
+Compose <(> <cjk unified ideograph-7279> <)> <circled ideograph special>
+Compose <(> <cjk unified ideograph-7537> <)> <circled ideograph male>
+Compose <(> <cjk unified ideograph-76e3> <)> <circled ideograph supervise>
+Compose <(> <cjk unified ideograph-793e> <)> <circled ideograph society>
+Compose <(> <cjk unified ideograph-795d> <)> <circled ideograph congratulation>
+Compose <(> <cjk unified ideograph-79d8> <)> <circled ideograph secret>
+Compose <(> <cjk unified ideograph-8ca1> <)> <circled ideograph financial>
+Compose <(> <cjk unified ideograph-8cc7> <)> <circled ideograph resource>
+Compose <(> <cjk unified ideograph-9069> <)> <circled ideograph suitable>
+Compose <(> <cjk unified ideograph-91d1> <)> <circled ideograph metal>
+Compose <(> <cjk unified ideograph-9805> <)> <circled ideograph item>
+Compose <)> <)> <]>
+Compose <)> <-> <}>
+Compose <)> <greek capital letter alpha> <greek capital letter alpha with psili>
+Compose <)> <greek capital letter epsilon> <greek capital letter epsilon with psili>
+Compose <)> <greek capital letter eta> <greek capital letter eta with psili>
+Compose <)> <greek capital letter iota> <greek capital letter iota with psili>
+Compose <)> <greek capital letter omicron> <greek capital letter omicron with psili>
+Compose <)> <greek capital letter omega> <greek capital letter omega with psili>
+Compose <)> <greek small letter alpha> <greek small letter alpha with psili>
+Compose <)> <greek small letter epsilon> <greek small letter epsilon with psili>
+Compose <)> <greek small letter eta> <greek small letter eta with psili>
+Compose <)> <greek small letter iota> <greek small letter iota with psili>
+Compose <)> <greek small letter omicron> <greek small letter omicron with psili>
+Compose <)> <greek small letter rho> <greek small letter rho with psili>
+Compose <)> <greek small letter upsilon> <greek small letter upsilon with psili>
+Compose <)> <greek small letter omega> <greek small letter omega with psili>
+Compose <*> <0> <degree sign>
+Compose <*> <A> <latin capital letter a with ring above>
+Compose <*> <U> <latin capital letter u with ring above>
+Compose <*> <a> <latin small letter a with ring above>
+Compose <*> <u> <latin small letter u with ring above>
+Compose <+> <+> <#>
+Compose <+> <-> <plus-minus sign>
+Compose <+> <O> <latin capital letter o with horn>
+Compose <+> <U> <latin capital letter u with horn>
+Compose <+> <o> <latin small letter o with horn>
+Compose <+> <u> <latin small letter u with horn>
+Compose <,> <space> <cedilla>
+Compose <,> <"> <double low-9 quotation mark>
+Compose <,> <'> <single low-9 quotation mark>
+Compose <,> <,> <cedilla>
+Compose <,> <-> <not sign>
+Compose <,> <A> <latin capital letter a with ogonek>
+Compose <,> <C> <latin capital letter c with cedilla>
+Compose <,> <D> <latin capital letter d with cedilla>
+Compose <,> <E> <latin capital letter e with ogonek>
+Compose <,> <G> <latin capital letter g with cedilla>
+Compose <,> <H> <latin capital letter h with cedilla>
+Compose <,> <I> <latin capital letter i with ogonek>
+Compose <,> <K> <latin capital letter k with cedilla>
+Compose <,> <L> <latin capital letter l with cedilla>
+Compose <,> <N> <latin capital letter n with cedilla>
+Compose <,> <R> <latin capital letter r with cedilla>
+Compose <,> <S> <latin capital letter s with cedilla>
+Compose <,> <T> <latin capital letter t with cedilla>
+Compose <,> <U> <latin capital letter u with ogonek>
+Compose <,> <a> <latin small letter a with ogonek>
+Compose <,> <c> <latin small letter c with cedilla>
+Compose <,> <d> <latin small letter d with cedilla>
+Compose <,> <e> <latin small letter e with ogonek>
+Compose <,> <g> <latin small letter g with cedilla>
+Compose <,> <h> <latin small letter h with cedilla>
+Compose <,> <i> <latin small letter i with ogonek>
+Compose <,> <k> <latin small letter k with cedilla>
+Compose <,> <l> <latin small letter l with cedilla>
+Compose <,> <n> <latin small letter n with cedilla>
+Compose <,> <r> <latin small letter r with cedilla>
+Compose <,> <s> <latin small letter s with cedilla>
+Compose <,> <t> <latin small letter t with cedilla>
+Compose <,> <u> <latin small letter u with ogonek>
+Compose <-> <space> <~>
+Compose <-> <(> <{>
+Compose <-> <)> <}>
+Compose <-> <+> <plus-minus sign>
+Compose <-> <,> <not sign>
+Compose <-> <-> <space> <soft hyphen>
+Compose <-> <-> <-> <em dash>
+Compose <-> <-> <.> <en dash>
+Compose <-> <:> <division sign>
+Compose <-> '>' <rightwards arrow>
+Compose <-> <A> <latin capital letter a with tilde>
+Compose <-> <D> <latin capital letter d with stroke>
+Compose <-> <E> <latin capital letter e with macron>
+Compose <-> <I> <latin capital letter i with macron>
+Compose <-> <L> <pound sign>
+Compose <-> <N> <latin capital letter n with tilde>
+Compose <-> <O> <latin capital letter o with tilde>
+Compose <-> <U> <latin capital letter u with macron>
+Compose <-> <Y> <yen sign>
+Compose <-> <^> <macron>
+Compose <-> <a> <latin small letter a with macron>
+Compose <-> <d> <latin small letter d with stroke>
+Compose <-> <e> <latin small letter e with macron>
+Compose <-> <i> <latin small letter i with macron>
+Compose <-> <l> <pound sign>
+Compose <-> <n> <latin small letter n with tilde>
+Compose <-> <o> <latin small letter o with macron>
+Compose <-> <u> <latin small letter u with macron>
+Compose <-> <y> <yen sign>
+Compose <.> Dead<combining acute accent> <S> <latin capital letter s with acute and dot above>
+Compose <.> Dead<combining acute accent> <s> <latin small letter s with acute and dot above>
+Compose <.> Dead<combining caron> <S> <latin capital letter s with caron and dot above>
+Compose <.> Dead<combining caron> <s> <latin small letter s with caron and dot above>
+Compose <.> Dead<combining dot below> <S> <latin capital letter s with dot below and dot above>
+Compose <.> Dead<combining dot below> <s> <latin small letter s with dot below and dot above>
+Compose <.> <!> <S> <latin capital letter s with dot below and dot above>
+Compose <.> <!> <s> <latin small letter s with dot below and dot above>
+Compose <.> <'> <S> <latin capital letter s with acute and dot above>
+Compose <.> <'> <s> <latin small letter s with acute and dot above>
+Compose <.> <-> <middle dot>
+Compose <.> <.> <horizontal ellipsis>
+Compose <.> '<' <single left-pointing angle quotation mark>
+Compose <.> <=> <bullet>
+Compose <.> '>' <single right-pointing angle quotation mark>
+Compose <.> <A> <latin capital letter a with dot above>
+Compose <.> <B> <latin capital letter b with dot above>
+Compose <.> <C> <latin capital letter c with dot above>
+Compose <.> <D> <latin capital letter d with dot above>
+Compose <.> <E> <latin capital letter e with dot above>
+Compose <.> <F> <latin capital letter f with dot above>
+Compose <.> <G> <latin capital letter g with dot above>
+Compose <.> <H> <latin capital letter h with dot above>
+Compose <.> <I> <latin capital letter i with dot above>
+Compose <.> <M> <latin capital letter m with dot above>
+Compose <.> <N> <latin capital letter n with dot above>
+Compose <.> <O> <latin capital letter o with dot above>
+Compose <.> <P> <latin capital letter p with dot above>
+Compose <.> <R> <latin capital letter r with dot above>
+Compose <.> <S> <latin capital letter s with dot above>
+Compose <.> <T> <latin capital letter t with dot above>
+Compose <.> <W> <latin capital letter w with dot above>
+Compose <.> <X> <latin capital letter x with dot above>
+Compose <.> <Y> <latin capital letter y with dot above>
+Compose <.> <Z> <latin capital letter z with dot above>
+Compose <.> <^> <middle dot>
+Compose <.> <a> <latin small letter a with dot above>
+Compose <.> <b> <latin small letter b with dot above>
+Compose <.> <c> <latin small letter c with dot above>
+Compose <.> <d> <latin small letter d with dot above>
+Compose <.> <e> <latin small letter e with dot above>
+Compose <.> <f> <latin small letter f with dot above>
+Compose <.> <g> <latin small letter g with dot above>
+Compose <.> <h> <latin small letter h with dot above>
+Compose <.> <i> <latin small letter dotless i>
+Compose <.> <m> <latin small letter m with dot above>
+Compose <.> <n> <latin small letter n with dot above>
+Compose <.> <o> <latin small letter o with dot above>
+Compose <.> <p> <latin small letter p with dot above>
+Compose <.> <r> <latin small letter r with dot above>
+Compose <.> <s> <latin small letter s with dot above>
+Compose <.> <t> <latin small letter t with dot above>
+Compose <.> <w> <latin small letter w with dot above>
+Compose <.> <x> <latin small letter x with dot above>
+Compose <.> <y> <latin small letter y with dot above>
+Compose <.> <z> <latin small letter z with dot above>
+Compose <.> <acute accent> <S> <latin capital letter s with acute and dot above>
+Compose <.> <acute accent> <s> <latin small letter s with acute and dot above>
+Compose <.> <latin capital letter s with acute> <latin capital letter s with acute and dot above>
+Compose <.> <latin small letter s with acute> <latin small letter s with acute and dot above>
+Compose <.> <latin capital letter s with caron> <latin capital letter s with caron and dot above>
+Compose <.> <latin small letter s with caron> <latin small letter s with caron and dot above>
+Compose <.> <latin small letter long s> <latin small letter long s with dot above>
+Compose <.> <latin capital letter s with dot below> <latin capital letter s with dot below and dot above>
+Compose <.> <latin small letter s with dot below> <latin small letter s with dot below and dot above>
+Compose </> </> <\>
+Compose </> '<' <\>
+Compose </> <=> <not equal to>
+Compose </> <C> <colon sign>
+Compose </> <D> <latin capital letter d with stroke>
+Compose </> <G> <latin capital letter g with stroke>
+Compose </> <H> <latin capital letter h with stroke>
+Compose </> <I> <latin capital letter i with stroke>
+Compose </> <L> <latin capital letter l with stroke>
+Compose </> <O> <latin capital letter o with stroke>
+Compose </> <T> <latin capital letter t with stroke>
+Compose </> <U> <micro sign>
+Compose </> <Z> <latin capital letter z with stroke>
+Compose </> <^> <|>
+Compose </> <b> <latin small letter b with stroke>
+Compose </> <c> <cent sign>
+Compose </> <d> <latin small letter d with stroke>
+Compose </> <g> <latin small letter g with stroke>
+Compose </> <h> <latin small letter h with stroke>
+Compose </> <i> <latin small letter i with stroke>
+Compose </> <l> <latin small letter l with stroke>
+Compose </> <m> <mill sign>
+Compose </> <o> <latin small letter o with stroke>
+Compose </> <t> <latin small letter t with stroke>
+Compose </> <u> <micro sign>
+Compose </> <z> <latin small letter z with stroke>
+Compose </> <latin letter glottal stop> <latin letter glottal stop with stroke>
+Compose </> <cyrillic capital letter ghe> <cyrillic capital letter ghe with stroke>
+Compose </> <cyrillic capital letter ka> <cyrillic capital letter ka with stroke>
+Compose </> <cyrillic small letter ghe> <cyrillic small letter ghe with stroke>
+Compose </> <cyrillic small letter ka> <cyrillic small letter ka with stroke>
+Compose </> <leftwards arrow> <leftwards arrow with stroke>
+Compose </> <rightwards arrow> <rightwards arrow with stroke>
+Compose </> <left right arrow> <left right arrow with stroke>
+Compose </> <katakana letter small tu> <cyrillic small letter straight u with stroke>
+Compose </> <katakana letter small yo> <cyrillic capital letter straight u with stroke>
+Compose <0> <*> <degree sign>
+Compose <0> <C> <copyright sign>
+Compose <0> <S> <section sign>
+Compose <0> <X> <currency sign>
+Compose <0> <^> <degree sign>
+Compose <0> <c> <copyright sign>
+Compose <0> <s> <section sign>
+Compose <0> <x> <currency sign>
+Compose <1> <2> <vulgar fraction one half>
+Compose <1> <3> <vulgar fraction one third>
+Compose <1> <4> <vulgar fraction one quarter>
+Compose <1> <5> <vulgar fraction one fifth>
+Compose <1> <6> <vulgar fraction one sixth>
+Compose <1> <8> <vulgar fraction one eighth>
+Compose <1> <S> <superscript one>
+Compose <1> <^> <superscript one>
+Compose <1> <s> <superscript one>
+Compose <2> <3> <vulgar fraction two thirds>
+Compose <2> <5> <vulgar fraction two fifths>
+Compose <2> <S> <superscript two>
+Compose <2> <^> <superscript two>
+Compose <2> <s> <superscript two>
+Compose <3> <4> <vulgar fraction three quarters>
+Compose <3> <5> <vulgar fraction three fifths>
+Compose <3> <8> <vulgar fraction three eighths>
+Compose <3> <S> <superscript three>
+Compose <3> <^> <superscript three>
+Compose <3> <s> <superscript three>
+Compose <4> <5> <vulgar fraction four fifths>
+Compose <5> <6> <vulgar fraction five sixths>
+Compose <5> <8> <vulgar fraction five eighths>
+Compose <7> <8> <vulgar fraction seven eighths>
+Compose <:> <(> <white frowning face>
+Compose <:> <)> <white smiling face>
+Compose <:> <-> <division sign>
+Compose <;> <A> <latin capital letter a with ogonek>
+Compose <;> <E> <latin capital letter e with ogonek>
+Compose <;> <I> <latin capital letter i with ogonek>
+Compose <;> <O> <latin capital letter o with ogonek>
+Compose <;> <U> <latin capital letter u with ogonek>
+Compose <;> <a> <latin small letter a with ogonek>
+Compose <;> <e> <latin small letter e with ogonek>
+Compose <;> <i> <latin small letter i with ogonek>
+Compose <;> <o> <latin small letter o with ogonek>
+Compose <;> <u> <latin small letter u with ogonek>
+Compose '<' <space> <caron>
+Compose '<' <"> <left double quotation mark>
+Compose '<' <'> <left single quotation mark>
+Compose '<' <-> <leftwards arrow>
+Compose '<' </> <\>
+Compose '<' <3> <black heart suit>
+Compose '<' '<' <left-pointing double angle quotation mark>
+Compose '<' <=> <less-than or equal to>
+Compose '<' <C> <latin capital letter c with caron>
+Compose '<' <D> <latin capital letter d with caron>
+Compose '<' <E> <latin capital letter e with caron>
+Compose '<' <L> <latin capital letter l with caron>
+Compose '<' <N> <latin capital letter n with caron>
+Compose '<' <R> <latin capital letter r with caron>
+Compose '<' <S> <latin capital letter s with caron>
+Compose '<' <T> <latin capital letter t with caron>
+Compose '<' <Z> <latin capital letter z with caron>
+Compose '<' <c> <latin small letter c with caron>
+Compose '<' <d> <latin small letter d with caron>
+Compose '<' <e> <latin small letter e with caron>
+Compose '<' <l> <latin small letter l with caron>
+Compose '<' <n> <latin small letter n with caron>
+Compose '<' <r> <latin small letter r with caron>
+Compose '<' <s> <latin small letter s with caron>
+Compose '<' <t> <latin small letter t with caron>
+Compose '<' <z> <latin small letter z with caron>
+Compose '<' <combining long solidus overlay> <not less-than>
+Compose <=> </> <not equal to>
+Compose <=> <C> <euro sign>
+Compose <=> <E> <euro sign>
+Compose <=> <L> <lira sign>
+Compose <=> <N> <naira sign>
+Compose <=> <O> <latin capital letter o with double acute>
+Compose <=> <U> <latin capital letter u with double acute>
+Compose <=> <W> <won sign>
+Compose <=> <Y> <yen sign>
+Compose <=> <c> <euro sign>
+Compose <=> <e> <euro sign>
+Compose <=> <l> <pound sign>
+Compose <=> <o> <latin small letter o with double acute>
+Compose <=> <u> <latin small letter u with double acute>
+Compose <=> <y> <yen sign>
+Compose <=> <combining long solidus overlay> <not equal to>
+Compose <=> <cyrillic capital letter ie> <euro sign>
+Compose <=> <cyrillic capital letter es> <euro sign>
+Compose <=> <cyrillic capital letter u> <cyrillic capital letter u with double acute>
+Compose <=> <cyrillic small letter u> <cyrillic small letter u with double acute>
+Compose '>' <space> <^>
+Compose '>' <"> <right double quotation mark>
+Compose '>' <'> <right single quotation mark>
+Compose '>' <=> <greater-than or equal to>
+Compose '>' '>' <right-pointing double angle quotation mark>
+Compose '>' <A> <latin capital letter a with circumflex>
+Compose '>' <E> <latin capital letter e with circumflex>
+Compose '>' <I> <latin capital letter i with circumflex>
+Compose '>' <O> <latin capital letter o with circumflex>
+Compose '>' <U> <latin capital letter u with circumflex>
+Compose '>' <a> <latin small letter a with circumflex>
+Compose '>' <e> <latin small letter e with circumflex>
+Compose '>' <i> <latin small letter i with circumflex>
+Compose '>' <o> <latin small letter o with circumflex>
+Compose '>' <u> <latin small letter u with circumflex>
+Compose '>' <combining long solidus overlay> <not greater-than>
+Compose <?> Dead<combining circumflex accent> <A> <latin capital letter a with circumflex and hook above>
+Compose <?> Dead<combining circumflex accent> <E> <latin capital letter e with circumflex and hook above>
+Compose <?> Dead<combining circumflex accent> <O> <latin capital letter o with circumflex and hook above>
+Compose <?> Dead<combining circumflex accent> <a> <latin small letter a with circumflex and hook above>
+Compose <?> Dead<combining circumflex accent> <e> <latin small letter e with circumflex and hook above>
+Compose <?> Dead<combining circumflex accent> <o> <latin small letter o with circumflex and hook above>
+Compose <?> Dead<combining breve> <A> <latin capital letter a with breve and hook above>
+Compose <?> Dead<combining breve> <a> <latin small letter a with breve and hook above>
+Compose <?> Dead<combining horn> <O> <latin capital letter o with horn and hook above>
+Compose <?> Dead<combining horn> <U> <latin capital letter u with horn and hook above>
+Compose <?> Dead<combining horn> <o> <latin small letter o with horn and hook above>
+Compose <?> Dead<combining horn> <u> <latin small letter u with horn and hook above>
+Compose <?> <!> <inverted interrobang>
+Compose <?> <+> <O> <latin capital letter o with horn and hook above>
+Compose <?> <+> <U> <latin capital letter u with horn and hook above>
+Compose <?> <+> <o> <latin small letter o with horn and hook above>
+Compose <?> <+> <u> <latin small letter u with horn and hook above>
+Compose <?> <?> <inverted question mark>
+Compose <?> <A> <latin capital letter a with hook above>
+Compose <?> <E> <latin capital letter e with hook above>
+Compose <?> <I> <latin capital letter i with hook above>
+Compose <?> <O> <latin capital letter o with hook above>
+Compose <?> <U> <latin capital letter u with hook above>
+Compose <?> <Y> <latin capital letter y with hook above>
+Compose <?> <^> <A> <latin capital letter a with circumflex and hook above>
+Compose <?> <^> <E> <latin capital letter e with circumflex and hook above>
+Compose <?> <^> <O> <latin capital letter o with circumflex and hook above>
+Compose <?> <^> <a> <latin small letter a with circumflex and hook above>
+Compose <?> <^> <e> <latin small letter e with circumflex and hook above>
+Compose <?> <^> <o> <latin small letter o with circumflex and hook above>
+Compose <?> <a> <latin small letter a with hook above>
+Compose <?> <b> <A> <latin capital letter a with breve and hook above>
+Compose <?> <b> <a> <latin small letter a with breve and hook above>
+Compose <?> <e> <latin small letter e with hook above>
+Compose <?> <i> <latin small letter i with hook above>
+Compose <?> <o> <latin small letter o with hook above>
+Compose <?> <u> <latin small letter u with hook above>
+Compose <?> <y> <latin small letter y with hook above>
+Compose <?> <latin capital letter a with circumflex> <latin capital letter a with circumflex and hook above>
+Compose <?> <latin capital letter e with circumflex> <latin capital letter e with circumflex and hook above>
+Compose <?> <latin capital letter o with circumflex> <latin capital letter o with circumflex and hook above>
+Compose <?> <latin small letter a with circumflex> <latin small letter a with circumflex and hook above>
+Compose <?> <latin small letter e with circumflex> <latin small letter e with circumflex and hook above>
+Compose <?> <latin small letter o with circumflex> <latin small letter o with circumflex and hook above>
+Compose <?> <latin capital letter a with breve> <latin capital letter a with breve and hook above>
+Compose <?> <latin small letter a with breve> <latin small letter a with breve and hook above>
+Compose <A> <"> <latin capital letter a with diaeresis>
+Compose <A> <'> <latin capital letter a with acute>
+Compose <A> <(> <latin capital letter a with breve>
+Compose <A> <*> <latin capital letter a with ring above>
+Compose <A> <,> <latin capital letter a with ogonek>
+Compose <A> <-> <latin capital letter a with tilde>
+Compose <A> '>' <latin capital letter a with circumflex>
+Compose <A> <A> <latin capital letter a with ring above>
+Compose <A> <E> <latin capital letter ae>
+Compose <A> <T> <@>
+Compose <A> <^> <latin capital letter a with circumflex>
+Compose <A> <_> <feminine ordinal indicator>
+Compose <A> <`> <latin capital letter a with grave>
+Compose <A> <~> <latin capital letter a with tilde>
+Compose <A> <diaeresis> <latin capital letter a with diaeresis>
+Compose <A> <acute accent> <latin capital letter a with acute>
+Compose <B> <.> <latin capital letter b with dot above>
+Compose <C> <'> <latin capital letter c with acute>
+Compose <C> <,> <latin capital letter c with cedilla>
+Compose <C> <.> <latin capital letter c with dot above>
+Compose <C> </> <colon sign>
+Compose <C> <0> <copyright sign>
+Compose <C> '<' <latin capital letter c with caron>
+Compose <C> <=> <euro sign>
+Compose <C> <C> <C> <P> <hammer and sickle>
+Compose <C> <E> <euro-currency sign>
+Compose <C> <O> <copyright sign>
+Compose <C> <o> <copyright sign>
+Compose <C> <r> <cruzeiro sign>
+Compose <C> <|> <cent sign>
+Compose <D> <-> <latin capital letter d with stroke>
+Compose <D> <.> <latin capital letter d with dot above>
+Compose <D> '<' <latin capital letter d with caron>
+Compose <D> <H> <latin capital letter eth>
+Compose <E> <"> <latin capital letter e with diaeresis>
+Compose <E> <'> <latin capital letter e with acute>
+Compose <E> <,> <latin capital letter e with ogonek>
+Compose <E> <-> <latin capital letter e with macron>
+Compose <E> <.> <latin capital letter e with dot above>
+Compose <E> '<' <latin capital letter e with caron>
+Compose <E> <=> <euro sign>
+Compose <E> '>' <latin capital letter e with circumflex>
+Compose <E> <^> <latin capital letter e with circumflex>
+Compose <E> <_> <latin capital letter e with macron>
+Compose <E> <`> <latin capital letter e with grave>
+Compose <E> <diaeresis> <latin capital letter e with diaeresis>
+Compose <E> <acute accent> <latin capital letter e with acute>
+Compose <F> <.> <latin capital letter f with dot above>
+Compose <F> <r> <french franc sign>
+Compose <G> <(> <latin capital letter g with breve>
+Compose <G> <,> <latin capital letter g with cedilla>
+Compose <G> <.> <latin capital letter g with dot above>
+Compose <G> <U> <latin capital letter g with breve>
+Compose <G> <breve> <latin capital letter g with breve>
+Compose <I> <"> <latin capital letter i with diaeresis>
+Compose <I> <'> <latin capital letter i with acute>
+Compose <I> <,> <latin capital letter i with ogonek>
+Compose <I> <-> <latin capital letter i with macron>
+Compose <I> <.> <latin capital letter i with dot above>
+Compose <I> '>' <latin capital letter i with circumflex>
+Compose <I> <^> <latin capital letter i with circumflex>
+Compose <I> <_> <latin capital letter i with macron>
+Compose <I> <`> <latin capital letter i with grave>
+Compose <I> <~> <latin capital letter i with tilde>
+Compose <I> <diaeresis> <latin capital letter i with diaeresis>
+Compose <I> <acute accent> <latin capital letter i with acute>
+Compose <K> <,> <latin capital letter k with cedilla>
+Compose <L> <'> <latin capital letter l with acute>
+Compose <L> <,> <latin capital letter l with cedilla>
+Compose <L> <-> <pound sign>
+Compose <L> </> <latin capital letter l with stroke>
+Compose <L> '<' <latin capital letter l with caron>
+Compose <L> <=> <pound sign>
+Compose <L> <V> <|>
+Compose <M> <.> <latin capital letter m with dot above>
+Compose <N> <'> <latin capital letter n with acute>
+Compose <N> <,> <latin capital letter n with cedilla>
+Compose <N> <-> <latin capital letter n with tilde>
+Compose <N> '<' <latin capital letter n with caron>
+Compose <N> <=> <naira sign>
+Compose <N> <G> <latin capital letter eng>
+Compose <N> <O> <numero sign>
+Compose <N> <o> <numero sign>
+Compose <N> <~> <latin capital letter n with tilde>
+Compose <O> <"> <latin capital letter o with diaeresis>
+Compose <O> <'> <latin capital letter o with acute>
+Compose <O> <-> <latin capital letter o with tilde>
+Compose <O> </> <latin capital letter o with stroke>
+Compose <O> '>' <latin capital letter o with circumflex>
+Compose <O> <A> <circled latin capital letter a>
+Compose <O> <C> <copyright sign>
+Compose <O> <E> <latin capital ligature oe>
+Compose <O> <R> <registered sign>
+Compose <O> <S> <section sign>
+Compose <O> <X> <currency sign>
+Compose <O> <^> <latin capital letter o with circumflex>
+Compose <O> <_> <masculine ordinal indicator>
+Compose <O> <`> <latin capital letter o with grave>
+Compose <O> <c> <copyright sign>
+Compose <O> <r> <registered sign>
+Compose <O> <x> <currency sign>
+Compose <O> <~> <latin capital letter o with tilde>
+Compose <O> <diaeresis> <latin capital letter o with diaeresis>
+Compose <O> <acute accent> <latin capital letter o with acute>
+Compose <P> <!> <pilcrow sign>
+Compose <P> <.> <latin capital letter p with dot above>
+Compose <P> <P> <pilcrow sign>
+Compose <P> <t> <peseta sign>
+Compose <R> <'> <latin capital letter r with acute>
+Compose <R> <,> <latin capital letter r with cedilla>
+Compose <R> '<' <latin capital letter r with caron>
+Compose <R> <O> <registered sign>
+Compose <R> <s> <rupee sign>
+Compose <S> <!> <section sign>
+Compose <S> <'> <latin capital letter s with acute>
+Compose <S> <,> <latin capital letter s with cedilla>
+Compose <S> <.> <latin capital letter s with dot above>
+Compose <S> <0> <section sign>
+Compose <S> <1> <superscript one>
+Compose <S> <2> <superscript two>
+Compose <S> <3> <superscript three>
+Compose <S> '<' <latin capital letter s with caron>
+Compose <S> <M> <service mark>
+Compose <S> <O> <section sign>
+Compose <S> <S> <latin capital letter sharp s>
+Compose <S> <m> <service mark>
+Compose <S> <cedilla> <latin capital letter s with cedilla>
+Compose <T> <-> <latin capital letter t with stroke>
+Compose <T> <.> <latin capital letter t with dot above>
+Compose <T> </> <latin capital letter t with stroke>
+Compose <T> '<' <latin capital letter t with caron>
+Compose <T> <H> <latin capital letter thorn>
+Compose <T> <M> <trade mark sign>
+Compose <T> <m> <trade mark sign>
+Compose <U> Dead<combining dot below> <A> <latin capital letter a with breve and dot below>
+Compose <U> Dead<combining dot below> <a> <latin small letter a with breve and dot below>
+Compose <U> Dead<combining cedilla> <E> <latin capital letter e with cedilla and breve>
+Compose <U> Dead<combining cedilla> <e> <latin small letter e with cedilla and breve>
+Compose <U> <!> <A> <latin capital letter a with breve and dot below>
+Compose <U> <!> <a> <latin small letter a with breve and dot below>
+Compose <U> <"> <latin capital letter u with diaeresis>
+Compose <U> <'> <latin capital letter u with acute>
+Compose <U> <*> <latin capital letter u with ring above>
+Compose <U> <,> <E> <latin capital letter e with cedilla and breve>
+Compose <U> <,> <e> <latin small letter e with cedilla and breve>
+Compose <U> <,> <latin capital letter u with ogonek>
+Compose <U> <-> <latin capital letter u with macron>
+Compose <U> </> <micro sign>
+Compose <U> '>' <latin capital letter u with circumflex>
+Compose <U> <A> <latin capital letter a with breve>
+Compose <U> <E> <latin capital letter e with breve>
+Compose <U> <G> <latin capital letter g with breve>
+Compose <U> <I> <latin capital letter i with breve>
+Compose <U> <O> <latin capital letter o with breve>
+Compose <U> <U> <latin capital letter u with breve>
+Compose <U> <^> <latin capital letter u with circumflex>
+Compose <U> <_> <latin capital letter u with macron>
+Compose <U> <`> <latin capital letter u with grave>
+Compose <U> <a> <latin small letter a with breve>
+Compose <U> <e> <latin small letter e with breve>
+Compose <U> <g> <latin small letter g with breve>
+Compose <U> <i> <latin small letter i with breve>
+Compose <U> <o> <latin small letter o with breve>
+Compose <U> <u> <latin small letter u with breve>
+Compose <U> <~> <latin capital letter u with tilde>
+Compose <U> <diaeresis> <latin capital letter u with diaeresis>
+Compose <U> <acute accent> <latin capital letter u with acute>
+Compose <U> <cedilla> <E> <latin capital letter e with cedilla and breve>
+Compose <U> <cedilla> <e> <latin small letter e with cedilla and breve>
+Compose <U> <latin capital letter e with cedilla> <latin capital letter e with cedilla and breve>
+Compose <U> <latin small letter e with cedilla> <latin small letter e with cedilla and breve>
+Compose <U> <greek capital letter alpha> <greek capital letter alpha with vrachy>
+Compose <U> <greek capital letter iota> <greek capital letter iota with vrachy>
+Compose <U> <greek capital letter upsilon> <greek capital letter upsilon with vrachy>
+Compose <U> <greek small letter alpha> <greek small letter alpha with vrachy>
+Compose <U> <greek small letter iota> <greek small letter iota with vrachy>
+Compose <U> <greek small letter upsilon> <greek small letter upsilon with vrachy>
+Compose <U> <cyrillic capital letter a> <cyrillic capital letter a with breve>
+Compose <U> <cyrillic capital letter ie> <cyrillic capital letter ie with breve>
+Compose <U> <cyrillic capital letter zhe> <cyrillic capital letter zhe with breve>
+Compose <U> <cyrillic capital letter i> <cyrillic capital letter short i>
+Compose <U> <cyrillic capital letter u> <cyrillic capital letter short u>
+Compose <U> <cyrillic small letter a> <cyrillic small letter a with breve>
+Compose <U> <cyrillic small letter ie> <cyrillic small letter ie with breve>
+Compose <U> <cyrillic small letter zhe> <cyrillic small letter zhe with breve>
+Compose <U> <cyrillic small letter i> <cyrillic small letter short i>
+Compose <U> <cyrillic small letter u> <cyrillic small letter short u>
+Compose <U> <latin capital letter a with dot below> <latin capital letter a with breve and dot below>
+Compose <U> <latin small letter a with dot below> <latin small letter a with breve and dot below>
+Compose <V> <L> <|>
+Compose <W> <=> <won sign>
+Compose <W> <^> <latin capital letter w with circumflex>
+Compose <X> <0> <currency sign>
+Compose <X> <O> <currency sign>
+Compose <X> <o> <currency sign>
+Compose <Y> <"> <latin capital letter y with diaeresis>
+Compose <Y> <'> <latin capital letter y with acute>
+Compose <Y> <-> <yen sign>
+Compose <Y> <=> <yen sign>
+Compose <Y> <^> <latin capital letter y with circumflex>
+Compose <Y> <diaeresis> <latin capital letter y with diaeresis>
+Compose <Y> <acute accent> <latin capital letter y with acute>
+Compose <Z> <'> <latin capital letter z with acute>
+Compose <Z> <.> <latin capital letter z with dot above>
+Compose <Z> '<' <latin capital letter z with caron>
+Compose <^> Dead<combining dot below> <A> <latin capital letter a with circumflex and dot below>
+Compose <^> Dead<combining dot below> <E> <latin capital letter e with circumflex and dot below>
+Compose <^> Dead<combining dot below> <O> <latin capital letter o with circumflex and dot below>
+Compose <^> Dead<combining dot below> <a> <latin small letter a with circumflex and dot below>
+Compose <^> Dead<combining dot below> <e> <latin small letter e with circumflex and dot below>
+Compose <^> Dead<combining dot below> <o> <latin small letter o with circumflex and dot below>
+Compose <^> <space> <^>
+Compose <^> <space> <superscript two>
+Compose <^> <!> <A> <latin capital letter a with circumflex and dot below>
+Compose <^> <!> <E> <latin capital letter e with circumflex and dot below>
+Compose <^> <!> <O> <latin capital letter o with circumflex and dot below>
+Compose <^> <!> <a> <latin small letter a with circumflex and dot below>
+Compose <^> <!> <e> <latin small letter e with circumflex and dot below>
+Compose <^> <!> <o> <latin small letter o with circumflex and dot below>
+Compose <^> <(> <superscript left parenthesis>
+Compose <^> <)> <superscript right parenthesis>
+Compose <^> <+> <superscript plus sign>
+Compose <^> <-> <macron>
+Compose <^> <.> <middle dot>
+Compose <^> </> <|>
+Compose <^> <0> <superscript zero>
+Compose <^> <1> <superscript one>
+Compose <^> <2> <superscript two>
+Compose <^> <3> <superscript three>
+Compose <^> <4> <superscript four>
+Compose <^> <5> <superscript five>
+Compose <^> <6> <superscript six>
+Compose <^> <7> <superscript seven>
+Compose <^> <8> <superscript eight>
+Compose <^> <9> <superscript nine>
+Compose <^> <=> <superscript equals sign>
+Compose <^> <A> <latin capital letter a with circumflex>
+Compose <^> <C> <latin capital letter c with circumflex>
+Compose <^> <E> <latin capital letter e with circumflex>
+Compose <^> <G> <latin capital letter g with circumflex>
+Compose <^> <H> <latin capital letter h with circumflex>
+Compose <^> <I> <latin capital letter i with circumflex>
+Compose <^> <J> <latin capital letter j with circumflex>
+Compose <^> <O> <latin capital letter o with circumflex>
+Compose <^> <S> <latin capital letter s with circumflex>
+Compose <^> <U> <latin capital letter u with circumflex>
+Compose <^> <W> <latin capital letter w with circumflex>
+Compose <^> <Y> <latin capital letter y with circumflex>
+Compose <^> <Z> <latin capital letter z with circumflex>
+Compose <^> <_> <a> <feminine ordinal indicator>
+Compose <^> <_> <h> <modifier letter small h>
+Compose <^> <_> <i> <superscript latin small letter i>
+Compose <^> <_> <j> <modifier letter small j>
+Compose <^> <_> <l> <modifier letter small l>
+Compose <^> <_> <n> <superscript latin small letter n>
+Compose <^> <_> <o> <masculine ordinal indicator>
+Compose <^> <_> <r> <modifier letter small r>
+Compose <^> <_> <s> <modifier letter small s>
+Compose <^> <_> <w> <modifier letter small w>
+Compose <^> <_> <x> <modifier letter small x>
+Compose <^> <_> <y> <modifier letter small y>
+Compose <^> <_> <macron>
+Compose <^> <_> <latin small letter gamma> <modifier letter small gamma>
+Compose <^> <_> <latin small letter h with hook> <modifier letter small h with hook>
+Compose <^> <_> <latin small letter turned r> <modifier letter small turned r>
+Compose <^> <_> <latin small letter turned r with hook> <modifier letter small turned r with hook>
+Compose <^> <_> <latin letter small capital inverted r> <modifier letter small capital inverted r>
+Compose <^> <_> <latin letter pharyngeal voiced fricative> <modifier letter small reversed glottal stop>
+Compose <^> <a> <latin small letter a with circumflex>
+Compose <^> <c> <latin small letter c with circumflex>
+Compose <^> <e> <latin small letter e with circumflex>
+Compose <^> <g> <latin small letter g with circumflex>
+Compose <^> <h> <latin small letter h with circumflex>
+Compose <^> <i> <latin small letter i with circumflex>
+Compose <^> <j> <latin small letter j with circumflex>
+Compose <^> <o> <latin small letter o with circumflex>
+Compose <^> <s> <latin small letter s with circumflex>
+Compose <^> <u> <latin small letter u with circumflex>
+Compose <^> <w> <latin small letter w with circumflex>
+Compose <^> <y> <latin small letter y with circumflex>
+Compose <^> <z> <latin small letter z with circumflex>
+Compose <^> <latin capital letter a with dot below> <latin capital letter a with circumflex and dot below>
+Compose <^> <latin small letter a with dot below> <latin small letter a with circumflex and dot below>
+Compose <^> <latin capital letter e with dot below> <latin capital letter e with circumflex and dot below>
+Compose <^> <latin small letter e with dot below> <latin small letter e with circumflex and dot below>
+Compose <^> <latin capital letter o with dot below> <latin capital letter o with circumflex and dot below>
+Compose <^> <latin small letter o with dot below> <latin small letter o with circumflex and dot below>
+Compose <^> <minus sign> <superscript minus>
+Compose <^> <cjk unified ideograph-4e00> <ideographic annotation one mark>
+Compose <^> <cjk unified ideograph-4e01> <ideographic annotation fourth mark>
+Compose <^> <cjk unified ideograph-4e09> <ideographic annotation three mark>
+Compose <^> <cjk unified ideograph-4e0a> <ideographic annotation top mark>
+Compose <^> <cjk unified ideograph-4e0b> <ideographic annotation bottom mark>
+Compose <^> <cjk unified ideograph-4e19> <ideographic annotation third mark>
+Compose <^> <cjk unified ideograph-4e2d> <ideographic annotation middle mark>
+Compose <^> <cjk unified ideograph-4e59> <ideographic annotation second mark>
+Compose <^> <cjk unified ideograph-4e8c> <ideographic annotation two mark>
+Compose <^> <cjk unified ideograph-4eba> <ideographic annotation man mark>
+Compose <^> <cjk unified ideograph-56db> <ideographic annotation four mark>
+Compose <^> <cjk unified ideograph-5730> <ideographic annotation earth mark>
+Compose <^> <cjk unified ideograph-5929> <ideographic annotation heaven mark>
+Compose <^> <cjk unified ideograph-7532> <ideographic annotation first mark>
+Compose <_> Dead<combining tilde> <O> <latin capital letter o with tilde and macron>
+Compose <_> Dead<combining tilde> <o> <latin small letter o with tilde and macron>
+Compose <_> Dead<combining dot above> <A> <latin capital letter a with dot above and macron>
+Compose <_> Dead<combining dot above> <O> <latin capital letter o with dot above and macron>
+Compose <_> Dead<combining dot above> <a> <latin small letter a with dot above and macron>
+Compose <_> Dead<combining dot above> <o> <latin small letter o with dot above and macron>
+Compose <_> Dead<combining diaeresis> <A> <latin capital letter a with diaeresis and macron>
+Compose <_> Dead<combining diaeresis> <O> <latin capital letter o with diaeresis and macron>
+Compose <_> Dead<combining diaeresis> <U> <latin capital letter u with diaeresis and macron>
+Compose <_> Dead<combining diaeresis> <a> <latin small letter a with diaeresis and macron>
+Compose <_> Dead<combining diaeresis> <o> <latin small letter o with diaeresis and macron>
+Compose <_> Dead<combining diaeresis> <u> <latin small letter u with diaeresis and macron>
+Compose <_> Dead<combining dot below> <L> <latin capital letter l with dot below and macron>
+Compose <_> Dead<combining dot below> <R> <latin capital letter r with dot below and macron>
+Compose <_> Dead<combining dot below> <l> <latin small letter l with dot below and macron>
+Compose <_> Dead<combining dot below> <r> <latin small letter r with dot below and macron>
+Compose <_> Dead<combining ogonek> <O> <latin capital letter o with ogonek and macron>
+Compose <_> Dead<combining ogonek> <o> <latin small letter o with ogonek and macron>
+Compose <_> <space> <subscript two>
+Compose <_> <!> <L> <latin capital letter l with dot below and macron>
+Compose <_> <!> <R> <latin capital letter r with dot below and macron>
+Compose <_> <!> <l> <latin small letter l with dot below and macron>
+Compose <_> <!> <r> <latin small letter r with dot below and macron>
+Compose <_> <"> <A> <latin capital letter a with diaeresis and macron>
+Compose <_> <"> <O> <latin capital letter o with diaeresis and macron>
+Compose <_> <"> <U> <latin capital letter u with diaeresis and macron>
+Compose <_> <"> <a> <latin small letter a with diaeresis and macron>
+Compose <_> <"> <o> <latin small letter o with diaeresis and macron>
+Compose <_> <"> <u> <latin small letter u with diaeresis and macron>
+Compose <_> <(> <subscript left parenthesis>
+Compose <_> <)> <subscript right parenthesis>
+Compose <_> <+> <subscript plus sign>
+Compose <_> <.> <A> <latin capital letter a with dot above and macron>
+Compose <_> <.> <O> <latin capital letter o with dot above and macron>
+Compose <_> <.> <a> <latin small letter a with dot above and macron>
+Compose <_> <.> <o> <latin small letter o with dot above and macron>
+Compose <_> <0> <subscript zero>
+Compose <_> <1> <subscript one>
+Compose <_> <2> <subscript two>
+Compose <_> <3> <subscript three>
+Compose <_> <4> <subscript four>
+Compose <_> <5> <subscript five>
+Compose <_> <6> <subscript six>
+Compose <_> <7> <subscript seven>
+Compose <_> <8> <subscript eight>
+Compose <_> <9> <subscript nine>
+Compose <_> <;> <O> <latin capital letter o with ogonek and macron>
+Compose <_> <;> <o> <latin small letter o with ogonek and macron>
+Compose <_> <=> <subscript equals sign>
+Compose <_> <A> <latin capital letter a with macron>
+Compose <_> <E> <latin capital letter e with macron>
+Compose <_> <G> <latin capital letter g with macron>
+Compose <_> <I> <latin capital letter i with macron>
+Compose <_> <O> <latin capital letter o with macron>
+Compose <_> <U> <latin capital letter u with macron>
+Compose <_> <Y> <latin capital letter y with macron>
+Compose <_> <^> <macron>
+Compose <_> <_> <macron>
+Compose <_> <a> <latin small letter a with macron>
+Compose <_> <e> <latin small letter e with macron>
+Compose <_> <g> <latin small letter g with macron>
+Compose <_> <i> <latin small letter i with macron>
+Compose <_> <o> <latin small letter o with macron>
+Compose <_> <u> <latin small letter u with macron>
+Compose <_> <y> <latin small letter y with macron>
+Compose <_> <~> <O> <latin capital letter o with tilde and macron>
+Compose <_> <~> <o> <latin small letter o with tilde and macron>
+Compose <_> <latin capital letter a with diaeresis> <latin capital letter a with diaeresis and macron>
+Compose <_> <latin capital letter ae> <latin capital letter ae with macron>
+Compose <_> <latin capital letter o with tilde> <latin capital letter o with tilde and macron>
+Compose <_> <latin capital letter o with diaeresis> <latin capital letter o with diaeresis and macron>
+Compose <_> <latin capital letter u with diaeresis> <latin capital letter u with diaeresis and macron>
+Compose <_> <latin small letter a with diaeresis> <latin small letter a with diaeresis and macron>
+Compose <_> <latin small letter ae> <latin small letter ae with macron>
+Compose <_> <latin small letter o with tilde> <latin small letter o with tilde and macron>
+Compose <_> <latin small letter o with diaeresis> <latin small letter o with diaeresis and macron>
+Compose <_> <latin small letter u with diaeresis> <latin small letter u with diaeresis and macron>
+Compose <_> <latin small letter e with ogonek> <latin capital letter o with ogonek and macron>
+Compose <_> <latin small letter o with ogonek> <latin small letter o with ogonek and macron>
+Compose <_> <latin capital letter a with dot above> <latin capital letter a with dot above and macron>
+Compose <_> <latin small letter a with dot above> <latin small letter a with dot above and macron>
+Compose <_> <latin capital letter o with dot above> <latin capital letter o with dot above and macron>
+Compose <_> <latin small letter o with dot above> <latin small letter o with dot above and macron>
+Compose <_> <greek capital letter alpha> <greek capital letter alpha with macron>
+Compose <_> <greek capital letter iota> <greek capital letter iota with macron>
+Compose <_> <greek capital letter upsilon> <greek capital letter upsilon with macron>
+Compose <_> <greek small letter alpha> <greek small letter alpha with macron>
+Compose <_> <greek small letter iota> <greek small letter iota with macron>
+Compose <_> <greek small letter upsilon> <greek small letter upsilon with macron>
+Compose <_> <cyrillic capital letter i> <cyrillic capital letter i with macron>
+Compose <_> <cyrillic capital letter u> <cyrillic capital letter u with macron>
+Compose <_> <cyrillic small letter i> <cyrillic small letter i with macron>
+Compose <_> <cyrillic small letter u> <cyrillic small letter u with macron>
+Compose <_> <tamil vowel sign aa> <tamil vowel sign o>
+Compose <_> <tamil au length mark> <tamil vowel sign au>
+Compose <_> <latin capital letter l with dot below> <latin capital letter l with dot below and macron>
+Compose <_> <latin small letter l with dot below> <latin small letter l with dot below and macron>
+Compose <_> <latin capital letter r with dot below> <latin capital letter r with dot below and macron>
+Compose <_> <latin small letter r with dot below> <latin small letter r with dot below and macron>
+Compose <_> <minus sign> <subscript minus>
+Compose <`> Dead<combining circumflex accent> <A> <latin capital letter a with circumflex and grave>
+Compose <`> Dead<combining circumflex accent> <E> <latin capital letter e with circumflex and grave>
+Compose <`> Dead<combining circumflex accent> <O> <latin capital letter o with circumflex and grave>
+Compose <`> Dead<combining circumflex accent> <a> <latin small letter a with circumflex and grave>
+Compose <`> Dead<combining circumflex accent> <e> <latin small letter e with circumflex and grave>
+Compose <`> Dead<combining circumflex accent> <o> <latin small letter o with circumflex and grave>
+Compose <`> Dead<combining macron> <E> <latin capital letter e with macron and grave>
+Compose <`> Dead<combining macron> <O> <latin capital letter o with macron and grave>
+Compose <`> Dead<combining macron> <e> <latin small letter e with macron and grave>
+Compose <`> Dead<combining macron> <o> <latin small letter o with macron and grave>
+Compose <`> Dead<combining breve> <A> <latin capital letter a with breve and grave>
+Compose <`> Dead<combining breve> <a> <latin small letter a with breve and grave>
+Compose <`> Dead<combining diaeresis> <U> <latin capital letter u with diaeresis and grave>
+Compose <`> Dead<combining diaeresis> <u> <latin small letter u with diaeresis and grave>
+Compose <`> Dead<combining diaeresis> <greek small letter iota> <greek small letter iota with dialytika and varia>
+Compose <`> Dead<combining diaeresis> <greek small letter upsilon> <greek small letter upsilon with dialytika and varia>
+Compose <`> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and varia>
+Compose <`> Dead<combining comma above> <greek capital letter epsilon> <greek capital letter epsilon with psili and varia>
+Compose <`> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and varia>
+Compose <`> Dead<combining comma above> <greek capital letter iota> <greek capital letter iota with psili and varia>
+Compose <`> Dead<combining comma above> <greek capital letter omicron> <greek capital letter omicron with psili and varia>
+Compose <`> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and varia>
+Compose <`> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and varia>
+Compose <`> Dead<combining comma above> <greek small letter epsilon> <greek small letter epsilon with psili and varia>
+Compose <`> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and varia>
+Compose <`> Dead<combining comma above> <greek small letter iota> <greek small letter iota with psili and varia>
+Compose <`> Dead<combining comma above> <greek small letter omicron> <greek small letter omicron with psili and varia>
+Compose <`> Dead<combining comma above> <greek small letter upsilon> <greek small letter upsilon with psili and varia>
+Compose <`> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and varia>
+Compose <`> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and varia>
+Compose <`> Dead<combining reversed comma above> <greek capital letter epsilon> <greek capital letter epsilon with dasia and varia>
+Compose <`> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and varia>
+Compose <`> Dead<combining reversed comma above> <greek capital letter iota> <greek capital letter iota with dasia and varia>
+Compose <`> Dead<combining reversed comma above> <greek capital letter omicron> <greek capital letter omicron with dasia and varia>
+Compose <`> Dead<combining reversed comma above> <greek capital letter upsilon> <greek capital letter upsilon with dasia and varia>
+Compose <`> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and varia>
+Compose <`> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and varia>
+Compose <`> Dead<combining reversed comma above> <greek small letter epsilon> <greek small letter epsilon with dasia and varia>
+Compose <`> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and varia>
+Compose <`> Dead<combining reversed comma above> <greek small letter iota> <greek small letter iota with dasia and varia>
+Compose <`> Dead<combining reversed comma above> <greek small letter omicron> <greek small letter omicron with dasia and varia>
+Compose <`> Dead<combining reversed comma above> <greek small letter upsilon> <greek small letter upsilon with dasia and varia>
+Compose <`> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and varia>
+Compose <`> Dead<combining horn> <O> <latin capital letter o with horn and grave>
+Compose <`> Dead<combining horn> <U> <latin capital letter u with horn and grave>
+Compose <`> Dead<combining horn> <o> <latin small letter o with horn and grave>
+Compose <`> Dead<combining horn> <u> <latin small letter u with horn and grave>
+Compose <`> <space> <`>
+Compose <`> <"> <U> <latin capital letter u with diaeresis and grave>
+Compose <`> <"> <u> <latin small letter u with diaeresis and grave>
+Compose <`> <"> <greek small letter iota> <greek small letter iota with dialytika and varia>
+Compose <`> <"> <greek small letter upsilon> <greek small letter upsilon with dialytika and varia>
+Compose <`> <(> <greek capital letter alpha> <greek capital letter alpha with dasia and varia>
+Compose <`> <(> <greek capital letter epsilon> <greek capital letter epsilon with dasia and varia>
+Compose <`> <(> <greek capital letter eta> <greek capital letter eta with dasia and varia>
+Compose <`> <(> <greek capital letter iota> <greek capital letter iota with dasia and varia>
+Compose <`> <(> <greek capital letter omicron> <greek capital letter omicron with dasia and varia>
+Compose <`> <(> <greek capital letter upsilon> <greek capital letter upsilon with dasia and varia>
+Compose <`> <(> <greek capital letter omega> <greek capital letter omega with dasia and varia>
+Compose <`> <(> <greek small letter alpha> <greek small letter alpha with dasia and varia>
+Compose <`> <(> <greek small letter epsilon> <greek small letter epsilon with dasia and varia>
+Compose <`> <(> <greek small letter eta> <greek small letter eta with dasia and varia>
+Compose <`> <(> <greek small letter iota> <greek small letter iota with dasia and varia>
+Compose <`> <(> <greek small letter omicron> <greek small letter omicron with dasia and varia>
+Compose <`> <(> <greek small letter upsilon> <greek small letter upsilon with dasia and varia>
+Compose <`> <(> <greek small letter omega> <greek small letter omega with dasia and varia>
+Compose <`> <)> <greek capital letter alpha> <greek capital letter alpha with psili and varia>
+Compose <`> <)> <greek capital letter epsilon> <greek capital letter epsilon with psili and varia>
+Compose <`> <)> <greek capital letter eta> <greek capital letter eta with psili and varia>
+Compose <`> <)> <greek capital letter iota> <greek capital letter iota with psili and varia>
+Compose <`> <)> <greek capital letter omicron> <greek capital letter omicron with psili and varia>
+Compose <`> <)> <greek capital letter omega> <greek capital letter omega with psili and varia>
+Compose <`> <)> <greek small letter alpha> <greek small letter alpha with psili and varia>
+Compose <`> <)> <greek small letter epsilon> <greek small letter epsilon with psili and varia>
+Compose <`> <)> <greek small letter eta> <greek small letter eta with psili and varia>
+Compose <`> <)> <greek small letter iota> <greek small letter iota with psili and varia>
+Compose <`> <)> <greek small letter omicron> <greek small letter omicron with psili and varia>
+Compose <`> <)> <greek small letter upsilon> <greek small letter upsilon with psili and varia>
+Compose <`> <)> <greek small letter omega> <greek small letter omega with psili and varia>
+Compose <`> <+> <O> <latin capital letter o with horn and grave>
+Compose <`> <+> <U> <latin capital letter u with horn and grave>
+Compose <`> <+> <o> <latin small letter o with horn and grave>
+Compose <`> <+> <u> <latin small letter u with horn and grave>
+Compose <`> <A> <latin capital letter a with grave>
+Compose <`> <E> <latin capital letter e with grave>
+Compose <`> <I> <latin capital letter i with grave>
+Compose <`> <N> <latin capital letter n with grave>
+Compose <`> <O> <latin capital letter o with grave>
+Compose <`> <U> <latin capital letter u with grave>
+Compose <`> <W> <latin capital letter w with grave>
+Compose <`> <Y> <latin capital letter y with grave>
+Compose <`> <^> <A> <latin capital letter a with circumflex and grave>
+Compose <`> <^> <E> <latin capital letter e with circumflex and grave>
+Compose <`> <^> <O> <latin capital letter o with circumflex and grave>
+Compose <`> <^> <a> <latin small letter a with circumflex and grave>
+Compose <`> <^> <e> <latin small letter e with circumflex and grave>
+Compose <`> <^> <o> <latin small letter o with circumflex and grave>
+Compose <`> <_> <E> <latin capital letter e with macron and grave>
+Compose <`> <_> <O> <latin capital letter o with macron and grave>
+Compose <`> <_> <e> <latin small letter e with macron and grave>
+Compose <`> <_> <o> <latin small letter o with macron and grave>
+Compose <`> <a> <latin small letter a with grave>
+Compose <`> <b> <A> <latin capital letter a with breve and grave>
+Compose <`> <b> <a> <latin small letter a with breve and grave>
+Compose <`> <e> <latin small letter e with grave>
+Compose <`> <i> <latin small letter i with grave>
+Compose <`> <n> <latin small letter n with grave>
+Compose <`> <o> <latin small letter o with grave>
+Compose <`> <u> <latin small letter u with grave>
+Compose <`> <w> <latin small letter w with grave>
+Compose <`> <y> <latin small letter y with grave>
+Compose <`> <macron> <E> <latin capital letter e with macron and grave>
+Compose <`> <macron> <O> <latin capital letter o with macron and grave>
+Compose <`> <macron> <e> <latin small letter e with macron and grave>
+Compose <`> <macron> <o> <latin small letter o with macron and grave>
+Compose <`> <latin capital letter a with circumflex> <latin capital letter a with circumflex and grave>
+Compose <`> <latin capital letter e with circumflex> <latin capital letter e with circumflex and grave>
+Compose <`> <latin capital letter o with circumflex> <latin capital letter o with circumflex and grave>
+Compose <`> <latin capital letter u with diaeresis> <latin capital letter u with diaeresis and grave>
+Compose <`> <latin small letter a with circumflex> <latin small letter a with circumflex and grave>
+Compose <`> <latin small letter e with circumflex> <latin small letter e with circumflex and grave>
+Compose <`> <latin small letter o with circumflex> <latin small letter o with circumflex and grave>
+Compose <`> <latin small letter u with diaeresis> <latin small letter u with diaeresis and grave>
+Compose <`> <latin capital letter a with breve> <latin capital letter a with breve and grave>
+Compose <`> <latin small letter a with breve> <latin small letter a with breve and grave>
+Compose <`> <latin capital letter e with macron> <latin capital letter e with macron and grave>
+Compose <`> <latin small letter e with macron> <latin small letter e with macron and grave>
+Compose <`> <latin capital letter o with macron> <latin capital letter o with macron and grave>
+Compose <`> <latin small letter o with macron> <latin small letter o with macron and grave>
+Compose <`> <greek capital letter alpha> <greek capital letter alpha with varia>
+Compose <`> <greek capital letter epsilon> <greek capital letter epsilon with varia>
+Compose <`> <greek capital letter eta> <greek capital letter eta with varia>
+Compose <`> <greek capital letter iota> <greek capital letter iota with varia>
+Compose <`> <greek capital letter omicron> <greek capital letter omicron with varia>
+Compose <`> <greek capital letter upsilon> <greek capital letter upsilon with varia>
+Compose <`> <greek capital letter omega> <greek capital letter omega with varia>
+Compose <`> <greek small letter alpha> <greek small letter alpha with varia>
+Compose <`> <greek small letter epsilon> <greek small letter epsilon with varia>
+Compose <`> <greek small letter eta> <greek small letter eta with varia>
+Compose <`> <greek small letter iota> <greek small letter iota with varia>
+Compose <`> <greek small letter omicron> <greek small letter omicron with varia>
+Compose <`> <greek small letter upsilon> <greek small letter upsilon with varia>
+Compose <`> <greek small letter omega> <greek small letter omega with varia>
+Compose <`> <greek small letter iota with dialytika> <greek small letter iota with dialytika and varia>
+Compose <`> <greek small letter upsilon with dialytika> <greek small letter upsilon with dialytika and varia>
+Compose <`> <cyrillic capital letter ie> <cyrillic capital letter ie with grave>
+Compose <`> <cyrillic capital letter i> <cyrillic capital letter i with grave>
+Compose <`> <cyrillic small letter ie> <cyrillic small letter ie with grave>
+Compose <`> <cyrillic small letter i> <cyrillic small letter i with grave>
+Compose <`> <greek small letter alpha with psili> <greek small letter alpha with psili and varia>
+Compose <`> <greek small letter alpha with dasia> <greek small letter alpha with dasia and varia>
+Compose <`> <greek capital letter alpha with psili> <greek capital letter alpha with psili and varia>
+Compose <`> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and varia>
+Compose <`> <greek small letter epsilon with psili> <greek small letter epsilon with psili and varia>
+Compose <`> <greek small letter epsilon with dasia> <greek small letter epsilon with dasia and varia>
+Compose <`> <greek capital letter epsilon with psili> <greek capital letter epsilon with psili and varia>
+Compose <`> <greek capital letter epsilon with dasia> <greek capital letter epsilon with dasia and varia>
+Compose <`> <greek small letter eta with psili> <greek small letter eta with psili and varia>
+Compose <`> <greek small letter eta with dasia> <greek small letter eta with dasia and varia>
+Compose <`> <greek capital letter eta with psili> <greek capital letter eta with psili and varia>
+Compose <`> <greek capital letter eta with dasia> <greek capital letter eta with dasia and varia>
+Compose <`> <greek small letter iota with psili> <greek small letter iota with psili and varia>
+Compose <`> <greek small letter iota with dasia> <greek small letter iota with dasia and varia>
+Compose <`> <greek capital letter iota with psili> <greek capital letter iota with psili and varia>
+Compose <`> <greek capital letter iota with dasia> <greek capital letter iota with dasia and varia>
+Compose <`> <greek small letter omicron with psili> <greek small letter omicron with psili and varia>
+Compose <`> <greek small letter omicron with dasia> <greek small letter omicron with dasia and varia>
+Compose <`> <greek capital letter omicron with psili> <greek capital letter omicron with psili and varia>
+Compose <`> <greek capital letter omicron with dasia> <greek capital letter omicron with dasia and varia>
+Compose <`> <greek small letter upsilon with psili> <greek small letter upsilon with psili and varia>
+Compose <`> <greek small letter upsilon with dasia> <greek small letter upsilon with dasia and varia>
+Compose <`> <greek capital letter upsilon with dasia> <greek capital letter upsilon with dasia and varia>
+Compose <`> <greek small letter omega with psili> <greek small letter omega with psili and varia>
+Compose <`> <greek small letter omega with dasia> <greek small letter omega with dasia and varia>
+Compose <`> <greek capital letter omega with psili> <greek capital letter omega with psili and varia>
+Compose <`> <greek capital letter omega with dasia> <greek capital letter omega with dasia and varia>
+Compose <a> <"> <latin small letter a with diaeresis>
+Compose <a> <'> <latin small letter a with acute>
+Compose <a> <(> <latin small letter a with breve>
+Compose <a> <*> <latin small letter a with ring above>
+Compose <a> <,> <latin small letter a with ogonek>
+Compose <a> <-> <latin small letter a with macron>
+Compose <a> '>' <latin small letter a with circumflex>
+Compose <a> <^> <latin small letter a with circumflex>
+Compose <a> <_> <feminine ordinal indicator>
+Compose <a> <`> <latin small letter a with grave>
+Compose <a> <a> <latin small letter a with ring above>
+Compose <a> <e> <latin small letter ae>
+Compose <a> <~> <latin small letter a with tilde>
+Compose <a> <diaeresis> <latin small letter a with diaeresis>
+Compose <a> <acute accent> <latin small letter a with acute>
+Compose <b> Dead<combining dot below> <A> <latin capital letter a with breve and dot below>
+Compose <b> Dead<combining dot below> <a> <latin small letter a with breve and dot below>
+Compose <b> Dead<combining cedilla> <E> <latin capital letter e with cedilla and breve>
+Compose <b> Dead<combining cedilla> <e> <latin small letter e with cedilla and breve>
+Compose <b> <!> <A> <latin capital letter a with breve and dot below>
+Compose <b> <!> <a> <latin small letter a with breve and dot below>
+Compose <b> <,> <E> <latin capital letter e with cedilla and breve>
+Compose <b> <,> <e> <latin small letter e with cedilla and breve>
+Compose <b> <.> <latin small letter b with dot above>
+Compose <b> <A> <latin capital letter a with breve>
+Compose <b> <E> <latin capital letter e with breve>
+Compose <b> <G> <latin capital letter g with breve>
+Compose <b> <I> <latin capital letter i with breve>
+Compose <b> <O> <latin capital letter o with breve>
+Compose <b> <U> <latin capital letter u with breve>
+Compose <b> <a> <latin small letter a with breve>
+Compose <b> <e> <latin small letter e with breve>
+Compose <b> <g> <latin small letter g with breve>
+Compose <b> <i> <latin small letter i with breve>
+Compose <b> <o> <latin small letter o with breve>
+Compose <b> <u> <latin small letter u with breve>
+Compose <b> <cedilla> <E> <latin capital letter e with cedilla and breve>
+Compose <b> <cedilla> <e> <latin small letter e with cedilla and breve>
+Compose <b> <latin capital letter e with cedilla> <latin capital letter e with cedilla and breve>
+Compose <b> <latin small letter e with cedilla> <latin small letter e with cedilla and breve>
+Compose <b> <greek capital letter alpha> <greek capital letter alpha with vrachy>
+Compose <b> <greek capital letter iota> <greek capital letter iota with vrachy>
+Compose <b> <greek capital letter upsilon> <greek capital letter upsilon with vrachy>
+Compose <b> <greek small letter alpha> <greek small letter alpha with vrachy>
+Compose <b> <greek small letter iota> <greek small letter iota with vrachy>
+Compose <b> <greek small letter upsilon> <greek small letter upsilon with vrachy>
+Compose <b> <cyrillic capital letter a> <cyrillic capital letter a with breve>
+Compose <b> <cyrillic capital letter ie> <cyrillic capital letter ie with breve>
+Compose <b> <cyrillic capital letter zhe> <cyrillic capital letter zhe with breve>
+Compose <b> <cyrillic capital letter i> <cyrillic capital letter short i>
+Compose <b> <cyrillic capital letter u> <cyrillic capital letter short u>
+Compose <b> <cyrillic small letter a> <cyrillic small letter a with breve>
+Compose <b> <cyrillic small letter ie> <cyrillic small letter ie with breve>
+Compose <b> <cyrillic small letter zhe> <cyrillic small letter zhe with breve>
+Compose <b> <cyrillic small letter i> <cyrillic small letter short i>
+Compose <b> <cyrillic small letter u> <cyrillic small letter short u>
+Compose <b> <latin capital letter a with dot below> <latin capital letter a with breve and dot below>
+Compose <b> <latin small letter a with dot below> <latin small letter a with breve and dot below>
+Compose <c> Dead<combining diaeresis> <U> <latin capital letter u with diaeresis and caron>
+Compose <c> Dead<combining diaeresis> <u> <latin small letter u with diaeresis and caron>
+Compose <c> <"> <U> <latin capital letter u with diaeresis and caron>
+Compose <c> <"> <u> <latin small letter u with diaeresis and caron>
+Compose <c> <'> <latin small letter c with acute>
+Compose <c> <,> <latin small letter c with cedilla>
+Compose <c> <.> <latin small letter c with dot above>
+Compose <c> </> <cent sign>
+Compose <c> <0> <copyright sign>
+Compose <c> '<' <latin small letter c with caron>
+Compose <c> <=> <euro sign>
+Compose <c> <A> <latin capital letter a with caron>
+Compose <c> <C> <latin capital letter c with caron>
+Compose <c> <D> <latin capital letter d with caron>
+Compose <c> <E> <latin capital letter e with caron>
+Compose <c> <G> <latin capital letter g with caron>
+Compose <c> <H> <latin capital letter h with caron>
+Compose <c> <I> <latin capital letter i with caron>
+Compose <c> <K> <latin capital letter k with caron>
+Compose <c> <L> <latin capital letter l with caron>
+Compose <c> <N> <latin capital letter n with caron>
+Compose <c> <O> <latin capital letter o with caron>
+Compose <c> <R> <latin capital letter r with caron>
+Compose <c> <S> <latin capital letter s with caron>
+Compose <c> <T> <latin capital letter t with caron>
+Compose <c> <U> <latin capital letter u with caron>
+Compose <c> <Z> <latin capital letter z with caron>
+Compose <c> <a> <latin small letter a with caron>
+Compose <c> <c> <latin small letter c with caron>
+Compose <c> <d> <latin small letter d with caron>
+Compose <c> <e> <latin small letter e with caron>
+Compose <c> <g> <latin small letter g with caron>
+Compose <c> <h> <latin small letter h with caron>
+Compose <c> <i> <latin small letter i with caron>
+Compose <c> <j> <latin small letter j with caron>
+Compose <c> <k> <latin small letter k with caron>
+Compose <c> <l> <latin small letter l with caron>
+Compose <c> <n> <latin small letter n with caron>
+Compose <c> <o> <latin small letter o with caron>
+Compose <c> <r> <latin small letter r with caron>
+Compose <c> <s> <latin small letter s with caron>
+Compose <c> <t> <latin small letter t with caron>
+Compose <c> <u> <latin small letter u with caron>
+Compose <c> <z> <latin small letter z with caron>
+Compose <c> <|> <cent sign>
+Compose <c> <latin capital letter u with diaeresis> <latin capital letter u with diaeresis and caron>
+Compose <c> <latin small letter u with diaeresis> <latin small letter u with diaeresis and caron>
+Compose <c> <latin small letter ezh> <latin small letter ezh with caron>
+Compose <c> <caron> <latin capital letter ezh with caron>
+Compose <d> <-> <dong sign>
+Compose <d> <.> <latin small letter d with dot above>
+Compose <d> '<' <latin small letter d with caron>
+Compose <d> <h> <latin small letter eth>
+Compose <e> <"> <latin small letter e with diaeresis>
+Compose <e> <'> <latin small letter e with acute>
+Compose <e> <,> <latin small letter e with ogonek>
+Compose <e> <-> <latin small letter e with macron>
+Compose <e> <.> <latin small letter e with dot above>
+Compose <e> '<' <latin small letter e with caron>
+Compose <e> <=> <euro sign>
+Compose <e> '>' <latin small letter e with circumflex>
+Compose <e> <^> <latin small letter e with circumflex>
+Compose <e> <_> <latin small letter e with macron>
+Compose <e> <`> <latin small letter e with grave>
+Compose <e> <e> <latin small letter schwa>
+Compose <e> <diaeresis> <latin small letter e with diaeresis>
+Compose <e> <acute accent> <latin small letter e with acute>
+Compose <f> <.> <latin small letter f with dot above>
+Compose <f> <S> <latin small letter long s>
+Compose <f> <s> <latin small letter long s>
+Compose <g> <(> <latin small letter g with breve>
+Compose <g> <,> <latin small letter g with cedilla>
+Compose <g> <.> <latin small letter g with dot above>
+Compose <g> <U> <latin small letter g with breve>
+Compose <g> <breve> <latin small letter g with breve>
+Compose <i> <"> <latin small letter i with diaeresis>
+Compose <i> <'> <latin small letter i with acute>
+Compose <i> <,> <latin small letter i with ogonek>
+Compose <i> <-> <latin small letter i with macron>
+Compose <i> <.> <latin small letter dotless i>
+Compose <i> '>' <latin small letter i with circumflex>
+Compose <i> <^> <latin small letter i with circumflex>
+Compose <i> <_> <latin small letter i with macron>
+Compose <i> <`> <latin small letter i with grave>
+Compose <i> <~> <latin small letter i with tilde>
+Compose <i> <diaeresis> <latin small letter i with diaeresis>
+Compose <i> <acute accent> <latin small letter i with acute>
+Compose <k> <,> <latin small letter k with cedilla>
+Compose <k> <k> <latin small letter kra>
+Compose <l> <'> <latin small letter l with acute>
+Compose <l> <,> <latin small letter l with cedilla>
+Compose <l> <-> <pound sign>
+Compose <l> </> <latin small letter l with stroke>
+Compose <l> '<' <latin small letter l with caron>
+Compose <l> <=> <pound sign>
+Compose <l> <v> <|>
+Compose <m> <.> <latin small letter m with dot above>
+Compose <m> </> <mill sign>
+Compose <m> <u> <micro sign>
+Compose <n> <'> <latin small letter n with acute>
+Compose <n> <,> <latin small letter n with cedilla>
+Compose <n> <-> <latin small letter n with tilde>
+Compose <n> '<' <latin small letter n with caron>
+Compose <n> <g> <latin small letter eng>
+Compose <n> <~> <latin small letter n with tilde>
+Compose <o> <"> <latin small letter o with diaeresis>
+Compose <o> <'> <A> <latin capital letter a with ring above and acute>
+Compose <o> <'> <a> <latin small letter a with ring above and acute>
+Compose <o> <'> <latin small letter o with acute>
+Compose <o> <-> <latin small letter o with macron>
+Compose <o> </> <latin small letter o with stroke>
+Compose <o> '>' <latin small letter o with circumflex>
+Compose <o> <A> <latin capital letter a with ring above>
+Compose <o> <C> <copyright sign>
+Compose <o> <R> <registered sign>
+Compose <o> <U> <latin capital letter u with ring above>
+Compose <o> <X> <currency sign>
+Compose <o> <^> <latin small letter o with circumflex>
+Compose <o> <_> <masculine ordinal indicator>
+Compose <o> <`> <latin small letter o with grave>
+Compose <o> <a> <latin small letter a with ring above>
+Compose <o> <c> <copyright sign>
+Compose <o> <e> <latin small ligature oe>
+Compose <o> <o> <degree sign>
+Compose <o> <r> <registered sign>
+Compose <o> <s> <section sign>
+Compose <o> <u> <latin small letter u with ring above>
+Compose <o> <w> <latin small letter w with ring above>
+Compose <o> <x> <currency sign>
+Compose <o> <y> <latin small letter y with ring above>
+Compose <o> <~> <latin small letter o with tilde>
+Compose <o> <diaeresis> <latin small letter o with diaeresis>
+Compose <o> <acute accent> <latin small letter o with acute>
+Compose <p> <!> <pilcrow sign>
+Compose <p> <.> <latin small letter p with dot above>
+Compose <r> <'> <latin small letter r with acute>
+Compose <r> <,> <latin small letter r with cedilla>
+Compose <r> '<' <latin small letter r with caron>
+Compose <s> <!> <section sign>
+Compose <s> <'> <latin small letter s with acute>
+Compose <s> <,> <latin small letter s with cedilla>
+Compose <s> <.> <latin small letter s with dot above>
+Compose <s> <0> <section sign>
+Compose <s> <1> <superscript one>
+Compose <s> <2> <superscript two>
+Compose <s> <3> <superscript three>
+Compose <s> '<' <latin small letter s with caron>
+Compose <s> <M> <service mark>
+Compose <s> <m> <service mark>
+Compose <s> <o> <section sign>
+Compose <s> <s> <latin small letter sharp s>
+Compose <s> <cedilla> <latin small letter s with cedilla>
+Compose <t> <-> <latin small letter t with stroke>
+Compose <t> <.> <latin small letter t with dot above>
+Compose <t> </> <latin small letter t with stroke>
+Compose <t> '<' <latin small letter t with caron>
+Compose <t> <M> <trade mark sign>
+Compose <t> <h> <latin small letter thorn>
+Compose <t> <m> <trade mark sign>
+Compose <u> <"> <latin small letter u with diaeresis>
+Compose <u> <'> <latin small letter u with acute>
+Compose <u> <*> <latin small letter u with ring above>
+Compose <u> <,> <latin small letter u with ogonek>
+Compose <u> <-> <latin small letter u with macron>
+Compose <u> </> <micro sign>
+Compose <u> '>' <latin small letter u with circumflex>
+Compose <u> <^> <latin small letter u with circumflex>
+Compose <u> <_> <latin small letter u with macron>
+Compose <u> <`> <latin small letter u with grave>
+Compose <u> <u> <latin small letter u with breve>
+Compose <u> <~> <latin small letter u with tilde>
+Compose <u> <diaeresis> <latin small letter u with diaeresis>
+Compose <u> <acute accent> <latin small letter u with acute>
+Compose <v> <Z> <latin capital letter z with caron>
+Compose <v> <l> <|>
+Compose <v> <z> <latin small letter z with caron>
+Compose <w> <^> <latin small letter w with circumflex>
+Compose <x> <0> <currency sign>
+Compose <x> <O> <currency sign>
+Compose <x> <o> <currency sign>
+Compose <x> <x> <multiplication sign>
+Compose <y> <"> <latin small letter y with diaeresis>
+Compose <y> <'> <latin small letter y with acute>
+Compose <y> <-> <yen sign>
+Compose <y> <=> <yen sign>
+Compose <y> <^> <latin small letter y with circumflex>
+Compose <y> <diaeresis> <latin small letter y with diaeresis>
+Compose <y> <acute accent> <latin small letter y with acute>
+Compose <z> <'> <latin small letter z with acute>
+Compose <z> <.> <latin small letter z with dot above>
+Compose <z> '<' <latin small letter z with caron>
+Compose <|> <C> <cent sign>
+Compose <|> <c> <cent sign>
+Compose <~> Dead<combining circumflex accent> <A> <latin capital letter a with circumflex and tilde>
+Compose <~> Dead<combining circumflex accent> <E> <latin capital letter e with circumflex and tilde>
+Compose <~> Dead<combining circumflex accent> <O> <latin capital letter o with circumflex and tilde>
+Compose <~> Dead<combining circumflex accent> <a> <latin small letter a with circumflex and tilde>
+Compose <~> Dead<combining circumflex accent> <e> <latin small letter e with circumflex and tilde>
+Compose <~> Dead<combining circumflex accent> <o> <latin small letter o with circumflex and tilde>
+Compose <~> Dead<combining breve> <A> <latin capital letter a with breve and tilde>
+Compose <~> Dead<combining breve> <a> <latin small letter a with breve and tilde>
+Compose <~> Dead<combining diaeresis> <greek small letter iota> <greek small letter iota with dialytika and perispomeni>
+Compose <~> Dead<combining diaeresis> <greek small letter upsilon> <greek small letter upsilon with dialytika and perispomeni>
+Compose <~> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and perispomeni>
+Compose <~> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and perispomeni>
+Compose <~> Dead<combining comma above> <greek capital letter iota> <greek capital letter iota with psili and perispomeni>
+Compose <~> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and perispomeni>
+Compose <~> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and perispomeni>
+Compose <~> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and perispomeni>
+Compose <~> Dead<combining comma above> <greek small letter iota> <greek small letter iota with psili and perispomeni>
+Compose <~> Dead<combining comma above> <greek small letter upsilon> <greek small letter upsilon with psili and perispomeni>
+Compose <~> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and perispomeni>
+Compose <~> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and perispomeni>
+Compose <~> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and perispomeni>
+Compose <~> Dead<combining reversed comma above> <greek capital letter iota> <greek capital letter iota with dasia and perispomeni>
+Compose <~> Dead<combining reversed comma above> <greek capital letter upsilon> <greek capital letter upsilon with dasia and perispomeni>
+Compose <~> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and perispomeni>
+Compose <~> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and perispomeni>
+Compose <~> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and perispomeni>
+Compose <~> Dead<combining reversed comma above> <greek small letter iota> <greek small letter iota with dasia and perispomeni>
+Compose <~> Dead<combining reversed comma above> <greek small letter upsilon> <greek small letter upsilon with dasia and perispomeni>
+Compose <~> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and perispomeni>
+Compose <~> Dead<combining horn> <O> <latin capital letter o with horn and tilde>
+Compose <~> Dead<combining horn> <U> <latin capital letter u with horn and tilde>
+Compose <~> Dead<combining horn> <o> <latin small letter o with horn and tilde>
+Compose <~> Dead<combining horn> <u> <latin small letter u with horn and tilde>
+Compose <~> <space> <~>
+Compose <~> <"> <greek small letter iota> <greek small letter iota with dialytika and perispomeni>
+Compose <~> <"> <greek small letter upsilon> <greek small letter upsilon with dialytika and perispomeni>
+Compose <~> <(> <greek capital letter alpha> <greek capital letter alpha with dasia and perispomeni>
+Compose <~> <(> <greek capital letter eta> <greek capital letter eta with dasia and perispomeni>
+Compose <~> <(> <greek capital letter iota> <greek capital letter iota with dasia and perispomeni>
+Compose <~> <(> <greek capital letter upsilon> <greek capital letter upsilon with dasia and perispomeni>
+Compose <~> <(> <greek capital letter omega> <greek capital letter omega with dasia and perispomeni>
+Compose <~> <(> <greek small letter alpha> <greek small letter alpha with dasia and perispomeni>
+Compose <~> <(> <greek small letter eta> <greek small letter eta with dasia and perispomeni>
+Compose <~> <(> <greek small letter iota> <greek small letter iota with dasia and perispomeni>
+Compose <~> <(> <greek small letter upsilon> <greek small letter upsilon with dasia and perispomeni>
+Compose <~> <(> <greek small letter omega> <greek small letter omega with dasia and perispomeni>
+Compose <~> <)> <greek capital letter alpha> <greek capital letter alpha with psili and perispomeni>
+Compose <~> <)> <greek capital letter eta> <greek capital letter eta with psili and perispomeni>
+Compose <~> <)> <greek capital letter iota> <greek capital letter iota with psili and perispomeni>
+Compose <~> <)> <greek capital letter omega> <greek capital letter omega with psili and perispomeni>
+Compose <~> <)> <greek small letter alpha> <greek small letter alpha with psili and perispomeni>
+Compose <~> <)> <greek small letter eta> <greek small letter eta with psili and perispomeni>
+Compose <~> <)> <greek small letter iota> <greek small letter iota with psili and perispomeni>
+Compose <~> <)> <greek small letter upsilon> <greek small letter upsilon with psili and perispomeni>
+Compose <~> <)> <greek small letter omega> <greek small letter omega with psili and perispomeni>
+Compose <~> <+> <O> <latin capital letter o with horn and tilde>
+Compose <~> <+> <U> <latin capital letter u with horn and tilde>
+Compose <~> <+> <o> <latin small letter o with horn and tilde>
+Compose <~> <+> <u> <latin small letter u with horn and tilde>
+Compose <~> <A> <latin capital letter a with tilde>
+Compose <~> <E> <latin capital letter e with tilde>
+Compose <~> <I> <latin capital letter i with tilde>
+Compose <~> <N> <latin capital letter n with tilde>
+Compose <~> <O> <latin capital letter o with tilde>
+Compose <~> <U> <latin capital letter u with tilde>
+Compose <~> <V> <latin capital letter v with tilde>
+Compose <~> <Y> <latin capital letter y with tilde>
+Compose <~> <^> <A> <latin capital letter a with circumflex and tilde>
+Compose <~> <^> <E> <latin capital letter e with circumflex and tilde>
+Compose <~> <^> <O> <latin capital letter o with circumflex and tilde>
+Compose <~> <^> <a> <latin small letter a with circumflex and tilde>
+Compose <~> <^> <e> <latin small letter e with circumflex and tilde>
+Compose <~> <^> <o> <latin small letter o with circumflex and tilde>
+Compose <~> <a> <latin small letter a with tilde>
+Compose <~> <b> <A> <latin capital letter a with breve and tilde>
+Compose <~> <b> <a> <latin small letter a with breve and tilde>
+Compose <~> <e> <latin small letter e with tilde>
+Compose <~> <i> <latin small letter i with tilde>
+Compose <~> <n> <latin small letter n with tilde>
+Compose <~> <o> <latin small letter o with tilde>
+Compose <~> <u> <latin small letter u with tilde>
+Compose <~> <v> <latin small letter v with tilde>
+Compose <~> <y> <latin small letter y with tilde>
+Compose <~> <latin capital letter a with circumflex> <latin capital letter a with circumflex and tilde>
+Compose <~> <latin capital letter e with circumflex> <latin capital letter e with circumflex and tilde>
+Compose <~> <latin capital letter o with circumflex> <latin capital letter o with circumflex and tilde>
+Compose <~> <latin small letter a with circumflex> <latin small letter a with circumflex and tilde>
+Compose <~> <latin small letter e with circumflex> <latin small letter e with circumflex and tilde>
+Compose <~> <latin small letter o with circumflex> <latin small letter o with circumflex and tilde>
+Compose <~> <latin capital letter a with breve> <latin capital letter a with breve and tilde>
+Compose <~> <latin small letter a with breve> <latin small letter a with breve and tilde>
+Compose <~> <greek small letter alpha> <greek small letter alpha with perispomeni>
+Compose <~> <greek small letter eta> <greek small letter eta with perispomeni>
+Compose <~> <greek small letter iota> <greek small letter iota with perispomeni>
+Compose <~> <greek small letter upsilon> <greek small letter upsilon with perispomeni>
+Compose <~> <greek small letter omega> <greek small letter omega with perispomeni>
+Compose <~> <greek small letter iota with dialytika> <greek small letter iota with dialytika and perispomeni>
+Compose <~> <greek small letter upsilon with dialytika> <greek small letter upsilon with dialytika and perispomeni>
+Compose <~> <greek small letter alpha with psili> <greek small letter alpha with psili and perispomeni>
+Compose <~> <greek small letter alpha with dasia> <greek small letter alpha with dasia and perispomeni>
+Compose <~> <greek capital letter alpha with psili> <greek capital letter alpha with psili and perispomeni>
+Compose <~> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and perispomeni>
+Compose <~> <greek small letter eta with psili> <greek small letter eta with psili and perispomeni>
+Compose <~> <greek small letter eta with dasia> <greek small letter eta with dasia and perispomeni>
+Compose <~> <greek capital letter eta with psili> <greek capital letter eta with psili and perispomeni>
+Compose <~> <greek capital letter eta with dasia> <greek capital letter eta with dasia and perispomeni>
+Compose <~> <greek small letter iota with psili> <greek small letter iota with psili and perispomeni>
+Compose <~> <greek small letter iota with dasia> <greek small letter iota with dasia and perispomeni>
+Compose <~> <greek capital letter iota with psili> <greek capital letter iota with psili and perispomeni>
+Compose <~> <greek capital letter iota with dasia> <greek capital letter iota with dasia and perispomeni>
+Compose <~> <greek small letter upsilon with psili> <greek small letter upsilon with psili and perispomeni>
+Compose <~> <greek small letter upsilon with dasia> <greek small letter upsilon with dasia and perispomeni>
+Compose <~> <greek capital letter upsilon with dasia> <greek capital letter upsilon with dasia and perispomeni>
+Compose <~> <greek small letter omega with psili> <greek small letter omega with psili and perispomeni>
+Compose <~> <greek small letter omega with dasia> <greek small letter omega with dasia and perispomeni>
+Compose <~> <greek capital letter omega with psili> <greek capital letter omega with psili and perispomeni>
+Compose <~> <greek capital letter omega with dasia> <greek capital letter omega with dasia and perispomeni>
+Compose <diaeresis> Dead<combining grave accent> <greek dialytika and varia>
+Compose <diaeresis> Dead<combining acute accent> <greek dialytika tonos>
+Compose <diaeresis> Dead<combining tilde> <greek dialytika and perispomeni>
+Compose <diaeresis> <'> <greek dialytika tonos>
+Compose <diaeresis> <A> <latin capital letter a with diaeresis>
+Compose <diaeresis> <E> <latin capital letter e with diaeresis>
+Compose <diaeresis> <I> <latin capital letter i with diaeresis>
+Compose <diaeresis> <O> <latin capital letter o with diaeresis>
+Compose <diaeresis> <U> <latin capital letter u with diaeresis>
+Compose <diaeresis> <Y> <latin capital letter y with diaeresis>
+Compose <diaeresis> <`> <greek dialytika and varia>
+Compose <diaeresis> <a> <latin small letter a with diaeresis>
+Compose <diaeresis> <e> <latin small letter e with diaeresis>
+Compose <diaeresis> <i> <latin small letter i with diaeresis>
+Compose <diaeresis> <o> <latin small letter o with diaeresis>
+Compose <diaeresis> <u> <latin small letter u with diaeresis>
+Compose <diaeresis> <y> <latin small letter y with diaeresis>
+Compose <diaeresis> <~> <greek dialytika and perispomeni>
+Compose <diaeresis> <acute accent> <greek dialytika tonos>
+Compose <macron> Dead<combining tilde> <O> <latin capital letter o with tilde and macron>
+Compose <macron> Dead<combining tilde> <o> <latin small letter o with tilde and macron>
+Compose <macron> Dead<combining dot above> <A> <latin capital letter a with dot above and macron>
+Compose <macron> Dead<combining dot above> <O> <latin capital letter o with dot above and macron>
+Compose <macron> Dead<combining dot above> <a> <latin small letter a with dot above and macron>
+Compose <macron> Dead<combining dot above> <o> <latin small letter o with dot above and macron>
+Compose <macron> Dead<combining diaeresis> <A> <latin capital letter a with diaeresis and macron>
+Compose <macron> Dead<combining diaeresis> <O> <latin capital letter o with diaeresis and macron>
+Compose <macron> Dead<combining diaeresis> <U> <latin capital letter u with diaeresis and macron>
+Compose <macron> Dead<combining diaeresis> <a> <latin small letter a with diaeresis and macron>
+Compose <macron> Dead<combining diaeresis> <o> <latin small letter o with diaeresis and macron>
+Compose <macron> Dead<combining diaeresis> <u> <latin small letter u with diaeresis and macron>
+Compose <macron> Dead<combining dot below> <L> <latin capital letter l with dot below and macron>
+Compose <macron> Dead<combining dot below> <R> <latin capital letter r with dot below and macron>
+Compose <macron> Dead<combining dot below> <l> <latin small letter l with dot below and macron>
+Compose <macron> Dead<combining dot below> <r> <latin small letter r with dot below and macron>
+Compose <macron> Dead<combining ogonek> <O> <latin capital letter o with ogonek and macron>
+Compose <macron> Dead<combining ogonek> <o> <latin small letter o with ogonek and macron>
+Compose <macron> <!> <L> <latin capital letter l with dot below and macron>
+Compose <macron> <!> <R> <latin capital letter r with dot below and macron>
+Compose <macron> <!> <l> <latin small letter l with dot below and macron>
+Compose <macron> <!> <r> <latin small letter r with dot below and macron>
+Compose <macron> <"> <A> <latin capital letter a with diaeresis and macron>
+Compose <macron> <"> <O> <latin capital letter o with diaeresis and macron>
+Compose <macron> <"> <U> <latin capital letter u with diaeresis and macron>
+Compose <macron> <"> <a> <latin small letter a with diaeresis and macron>
+Compose <macron> <"> <o> <latin small letter o with diaeresis and macron>
+Compose <macron> <"> <u> <latin small letter u with diaeresis and macron>
+Compose <macron> <.> <A> <latin capital letter a with dot above and macron>
+Compose <macron> <.> <O> <latin capital letter o with dot above and macron>
+Compose <macron> <.> <a> <latin small letter a with dot above and macron>
+Compose <macron> <.> <o> <latin small letter o with dot above and macron>
+Compose <macron> <;> <O> <latin capital letter o with ogonek and macron>
+Compose <macron> <;> <o> <latin small letter o with ogonek and macron>
+Compose <macron> <A> <latin capital letter a with macron>
+Compose <macron> <E> <latin capital letter e with macron>
+Compose <macron> <G> <latin capital letter g with macron>
+Compose <macron> <I> <latin capital letter i with macron>
+Compose <macron> <O> <latin capital letter o with macron>
+Compose <macron> <U> <latin capital letter u with macron>
+Compose <macron> <Y> <latin capital letter y with macron>
+Compose <macron> <a> <latin small letter a with macron>
+Compose <macron> <e> <latin small letter e with macron>
+Compose <macron> <g> <latin small letter g with macron>
+Compose <macron> <i> <latin small letter i with macron>
+Compose <macron> <o> <latin small letter o with macron>
+Compose <macron> <u> <latin small letter u with macron>
+Compose <macron> <y> <latin small letter y with macron>
+Compose <macron> <~> <O> <latin capital letter o with tilde and macron>
+Compose <macron> <~> <o> <latin small letter o with tilde and macron>
+Compose <macron> <latin capital letter a with diaeresis> <latin capital letter a with diaeresis and macron>
+Compose <macron> <latin capital letter ae> <latin capital letter ae with macron>
+Compose <macron> <latin capital letter o with tilde> <latin capital letter o with tilde and macron>
+Compose <macron> <latin capital letter o with diaeresis> <latin capital letter o with diaeresis and macron>
+Compose <macron> <latin capital letter u with diaeresis> <latin capital letter u with diaeresis and macron>
+Compose <macron> <latin small letter a with diaeresis> <latin small letter a with diaeresis and macron>
+Compose <macron> <latin small letter ae> <latin small letter ae with macron>
+Compose <macron> <latin small letter o with tilde> <latin small letter o with tilde and macron>
+Compose <macron> <latin small letter o with diaeresis> <latin small letter o with diaeresis and macron>
+Compose <macron> <latin small letter u with diaeresis> <latin small letter u with diaeresis and macron>
+Compose <macron> <latin small letter e with ogonek> <latin capital letter o with ogonek and macron>
+Compose <macron> <latin small letter o with ogonek> <latin small letter o with ogonek and macron>
+Compose <macron> <latin capital letter a with dot above> <latin capital letter a with dot above and macron>
+Compose <macron> <latin small letter a with dot above> <latin small letter a with dot above and macron>
+Compose <macron> <latin capital letter o with dot above> <latin capital letter o with dot above and macron>
+Compose <macron> <latin small letter o with dot above> <latin small letter o with dot above and macron>
+Compose <macron> <greek capital letter alpha> <greek capital letter alpha with macron>
+Compose <macron> <greek capital letter iota> <greek capital letter iota with macron>
+Compose <macron> <greek capital letter upsilon> <greek capital letter upsilon with macron>
+Compose <macron> <greek small letter alpha> <greek small letter alpha with macron>
+Compose <macron> <greek small letter iota> <greek small letter iota with macron>
+Compose <macron> <greek small letter upsilon> <greek small letter upsilon with macron>
+Compose <macron> <cyrillic capital letter i> <cyrillic capital letter i with macron>
+Compose <macron> <cyrillic capital letter u> <cyrillic capital letter u with macron>
+Compose <macron> <cyrillic small letter i> <cyrillic small letter i with macron>
+Compose <macron> <cyrillic small letter u> <cyrillic small letter u with macron>
+Compose <macron> <latin capital letter l with dot below> <latin capital letter l with dot below and macron>
+Compose <macron> <latin small letter l with dot below> <latin small letter l with dot below and macron>
+Compose <macron> <latin capital letter r with dot below> <latin capital letter r with dot below and macron>
+Compose <macron> <latin small letter r with dot below> <latin small letter r with dot below and macron>
+Compose <acute accent> Dead<combining circumflex accent> <A> <latin capital letter a with circumflex and acute>
+Compose <acute accent> Dead<combining circumflex accent> <E> <latin capital letter e with circumflex and acute>
+Compose <acute accent> Dead<combining circumflex accent> <O> <latin capital letter o with circumflex and acute>
+Compose <acute accent> Dead<combining circumflex accent> <a> <latin small letter a with circumflex and acute>
+Compose <acute accent> Dead<combining circumflex accent> <e> <latin small letter e with circumflex and acute>
+Compose <acute accent> Dead<combining circumflex accent> <o> <latin small letter o with circumflex and acute>
+Compose <acute accent> Dead<combining tilde> <O> <latin capital letter o with tilde and acute>
+Compose <acute accent> Dead<combining tilde> <U> <latin capital letter u with tilde and acute>
+Compose <acute accent> Dead<combining tilde> <o> <latin small letter o with tilde and acute>
+Compose <acute accent> Dead<combining tilde> <u> <latin small letter u with tilde and acute>
+Compose <acute accent> Dead<combining macron> <E> <latin capital letter e with macron and acute>
+Compose <acute accent> Dead<combining macron> <O> <latin capital letter o with macron and acute>
+Compose <acute accent> Dead<combining macron> <e> <latin small letter e with macron and acute>
+Compose <acute accent> Dead<combining macron> <o> <latin small letter o with macron and acute>
+Compose <acute accent> Dead<combining breve> <A> <latin capital letter a with breve and acute>
+Compose <acute accent> Dead<combining breve> <a> <latin small letter a with breve and acute>
+Compose <acute accent> Dead<combining diaeresis> <I> <latin capital letter i with diaeresis and acute>
+Compose <acute accent> Dead<combining diaeresis> <U> <latin capital letter u with diaeresis and acute>
+Compose <acute accent> Dead<combining diaeresis> <i> <latin small letter i with diaeresis and acute>
+Compose <acute accent> Dead<combining diaeresis> <u> <latin small letter u with diaeresis and acute>
+Compose <acute accent> Dead<combining diaeresis> <greek small letter iota> <greek small letter iota with dialytika and tonos>
+Compose <acute accent> Dead<combining diaeresis> <greek small letter upsilon> <greek small letter upsilon with dialytika and tonos>
+Compose <acute accent> Dead<combining ring above> <A> <latin capital letter a with ring above and acute>
+Compose <acute accent> Dead<combining ring above> <a> <latin small letter a with ring above and acute>
+Compose <acute accent> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and oxia>
+Compose <acute accent> Dead<combining comma above> <greek capital letter epsilon> <greek capital letter epsilon with psili and oxia>
+Compose <acute accent> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and oxia>
+Compose <acute accent> Dead<combining comma above> <greek capital letter iota> <greek capital letter iota with psili and oxia>
+Compose <acute accent> Dead<combining comma above> <greek capital letter omicron> <greek capital letter omicron with psili and oxia>
+Compose <acute accent> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and oxia>
+Compose <acute accent> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and oxia>
+Compose <acute accent> Dead<combining comma above> <greek small letter epsilon> <greek small letter epsilon with psili and oxia>
+Compose <acute accent> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and oxia>
+Compose <acute accent> Dead<combining comma above> <greek small letter iota> <greek small letter iota with psili and oxia>
+Compose <acute accent> Dead<combining comma above> <greek small letter omicron> <greek small letter omicron with psili and oxia>
+Compose <acute accent> Dead<combining comma above> <greek small letter upsilon> <greek small letter upsilon with psili and oxia>
+Compose <acute accent> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and oxia>
+Compose <acute accent> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia>
+Compose <acute accent> Dead<combining reversed comma above> <greek capital letter epsilon> <greek capital letter epsilon with dasia and oxia>
+Compose <acute accent> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and oxia>
+Compose <acute accent> Dead<combining reversed comma above> <greek capital letter iota> <greek capital letter iota with dasia and oxia>
+Compose <acute accent> Dead<combining reversed comma above> <greek capital letter omicron> <greek capital letter omicron with dasia and oxia>
+Compose <acute accent> Dead<combining reversed comma above> <greek capital letter upsilon> <greek capital letter upsilon with dasia and oxia>
+Compose <acute accent> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and oxia>
+Compose <acute accent> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and oxia>
+Compose <acute accent> Dead<combining reversed comma above> <greek small letter epsilon> <greek small letter epsilon with dasia and oxia>
+Compose <acute accent> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and oxia>
+Compose <acute accent> Dead<combining reversed comma above> <greek small letter iota> <greek small letter iota with dasia and oxia>
+Compose <acute accent> Dead<combining reversed comma above> <greek small letter omicron> <greek small letter omicron with dasia and oxia>
+Compose <acute accent> Dead<combining reversed comma above> <greek small letter upsilon> <greek small letter upsilon with dasia and oxia>
+Compose <acute accent> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and oxia>
+Compose <acute accent> Dead<combining horn> <O> <latin capital letter o with horn and acute>
+Compose <acute accent> Dead<combining horn> <U> <latin capital letter u with horn and acute>
+Compose <acute accent> Dead<combining horn> <o> <latin small letter o with horn and acute>
+Compose <acute accent> Dead<combining horn> <u> <latin small letter u with horn and acute>
+Compose <acute accent> Dead<combining cedilla> <C> <latin capital letter c with cedilla and acute>
+Compose <acute accent> Dead<combining cedilla> <c> <latin small letter c with cedilla and acute>
+Compose <acute accent> <"> <I> <latin capital letter i with diaeresis and acute>
+Compose <acute accent> <"> <U> <latin capital letter u with diaeresis and acute>
+Compose <acute accent> <"> <i> <latin small letter i with diaeresis and acute>
+Compose <acute accent> <"> <u> <latin small letter u with diaeresis and acute>
+Compose <acute accent> <"> <greek small letter iota> <greek small letter iota with dialytika and tonos>
+Compose <acute accent> <"> <greek small letter upsilon> <greek small letter upsilon with dialytika and tonos>
+Compose <acute accent> <(> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia>
+Compose <acute accent> <(> <greek capital letter epsilon> <greek capital letter epsilon with dasia and oxia>
+Compose <acute accent> <(> <greek capital letter eta> <greek capital letter eta with dasia and oxia>
+Compose <acute accent> <(> <greek capital letter iota> <greek capital letter iota with dasia and oxia>
+Compose <acute accent> <(> <greek capital letter omicron> <greek capital letter omicron with dasia and oxia>
+Compose <acute accent> <(> <greek capital letter upsilon> <greek capital letter upsilon with dasia and oxia>
+Compose <acute accent> <(> <greek capital letter omega> <greek capital letter omega with dasia and oxia>
+Compose <acute accent> <(> <greek small letter alpha> <greek small letter alpha with dasia and oxia>
+Compose <acute accent> <(> <greek small letter epsilon> <greek small letter epsilon with dasia and oxia>
+Compose <acute accent> <(> <greek small letter eta> <greek small letter eta with dasia and oxia>
+Compose <acute accent> <(> <greek small letter iota> <greek small letter iota with dasia and oxia>
+Compose <acute accent> <(> <greek small letter omicron> <greek small letter omicron with dasia and oxia>
+Compose <acute accent> <(> <greek small letter upsilon> <greek small letter upsilon with dasia and oxia>
+Compose <acute accent> <(> <greek small letter omega> <greek small letter omega with dasia and oxia>
+Compose <acute accent> <)> <greek capital letter alpha> <greek capital letter alpha with psili and oxia>
+Compose <acute accent> <)> <greek capital letter epsilon> <greek capital letter epsilon with psili and oxia>
+Compose <acute accent> <)> <greek capital letter eta> <greek capital letter eta with psili and oxia>
+Compose <acute accent> <)> <greek capital letter iota> <greek capital letter iota with psili and oxia>
+Compose <acute accent> <)> <greek capital letter omicron> <greek capital letter omicron with psili and oxia>
+Compose <acute accent> <)> <greek capital letter omega> <greek capital letter omega with psili and oxia>
+Compose <acute accent> <)> <greek small letter alpha> <greek small letter alpha with psili and oxia>
+Compose <acute accent> <)> <greek small letter epsilon> <greek small letter epsilon with psili and oxia>
+Compose <acute accent> <)> <greek small letter eta> <greek small letter eta with psili and oxia>
+Compose <acute accent> <)> <greek small letter iota> <greek small letter iota with psili and oxia>
+Compose <acute accent> <)> <greek small letter omicron> <greek small letter omicron with psili and oxia>
+Compose <acute accent> <)> <greek small letter upsilon> <greek small letter upsilon with psili and oxia>
+Compose <acute accent> <)> <greek small letter omega> <greek small letter omega with psili and oxia>
+Compose <acute accent> <+> <O> <latin capital letter o with horn and acute>
+Compose <acute accent> <+> <U> <latin capital letter u with horn and acute>
+Compose <acute accent> <+> <o> <latin small letter o with horn and acute>
+Compose <acute accent> <+> <u> <latin small letter u with horn and acute>
+Compose <acute accent> <,> <C> <latin capital letter c with cedilla and acute>
+Compose <acute accent> <,> <c> <latin small letter c with cedilla and acute>
+Compose <acute accent> </> <O> <latin capital letter o with stroke and acute>
+Compose <acute accent> </> <o> <latin small letter o with stroke and acute>
+Compose <acute accent> <A> <latin capital letter a with acute>
+Compose <acute accent> <C> <latin capital letter c with acute>
+Compose <acute accent> <E> <latin capital letter e with acute>
+Compose <acute accent> <G> <latin capital letter g with acute>
+Compose <acute accent> <I> <latin capital letter i with acute>
+Compose <acute accent> <K> <latin capital letter k with acute>
+Compose <acute accent> <L> <latin capital letter l with acute>
+Compose <acute accent> <M> <latin capital letter m with acute>
+Compose <acute accent> <N> <latin capital letter n with acute>
+Compose <acute accent> <O> <latin capital letter o with acute>
+Compose <acute accent> <P> <latin capital letter p with acute>
+Compose <acute accent> <R> <latin capital letter r with acute>
+Compose <acute accent> <S> <latin capital letter s with acute>
+Compose <acute accent> <U> <latin capital letter u with acute>
+Compose <acute accent> <W> <latin capital letter w with acute>
+Compose <acute accent> <Y> <latin capital letter y with acute>
+Compose <acute accent> <Z> <latin capital letter z with acute>
+Compose <acute accent> <^> <A> <latin capital letter a with circumflex and acute>
+Compose <acute accent> <^> <E> <latin capital letter e with circumflex and acute>
+Compose <acute accent> <^> <O> <latin capital letter o with circumflex and acute>
+Compose <acute accent> <^> <a> <latin small letter a with circumflex and acute>
+Compose <acute accent> <^> <e> <latin small letter e with circumflex and acute>
+Compose <acute accent> <^> <o> <latin small letter o with circumflex and acute>
+Compose <acute accent> <_> <E> <latin capital letter e with macron and acute>
+Compose <acute accent> <_> <O> <latin capital letter o with macron and acute>
+Compose <acute accent> <_> <e> <latin small letter e with macron and acute>
+Compose <acute accent> <_> <o> <latin small letter o with macron and acute>
+Compose <acute accent> <a> <latin small letter a with acute>
+Compose <acute accent> <b> <A> <latin capital letter a with breve and acute>
+Compose <acute accent> <b> <a> <latin small letter a with breve and acute>
+Compose <acute accent> <c> <latin small letter c with acute>
+Compose <acute accent> <e> <latin small letter e with acute>
+Compose <acute accent> <g> <latin small letter g with acute>
+Compose <acute accent> <i> <latin small letter i with acute>
+Compose <acute accent> <k> <latin small letter k with acute>
+Compose <acute accent> <l> <latin small letter l with acute>
+Compose <acute accent> <m> <latin small letter m with acute>
+Compose <acute accent> <n> <latin small letter n with acute>
+Compose <acute accent> <o> <latin small letter o with acute>
+Compose <acute accent> <p> <latin small letter p with acute>
+Compose <acute accent> <r> <latin small letter r with acute>
+Compose <acute accent> <s> <latin small letter s with acute>
+Compose <acute accent> <u> <latin small letter u with acute>
+Compose <acute accent> <w> <latin small letter w with acute>
+Compose <acute accent> <y> <latin small letter y with acute>
+Compose <acute accent> <z> <latin small letter z with acute>
+Compose <acute accent> <~> <O> <latin capital letter o with tilde and acute>
+Compose <acute accent> <~> <U> <latin capital letter u with tilde and acute>
+Compose <acute accent> <~> <o> <latin small letter o with tilde and acute>
+Compose <acute accent> <~> <u> <latin small letter u with tilde and acute>
+Compose <acute accent> <macron> <E> <latin capital letter e with macron and acute>
+Compose <acute accent> <macron> <O> <latin capital letter o with macron and acute>
+Compose <acute accent> <macron> <e> <latin small letter e with macron and acute>
+Compose <acute accent> <macron> <o> <latin small letter o with macron and acute>
+Compose <acute accent> <cedilla> <C> <latin capital letter c with cedilla and acute>
+Compose <acute accent> <cedilla> <c> <latin small letter c with cedilla and acute>
+Compose <acute accent> <latin capital letter a with circumflex> <latin capital letter a with circumflex and acute>
+Compose <acute accent> <latin capital letter a with ring above> <latin capital letter a with ring above and acute>
+Compose <acute accent> <latin capital letter ae> <latin capital letter ae with acute>
+Compose <acute accent> <latin capital letter c with cedilla> <latin capital letter c with cedilla and acute>
+Compose <acute accent> <latin capital letter e with circumflex> <latin capital letter e with circumflex and acute>
+Compose <acute accent> <latin capital letter i with diaeresis> <latin capital letter i with diaeresis and acute>
+Compose <acute accent> <latin capital letter o with circumflex> <latin capital letter o with circumflex and acute>
+Compose <acute accent> <latin capital letter o with tilde> <latin capital letter o with tilde and acute>
+Compose <acute accent> <latin capital letter o with stroke> <latin capital letter o with stroke and acute>
+Compose <acute accent> <latin capital letter u with diaeresis> <latin capital letter u with diaeresis and acute>
+Compose <acute accent> <latin small letter a with circumflex> <latin small letter a with circumflex and acute>
+Compose <acute accent> <latin small letter a with ring above> <latin small letter a with ring above and acute>
+Compose <acute accent> <latin small letter ae> <latin small letter ae with acute>
+Compose <acute accent> <latin small letter c with cedilla> <latin small letter c with cedilla and acute>
+Compose <acute accent> <latin small letter e with circumflex> <latin small letter e with circumflex and acute>
+Compose <acute accent> <latin small letter i with diaeresis> <latin small letter i with diaeresis and acute>
+Compose <acute accent> <latin small letter o with circumflex> <latin small letter o with circumflex and acute>
+Compose <acute accent> <latin small letter o with tilde> <latin small letter o with tilde and acute>
+Compose <acute accent> <latin small letter o with stroke> <latin small letter o with stroke and acute>
+Compose <acute accent> <latin small letter u with diaeresis> <latin small letter u with diaeresis and acute>
+Compose <acute accent> <latin capital letter a with breve> <latin capital letter a with breve and acute>
+Compose <acute accent> <latin small letter a with breve> <latin small letter a with breve and acute>
+Compose <acute accent> <latin capital letter e with macron> <latin capital letter e with macron and acute>
+Compose <acute accent> <latin small letter e with macron> <latin small letter e with macron and acute>
+Compose <acute accent> <latin capital letter o with macron> <latin capital letter o with macron and acute>
+Compose <acute accent> <latin small letter o with macron> <latin small letter o with macron and acute>
+Compose <acute accent> <latin capital letter u with tilde> <latin capital letter u with tilde and acute>
+Compose <acute accent> <latin small letter u with tilde> <latin small letter u with tilde and acute>
+Compose <acute accent> <greek capital letter alpha> <greek capital letter alpha with tonos>
+Compose <acute accent> <greek capital letter epsilon> <greek capital letter epsilon with tonos>
+Compose <acute accent> <greek capital letter eta> <greek capital letter eta with tonos>
+Compose <acute accent> <greek capital letter iota> <greek capital letter iota with tonos>
+Compose <acute accent> <greek capital letter omicron> <greek capital letter omicron with tonos>
+Compose <acute accent> <greek capital letter upsilon> <greek capital letter upsilon with tonos>
+Compose <acute accent> <greek capital letter omega> <greek capital letter omega with tonos>
+Compose <acute accent> <greek small letter alpha> <greek small letter alpha with tonos>
+Compose <acute accent> <greek small letter epsilon> <greek small letter epsilon with tonos>
+Compose <acute accent> <greek small letter eta> <greek small letter eta with tonos>
+Compose <acute accent> <greek small letter iota> <greek small letter iota with tonos>
+Compose <acute accent> <greek small letter omicron> <greek small letter omicron with tonos>
+Compose <acute accent> <greek small letter upsilon> <greek small letter upsilon with tonos>
+Compose <acute accent> <greek small letter omega> <greek small letter omega with tonos>
+Compose <acute accent> <greek small letter iota with dialytika> <greek small letter iota with dialytika and tonos>
+Compose <acute accent> <greek small letter upsilon with dialytika> <greek small letter upsilon with dialytika and tonos>
+Compose <acute accent> <cyrillic capital letter ghe> <cyrillic capital letter gje>
+Compose <acute accent> <cyrillic capital letter ka> <cyrillic capital letter kje>
+Compose <acute accent> <cyrillic small letter ghe> <cyrillic small letter gje>
+Compose <acute accent> <cyrillic small letter ka> <cyrillic small letter kje>
+Compose <acute accent> <greek small letter alpha with psili> <greek small letter alpha with psili and oxia>
+Compose <acute accent> <greek small letter alpha with dasia> <greek small letter alpha with dasia and oxia>
+Compose <acute accent> <greek capital letter alpha with psili> <greek capital letter alpha with psili and oxia>
+Compose <acute accent> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and oxia>
+Compose <acute accent> <greek small letter epsilon with psili> <greek small letter epsilon with psili and oxia>
+Compose <acute accent> <greek small letter epsilon with dasia> <greek small letter epsilon with dasia and oxia>
+Compose <acute accent> <greek capital letter epsilon with psili> <greek capital letter epsilon with psili and oxia>
+Compose <acute accent> <greek capital letter epsilon with dasia> <greek capital letter epsilon with dasia and oxia>
+Compose <acute accent> <greek small letter eta with psili> <greek small letter eta with psili and oxia>
+Compose <acute accent> <greek small letter eta with dasia> <greek small letter eta with dasia and oxia>
+Compose <acute accent> <greek capital letter eta with psili> <greek capital letter eta with psili and oxia>
+Compose <acute accent> <greek capital letter eta with dasia> <greek capital letter eta with dasia and oxia>
+Compose <acute accent> <greek small letter iota with psili> <greek small letter iota with psili and oxia>
+Compose <acute accent> <greek small letter iota with dasia> <greek small letter iota with dasia and oxia>
+Compose <acute accent> <greek capital letter iota with psili> <greek capital letter iota with psili and oxia>
+Compose <acute accent> <greek capital letter iota with dasia> <greek capital letter iota with dasia and oxia>
+Compose <acute accent> <greek small letter omicron with psili> <greek small letter omicron with psili and oxia>
+Compose <acute accent> <greek small letter omicron with dasia> <greek small letter omicron with dasia and oxia>
+Compose <acute accent> <greek capital letter omicron with psili> <greek capital letter omicron with psili and oxia>
+Compose <acute accent> <greek capital letter omicron with dasia> <greek capital letter omicron with dasia and oxia>
+Compose <acute accent> <greek small letter upsilon with psili> <greek small letter upsilon with psili and oxia>
+Compose <acute accent> <greek small letter upsilon with dasia> <greek small letter upsilon with dasia and oxia>
+Compose <acute accent> <greek capital letter upsilon with dasia> <greek capital letter upsilon with dasia and oxia>
+Compose <acute accent> <greek small letter omega with psili> <greek small letter omega with psili and oxia>
+Compose <acute accent> <greek small letter omega with dasia> <greek small letter omega with dasia and oxia>
+Compose <acute accent> <greek capital letter omega with psili> <greek capital letter omega with psili and oxia>
+Compose <acute accent> <greek capital letter omega with dasia> <greek capital letter omega with dasia and oxia>
+Compose <cedilla> <C> <latin capital letter c with cedilla>
+Compose <cedilla> <D> <latin capital letter d with cedilla>
+Compose <cedilla> <E> <latin capital letter e with cedilla>
+Compose <cedilla> <G> <latin capital letter g with cedilla>
+Compose <cedilla> <H> <latin capital letter h with cedilla>
+Compose <cedilla> <K> <latin capital letter k with cedilla>
+Compose <cedilla> <L> <latin capital letter l with cedilla>
+Compose <cedilla> <N> <latin capital letter n with cedilla>
+Compose <cedilla> <R> <latin capital letter r with cedilla>
+Compose <cedilla> <S> <latin capital letter s with cedilla>
+Compose <cedilla> <T> <latin capital letter t with cedilla>
+Compose <cedilla> <c> <latin small letter c with cedilla>
+Compose <cedilla> <d> <latin small letter d with cedilla>
+Compose <cedilla> <e> <latin small letter e with cedilla>
+Compose <cedilla> <g> <latin small letter g with cedilla>
+Compose <cedilla> <h> <latin small letter h with cedilla>
+Compose <cedilla> <k> <latin small letter k with cedilla>
+Compose <cedilla> <l> <latin small letter l with cedilla>
+Compose <cedilla> <n> <latin small letter n with cedilla>
+Compose <cedilla> <r> <latin small letter r with cedilla>
+Compose <cedilla> <s> <latin small letter s with cedilla>
+Compose <cedilla> <t> <latin small letter t with cedilla>
+Compose <breve> <G> <latin capital letter g with breve>
+Compose <breve> <g> <latin small letter g with breve>
+Compose <greek capital letter alpha> <'> <greek capital letter alpha with tonos>
+Compose <greek capital letter epsilon> <'> <greek capital letter epsilon with tonos>
+Compose <greek capital letter eta> <'> <greek capital letter eta with tonos>
+Compose <greek capital letter iota> <"> <greek capital letter iota with dialytika>
+Compose <greek capital letter iota> <'> <greek capital letter iota with tonos>
+Compose <greek capital letter omicron> <'> <greek capital letter omicron with tonos>
+Compose <greek capital letter upsilon> <"> <greek capital letter upsilon with dialytika>
+Compose <greek capital letter upsilon> <'> <greek capital letter upsilon with tonos>
+Compose <greek capital letter omega> <'> <greek capital letter omega with tonos>
+Compose <greek small letter alpha> <'> <greek small letter alpha with tonos>
+Compose <greek small letter epsilon> <'> <greek small letter epsilon with tonos>
+Compose <greek small letter eta> <'> <greek small letter eta with tonos>
+Compose <greek small letter iota> Dead<combining grave accent> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <(> <greek capital letter alpha> <greek capital letter alpha with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <(> <greek capital letter eta> <greek capital letter eta with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <(> <greek capital letter omega> <greek capital letter omega with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <(> <greek small letter alpha> <greek small letter alpha with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <(> <greek small letter eta> <greek small letter eta with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <(> <greek small letter omega> <greek small letter omega with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <)> <greek capital letter alpha> <greek capital letter alpha with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <)> <greek capital letter eta> <greek capital letter eta with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <)> <greek capital letter omega> <greek capital letter omega with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <)> <greek small letter alpha> <greek small letter alpha with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <)> <greek small letter eta> <greek small letter eta with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <)> <greek small letter omega> <greek small letter omega with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <greek small letter alpha> <greek small letter alpha with varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <greek small letter eta> <greek small letter eta with varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <greek small letter omega> <greek small letter omega with varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <greek small letter alpha with psili> <greek small letter alpha with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <greek small letter alpha with dasia> <greek small letter alpha with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <greek capital letter alpha with psili> <greek capital letter alpha with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <greek small letter eta with psili> <greek small letter eta with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <greek small letter eta with dasia> <greek small letter eta with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <greek capital letter eta with psili> <greek capital letter eta with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <greek capital letter eta with dasia> <greek capital letter eta with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <greek small letter omega with psili> <greek small letter omega with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <greek small letter omega with dasia> <greek small letter omega with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <greek capital letter omega with psili> <greek capital letter omega with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining grave accent> <greek capital letter omega with dasia> <greek capital letter omega with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <(> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <(> <greek capital letter eta> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <(> <greek capital letter omega> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <(> <greek small letter alpha> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <(> <greek small letter eta> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <(> <greek small letter omega> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <)> <greek capital letter alpha> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <)> <greek capital letter eta> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <)> <greek capital letter omega> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <)> <greek small letter alpha> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <)> <greek small letter eta> <greek small letter eta with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <)> <greek small letter omega> <greek small letter omega with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <greek small letter alpha> <greek small letter alpha with oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <greek small letter eta> <greek small letter eta with oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <greek small letter omega> <greek small letter omega with oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <greek small letter alpha with psili> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <greek small letter alpha with dasia> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <greek capital letter alpha with psili> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <greek small letter eta with psili> <greek small letter eta with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <greek small letter eta with dasia> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <greek capital letter eta with psili> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <greek capital letter eta with dasia> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <greek small letter omega with psili> <greek small letter omega with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <greek small letter omega with dasia> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <greek capital letter omega with psili> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining acute accent> <greek capital letter omega with dasia> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <(> <greek capital letter alpha> <greek capital letter alpha with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <(> <greek capital letter eta> <greek capital letter eta with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <(> <greek capital letter omega> <greek capital letter omega with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <(> <greek small letter alpha> <greek small letter alpha with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <(> <greek small letter eta> <greek small letter eta with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <(> <greek small letter omega> <greek small letter omega with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <)> <greek capital letter alpha> <greek capital letter alpha with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <)> <greek capital letter eta> <greek capital letter eta with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <)> <greek capital letter omega> <greek capital letter omega with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <)> <greek small letter alpha> <greek small letter alpha with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <)> <greek small letter eta> <greek small letter eta with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <)> <greek small letter omega> <greek small letter omega with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <greek small letter alpha> <greek small letter alpha with perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <greek small letter eta> <greek small letter eta with perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <greek small letter omega> <greek small letter omega with perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <greek small letter alpha with psili> <greek small letter alpha with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <greek small letter alpha with dasia> <greek small letter alpha with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <greek capital letter alpha with psili> <greek capital letter alpha with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <greek small letter eta with psili> <greek small letter eta with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <greek small letter eta with dasia> <greek small letter eta with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <greek capital letter eta with psili> <greek capital letter eta with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <greek capital letter eta with dasia> <greek capital letter eta with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <greek small letter omega with psili> <greek small letter omega with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <greek small letter omega with dasia> <greek small letter omega with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <greek capital letter omega with psili> <greek capital letter omega with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining tilde> <greek capital letter omega with dasia> <greek capital letter omega with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and prosgegrammeni>
+Compose <greek small letter iota> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and ypogegrammeni>
+Compose <greek small letter iota> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and ypogegrammeni>
+Compose <greek small letter iota> <"> <greek small letter iota with dialytika>
+Compose <greek small letter iota> <'> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <'> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <'> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <'> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <'> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <'> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <'> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> <(> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <'> <(> <greek capital letter eta> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <'> <(> <greek capital letter omega> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <'> <(> <greek small letter alpha> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> <(> <greek small letter eta> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> <(> <greek small letter omega> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> <)> <greek capital letter alpha> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <'> <)> <greek capital letter eta> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <'> <)> <greek capital letter omega> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <'> <)> <greek small letter alpha> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> <)> <greek small letter eta> <greek small letter eta with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> <)> <greek small letter omega> <greek small letter omega with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> <greek small letter iota with tonos>
+Compose <greek small letter iota> <'> <greek small letter alpha> <greek small letter alpha with oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> <greek small letter eta> <greek small letter eta with oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> <greek small letter omega> <greek small letter omega with oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> <greek small letter alpha with psili> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> <greek small letter alpha with dasia> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> <greek capital letter alpha with psili> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <'> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <'> <greek small letter eta with psili> <greek small letter eta with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> <greek small letter eta with dasia> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> <greek capital letter eta with psili> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <'> <greek capital letter eta with dasia> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <'> <greek small letter omega with psili> <greek small letter omega with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> <greek small letter omega with dasia> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <'> <greek capital letter omega with psili> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <'> <greek capital letter omega with dasia> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <(> <greek capital letter alpha> <greek capital letter alpha with dasia and prosgegrammeni>
+Compose <greek small letter iota> <(> <greek capital letter eta> <greek capital letter eta with dasia and prosgegrammeni>
+Compose <greek small letter iota> <(> <greek capital letter omega> <greek capital letter omega with dasia and prosgegrammeni>
+Compose <greek small letter iota> <(> <greek small letter alpha> <greek small letter alpha with dasia and ypogegrammeni>
+Compose <greek small letter iota> <(> <greek small letter eta> <greek small letter eta with dasia and ypogegrammeni>
+Compose <greek small letter iota> <(> <greek small letter omega> <greek small letter omega with dasia and ypogegrammeni>
+Compose <greek small letter iota> <)> <greek capital letter alpha> <greek capital letter alpha with psili and prosgegrammeni>
+Compose <greek small letter iota> <)> <greek capital letter eta> <greek capital letter eta with psili and prosgegrammeni>
+Compose <greek small letter iota> <)> <greek capital letter omega> <greek capital letter omega with psili and prosgegrammeni>
+Compose <greek small letter iota> <)> <greek small letter alpha> <greek small letter alpha with psili and ypogegrammeni>
+Compose <greek small letter iota> <)> <greek small letter eta> <greek small letter eta with psili and ypogegrammeni>
+Compose <greek small letter iota> <)> <greek small letter omega> <greek small letter omega with psili and ypogegrammeni>
+Compose <greek small letter iota> <`> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> <`> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> <`> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> <`> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> <`> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> <`> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> <`> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> <(> <greek capital letter alpha> <greek capital letter alpha with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> <`> <(> <greek capital letter eta> <greek capital letter eta with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> <`> <(> <greek capital letter omega> <greek capital letter omega with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> <`> <(> <greek small letter alpha> <greek small letter alpha with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> <(> <greek small letter eta> <greek small letter eta with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> <(> <greek small letter omega> <greek small letter omega with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> <)> <greek capital letter alpha> <greek capital letter alpha with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> <`> <)> <greek capital letter eta> <greek capital letter eta with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> <`> <)> <greek capital letter omega> <greek capital letter omega with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> <`> <)> <greek small letter alpha> <greek small letter alpha with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> <)> <greek small letter eta> <greek small letter eta with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> <)> <greek small letter omega> <greek small letter omega with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> <greek small letter alpha> <greek small letter alpha with varia and ypogegrammeni>
+Compose <greek small letter iota> <`> <greek small letter eta> <greek small letter eta with varia and ypogegrammeni>
+Compose <greek small letter iota> <`> <greek small letter omega> <greek small letter omega with varia and ypogegrammeni>
+Compose <greek small letter iota> <`> <greek small letter alpha with psili> <greek small letter alpha with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> <greek small letter alpha with dasia> <greek small letter alpha with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> <greek capital letter alpha with psili> <greek capital letter alpha with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> <`> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> <`> <greek small letter eta with psili> <greek small letter eta with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> <greek small letter eta with dasia> <greek small letter eta with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> <greek capital letter eta with psili> <greek capital letter eta with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> <`> <greek capital letter eta with dasia> <greek capital letter eta with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> <`> <greek small letter omega with psili> <greek small letter omega with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> <greek small letter omega with dasia> <greek small letter omega with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> <`> <greek capital letter omega with psili> <greek capital letter omega with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> <`> <greek capital letter omega with dasia> <greek capital letter omega with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> <~> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <~> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <~> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <~> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <~> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <~> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <~> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> <(> <greek capital letter alpha> <greek capital letter alpha with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <~> <(> <greek capital letter eta> <greek capital letter eta with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <~> <(> <greek capital letter omega> <greek capital letter omega with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <~> <(> <greek small letter alpha> <greek small letter alpha with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> <(> <greek small letter eta> <greek small letter eta with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> <(> <greek small letter omega> <greek small letter omega with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> <)> <greek capital letter alpha> <greek capital letter alpha with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <~> <)> <greek capital letter eta> <greek capital letter eta with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <~> <)> <greek capital letter omega> <greek capital letter omega with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <~> <)> <greek small letter alpha> <greek small letter alpha with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> <)> <greek small letter eta> <greek small letter eta with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> <)> <greek small letter omega> <greek small letter omega with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> <greek small letter alpha> <greek small letter alpha with perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> <greek small letter eta> <greek small letter eta with perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> <greek small letter omega> <greek small letter omega with perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> <greek small letter alpha with psili> <greek small letter alpha with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> <greek small letter alpha with dasia> <greek small letter alpha with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> <greek capital letter alpha with psili> <greek capital letter alpha with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <~> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <~> <greek small letter eta with psili> <greek small letter eta with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> <greek small letter eta with dasia> <greek small letter eta with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> <greek capital letter eta with psili> <greek capital letter eta with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <~> <greek capital letter eta with dasia> <greek capital letter eta with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <~> <greek small letter omega with psili> <greek small letter omega with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> <greek small letter omega with dasia> <greek small letter omega with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <~> <greek capital letter omega with psili> <greek capital letter omega with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <~> <greek capital letter omega with dasia> <greek capital letter omega with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> <(> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> <(> <greek capital letter eta> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> <(> <greek capital letter omega> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> <(> <greek small letter alpha> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> <(> <greek small letter eta> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> <(> <greek small letter omega> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> <)> <greek capital letter alpha> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> <)> <greek capital letter eta> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> <)> <greek capital letter omega> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> <)> <greek small letter alpha> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> <)> <greek small letter eta> <greek small letter eta with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> <)> <greek small letter omega> <greek small letter omega with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> <greek small letter alpha> <greek small letter alpha with oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> <greek small letter eta> <greek small letter eta with oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> <greek small letter omega> <greek small letter omega with oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> <greek small letter alpha with psili> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> <greek small letter alpha with dasia> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> <greek capital letter alpha with psili> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> <greek small letter eta with psili> <greek small letter eta with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> <greek small letter eta with dasia> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> <greek capital letter eta with psili> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> <greek capital letter eta with dasia> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> <greek small letter omega with psili> <greek small letter omega with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> <greek small letter omega with dasia> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <acute accent> <greek capital letter omega with psili> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <acute accent> <greek capital letter omega with dasia> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter alpha> <greek capital letter alpha with prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter eta> <greek capital letter eta with prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter omega> <greek capital letter omega with prosgegrammeni>
+Compose <greek small letter iota> <greek small letter alpha with tonos> <greek small letter alpha with oxia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter eta with tonos> <greek small letter eta with oxia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter alpha> <greek small letter alpha with ypogegrammeni>
+Compose <greek small letter iota> <greek small letter eta> <greek small letter eta with ypogegrammeni>
+Compose <greek small letter iota> <greek small letter omega> <greek small letter omega with ypogegrammeni>
+Compose <greek small letter iota> <greek small letter omega with tonos> <greek small letter omega with oxia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter alpha with psili> <greek small letter alpha with psili and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter alpha with dasia> <greek small letter alpha with dasia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter alpha with psili and varia> <greek small letter alpha with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter alpha with dasia and varia> <greek small letter alpha with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter alpha with psili and oxia> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter alpha with dasia and oxia> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter alpha with psili and perispomeni> <greek small letter alpha with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter alpha with dasia and perispomeni> <greek small letter alpha with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <greek capital letter alpha with psili> <greek capital letter alpha with psili and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter alpha with psili and varia> <greek capital letter alpha with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter alpha with dasia and varia> <greek capital letter alpha with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter alpha with psili and oxia> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter alpha with dasia and oxia> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter alpha with psili and perispomeni> <greek capital letter alpha with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter alpha with dasia and perispomeni> <greek capital letter alpha with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <greek small letter eta with psili> <greek small letter eta with psili and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter eta with dasia> <greek small letter eta with dasia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter eta with psili and varia> <greek small letter eta with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter eta with dasia and varia> <greek small letter eta with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter eta with psili and oxia> <greek small letter eta with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter eta with dasia and oxia> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter eta with psili and perispomeni> <greek small letter eta with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter eta with dasia and perispomeni> <greek small letter eta with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <greek capital letter eta with psili> <greek capital letter eta with psili and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter eta with dasia> <greek capital letter eta with dasia and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter eta with psili and varia> <greek capital letter eta with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter eta with dasia and varia> <greek capital letter eta with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter eta with psili and oxia> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter eta with dasia and oxia> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter eta with psili and perispomeni> <greek capital letter eta with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter eta with dasia and perispomeni> <greek capital letter eta with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <greek small letter omega with psili> <greek small letter omega with psili and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter omega with dasia> <greek small letter omega with dasia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter omega with psili and varia> <greek small letter omega with psili and varia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter omega with dasia and varia> <greek small letter omega with dasia and varia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter omega with psili and oxia> <greek small letter omega with psili and oxia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter omega with dasia and oxia> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter omega with psili and perispomeni> <greek small letter omega with psili and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter omega with dasia and perispomeni> <greek small letter omega with dasia and perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <greek capital letter omega with psili> <greek capital letter omega with psili and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter omega with dasia> <greek capital letter omega with dasia and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter omega with psili and varia> <greek capital letter omega with psili and varia and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter omega with dasia and varia> <greek capital letter omega with dasia and varia and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter omega with psili and oxia> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter omega with dasia and oxia> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter omega with psili and perispomeni> <greek capital letter omega with psili and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <greek capital letter omega with dasia and perispomeni> <greek capital letter omega with dasia and perispomeni and prosgegrammeni>
+Compose <greek small letter iota> <greek small letter alpha with varia> <greek small letter alpha with varia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter eta with varia> <greek small letter eta with varia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter omega with varia> <greek small letter omega with varia and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter alpha with perispomeni> <greek small letter alpha with perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter eta with perispomeni> <greek small letter eta with perispomeni and ypogegrammeni>
+Compose <greek small letter iota> <greek small letter omega with perispomeni> <greek small letter omega with perispomeni and ypogegrammeni>
+Compose <greek small letter omicron> <'> <greek small letter omicron with tonos>
+Compose <greek small letter upsilon> <"> <greek small letter upsilon with dialytika>
+Compose <greek small letter upsilon> <'> <greek small letter upsilon with tonos>
+Compose <greek small letter omega> <'> <greek small letter omega with tonos>
+Compose <cyrillic capital letter ie> <=> <euro sign>
+Compose <cyrillic capital letter en> <cyrillic capital letter o> <numero sign>
+Compose <cyrillic capital letter en> <cyrillic small letter o> <numero sign>
+Compose <cyrillic capital letter es> <=> <euro sign>
+Compose <cyrillic small letter pe> <cyrillic small letter a> <section sign>
+Compose <hebrew point hiriq> <hebrew letter yod> <hebrew letter yod with hiriq>
+Compose <hebrew point patah> <hebrew letter alef> <hebrew letter alef with patah>
+Compose <hebrew point patah> <arabic sukun> <hebrew ligature yiddish yod yod patah>
+Compose <hebrew point qamats> <hebrew letter alef> <hebrew letter alef with qamats>
+Compose <hebrew point holam> <hebrew letter vav> <hebrew letter vav with holam>
+Compose <hebrew point dagesh or mapiq> <hebrew letter alef> <hebrew letter alef with mapiq>
+Compose <hebrew point dagesh or mapiq> <hebrew letter bet> <hebrew letter bet with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter gimel> <hebrew letter gimel with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter dalet> <hebrew letter dalet with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter he> <hebrew letter he with mapiq>
+Compose <hebrew point dagesh or mapiq> <hebrew letter vav> <hebrew letter vav with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter zayin> <hebrew letter zayin with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter tet> <hebrew letter tet with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter yod> <hebrew letter yod with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter final kaf> <hebrew letter final kaf with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter kaf> <hebrew letter kaf with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter lamed> <hebrew letter lamed with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter mem> <hebrew letter mem with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter nun> <hebrew letter nun with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter samekh> <hebrew letter samekh with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter final pe> <hebrew letter final pe with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter pe> <hebrew letter pe with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter tsadi> <hebrew letter tsadi with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter qof> <hebrew letter qof with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter resh> <hebrew letter resh with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter shin> <hebrew letter shin with dagesh>
+Compose <hebrew point dagesh or mapiq> <hebrew letter tav> <hebrew letter tav with dagesh>
+Compose <arabic question mark> <hebrew letter bet> <hebrew letter bet with rafe>
+Compose <arabic question mark> <hebrew letter kaf> <hebrew letter kaf with rafe>
+Compose <arabic question mark> <hebrew letter pe> <hebrew letter pe with rafe>
+Compose <arabic letter hamza> <hebrew point dagesh or mapiq> <hebrew letter shin> <hebrew letter shin with dagesh and shin dot>
+Compose <arabic letter hamza> <hebrew letter shin> <hebrew letter shin with shin dot>
+Compose <arabic letter hamza> <hebrew letter shin with dagesh> <hebrew letter shin with dagesh and shin dot>
+Compose <arabic letter alef with madda above> <hebrew point dagesh or mapiq> <hebrew letter shin> <hebrew letter shin with dagesh and sin dot>
+Compose <arabic letter alef with madda above> <hebrew letter shin> <hebrew letter shin with sin dot>
+Compose <arabic letter alef with madda above> <hebrew letter shin with dagesh> <hebrew letter shin with dagesh and sin dot>
+Compose <arabic maddah above> <arabic letter alef> <arabic letter alef with madda above>
+Compose <arabic hamza above> <cyrillic small letter a> <arabic letter heh goal with hamza above>
+Compose <arabic hamza above> <cyrillic small letter er> <arabic letter yeh barree with hamza above>
+Compose <arabic hamza above> <cyrillic small letter u> <arabic letter heh with yeh above>
+Compose <arabic hamza above> <arabic letter alef> <arabic letter alef with hamza above>
+Compose <arabic hamza above> <arabic letter waw> <arabic letter waw with hamza above>
+Compose <arabic hamza above> <arabic letter yeh> <arabic letter yeh with hamza above>
+Compose <arabic hamza below> <arabic letter alef> <arabic letter alef with hamza below>
+Compose <devanagari sign nukta> <devanagari letter ka> <devanagari letter qa>
+Compose <devanagari sign nukta> <devanagari letter kha> <devanagari letter khha>
+Compose <devanagari sign nukta> <devanagari letter ga> <devanagari letter ghha>
+Compose <devanagari sign nukta> <devanagari letter ja> <devanagari letter za>
+Compose <devanagari sign nukta> <devanagari letter dda> <devanagari letter dddha>
+Compose <devanagari sign nukta> <devanagari letter ddha> <devanagari letter rha>
+Compose <devanagari sign nukta> <devanagari letter na> <devanagari letter nnna>
+Compose <devanagari sign nukta> <devanagari letter pha> <devanagari letter fa>
+Compose <devanagari sign nukta> <devanagari letter ya> <devanagari letter yya>
+Compose <devanagari sign nukta> <devanagari letter ra> <devanagari letter rra>
+Compose <devanagari sign nukta> <devanagari letter lla> <devanagari letter llla>
+Compose <bengali sign nukta> <bengali letter dda> <bengali letter rra>
+Compose <bengali sign nukta> <bengali letter ddha> <bengali letter rha>
+Compose <bengali sign nukta> <bengali letter ya> <bengali letter yya>
+Compose <bengali vowel sign e> <bengali vowel sign aa> <bengali vowel sign o>
+Compose <bengali vowel sign e> <bengali au length mark> <bengali vowel sign au>
+Compose <gurmukhi sign nukta> <gurmukhi letter kha> <gurmukhi letter khha>
+Compose <gurmukhi sign nukta> <gurmukhi letter ga> <gurmukhi letter ghha>
+Compose <gurmukhi sign nukta> <gurmukhi letter ja> <gurmukhi letter za>
+Compose <gurmukhi sign nukta> <gurmukhi letter pha> <gurmukhi letter fa>
+Compose <gurmukhi sign nukta> <gurmukhi letter la> <gurmukhi letter lla>
+Compose <gurmukhi sign nukta> <gurmukhi letter sa> <gurmukhi letter sha>
+Compose <oriya sign nukta> <oriya letter dda> <oriya letter rra>
+Compose <oriya sign nukta> <oriya letter ddha> <oriya letter rha>
+Compose <oriya vowel sign e> <oriya vowel sign aa> <oriya vowel sign o>
+Compose <oriya vowel sign e> <oriya ai length mark> <oriya vowel sign ai>
+Compose <oriya vowel sign e> <oriya au length mark> <oriya vowel sign au>
+Compose <tamil vowel sign ee> <tamil vowel sign aa> <tamil vowel sign oo>
+Compose <tamil au length mark> <tamil letter o> <tamil letter au>
+Compose <telugu vowel sign e> <telugu ai length mark> <telugu vowel sign ai>
+Compose <kannada vowel sign i> <kannada length mark> <kannada vowel sign ii>
+Compose <kannada vowel sign e> <kannada vowel sign uu> <kannada vowel sign o>
+Compose <kannada vowel sign e> <kannada length mark> <kannada vowel sign ee>
+Compose <kannada vowel sign e> <kannada ai length mark> <kannada vowel sign ai>
+Compose <kannada vowel sign o> <kannada length mark> <kannada vowel sign oo>
+Compose <malayalam vowel sign e> <malayalam vowel sign aa> <malayalam vowel sign o>
+Compose <malayalam vowel sign e> <malayalam au length mark> <malayalam vowel sign au>
+Compose <malayalam vowel sign ee> <malayalam vowel sign aa> <malayalam vowel sign oo>
+Compose <sinhala vowel sign kombuva haa aela-pilla> <thai character so sua> <sinhala vowel sign kombuva haa diga aela-pilla>
+Compose <thai character sara uu> <thai character so sua> <sinhala vowel sign diga kombuva>
+Compose <thai character sara uu> <thai character paiyannoi> <sinhala vowel sign kombuva haa aela-pilla>
+Compose <thai character sara uu> <thai currency symbol baht> <sinhala vowel sign kombuva haa gayanukitta>
+Compose <tibetan vowel sign aa> <tibetan vowel sign i> <tibetan vowel sign ii>
+Compose <tibetan vowel sign aa> <tibetan vowel sign u> <tibetan vowel sign uu>
+Compose <tibetan vowel sign aa> <tibetan vowel sign reversed i> <tibetan vowel sign reversed ii>
+Compose <tibetan subjoined letter ka> <tibetan subjoined letter ssa> <tibetan subjoined letter kssa>
+Compose <tibetan subjoined letter ga> <tibetan subjoined letter ha> <tibetan subjoined letter gha>
+Compose <tibetan subjoined letter dda> <tibetan subjoined letter ha> <tibetan subjoined letter ddha>
+Compose <tibetan subjoined letter da> <tibetan subjoined letter ha> <tibetan subjoined letter dha>
+Compose <tibetan subjoined letter ba> <tibetan subjoined letter ha> <tibetan subjoined letter bha>
+Compose <tibetan subjoined letter dza> <tibetan subjoined letter ha> <tibetan subjoined letter dzha>
+Compose <tibetan subjoined letter ra> <tibetan vowel sign reversed i> <tibetan vowel sign vocalic r>
+Compose <tibetan subjoined letter la> <tibetan vowel sign reversed i> <tibetan vowel sign vocalic l>
+Compose <tibetan subjoined letter ssa> <tibetan letter ka> <tibetan letter kssa>
+Compose <tibetan subjoined letter ha> <tibetan letter ga> <tibetan letter gha>
+Compose <tibetan subjoined letter ha> <tibetan letter dda> <tibetan letter ddha>
+Compose <tibetan subjoined letter ha> <tibetan letter da> <tibetan letter dha>
+Compose <tibetan subjoined letter ha> <tibetan letter ba> <tibetan letter bha>
+Compose <tibetan subjoined letter ha> <tibetan letter dza> <tibetan letter dzha>
+Compose <myanmar vowel sign ii> <myanmar letter u> <myanmar letter uu>
+Compose <hangul choseong kiyeok> <hangul choseong kiyeok> <hangul choseong ssangkiyeok>
+Compose <hangul choseong nieun> <hangul choseong kiyeok> <hangul choseong nieun-kiyeok>
+Compose <hangul choseong nieun> <hangul choseong nieun> <hangul choseong ssangnieun>
+Compose <hangul choseong nieun> <hangul choseong tikeut> <hangul choseong nieun-tikeut>
+Compose <hangul choseong nieun> <hangul choseong pieup> <hangul choseong nieun-pieup>
+Compose <hangul choseong tikeut> <hangul choseong kiyeok> <hangul choseong tikeut-kiyeok>
+Compose <hangul choseong tikeut> <hangul choseong tikeut> <hangul choseong ssangtikeut>
+Compose <hangul choseong rieul> <hangul choseong nieun> <hangul choseong rieul-nieun>
+Compose <hangul choseong rieul> <hangul choseong rieul> <hangul choseong ssangrieul>
+Compose <hangul choseong rieul> <hangul choseong ieung> <hangul choseong kapyeounrieul>
+Compose <hangul choseong rieul> <hangul choseong hieuh> <hangul choseong rieul-hieuh>
+Compose <hangul choseong mieum> <hangul choseong pieup> <hangul choseong mieum-pieup>
+Compose <hangul choseong mieum> <hangul choseong ieung> <hangul choseong kapyeounmieum>
+Compose <hangul choseong pieup> <hangul choseong kiyeok> <hangul choseong pieup-kiyeok>
+Compose <hangul choseong pieup> <hangul choseong nieun> <hangul choseong pieup-nieun>
+Compose <hangul choseong pieup> <hangul choseong tikeut> <hangul choseong pieup-tikeut>
+Compose <hangul choseong pieup> <hangul choseong pieup> <hangul choseong ssangpieup>
+Compose <hangul choseong pieup> <hangul choseong sios> <hangul choseong pieup-sios>
+Compose <hangul choseong pieup> <hangul choseong ssangsios> <hangul choseong pieup-ssangsios>
+Compose <hangul choseong pieup> <hangul choseong ieung> <hangul choseong kapyeounpieup>
+Compose <hangul choseong pieup> <hangul choseong cieuc> <hangul choseong pieup-cieuc>
+Compose <hangul choseong pieup> <hangul choseong chieuch> <hangul choseong pieup-chieuch>
+Compose <hangul choseong pieup> <hangul choseong thieuth> <hangul choseong pieup-thieuth>
+Compose <hangul choseong pieup> <hangul choseong phieuph> <hangul choseong pieup-phieuph>
+Compose <hangul choseong pieup> <hangul choseong kapyeounpieup> <hangul choseong kapyeounssangpieup>
+Compose <hangul choseong pieup> <hangul choseong sios-kiyeok> <hangul choseong pieup-sios-kiyeok>
+Compose <hangul choseong pieup> <hangul choseong sios-tikeut> <hangul choseong pieup-sios-tikeut>
+Compose <hangul choseong pieup> <hangul choseong sios-pieup> <hangul choseong pieup-sios-pieup>
+Compose <hangul choseong pieup> <hangul choseong sios-cieuc> <hangul choseong pieup-sios-cieuc>
+Compose <hangul choseong ssangpieup> <hangul choseong ieung> <hangul choseong kapyeounssangpieup>
+Compose <hangul choseong sios> <hangul choseong kiyeok> <hangul choseong sios-kiyeok>
+Compose <hangul choseong sios> <hangul choseong nieun> <hangul choseong sios-nieun>
+Compose <hangul choseong sios> <hangul choseong tikeut> <hangul choseong sios-tikeut>
+Compose <hangul choseong sios> <hangul choseong rieul> <hangul choseong sios-rieul>
+Compose <hangul choseong sios> <hangul choseong mieum> <hangul choseong sios-mieum>
+Compose <hangul choseong sios> <hangul choseong pieup> <hangul choseong sios-pieup>
+Compose <hangul choseong sios> <hangul choseong sios> <hangul choseong ssangsios>
+Compose <hangul choseong sios> <hangul choseong ssangsios> <hangul choseong sios-ssangsios>
+Compose <hangul choseong sios> <hangul choseong ieung> <hangul choseong sios-ieung>
+Compose <hangul choseong sios> <hangul choseong cieuc> <hangul choseong sios-cieuc>
+Compose <hangul choseong sios> <hangul choseong chieuch> <hangul choseong sios-chieuch>
+Compose <hangul choseong sios> <hangul choseong khieukh> <hangul choseong sios-khieukh>
+Compose <hangul choseong sios> <hangul choseong thieuth> <hangul choseong sios-thieuth>
+Compose <hangul choseong sios> <hangul choseong phieuph> <hangul choseong sios-phieuph>
+Compose <hangul choseong sios> <hangul choseong hieuh> <hangul choseong sios-hieuh>
+Compose <hangul choseong sios> <hangul choseong pieup-kiyeok> <hangul choseong sios-pieup-kiyeok>
+Compose <hangul choseong ssangsios> <hangul choseong sios> <hangul choseong sios-ssangsios>
+Compose <hangul choseong ieung> <hangul choseong kiyeok> <hangul choseong ieung-kiyeok>
+Compose <hangul choseong ieung> <hangul choseong tikeut> <hangul choseong ieung-tikeut>
+Compose <hangul choseong ieung> <hangul choseong mieum> <hangul choseong ieung-mieum>
+Compose <hangul choseong ieung> <hangul choseong pieup> <hangul choseong ieung-pieup>
+Compose <hangul choseong ieung> <hangul choseong sios> <hangul choseong ieung-sios>
+Compose <hangul choseong ieung> <hangul choseong ieung> <hangul choseong ssangieung>
+Compose <hangul choseong ieung> <hangul choseong cieuc> <hangul choseong ieung-cieuc>
+Compose <hangul choseong ieung> <hangul choseong chieuch> <hangul choseong ieung-chieuch>
+Compose <hangul choseong ieung> <hangul choseong thieuth> <hangul choseong ieung-thieuth>
+Compose <hangul choseong ieung> <hangul choseong phieuph> <hangul choseong ieung-phieuph>
+Compose <hangul choseong ieung> <hangul choseong pansios> <hangul choseong ieung-pansios>
+Compose <hangul choseong cieuc> <hangul choseong ieung> <hangul choseong cieuc-ieung>
+Compose <hangul choseong cieuc> <hangul choseong cieuc> <hangul choseong ssangcieuc>
+Compose <hangul choseong chieuch> <hangul choseong khieukh> <hangul choseong chieuch-khieukh>
+Compose <hangul choseong chieuch> <hangul choseong hieuh> <hangul choseong chieuch-hieuh>
+Compose <hangul choseong phieuph> <hangul choseong pieup> <hangul choseong phieuph-pieup>
+Compose <hangul choseong phieuph> <hangul choseong ieung> <hangul choseong kapyeounphieuph>
+Compose <hangul choseong hieuh> <hangul choseong hieuh> <hangul choseong ssanghieuh>
+Compose <hangul choseong pieup-sios> <hangul choseong kiyeok> <hangul choseong pieup-sios-kiyeok>
+Compose <hangul choseong pieup-sios> <hangul choseong tikeut> <hangul choseong pieup-sios-tikeut>
+Compose <hangul choseong pieup-sios> <hangul choseong pieup> <hangul choseong pieup-sios-pieup>
+Compose <hangul choseong pieup-sios> <hangul choseong sios> <hangul choseong pieup-ssangsios>
+Compose <hangul choseong pieup-sios> <hangul choseong cieuc> <hangul choseong pieup-sios-cieuc>
+Compose <hangul choseong sios-pieup> <hangul choseong kiyeok> <hangul choseong sios-pieup-kiyeok>
+Compose <hangul choseong chitueumsios> <hangul choseong chitueumsios> <hangul choseong chitueumssangsios>
+Compose <hangul choseong ceongchieumsios> <hangul choseong ceongchieumsios> <hangul choseong ceongchieumssangsios>
+Compose <hangul choseong chitueumcieuc> <hangul choseong chitueumcieuc> <hangul choseong chitueumssangcieuc>
+Compose <hangul choseong ceongchieumcieuc> <hangul choseong ceongchieumcieuc> <hangul choseong ceongchieumssangcieuc>
+Compose <hangul jungseong a> <hangul jungseong o> <hangul jungseong a-o>
+Compose <hangul jungseong a> <hangul jungseong u> <hangul jungseong a-u>
+Compose <hangul jungseong a> <hangul jungseong i> <hangul jungseong ae>
+Compose <hangul jungseong ya> <hangul jungseong o> <hangul jungseong ya-o>
+Compose <hangul jungseong ya> <hangul jungseong yo> <hangul jungseong ya-yo>
+Compose <hangul jungseong ya> <hangul jungseong i> <hangul jungseong yae>
+Compose <hangul jungseong eo> <hangul jungseong o> <hangul jungseong eo-o>
+Compose <hangul jungseong eo> <hangul jungseong u> <hangul jungseong eo-u>
+Compose <hangul jungseong eo> <hangul jungseong eu> <hangul jungseong eo-eu>
+Compose <hangul jungseong eo> <hangul jungseong i> <hangul jungseong e>
+Compose <hangul jungseong yeo> <hangul jungseong o> <hangul jungseong yeo-o>
+Compose <hangul jungseong yeo> <hangul jungseong u> <hangul jungseong yeo-u>
+Compose <hangul jungseong yeo> <hangul jungseong i> <hangul jungseong ye>
+Compose <hangul jungseong o> <hangul jungseong a> <hangul jungseong wa>
+Compose <hangul jungseong o> <hangul jungseong ae> <hangul jungseong wae>
+Compose <hangul jungseong o> <hangul jungseong eo> <hangul jungseong o-eo>
+Compose <hangul jungseong o> <hangul jungseong e> <hangul jungseong o-e>
+Compose <hangul jungseong o> <hangul jungseong ye> <hangul jungseong o-ye>
+Compose <hangul jungseong o> <hangul jungseong o> <hangul jungseong o-o>
+Compose <hangul jungseong o> <hangul jungseong u> <hangul jungseong o-u>
+Compose <hangul jungseong o> <hangul jungseong i> <hangul jungseong oe>
+Compose <hangul jungseong wa> <hangul jungseong i> <hangul jungseong wae>
+Compose <hangul jungseong yo> <hangul jungseong ya> <hangul jungseong yo-ya>
+Compose <hangul jungseong yo> <hangul jungseong yae> <hangul jungseong yo-yae>
+Compose <hangul jungseong yo> <hangul jungseong yeo> <hangul jungseong yo-yeo>
+Compose <hangul jungseong yo> <hangul jungseong o> <hangul jungseong yo-o>
+Compose <hangul jungseong yo> <hangul jungseong i> <hangul jungseong yo-i>
+Compose <hangul jungseong u> <hangul jungseong a> <hangul jungseong u-a>
+Compose <hangul jungseong u> <hangul jungseong ae> <hangul jungseong u-ae>
+Compose <hangul jungseong u> <hangul jungseong eo> <hangul jungseong weo>
+Compose <hangul jungseong u> <hangul jungseong e> <hangul jungseong we>
+Compose <hangul jungseong u> <hangul jungseong ye> <hangul jungseong u-ye>
+Compose <hangul jungseong u> <hangul jungseong u> <hangul jungseong u-u>
+Compose <hangul jungseong u> <hangul jungseong i> <hangul jungseong wi>
+Compose <hangul jungseong u> <hangul jungseong eo-eu> <hangul jungseong u-eo-eu>
+Compose <hangul jungseong weo> <hangul jungseong eu> <hangul jungseong u-eo-eu>
+Compose <hangul jungseong weo> <hangul jungseong i> <hangul jungseong we>
+Compose <hangul jungseong yu> <hangul jungseong a> <hangul jungseong yu-a>
+Compose <hangul jungseong yu> <hangul jungseong eo> <hangul jungseong yu-eo>
+Compose <hangul jungseong yu> <hangul jungseong e> <hangul jungseong yu-e>
+Compose <hangul jungseong yu> <hangul jungseong yeo> <hangul jungseong yu-yeo>
+Compose <hangul jungseong yu> <hangul jungseong ye> <hangul jungseong yu-ye>
+Compose <hangul jungseong yu> <hangul jungseong u> <hangul jungseong yu-u>
+Compose <hangul jungseong yu> <hangul jungseong i> <hangul jungseong yu-i>
+Compose <hangul jungseong eu> <hangul jungseong u> <hangul jungseong eu-u>
+Compose <hangul jungseong eu> <hangul jungseong eu> <hangul jungseong eu-eu>
+Compose <hangul jungseong eu> <hangul jungseong i> <hangul jungseong yi>
+Compose <hangul jungseong yi> <hangul jungseong u> <hangul jungseong yi-u>
+Compose <hangul jungseong i> <hangul jungseong a> <hangul jungseong i-a>
+Compose <hangul jungseong i> <hangul jungseong ya> <hangul jungseong i-ya>
+Compose <hangul jungseong i> <hangul jungseong o> <hangul jungseong i-o>
+Compose <hangul jungseong i> <hangul jungseong u> <hangul jungseong i-u>
+Compose <hangul jungseong i> <hangul jungseong eu> <hangul jungseong i-eu>
+Compose <hangul jungseong i> <hangul jungseong araea> <hangul jungseong i-araea>
+Compose <hangul jungseong araea> <hangul jungseong eo> <hangul jungseong araea-eo>
+Compose <hangul jungseong araea> <hangul jungseong u> <hangul jungseong araea-u>
+Compose <hangul jungseong araea> <hangul jungseong i> <hangul jungseong araea-i>
+Compose <hangul jungseong araea> <hangul jungseong araea> <hangul jungseong ssangaraea>
+Compose <hangul jongseong kiyeok> <hangul jongseong kiyeok> <hangul jongseong ssangkiyeok>
+Compose <hangul jongseong kiyeok> <hangul jongseong rieul> <hangul jongseong kiyeok-rieul>
+Compose <hangul jongseong kiyeok> <hangul jongseong sios> <hangul jongseong kiyeok-sios>
+Compose <hangul jongseong kiyeok> <hangul jongseong sios-kiyeok> <hangul jongseong kiyeok-sios-kiyeok>
+Compose <hangul jongseong kiyeok-sios> <hangul jongseong kiyeok> <hangul jongseong kiyeok-sios-kiyeok>
+Compose <hangul jongseong nieun> <hangul jongseong kiyeok> <hangul jongseong nieun-kiyeok>
+Compose <hangul jongseong nieun> <hangul jongseong tikeut> <hangul jongseong nieun-tikeut>
+Compose <hangul jongseong nieun> <hangul jongseong sios> <hangul jongseong nieun-sios>
+Compose <hangul jongseong nieun> <hangul jongseong cieuc> <hangul jongseong nieun-cieuc>
+Compose <hangul jongseong nieun> <hangul jongseong thieuth> <hangul jongseong nieun-thieuth>
+Compose <hangul jongseong nieun> <hangul jongseong hieuh> <hangul jongseong nieun-hieuh>
+Compose <hangul jongseong nieun> <hangul jongseong pansios> <hangul jongseong nieun-pansios>
+Compose <hangul jongseong tikeut> <hangul jongseong kiyeok> <hangul jongseong tikeut-kiyeok>
+Compose <hangul jongseong tikeut> <hangul jongseong rieul> <hangul jongseong tikeut-rieul>
+Compose <hangul jongseong rieul> <hangul jongseong kiyeok> <hangul jongseong rieul-kiyeok>
+Compose <hangul jongseong rieul> <hangul jongseong kiyeok-sios> <hangul jongseong rieul-kiyeok-sios>
+Compose <hangul jongseong rieul> <hangul jongseong nieun> <hangul jongseong rieul-nieun>
+Compose <hangul jongseong rieul> <hangul jongseong tikeut> <hangul jongseong rieul-tikeut>
+Compose <hangul jongseong rieul> <hangul jongseong rieul> <hangul jongseong ssangrieul>
+Compose <hangul jongseong rieul> <hangul jongseong mieum> <hangul jongseong rieul-mieum>
+Compose <hangul jongseong rieul> <hangul jongseong pieup> <hangul jongseong rieul-pieup>
+Compose <hangul jongseong rieul> <hangul jongseong pieup-sios> <hangul jongseong rieul-pieup-sios>
+Compose <hangul jongseong rieul> <hangul jongseong sios> <hangul jongseong rieul-sios>
+Compose <hangul jongseong rieul> <hangul jongseong ssangsios> <hangul jongseong rieul-ssangsios>
+Compose <hangul jongseong rieul> <hangul jongseong khieukh> <hangul jongseong rieul-khieukh>
+Compose <hangul jongseong rieul> <hangul jongseong thieuth> <hangul jongseong rieul-thieuth>
+Compose <hangul jongseong rieul> <hangul jongseong phieuph> <hangul jongseong rieul-phieuph>
+Compose <hangul jongseong rieul> <hangul jongseong hieuh> <hangul jongseong rieul-hieuh>
+Compose <hangul jongseong rieul> <hangul jongseong mieum-kiyeok> <hangul jongseong rieul-mieum-kiyeok>
+Compose <hangul jongseong rieul> <hangul jongseong mieum-sios> <hangul jongseong rieul-mieum-sios>
+Compose <hangul jongseong rieul> <hangul jongseong pieup-hieuh> <hangul jongseong rieul-pieup-hieuh>
+Compose <hangul jongseong rieul> <hangul jongseong kapyeounpieup> <hangul jongseong rieul-kapyeounpieup>
+Compose <hangul jongseong rieul> <hangul jongseong pansios> <hangul jongseong rieul-pansios>
+Compose <hangul jongseong rieul> <hangul jongseong yeorinhieuh> <hangul jongseong rieul-yeorinhieuh>
+Compose <hangul jongseong rieul-kiyeok> <hangul jongseong sios> <hangul jongseong rieul-kiyeok-sios>
+Compose <hangul jongseong rieul-mieum> <hangul jongseong kiyeok> <hangul jongseong rieul-mieum-kiyeok>
+Compose <hangul jongseong rieul-mieum> <hangul jongseong sios> <hangul jongseong rieul-mieum-sios>
+Compose <hangul jongseong rieul-pieup> <hangul jongseong sios> <hangul jongseong rieul-pieup-sios>
+Compose <hangul jongseong rieul-pieup> <hangul jongseong ieung> <hangul jongseong rieul-kapyeounpieup>
+Compose <hangul jongseong rieul-pieup> <hangul jongseong hieuh> <hangul jongseong rieul-pieup-hieuh>
+Compose <hangul jongseong rieul-sios> <hangul jongseong sios> <hangul jongseong rieul-ssangsios>
+Compose <hangul jongseong mieum> <hangul jongseong kiyeok> <hangul jongseong mieum-kiyeok>
+Compose <hangul jongseong mieum> <hangul jongseong rieul> <hangul jongseong mieum-rieul>
+Compose <hangul jongseong mieum> <hangul jongseong pieup> <hangul jongseong mieum-pieup>
+Compose <hangul jongseong mieum> <hangul jongseong sios> <hangul jongseong mieum-sios>
+Compose <hangul jongseong mieum> <hangul jongseong ssangsios> <hangul jongseong mieum-ssangsios>
+Compose <hangul jongseong mieum> <hangul jongseong ieung> <hangul jongseong kapyeounmieum>
+Compose <hangul jongseong mieum> <hangul jongseong chieuch> <hangul jongseong mieum-chieuch>
+Compose <hangul jongseong mieum> <hangul jongseong hieuh> <hangul jongseong mieum-hieuh>
+Compose <hangul jongseong mieum> <hangul jongseong pansios> <hangul jongseong mieum-pansios>
+Compose <hangul jongseong pieup> <hangul jongseong rieul> <hangul jongseong pieup-rieul>
+Compose <hangul jongseong pieup> <hangul jongseong sios> <hangul jongseong pieup-sios>
+Compose <hangul jongseong pieup> <hangul jongseong ieung> <hangul jongseong kapyeounpieup>
+Compose <hangul jongseong pieup> <hangul jongseong phieuph> <hangul jongseong pieup-phieuph>
+Compose <hangul jongseong pieup> <hangul jongseong hieuh> <hangul jongseong pieup-hieuh>
+Compose <hangul jongseong sios> <hangul jongseong kiyeok> <hangul jongseong sios-kiyeok>
+Compose <hangul jongseong sios> <hangul jongseong tikeut> <hangul jongseong sios-tikeut>
+Compose <hangul jongseong sios> <hangul jongseong rieul> <hangul jongseong sios-rieul>
+Compose <hangul jongseong sios> <hangul jongseong pieup> <hangul jongseong sios-pieup>
+Compose <hangul jongseong sios> <hangul jongseong sios> <hangul jongseong ssangsios>
+Compose <hangul jongseong ieung> <hangul jongseong kiyeok> <hangul jongseong ieung-kiyeok>
+Compose <hangul jongseong ieung> <hangul jongseong ssangkiyeok> <hangul jongseong ieung-ssangkiyeok>
+Compose <hangul jongseong ieung> <hangul jongseong ieung> <hangul jongseong ssangieung>
+Compose <hangul jongseong ieung> <hangul jongseong khieukh> <hangul jongseong ieung-khieukh>
+Compose <hangul jongseong phieuph> <hangul jongseong pieup> <hangul jongseong phieuph-pieup>
+Compose <hangul jongseong phieuph> <hangul jongseong ieung> <hangul jongseong kapyeounphieuph>
+Compose <hangul jongseong hieuh> <hangul jongseong nieun> <hangul jongseong hieuh-nieun>
+Compose <hangul jongseong hieuh> <hangul jongseong rieul> <hangul jongseong hieuh-rieul>
+Compose <hangul jongseong hieuh> <hangul jongseong mieum> <hangul jongseong hieuh-mieum>
+Compose <hangul jongseong hieuh> <hangul jongseong pieup> <hangul jongseong hieuh-pieup>
+Compose <hangul jongseong rieul-tikeut> <hangul jongseong hieuh> <hangul jongseong rieul-tikeut-hieuh>
+Compose <hangul jongseong mieum-sios> <hangul jongseong sios> <hangul jongseong mieum-ssangsios>
+Compose <hangul jongseong ieung-kiyeok> <hangul jongseong kiyeok> <hangul jongseong ieung-ssangkiyeok>
+Compose <hangul jongseong yesieung> <hangul jongseong sios> <hangul jongseong yesieung-sios>
+Compose <hangul jongseong yesieung> <hangul jongseong pansios> <hangul jongseong yesieung-pansios>
+Compose <greek psili> Dead<combining grave accent> <greek psili and varia>
+Compose <greek psili> Dead<combining acute accent> <greek psili and oxia>
+Compose <greek psili> Dead<combining tilde> <greek psili and perispomeni>
+Compose <greek psili> <'> <greek psili and oxia>
+Compose <greek psili> <`> <greek psili and varia>
+Compose <greek psili> <~> <greek psili and perispomeni>
+Compose <greek psili> <acute accent> <greek psili and oxia>
+Compose <greek dasia> Dead<combining grave accent> <greek dasia and varia>
+Compose <greek dasia> Dead<combining acute accent> <greek dasia and oxia>
+Compose <greek dasia> Dead<combining tilde> <greek dasia and perispomeni>
+Compose <greek dasia> <'> <greek dasia and oxia>
+Compose <greek dasia> <`> <greek dasia and varia>
+Compose <greek dasia> <~> <greek dasia and perispomeni>
+Compose <greek dasia> <acute accent> <greek dasia and oxia>
+Compose <there exists> <combining long solidus overlay> <there does not exist>
+Compose <element of> <combining long solidus overlay> <not an element of>
+Compose <contains as member> <combining long solidus overlay> <does not contain as member>
+Compose <divides> <combining long solidus overlay> <does not divide>
+Compose <parallel to> <combining long solidus overlay> <not parallel to>
+Compose <tilde operator> <combining long solidus overlay> <not tilde>
+Compose <tilde operator> <combining long solidus overlay> <neither approximately nor actually equal to>
+Compose <asymptotically equal to> <combining long solidus overlay> <not asymptotically equal to>
+Compose <almost equal to> <combining long solidus overlay> <not almost equal to>
+Compose <equivalent to> <combining long solidus overlay> <not equivalent to>
+Compose <identical to> <combining long solidus overlay> <not identical to>
+Compose <less-than or equal to> <combining long solidus overlay> <neither less-than nor equal to>
+Compose <greater-than or equal to> <combining long solidus overlay> <neither greater-than nor equal to>
+Compose <less-than or equivalent to> <combining long solidus overlay> <neither less-than nor equivalent to>
+Compose <greater-than or equivalent to> <combining long solidus overlay> <neither greater-than nor equivalent to>
+Compose <less-than or greater-than> <combining long solidus overlay> <neither less-than nor greater-than>
+Compose <greater-than or less-than> <combining long solidus overlay> <neither greater-than nor less-than>
+Compose <precedes> <combining long solidus overlay> <does not precede>
+Compose <succeeds> <combining long solidus overlay> <does not succeed>
+Compose <precedes or equal to> <combining long solidus overlay> <does not precede or equal>
+Compose <succeeds or equal to> <combining long solidus overlay> <does not succeed or equal>
+Compose <subset of> <combining long solidus overlay> <not a subset of>
+Compose <superset of> <combining long solidus overlay> <not a superset of>
+Compose <subset of or equal to> <combining long solidus overlay> <neither a subset of nor equal to>
+Compose <superset of or equal to> <combining long solidus overlay> <neither a superset of nor equal to>
+Compose <square image of or equal to> <combining long solidus overlay> <not square image of or equal to>
+Compose <square original of or equal to> <combining long solidus overlay> <not square original of or equal to>
+Compose <right tack> <combining long solidus overlay> <does not prove>
+Compose <true> <combining long solidus overlay> <not true>
+Compose <forces> <combining long solidus overlay> <does not force>
+Compose <double vertical bar double right turnstile> <combining long solidus overlay> <negated double vertical bar double right turnstile>
+Compose <normal subgroup of> <combining long solidus overlay> <not normal subgroup of>
+Compose <contains as normal subgroup> <combining long solidus overlay> <does not contain as normal subgroup>
+Compose <normal subgroup of or equal to> <combining long solidus overlay> <not normal subgroup of or equal to>
+Compose <contains as normal subgroup or equal to> <combining long solidus overlay> <does not contain as normal subgroup or equal>
+Compose <nonforking> <combining long solidus overlay> <forking>
+Dead<combining grave accent> Compose <"> <U> <latin capital letter u with diaeresis and grave>
+Dead<combining grave accent> Compose <"> <u> <latin small letter u with diaeresis and grave>
+Dead<combining grave accent> Compose <"> <greek small letter iota> <greek small letter iota with dialytika and varia>
+Dead<combining grave accent> Compose <"> <greek small letter upsilon> <greek small letter upsilon with dialytika and varia>
+Dead<combining grave accent> Compose <(> <greek capital letter alpha> <greek capital letter alpha with dasia and varia>
+Dead<combining grave accent> Compose <(> <greek capital letter epsilon> <greek capital letter epsilon with dasia and varia>
+Dead<combining grave accent> Compose <(> <greek capital letter eta> <greek capital letter eta with dasia and varia>
+Dead<combining grave accent> Compose <(> <greek capital letter iota> <greek capital letter iota with dasia and varia>
+Dead<combining grave accent> Compose <(> <greek capital letter omicron> <greek capital letter omicron with dasia and varia>
+Dead<combining grave accent> Compose <(> <greek capital letter upsilon> <greek capital letter upsilon with dasia and varia>
+Dead<combining grave accent> Compose <(> <greek capital letter omega> <greek capital letter omega with dasia and varia>
+Dead<combining grave accent> Compose <(> <greek small letter alpha> <greek small letter alpha with dasia and varia>
+Dead<combining grave accent> Compose <(> <greek small letter epsilon> <greek small letter epsilon with dasia and varia>
+Dead<combining grave accent> Compose <(> <greek small letter eta> <greek small letter eta with dasia and varia>
+Dead<combining grave accent> Compose <(> <greek small letter iota> <greek small letter iota with dasia and varia>
+Dead<combining grave accent> Compose <(> <greek small letter omicron> <greek small letter omicron with dasia and varia>
+Dead<combining grave accent> Compose <(> <greek small letter upsilon> <greek small letter upsilon with dasia and varia>
+Dead<combining grave accent> Compose <(> <greek small letter omega> <greek small letter omega with dasia and varia>
+Dead<combining grave accent> Compose <)> <greek capital letter alpha> <greek capital letter alpha with psili and varia>
+Dead<combining grave accent> Compose <)> <greek capital letter epsilon> <greek capital letter epsilon with psili and varia>
+Dead<combining grave accent> Compose <)> <greek capital letter eta> <greek capital letter eta with psili and varia>
+Dead<combining grave accent> Compose <)> <greek capital letter iota> <greek capital letter iota with psili and varia>
+Dead<combining grave accent> Compose <)> <greek capital letter omicron> <greek capital letter omicron with psili and varia>
+Dead<combining grave accent> Compose <)> <greek capital letter omega> <greek capital letter omega with psili and varia>
+Dead<combining grave accent> Compose <)> <greek small letter alpha> <greek small letter alpha with psili and varia>
+Dead<combining grave accent> Compose <)> <greek small letter epsilon> <greek small letter epsilon with psili and varia>
+Dead<combining grave accent> Compose <)> <greek small letter eta> <greek small letter eta with psili and varia>
+Dead<combining grave accent> Compose <)> <greek small letter iota> <greek small letter iota with psili and varia>
+Dead<combining grave accent> Compose <)> <greek small letter omicron> <greek small letter omicron with psili and varia>
+Dead<combining grave accent> Compose <)> <greek small letter upsilon> <greek small letter upsilon with psili and varia>
+Dead<combining grave accent> Compose <)> <greek small letter omega> <greek small letter omega with psili and varia>
+Dead<combining grave accent> Compose <+> <O> <latin capital letter o with horn and grave>
+Dead<combining grave accent> Compose <+> <U> <latin capital letter u with horn and grave>
+Dead<combining grave accent> Compose <+> <o> <latin small letter o with horn and grave>
+Dead<combining grave accent> Compose <+> <u> <latin small letter u with horn and grave>
+Dead<combining grave accent> Compose <U> <A> <latin capital letter a with breve and grave>
+Dead<combining grave accent> Compose <U> <a> <latin small letter a with breve and grave>
+Dead<combining grave accent> Compose <^> <A> <latin capital letter a with circumflex and grave>
+Dead<combining grave accent> Compose <^> <E> <latin capital letter e with circumflex and grave>
+Dead<combining grave accent> Compose <^> <O> <latin capital letter o with circumflex and grave>
+Dead<combining grave accent> Compose <^> <a> <latin small letter a with circumflex and grave>
+Dead<combining grave accent> Compose <^> <e> <latin small letter e with circumflex and grave>
+Dead<combining grave accent> Compose <^> <o> <latin small letter o with circumflex and grave>
+Dead<combining grave accent> Compose <_> <E> <latin capital letter e with macron and grave>
+Dead<combining grave accent> Compose <_> <O> <latin capital letter o with macron and grave>
+Dead<combining grave accent> Compose <_> <e> <latin small letter e with macron and grave>
+Dead<combining grave accent> Compose <_> <o> <latin small letter o with macron and grave>
+Dead<combining grave accent> Compose <b> <A> <latin capital letter a with breve and grave>
+Dead<combining grave accent> Compose <b> <a> <latin small letter a with breve and grave>
+Dead<combining grave accent> Compose <macron> <E> <latin capital letter e with macron and grave>
+Dead<combining grave accent> Compose <macron> <O> <latin capital letter o with macron and grave>
+Dead<combining grave accent> Compose <macron> <e> <latin small letter e with macron and grave>
+Dead<combining grave accent> Compose <macron> <o> <latin small letter o with macron and grave>
+Dead<combining grave accent> Dead<combining grave accent> <`>
+Dead<combining grave accent> Dead<combining circumflex accent> <A> <latin capital letter a with circumflex and grave>
+Dead<combining grave accent> Dead<combining circumflex accent> <E> <latin capital letter e with circumflex and grave>
+Dead<combining grave accent> Dead<combining circumflex accent> <O> <latin capital letter o with circumflex and grave>
+Dead<combining grave accent> Dead<combining circumflex accent> <a> <latin small letter a with circumflex and grave>
+Dead<combining grave accent> Dead<combining circumflex accent> <e> <latin small letter e with circumflex and grave>
+Dead<combining grave accent> Dead<combining circumflex accent> <o> <latin small letter o with circumflex and grave>
+Dead<combining grave accent> Dead<combining macron> <E> <latin capital letter e with macron and grave>
+Dead<combining grave accent> Dead<combining macron> <O> <latin capital letter o with macron and grave>
+Dead<combining grave accent> Dead<combining macron> <e> <latin small letter e with macron and grave>
+Dead<combining grave accent> Dead<combining macron> <o> <latin small letter o with macron and grave>
+Dead<combining grave accent> Dead<combining breve> <A> <latin capital letter a with breve and grave>
+Dead<combining grave accent> Dead<combining breve> <a> <latin small letter a with breve and grave>
+Dead<combining grave accent> Dead<combining diaeresis> <U> <latin capital letter u with diaeresis and grave>
+Dead<combining grave accent> Dead<combining diaeresis> <u> <latin small letter u with diaeresis and grave>
+Dead<combining grave accent> Dead<combining diaeresis> <greek small letter iota> <greek small letter iota with dialytika and varia>
+Dead<combining grave accent> Dead<combining diaeresis> <greek small letter upsilon> <greek small letter upsilon with dialytika and varia>
+Dead<combining grave accent> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and varia>
+Dead<combining grave accent> Dead<combining comma above> <greek capital letter epsilon> <greek capital letter epsilon with psili and varia>
+Dead<combining grave accent> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and varia>
+Dead<combining grave accent> Dead<combining comma above> <greek capital letter iota> <greek capital letter iota with psili and varia>
+Dead<combining grave accent> Dead<combining comma above> <greek capital letter omicron> <greek capital letter omicron with psili and varia>
+Dead<combining grave accent> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and varia>
+Dead<combining grave accent> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and varia>
+Dead<combining grave accent> Dead<combining comma above> <greek small letter epsilon> <greek small letter epsilon with psili and varia>
+Dead<combining grave accent> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and varia>
+Dead<combining grave accent> Dead<combining comma above> <greek small letter iota> <greek small letter iota with psili and varia>
+Dead<combining grave accent> Dead<combining comma above> <greek small letter omicron> <greek small letter omicron with psili and varia>
+Dead<combining grave accent> Dead<combining comma above> <greek small letter upsilon> <greek small letter upsilon with psili and varia>
+Dead<combining grave accent> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and varia>
+Dead<combining grave accent> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and varia>
+Dead<combining grave accent> Dead<combining reversed comma above> <greek capital letter epsilon> <greek capital letter epsilon with dasia and varia>
+Dead<combining grave accent> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and varia>
+Dead<combining grave accent> Dead<combining reversed comma above> <greek capital letter iota> <greek capital letter iota with dasia and varia>
+Dead<combining grave accent> Dead<combining reversed comma above> <greek capital letter omicron> <greek capital letter omicron with dasia and varia>
+Dead<combining grave accent> Dead<combining reversed comma above> <greek capital letter upsilon> <greek capital letter upsilon with dasia and varia>
+Dead<combining grave accent> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and varia>
+Dead<combining grave accent> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and varia>
+Dead<combining grave accent> Dead<combining reversed comma above> <greek small letter epsilon> <greek small letter epsilon with dasia and varia>
+Dead<combining grave accent> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and varia>
+Dead<combining grave accent> Dead<combining reversed comma above> <greek small letter iota> <greek small letter iota with dasia and varia>
+Dead<combining grave accent> Dead<combining reversed comma above> <greek small letter omicron> <greek small letter omicron with dasia and varia>
+Dead<combining grave accent> Dead<combining reversed comma above> <greek small letter upsilon> <greek small letter upsilon with dasia and varia>
+Dead<combining grave accent> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and varia>
+Dead<combining grave accent> Dead<combining horn> <O> <latin capital letter o with horn and grave>
+Dead<combining grave accent> Dead<combining horn> <U> <latin capital letter u with horn and grave>
+Dead<combining grave accent> Dead<combining horn> <o> <latin small letter o with horn and grave>
+Dead<combining grave accent> Dead<combining horn> <u> <latin small letter u with horn and grave>
+Dead<combining grave accent> <space> <`>
+Dead<combining grave accent> <A> <latin capital letter a with grave>
+Dead<combining grave accent> <E> <latin capital letter e with grave>
+Dead<combining grave accent> <I> <latin capital letter i with grave>
+Dead<combining grave accent> <N> <latin capital letter n with grave>
+Dead<combining grave accent> <O> <latin capital letter o with grave>
+Dead<combining grave accent> <U> <latin capital letter u with grave>
+Dead<combining grave accent> <V> <latin capital letter u with diaeresis and grave>
+Dead<combining grave accent> <W> <latin capital letter w with grave>
+Dead<combining grave accent> <Y> <latin capital letter y with grave>
+Dead<combining grave accent> <a> <latin small letter a with grave>
+Dead<combining grave accent> <e> <latin small letter e with grave>
+Dead<combining grave accent> <i> <latin small letter i with grave>
+Dead<combining grave accent> <n> <latin small letter n with grave>
+Dead<combining grave accent> <o> <latin small letter o with grave>
+Dead<combining grave accent> <u> <latin small letter u with grave>
+Dead<combining grave accent> <v> <latin small letter u with diaeresis and grave>
+Dead<combining grave accent> <w> <latin small letter w with grave>
+Dead<combining grave accent> <y> <latin small letter y with grave>
+Dead<combining grave accent> <no-break space> <combining grave accent>
+Dead<combining grave accent> <latin capital letter a with circumflex> <latin capital letter a with circumflex and grave>
+Dead<combining grave accent> <latin capital letter e with circumflex> <latin capital letter e with circumflex and grave>
+Dead<combining grave accent> <latin capital letter o with circumflex> <latin capital letter o with circumflex and grave>
+Dead<combining grave accent> <latin capital letter u with diaeresis> <latin capital letter u with diaeresis and grave>
+Dead<combining grave accent> <latin small letter a with circumflex> <latin small letter a with circumflex and grave>
+Dead<combining grave accent> <latin small letter e with circumflex> <latin small letter e with circumflex and grave>
+Dead<combining grave accent> <latin small letter o with circumflex> <latin small letter o with circumflex and grave>
+Dead<combining grave accent> <latin small letter u with diaeresis> <latin small letter u with diaeresis and grave>
+Dead<combining grave accent> <latin capital letter a with breve> <latin capital letter a with breve and grave>
+Dead<combining grave accent> <latin small letter a with breve> <latin small letter a with breve and grave>
+Dead<combining grave accent> <latin capital letter a with ogonek> <latin small letter o with horn and grave>
+Dead<combining grave accent> <latin capital letter e with macron> <latin capital letter e with macron and grave>
+Dead<combining grave accent> <latin small letter e with macron> <latin small letter e with macron and grave>
+Dead<combining grave accent> <latin capital letter o with macron> <latin capital letter o with macron and grave>
+Dead<combining grave accent> <latin small letter o with macron> <latin small letter o with macron and grave>
+Dead<combining grave accent> <latin capital letter z with dot above> <latin capital letter u with horn and grave>
+Dead<combining grave accent> <latin capital letter o with horn> <latin capital letter o with horn and grave>
+Dead<combining grave accent> <latin small letter u with horn> <latin small letter u with horn and grave>
+Dead<combining grave accent> <greek capital letter alpha> <greek capital letter alpha with varia>
+Dead<combining grave accent> <greek capital letter epsilon> <greek capital letter epsilon with varia>
+Dead<combining grave accent> <greek capital letter eta> <greek capital letter eta with varia>
+Dead<combining grave accent> <greek capital letter iota> <greek capital letter iota with varia>
+Dead<combining grave accent> <greek capital letter omicron> <greek capital letter omicron with varia>
+Dead<combining grave accent> <greek capital letter upsilon> <greek capital letter upsilon with varia>
+Dead<combining grave accent> <greek capital letter omega> <greek capital letter omega with varia>
+Dead<combining grave accent> <greek small letter alpha> <greek small letter alpha with varia>
+Dead<combining grave accent> <greek small letter epsilon> <greek small letter epsilon with varia>
+Dead<combining grave accent> <greek small letter eta> <greek small letter eta with varia>
+Dead<combining grave accent> <greek small letter iota> <greek small letter iota with varia>
+Dead<combining grave accent> <greek small letter omicron> <greek small letter omicron with varia>
+Dead<combining grave accent> <greek small letter upsilon> <greek small letter upsilon with varia>
+Dead<combining grave accent> <greek small letter omega> <greek small letter omega with varia>
+Dead<combining grave accent> <greek small letter iota with dialytika> <greek small letter iota with dialytika and varia>
+Dead<combining grave accent> <greek small letter upsilon with dialytika> <greek small letter upsilon with dialytika and varia>
+Dead<combining grave accent> <cyrillic capital letter ie> <cyrillic capital letter ie with grave>
+Dead<combining grave accent> <cyrillic capital letter i> <cyrillic capital letter i with grave>
+Dead<combining grave accent> <cyrillic small letter ie> <cyrillic small letter ie with grave>
+Dead<combining grave accent> <cyrillic small letter i> <cyrillic small letter i with grave>
+Dead<combining grave accent> <greek small letter alpha with psili> <greek small letter alpha with psili and varia>
+Dead<combining grave accent> <greek small letter alpha with dasia> <greek small letter alpha with dasia and varia>
+Dead<combining grave accent> <greek capital letter alpha with psili> <greek capital letter alpha with psili and varia>
+Dead<combining grave accent> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and varia>
+Dead<combining grave accent> <greek small letter epsilon with psili> <greek small letter epsilon with psili and varia>
+Dead<combining grave accent> <greek small letter epsilon with dasia> <greek small letter epsilon with dasia and varia>
+Dead<combining grave accent> <greek capital letter epsilon with psili> <greek capital letter epsilon with psili and varia>
+Dead<combining grave accent> <greek capital letter epsilon with dasia> <greek capital letter epsilon with dasia and varia>
+Dead<combining grave accent> <greek small letter eta with psili> <greek small letter eta with psili and varia>
+Dead<combining grave accent> <greek small letter eta with dasia> <greek small letter eta with dasia and varia>
+Dead<combining grave accent> <greek capital letter eta with psili> <greek capital letter eta with psili and varia>
+Dead<combining grave accent> <greek capital letter eta with dasia> <greek capital letter eta with dasia and varia>
+Dead<combining grave accent> <greek small letter iota with psili> <greek small letter iota with psili and varia>
+Dead<combining grave accent> <greek small letter iota with dasia> <greek small letter iota with dasia and varia>
+Dead<combining grave accent> <greek capital letter iota with psili> <greek capital letter iota with psili and varia>
+Dead<combining grave accent> <greek capital letter iota with dasia> <greek capital letter iota with dasia and varia>
+Dead<combining grave accent> <greek small letter omicron with psili> <greek small letter omicron with psili and varia>
+Dead<combining grave accent> <greek small letter omicron with dasia> <greek small letter omicron with dasia and varia>
+Dead<combining grave accent> <greek capital letter omicron with psili> <greek capital letter omicron with psili and varia>
+Dead<combining grave accent> <greek capital letter omicron with dasia> <greek capital letter omicron with dasia and varia>
+Dead<combining grave accent> <greek small letter upsilon with psili> <greek small letter upsilon with psili and varia>
+Dead<combining grave accent> <greek small letter upsilon with dasia> <greek small letter upsilon with dasia and varia>
+Dead<combining grave accent> <greek capital letter upsilon with dasia> <greek capital letter upsilon with dasia and varia>
+Dead<combining grave accent> <greek small letter omega with psili> <greek small letter omega with psili and varia>
+Dead<combining grave accent> <greek small letter omega with dasia> <greek small letter omega with dasia and varia>
+Dead<combining grave accent> <greek capital letter omega with psili> <greek capital letter omega with psili and varia>
+Dead<combining grave accent> <greek capital letter omega with dasia> <greek capital letter omega with dasia and varia>
+Dead<combining acute accent> Compose <"> <I> <latin capital letter i with diaeresis and acute>
+Dead<combining acute accent> Compose <"> <U> <latin capital letter u with diaeresis and acute>
+Dead<combining acute accent> Compose <"> <i> <latin small letter i with diaeresis and acute>
+Dead<combining acute accent> Compose <"> <u> <latin small letter u with diaeresis and acute>
+Dead<combining acute accent> Compose <"> <greek small letter iota> <greek small letter iota with dialytika and tonos>
+Dead<combining acute accent> Compose <"> <greek small letter upsilon> <greek small letter upsilon with dialytika and tonos>
+Dead<combining acute accent> Compose <(> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia>
+Dead<combining acute accent> Compose <(> <greek capital letter epsilon> <greek capital letter epsilon with dasia and oxia>
+Dead<combining acute accent> Compose <(> <greek capital letter eta> <greek capital letter eta with dasia and oxia>
+Dead<combining acute accent> Compose <(> <greek capital letter iota> <greek capital letter iota with dasia and oxia>
+Dead<combining acute accent> Compose <(> <greek capital letter omicron> <greek capital letter omicron with dasia and oxia>
+Dead<combining acute accent> Compose <(> <greek capital letter upsilon> <greek capital letter upsilon with dasia and oxia>
+Dead<combining acute accent> Compose <(> <greek capital letter omega> <greek capital letter omega with dasia and oxia>
+Dead<combining acute accent> Compose <(> <greek small letter alpha> <greek small letter alpha with dasia and oxia>
+Dead<combining acute accent> Compose <(> <greek small letter epsilon> <greek small letter epsilon with dasia and oxia>
+Dead<combining acute accent> Compose <(> <greek small letter eta> <greek small letter eta with dasia and oxia>
+Dead<combining acute accent> Compose <(> <greek small letter iota> <greek small letter iota with dasia and oxia>
+Dead<combining acute accent> Compose <(> <greek small letter omicron> <greek small letter omicron with dasia and oxia>
+Dead<combining acute accent> Compose <(> <greek small letter upsilon> <greek small letter upsilon with dasia and oxia>
+Dead<combining acute accent> Compose <(> <greek small letter omega> <greek small letter omega with dasia and oxia>
+Dead<combining acute accent> Compose <)> <greek capital letter alpha> <greek capital letter alpha with psili and oxia>
+Dead<combining acute accent> Compose <)> <greek capital letter epsilon> <greek capital letter epsilon with psili and oxia>
+Dead<combining acute accent> Compose <)> <greek capital letter eta> <greek capital letter eta with psili and oxia>
+Dead<combining acute accent> Compose <)> <greek capital letter iota> <greek capital letter iota with psili and oxia>
+Dead<combining acute accent> Compose <)> <greek capital letter omicron> <greek capital letter omicron with psili and oxia>
+Dead<combining acute accent> Compose <)> <greek capital letter omega> <greek capital letter omega with psili and oxia>
+Dead<combining acute accent> Compose <)> <greek small letter alpha> <greek small letter alpha with psili and oxia>
+Dead<combining acute accent> Compose <)> <greek small letter epsilon> <greek small letter epsilon with psili and oxia>
+Dead<combining acute accent> Compose <)> <greek small letter eta> <greek small letter eta with psili and oxia>
+Dead<combining acute accent> Compose <)> <greek small letter iota> <greek small letter iota with psili and oxia>
+Dead<combining acute accent> Compose <)> <greek small letter omicron> <greek small letter omicron with psili and oxia>
+Dead<combining acute accent> Compose <)> <greek small letter upsilon> <greek small letter upsilon with psili and oxia>
+Dead<combining acute accent> Compose <)> <greek small letter omega> <greek small letter omega with psili and oxia>
+Dead<combining acute accent> Compose <+> <O> <latin capital letter o with horn and acute>
+Dead<combining acute accent> Compose <+> <U> <latin capital letter u with horn and acute>
+Dead<combining acute accent> Compose <+> <o> <latin small letter o with horn and acute>
+Dead<combining acute accent> Compose <+> <u> <latin small letter u with horn and acute>
+Dead<combining acute accent> Compose <,> <C> <latin capital letter c with cedilla and acute>
+Dead<combining acute accent> Compose <,> <c> <latin small letter c with cedilla and acute>
+Dead<combining acute accent> Compose </> <O> <latin capital letter o with stroke and acute>
+Dead<combining acute accent> Compose </> <o> <latin small letter o with stroke and acute>
+Dead<combining acute accent> Compose <U> <A> <latin capital letter a with breve and acute>
+Dead<combining acute accent> Compose <U> <a> <latin small letter a with breve and acute>
+Dead<combining acute accent> Compose <^> <A> <latin capital letter a with circumflex and acute>
+Dead<combining acute accent> Compose <^> <E> <latin capital letter e with circumflex and acute>
+Dead<combining acute accent> Compose <^> <O> <latin capital letter o with circumflex and acute>
+Dead<combining acute accent> Compose <^> <a> <latin small letter a with circumflex and acute>
+Dead<combining acute accent> Compose <^> <e> <latin small letter e with circumflex and acute>
+Dead<combining acute accent> Compose <^> <o> <latin small letter o with circumflex and acute>
+Dead<combining acute accent> Compose <_> <E> <latin capital letter e with macron and acute>
+Dead<combining acute accent> Compose <_> <O> <latin capital letter o with macron and acute>
+Dead<combining acute accent> Compose <_> <e> <latin small letter e with macron and acute>
+Dead<combining acute accent> Compose <_> <o> <latin small letter o with macron and acute>
+Dead<combining acute accent> Compose <b> <A> <latin capital letter a with breve and acute>
+Dead<combining acute accent> Compose <b> <a> <latin small letter a with breve and acute>
+Dead<combining acute accent> Compose <o> <A> <latin capital letter a with ring above and acute>
+Dead<combining acute accent> Compose <o> <a> <latin small letter a with ring above and acute>
+Dead<combining acute accent> Compose <~> <O> <latin capital letter o with tilde and acute>
+Dead<combining acute accent> Compose <~> <U> <latin capital letter u with tilde and acute>
+Dead<combining acute accent> Compose <~> <o> <latin small letter o with tilde and acute>
+Dead<combining acute accent> Compose <~> <u> <latin small letter u with tilde and acute>
+Dead<combining acute accent> Compose <macron> <E> <latin capital letter e with macron and acute>
+Dead<combining acute accent> Compose <macron> <O> <latin capital letter o with macron and acute>
+Dead<combining acute accent> Compose <macron> <e> <latin small letter e with macron and acute>
+Dead<combining acute accent> Compose <macron> <o> <latin small letter o with macron and acute>
+Dead<combining acute accent> Compose <cedilla> <C> <latin capital letter c with cedilla and acute>
+Dead<combining acute accent> Compose <cedilla> <c> <latin small letter c with cedilla and acute>
+Dead<combining acute accent> Dead<combining acute accent> <acute accent>
+Dead<combining acute accent> Dead<combining circumflex accent> <A> <latin capital letter a with circumflex and acute>
+Dead<combining acute accent> Dead<combining circumflex accent> <E> <latin capital letter e with circumflex and acute>
+Dead<combining acute accent> Dead<combining circumflex accent> <O> <latin capital letter o with circumflex and acute>
+Dead<combining acute accent> Dead<combining circumflex accent> <a> <latin small letter a with circumflex and acute>
+Dead<combining acute accent> Dead<combining circumflex accent> <e> <latin small letter e with circumflex and acute>
+Dead<combining acute accent> Dead<combining circumflex accent> <o> <latin small letter o with circumflex and acute>
+Dead<combining acute accent> Dead<combining tilde> <O> <latin capital letter o with tilde and acute>
+Dead<combining acute accent> Dead<combining tilde> <U> <latin capital letter u with tilde and acute>
+Dead<combining acute accent> Dead<combining tilde> <o> <latin small letter o with tilde and acute>
+Dead<combining acute accent> Dead<combining tilde> <u> <latin small letter u with tilde and acute>
+Dead<combining acute accent> Dead<combining macron> <E> <latin capital letter e with macron and acute>
+Dead<combining acute accent> Dead<combining macron> <O> <latin capital letter o with macron and acute>
+Dead<combining acute accent> Dead<combining macron> <e> <latin small letter e with macron and acute>
+Dead<combining acute accent> Dead<combining macron> <o> <latin small letter o with macron and acute>
+Dead<combining acute accent> Dead<combining breve> <A> <latin capital letter a with breve and acute>
+Dead<combining acute accent> Dead<combining breve> <a> <latin small letter a with breve and acute>
+Dead<combining acute accent> Dead<combining dot above> <S> <latin capital letter s with acute and dot above>
+Dead<combining acute accent> Dead<combining dot above> <s> <latin small letter s with acute and dot above>
+Dead<combining acute accent> Dead<combining diaeresis> <space> <greek dialytika tonos>
+Dead<combining acute accent> Dead<combining diaeresis> <I> <latin capital letter i with diaeresis and acute>
+Dead<combining acute accent> Dead<combining diaeresis> <U> <latin capital letter u with diaeresis and acute>
+Dead<combining acute accent> Dead<combining diaeresis> <i> <latin small letter i with diaeresis and acute>
+Dead<combining acute accent> Dead<combining diaeresis> <u> <latin small letter u with diaeresis and acute>
+Dead<combining acute accent> Dead<combining diaeresis> <greek small letter iota> <greek small letter iota with dialytika and tonos>
+Dead<combining acute accent> Dead<combining diaeresis> <greek small letter upsilon> <greek small letter upsilon with dialytika and tonos>
+Dead<combining acute accent> Dead<combining ring above> <A> <latin capital letter a with ring above and acute>
+Dead<combining acute accent> Dead<combining ring above> <a> <latin small letter a with ring above and acute>
+Dead<combining acute accent> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and oxia>
+Dead<combining acute accent> Dead<combining comma above> <greek capital letter epsilon> <greek capital letter epsilon with psili and oxia>
+Dead<combining acute accent> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and oxia>
+Dead<combining acute accent> Dead<combining comma above> <greek capital letter iota> <greek capital letter iota with psili and oxia>
+Dead<combining acute accent> Dead<combining comma above> <greek capital letter omicron> <greek capital letter omicron with psili and oxia>
+Dead<combining acute accent> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and oxia>
+Dead<combining acute accent> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and oxia>
+Dead<combining acute accent> Dead<combining comma above> <greek small letter epsilon> <greek small letter epsilon with psili and oxia>
+Dead<combining acute accent> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and oxia>
+Dead<combining acute accent> Dead<combining comma above> <greek small letter iota> <greek small letter iota with psili and oxia>
+Dead<combining acute accent> Dead<combining comma above> <greek small letter omicron> <greek small letter omicron with psili and oxia>
+Dead<combining acute accent> Dead<combining comma above> <greek small letter upsilon> <greek small letter upsilon with psili and oxia>
+Dead<combining acute accent> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and oxia>
+Dead<combining acute accent> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia>
+Dead<combining acute accent> Dead<combining reversed comma above> <greek capital letter epsilon> <greek capital letter epsilon with dasia and oxia>
+Dead<combining acute accent> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and oxia>
+Dead<combining acute accent> Dead<combining reversed comma above> <greek capital letter iota> <greek capital letter iota with dasia and oxia>
+Dead<combining acute accent> Dead<combining reversed comma above> <greek capital letter omicron> <greek capital letter omicron with dasia and oxia>
+Dead<combining acute accent> Dead<combining reversed comma above> <greek capital letter upsilon> <greek capital letter upsilon with dasia and oxia>
+Dead<combining acute accent> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and oxia>
+Dead<combining acute accent> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and oxia>
+Dead<combining acute accent> Dead<combining reversed comma above> <greek small letter epsilon> <greek small letter epsilon with dasia and oxia>
+Dead<combining acute accent> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and oxia>
+Dead<combining acute accent> Dead<combining reversed comma above> <greek small letter iota> <greek small letter iota with dasia and oxia>
+Dead<combining acute accent> Dead<combining reversed comma above> <greek small letter omicron> <greek small letter omicron with dasia and oxia>
+Dead<combining acute accent> Dead<combining reversed comma above> <greek small letter upsilon> <greek small letter upsilon with dasia and oxia>
+Dead<combining acute accent> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and oxia>
+Dead<combining acute accent> Dead<combining horn> <O> <latin capital letter o with horn and acute>
+Dead<combining acute accent> Dead<combining horn> <U> <latin capital letter u with horn and acute>
+Dead<combining acute accent> Dead<combining horn> <o> <latin small letter o with horn and acute>
+Dead<combining acute accent> Dead<combining horn> <u> <latin small letter u with horn and acute>
+Dead<combining acute accent> Dead<combining cedilla> <C> <latin capital letter c with cedilla and acute>
+Dead<combining acute accent> Dead<combining cedilla> <c> <latin small letter c with cedilla and acute>
+Dead<combining acute accent> Dead<combining long solidus overlay> <O> <latin capital letter o with stroke and acute>
+Dead<combining acute accent> Dead<combining long solidus overlay> <o> <latin small letter o with stroke and acute>
+Dead<combining acute accent> <space> <'>
+Dead<combining acute accent> <A> <latin capital letter a with acute>
+Dead<combining acute accent> <C> <latin capital letter c with cedilla>
+Dead<combining acute accent> <E> <latin capital letter e with acute>
+Dead<combining acute accent> <G> <latin capital letter g with acute>
+Dead<combining acute accent> <I> <latin capital letter i with acute>
+Dead<combining acute accent> <K> <latin capital letter k with acute>
+Dead<combining acute accent> <L> <latin capital letter l with acute>
+Dead<combining acute accent> <M> <latin capital letter m with acute>
+Dead<combining acute accent> <N> <latin capital letter n with acute>
+Dead<combining acute accent> <O> <latin capital letter o with acute>
+Dead<combining acute accent> <P> <latin capital letter p with acute>
+Dead<combining acute accent> <R> <latin capital letter r with acute>
+Dead<combining acute accent> <S> <latin capital letter s with acute>
+Dead<combining acute accent> <U> <latin capital letter u with acute>
+Dead<combining acute accent> <V> <latin capital letter u with diaeresis and acute>
+Dead<combining acute accent> <W> <latin capital letter w with acute>
+Dead<combining acute accent> <Y> <latin capital letter y with acute>
+Dead<combining acute accent> <Z> <latin capital letter z with acute>
+Dead<combining acute accent> <a> <latin small letter a with acute>
+Dead<combining acute accent> <c> <latin small letter c with cedilla>
+Dead<combining acute accent> <e> <latin small letter e with acute>
+Dead<combining acute accent> <g> <latin small letter g with acute>
+Dead<combining acute accent> <i> <latin small letter i with acute>
+Dead<combining acute accent> <k> <latin small letter k with acute>
+Dead<combining acute accent> <l> <latin small letter l with acute>
+Dead<combining acute accent> <m> <latin small letter m with acute>
+Dead<combining acute accent> <n> <latin small letter n with acute>
+Dead<combining acute accent> <o> <latin small letter o with acute>
+Dead<combining acute accent> <p> <latin small letter p with acute>
+Dead<combining acute accent> <r> <latin small letter r with acute>
+Dead<combining acute accent> <s> <latin small letter s with acute>
+Dead<combining acute accent> <u> <latin small letter u with acute>
+Dead<combining acute accent> <w> <latin small letter w with acute>
+Dead<combining acute accent> <y> <latin small letter y with acute>
+Dead<combining acute accent> <z> <latin small letter z with acute>
+Dead<combining acute accent> <no-break space> <combining acute accent>
+Dead<combining acute accent> <latin capital letter a with circumflex> <latin capital letter a with circumflex and acute>
+Dead<combining acute accent> <latin capital letter a with ring above> <latin capital letter a with ring above and acute>
+Dead<combining acute accent> <latin capital letter ae> <latin capital letter ae with acute>
+Dead<combining acute accent> <latin capital letter c with cedilla> <latin capital letter c with cedilla and acute>
+Dead<combining acute accent> <latin capital letter e with circumflex> <latin capital letter e with circumflex and acute>
+Dead<combining acute accent> <latin capital letter i with diaeresis> <latin capital letter i with diaeresis and acute>
+Dead<combining acute accent> <latin capital letter o with circumflex> <latin capital letter o with circumflex and acute>
+Dead<combining acute accent> <latin capital letter o with tilde> <latin capital letter o with tilde and acute>
+Dead<combining acute accent> <latin capital letter o with stroke> <latin capital letter o with stroke and acute>
+Dead<combining acute accent> <latin capital letter u with diaeresis> <latin capital letter u with diaeresis and acute>
+Dead<combining acute accent> <latin small letter a with circumflex> <latin small letter a with circumflex and acute>
+Dead<combining acute accent> <latin small letter a with ring above> <latin small letter a with ring above and acute>
+Dead<combining acute accent> <latin small letter ae> <latin small letter ae with acute>
+Dead<combining acute accent> <latin small letter c with cedilla> <latin small letter c with cedilla and acute>
+Dead<combining acute accent> <latin small letter e with circumflex> <latin small letter e with circumflex and acute>
+Dead<combining acute accent> <latin small letter i with diaeresis> <latin small letter i with diaeresis and acute>
+Dead<combining acute accent> <latin small letter o with circumflex> <latin small letter o with circumflex and acute>
+Dead<combining acute accent> <latin small letter o with tilde> <latin small letter o with tilde and acute>
+Dead<combining acute accent> <latin small letter o with stroke> <latin small letter o with stroke and acute>
+Dead<combining acute accent> <latin small letter u with diaeresis> <latin small letter u with diaeresis and acute>
+Dead<combining acute accent> <latin capital letter a with breve> <latin capital letter a with breve and acute>
+Dead<combining acute accent> <latin small letter a with breve> <latin small letter a with breve and acute>
+Dead<combining acute accent> <latin capital letter a with ogonek> <latin small letter o with horn and acute>
+Dead<combining acute accent> <latin capital letter e with macron> <latin capital letter e with macron and acute>
+Dead<combining acute accent> <latin small letter e with macron> <latin small letter e with macron and acute>
+Dead<combining acute accent> <latin capital letter o with macron> <latin capital letter o with macron and acute>
+Dead<combining acute accent> <latin small letter o with macron> <latin small letter o with macron and acute>
+Dead<combining acute accent> <latin capital letter u with tilde> <latin capital letter u with tilde and acute>
+Dead<combining acute accent> <latin small letter u with tilde> <latin small letter u with tilde and acute>
+Dead<combining acute accent> <latin capital letter z with dot above> <latin capital letter u with horn and acute>
+Dead<combining acute accent> <latin capital letter o with horn> <latin capital letter o with horn and acute>
+Dead<combining acute accent> <latin small letter u with horn> <latin small letter u with horn and acute>
+Dead<combining acute accent> <greek capital letter alpha> <greek capital letter alpha with tonos>
+Dead<combining acute accent> <greek capital letter epsilon> <greek capital letter epsilon with tonos>
+Dead<combining acute accent> <greek capital letter eta> <greek capital letter eta with tonos>
+Dead<combining acute accent> <greek capital letter iota> <greek capital letter iota with tonos>
+Dead<combining acute accent> <greek capital letter omicron> <greek capital letter omicron with tonos>
+Dead<combining acute accent> <greek capital letter upsilon> <greek capital letter upsilon with tonos>
+Dead<combining acute accent> <greek capital letter omega> <greek capital letter omega with tonos>
+Dead<combining acute accent> <greek small letter alpha> <greek small letter alpha with tonos>
+Dead<combining acute accent> <greek small letter epsilon> <greek small letter epsilon with tonos>
+Dead<combining acute accent> <greek small letter eta> <greek small letter eta with tonos>
+Dead<combining acute accent> <greek small letter iota> <greek small letter iota with tonos>
+Dead<combining acute accent> <greek small letter omicron> <greek small letter omicron with tonos>
+Dead<combining acute accent> <greek small letter upsilon> <greek small letter upsilon with tonos>
+Dead<combining acute accent> <greek small letter omega> <greek small letter omega with tonos>
+Dead<combining acute accent> <greek small letter iota with dialytika> <greek small letter iota with dialytika and tonos>
+Dead<combining acute accent> <greek small letter upsilon with dialytika> <greek small letter upsilon with dialytika and tonos>
+Dead<combining acute accent> <cyrillic capital letter ghe> <cyrillic capital letter gje>
+Dead<combining acute accent> <cyrillic capital letter ka> <cyrillic capital letter kje>
+Dead<combining acute accent> <cyrillic small letter ghe> <cyrillic small letter gje>
+Dead<combining acute accent> <cyrillic small letter ka> <cyrillic small letter kje>
+Dead<combining acute accent> <greek small letter alpha with psili> <greek small letter alpha with psili and oxia>
+Dead<combining acute accent> <greek small letter alpha with dasia> <greek small letter alpha with dasia and oxia>
+Dead<combining acute accent> <greek capital letter alpha with psili> <greek capital letter alpha with psili and oxia>
+Dead<combining acute accent> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and oxia>
+Dead<combining acute accent> <greek small letter epsilon with psili> <greek small letter epsilon with psili and oxia>
+Dead<combining acute accent> <greek small letter epsilon with dasia> <greek small letter epsilon with dasia and oxia>
+Dead<combining acute accent> <greek capital letter epsilon with psili> <greek capital letter epsilon with psili and oxia>
+Dead<combining acute accent> <greek capital letter epsilon with dasia> <greek capital letter epsilon with dasia and oxia>
+Dead<combining acute accent> <greek small letter eta with psili> <greek small letter eta with psili and oxia>
+Dead<combining acute accent> <greek small letter eta with dasia> <greek small letter eta with dasia and oxia>
+Dead<combining acute accent> <greek capital letter eta with psili> <greek capital letter eta with psili and oxia>
+Dead<combining acute accent> <greek capital letter eta with dasia> <greek capital letter eta with dasia and oxia>
+Dead<combining acute accent> <greek small letter iota with psili> <greek small letter iota with psili and oxia>
+Dead<combining acute accent> <greek small letter iota with dasia> <greek small letter iota with dasia and oxia>
+Dead<combining acute accent> <greek capital letter iota with psili> <greek capital letter iota with psili and oxia>
+Dead<combining acute accent> <greek capital letter iota with dasia> <greek capital letter iota with dasia and oxia>
+Dead<combining acute accent> <greek small letter omicron with psili> <greek small letter omicron with psili and oxia>
+Dead<combining acute accent> <greek small letter omicron with dasia> <greek small letter omicron with dasia and oxia>
+Dead<combining acute accent> <greek capital letter omicron with psili> <greek capital letter omicron with psili and oxia>
+Dead<combining acute accent> <greek capital letter omicron with dasia> <greek capital letter omicron with dasia and oxia>
+Dead<combining acute accent> <greek small letter upsilon with psili> <greek small letter upsilon with psili and oxia>
+Dead<combining acute accent> <greek small letter upsilon with dasia> <greek small letter upsilon with dasia and oxia>
+Dead<combining acute accent> <greek capital letter upsilon with dasia> <greek capital letter upsilon with dasia and oxia>
+Dead<combining acute accent> <greek small letter omega with psili> <greek small letter omega with psili and oxia>
+Dead<combining acute accent> <greek small letter omega with dasia> <greek small letter omega with dasia and oxia>
+Dead<combining acute accent> <greek capital letter omega with psili> <greek capital letter omega with psili and oxia>
+Dead<combining acute accent> <greek capital letter omega with dasia> <greek capital letter omega with dasia and oxia>
+Dead<combining circumflex accent> Compose <!> <A> <latin capital letter a with circumflex and dot below>
+Dead<combining circumflex accent> Compose <!> <E> <latin capital letter e with circumflex and dot below>
+Dead<combining circumflex accent> Compose <!> <O> <latin capital letter o with circumflex and dot below>
+Dead<combining circumflex accent> Compose <!> <a> <latin small letter a with circumflex and dot below>
+Dead<combining circumflex accent> Compose <!> <e> <latin small letter e with circumflex and dot below>
+Dead<combining circumflex accent> Compose <!> <o> <latin small letter o with circumflex and dot below>
+Dead<combining circumflex accent> Compose <S> <M> <service mark>
+Dead<combining circumflex accent> Compose <S> <m> <service mark>
+Dead<combining circumflex accent> Compose <T> <M> <trade mark sign>
+Dead<combining circumflex accent> Compose <T> <m> <trade mark sign>
+Dead<combining circumflex accent> Compose <_> <a> <feminine ordinal indicator>
+Dead<combining circumflex accent> Compose <_> <h> <modifier letter small h>
+Dead<combining circumflex accent> Compose <_> <i> <superscript latin small letter i>
+Dead<combining circumflex accent> Compose <_> <j> <modifier letter small j>
+Dead<combining circumflex accent> Compose <_> <l> <modifier letter small l>
+Dead<combining circumflex accent> Compose <_> <n> <superscript latin small letter n>
+Dead<combining circumflex accent> Compose <_> <o> <masculine ordinal indicator>
+Dead<combining circumflex accent> Compose <_> <r> <modifier letter small r>
+Dead<combining circumflex accent> Compose <_> <s> <modifier letter small s>
+Dead<combining circumflex accent> Compose <_> <w> <modifier letter small w>
+Dead<combining circumflex accent> Compose <_> <x> <modifier letter small x>
+Dead<combining circumflex accent> Compose <_> <y> <modifier letter small y>
+Dead<combining circumflex accent> Compose <_> <latin small letter gamma> <modifier letter small gamma>
+Dead<combining circumflex accent> Compose <_> <latin small letter h with hook> <modifier letter small h with hook>
+Dead<combining circumflex accent> Compose <_> <latin small letter turned r> <modifier letter small turned r>
+Dead<combining circumflex accent> Compose <_> <latin small letter turned r with hook> <modifier letter small turned r with hook>
+Dead<combining circumflex accent> Compose <_> <latin letter small capital inverted r> <modifier letter small capital inverted r>
+Dead<combining circumflex accent> Compose <_> <latin letter pharyngeal voiced fricative> <modifier letter small reversed glottal stop>
+Dead<combining circumflex accent> Compose <s> <M> <service mark>
+Dead<combining circumflex accent> Compose <s> <m> <service mark>
+Dead<combining circumflex accent> Compose <t> <M> <trade mark sign>
+Dead<combining circumflex accent> Compose <t> <m> <trade mark sign>
+Dead<combining circumflex accent> Dead<combining grave accent> <A> <latin capital letter a with circumflex and grave>
+Dead<combining circumflex accent> Dead<combining grave accent> <E> <latin capital letter e with circumflex and grave>
+Dead<combining circumflex accent> Dead<combining grave accent> <O> <latin capital letter o with circumflex and grave>
+Dead<combining circumflex accent> Dead<combining grave accent> <a> <latin small letter a with circumflex and grave>
+Dead<combining circumflex accent> Dead<combining grave accent> <e> <latin small letter e with circumflex and grave>
+Dead<combining circumflex accent> Dead<combining grave accent> <o> <latin small letter o with circumflex and grave>
+Dead<combining circumflex accent> Dead<combining acute accent> <A> <latin capital letter a with circumflex and acute>
+Dead<combining circumflex accent> Dead<combining acute accent> <E> <latin capital letter e with circumflex and acute>
+Dead<combining circumflex accent> Dead<combining acute accent> <O> <latin capital letter o with circumflex and acute>
+Dead<combining circumflex accent> Dead<combining acute accent> <a> <latin small letter a with circumflex and acute>
+Dead<combining circumflex accent> Dead<combining acute accent> <e> <latin small letter e with circumflex and acute>
+Dead<combining circumflex accent> Dead<combining acute accent> <o> <latin small letter o with circumflex and acute>
+Dead<combining circumflex accent> Dead<combining circumflex accent> <^>
+Dead<combining circumflex accent> Dead<combining tilde> <A> <latin capital letter a with circumflex and tilde>
+Dead<combining circumflex accent> Dead<combining tilde> <E> <latin capital letter e with circumflex and tilde>
+Dead<combining circumflex accent> Dead<combining tilde> <O> <latin capital letter o with circumflex and tilde>
+Dead<combining circumflex accent> Dead<combining tilde> <a> <latin small letter a with circumflex and tilde>
+Dead<combining circumflex accent> Dead<combining tilde> <e> <latin small letter e with circumflex and tilde>
+Dead<combining circumflex accent> Dead<combining tilde> <o> <latin small letter o with circumflex and tilde>
+Dead<combining circumflex accent> Dead<combining hook above> <A> <latin capital letter a with circumflex and hook above>
+Dead<combining circumflex accent> Dead<combining hook above> <E> <latin capital letter e with circumflex and hook above>
+Dead<combining circumflex accent> Dead<combining hook above> <O> <latin capital letter o with circumflex and hook above>
+Dead<combining circumflex accent> Dead<combining hook above> <a> <latin small letter a with circumflex and hook above>
+Dead<combining circumflex accent> Dead<combining hook above> <e> <latin small letter e with circumflex and hook above>
+Dead<combining circumflex accent> Dead<combining hook above> <o> <latin small letter o with circumflex and hook above>
+Dead<combining circumflex accent> Dead<combining dot below> <A> <latin capital letter a with circumflex and dot below>
+Dead<combining circumflex accent> Dead<combining dot below> <E> <latin capital letter e with circumflex and dot below>
+Dead<combining circumflex accent> Dead<combining dot below> <O> <latin capital letter o with circumflex and dot below>
+Dead<combining circumflex accent> Dead<combining dot below> <a> <latin small letter a with circumflex and dot below>
+Dead<combining circumflex accent> Dead<combining dot below> <e> <latin small letter e with circumflex and dot below>
+Dead<combining circumflex accent> Dead<combining dot below> <o> <latin small letter o with circumflex and dot below>
+Dead<combining circumflex accent> <space> <^>
+Dead<combining circumflex accent> <(> <superscript left parenthesis>
+Dead<combining circumflex accent> <)> <superscript right parenthesis>
+Dead<combining circumflex accent> <+> <superscript plus sign>
+Dead<combining circumflex accent> <-> <superscript minus>
+Dead<combining circumflex accent> <0> <superscript zero>
+Dead<combining circumflex accent> <1> <superscript one>
+Dead<combining circumflex accent> <2> <superscript two>
+Dead<combining circumflex accent> <3> <superscript three>
+Dead<combining circumflex accent> <4> <superscript four>
+Dead<combining circumflex accent> <5> <superscript five>
+Dead<combining circumflex accent> <6> <superscript six>
+Dead<combining circumflex accent> <7> <superscript seven>
+Dead<combining circumflex accent> <8> <superscript eight>
+Dead<combining circumflex accent> <9> <superscript nine>
+Dead<combining circumflex accent> <=> <superscript equals sign>
+Dead<combining circumflex accent> <A> <latin capital letter a with circumflex>
+Dead<combining circumflex accent> <C> <latin capital letter c with circumflex>
+Dead<combining circumflex accent> <E> <latin capital letter e with circumflex>
+Dead<combining circumflex accent> <G> <latin capital letter g with circumflex>
+Dead<combining circumflex accent> <H> <latin capital letter h with circumflex>
+Dead<combining circumflex accent> <I> <latin capital letter i with circumflex>
+Dead<combining circumflex accent> <J> <latin capital letter j with circumflex>
+Dead<combining circumflex accent> <O> <latin capital letter o with circumflex>
+Dead<combining circumflex accent> <S> <latin capital letter s with circumflex>
+Dead<combining circumflex accent> <U> <latin capital letter u with circumflex>
+Dead<combining circumflex accent> <W> <latin capital letter w with circumflex>
+Dead<combining circumflex accent> <Y> <latin capital letter y with circumflex>
+Dead<combining circumflex accent> <Z> <latin capital letter z with circumflex>
+Dead<combining circumflex accent> <a> <latin small letter a with circumflex>
+Dead<combining circumflex accent> <c> <latin small letter c with circumflex>
+Dead<combining circumflex accent> <e> <latin small letter e with circumflex>
+Dead<combining circumflex accent> <g> <latin small letter g with circumflex>
+Dead<combining circumflex accent> <h> <latin small letter h with circumflex>
+Dead<combining circumflex accent> <i> <latin small letter i with circumflex>
+Dead<combining circumflex accent> <j> <latin small letter j with circumflex>
+Dead<combining circumflex accent> <o> <latin small letter o with circumflex>
+Dead<combining circumflex accent> <s> <latin small letter s with circumflex>
+Dead<combining circumflex accent> <u> <latin small letter u with circumflex>
+Dead<combining circumflex accent> <w> <latin small letter w with circumflex>
+Dead<combining circumflex accent> <y> <latin small letter y with circumflex>
+Dead<combining circumflex accent> <z> <latin small letter z with circumflex>
+Dead<combining circumflex accent> <no-break space> <combining circumflex accent>
+Dead<combining circumflex accent> <latin capital letter a with grave> <latin capital letter a with circumflex and grave>
+Dead<combining circumflex accent> <latin capital letter a with acute> <latin capital letter a with circumflex and acute>
+Dead<combining circumflex accent> <latin capital letter a with tilde> <latin capital letter a with circumflex and tilde>
+Dead<combining circumflex accent> <latin capital letter e with grave> <latin capital letter e with circumflex and grave>
+Dead<combining circumflex accent> <latin capital letter e with acute> <latin capital letter e with circumflex and acute>
+Dead<combining circumflex accent> <latin capital letter o with grave> <latin capital letter o with circumflex and grave>
+Dead<combining circumflex accent> <latin capital letter o with acute> <latin capital letter o with circumflex and acute>
+Dead<combining circumflex accent> <latin capital letter o with tilde> <latin capital letter o with circumflex and tilde>
+Dead<combining circumflex accent> <latin small letter a with grave> <latin small letter a with circumflex and grave>
+Dead<combining circumflex accent> <latin small letter a with acute> <latin small letter a with circumflex and acute>
+Dead<combining circumflex accent> <latin small letter a with tilde> <latin small letter a with circumflex and tilde>
+Dead<combining circumflex accent> <latin small letter e with grave> <latin small letter e with circumflex and grave>
+Dead<combining circumflex accent> <latin small letter e with acute> <latin small letter e with circumflex and acute>
+Dead<combining circumflex accent> <latin small letter o with grave> <latin small letter o with circumflex and grave>
+Dead<combining circumflex accent> <latin small letter o with acute> <latin small letter o with circumflex and acute>
+Dead<combining circumflex accent> <latin small letter o with tilde> <latin small letter o with circumflex and tilde>
+Dead<combining circumflex accent> <latin capital letter a with dot below> <latin capital letter a with circumflex and dot below>
+Dead<combining circumflex accent> <latin small letter a with dot below> <latin small letter a with circumflex and dot below>
+Dead<combining circumflex accent> <latin capital letter e with dot below> <latin capital letter e with circumflex and dot below>
+Dead<combining circumflex accent> <latin small letter e with dot below> <latin small letter e with circumflex and dot below>
+Dead<combining circumflex accent> <latin capital letter o with dot below> <latin capital letter o with circumflex and dot below>
+Dead<combining circumflex accent> <latin small letter o with dot below> <latin small letter o with circumflex and dot below>
+Dead<combining circumflex accent> <minus sign> <superscript minus>
+Dead<combining circumflex accent> <cjk unified ideograph-4e00> <ideographic annotation one mark>
+Dead<combining circumflex accent> <cjk unified ideograph-4e01> <ideographic annotation fourth mark>
+Dead<combining circumflex accent> <cjk unified ideograph-4e09> <ideographic annotation three mark>
+Dead<combining circumflex accent> <cjk unified ideograph-4e0a> <ideographic annotation top mark>
+Dead<combining circumflex accent> <cjk unified ideograph-4e0b> <ideographic annotation bottom mark>
+Dead<combining circumflex accent> <cjk unified ideograph-4e19> <ideographic annotation third mark>
+Dead<combining circumflex accent> <cjk unified ideograph-4e2d> <ideographic annotation middle mark>
+Dead<combining circumflex accent> <cjk unified ideograph-4e59> <ideographic annotation second mark>
+Dead<combining circumflex accent> <cjk unified ideograph-4e8c> <ideographic annotation two mark>
+Dead<combining circumflex accent> <cjk unified ideograph-4eba> <ideographic annotation man mark>
+Dead<combining circumflex accent> <cjk unified ideograph-56db> <ideographic annotation four mark>
+Dead<combining circumflex accent> <cjk unified ideograph-5730> <ideographic annotation earth mark>
+Dead<combining circumflex accent> <cjk unified ideograph-5929> <ideographic annotation heaven mark>
+Dead<combining circumflex accent> <cjk unified ideograph-7532> <ideographic annotation first mark>
+Dead<combining tilde> Compose <"> <greek small letter iota> <greek small letter iota with dialytika and perispomeni>
+Dead<combining tilde> Compose <"> <greek small letter upsilon> <greek small letter upsilon with dialytika and perispomeni>
+Dead<combining tilde> Compose <(> <greek capital letter alpha> <greek capital letter alpha with dasia and perispomeni>
+Dead<combining tilde> Compose <(> <greek capital letter eta> <greek capital letter eta with dasia and perispomeni>
+Dead<combining tilde> Compose <(> <greek capital letter iota> <greek capital letter iota with dasia and perispomeni>
+Dead<combining tilde> Compose <(> <greek capital letter upsilon> <greek capital letter upsilon with dasia and perispomeni>
+Dead<combining tilde> Compose <(> <greek capital letter omega> <greek capital letter omega with dasia and perispomeni>
+Dead<combining tilde> Compose <(> <greek small letter alpha> <greek small letter alpha with dasia and perispomeni>
+Dead<combining tilde> Compose <(> <greek small letter eta> <greek small letter eta with dasia and perispomeni>
+Dead<combining tilde> Compose <(> <greek small letter iota> <greek small letter iota with dasia and perispomeni>
+Dead<combining tilde> Compose <(> <greek small letter upsilon> <greek small letter upsilon with dasia and perispomeni>
+Dead<combining tilde> Compose <(> <greek small letter omega> <greek small letter omega with dasia and perispomeni>
+Dead<combining tilde> Compose <)> <greek capital letter alpha> <greek capital letter alpha with psili and perispomeni>
+Dead<combining tilde> Compose <)> <greek capital letter eta> <greek capital letter eta with psili and perispomeni>
+Dead<combining tilde> Compose <)> <greek capital letter iota> <greek capital letter iota with psili and perispomeni>
+Dead<combining tilde> Compose <)> <greek capital letter omega> <greek capital letter omega with psili and perispomeni>
+Dead<combining tilde> Compose <)> <greek small letter alpha> <greek small letter alpha with psili and perispomeni>
+Dead<combining tilde> Compose <)> <greek small letter eta> <greek small letter eta with psili and perispomeni>
+Dead<combining tilde> Compose <)> <greek small letter iota> <greek small letter iota with psili and perispomeni>
+Dead<combining tilde> Compose <)> <greek small letter upsilon> <greek small letter upsilon with psili and perispomeni>
+Dead<combining tilde> Compose <)> <greek small letter omega> <greek small letter omega with psili and perispomeni>
+Dead<combining tilde> Compose <+> <O> <latin capital letter o with horn and tilde>
+Dead<combining tilde> Compose <+> <U> <latin capital letter u with horn and tilde>
+Dead<combining tilde> Compose <+> <o> <latin small letter o with horn and tilde>
+Dead<combining tilde> Compose <+> <u> <latin small letter u with horn and tilde>
+Dead<combining tilde> Compose <U> <A> <latin capital letter a with breve and tilde>
+Dead<combining tilde> Compose <U> <a> <latin small letter a with breve and tilde>
+Dead<combining tilde> Compose <^> <A> <latin capital letter a with circumflex and tilde>
+Dead<combining tilde> Compose <^> <E> <latin capital letter e with circumflex and tilde>
+Dead<combining tilde> Compose <^> <O> <latin capital letter o with circumflex and tilde>
+Dead<combining tilde> Compose <^> <a> <latin small letter a with circumflex and tilde>
+Dead<combining tilde> Compose <^> <e> <latin small letter e with circumflex and tilde>
+Dead<combining tilde> Compose <^> <o> <latin small letter o with circumflex and tilde>
+Dead<combining tilde> Compose <b> <A> <latin capital letter a with breve and tilde>
+Dead<combining tilde> Compose <b> <a> <latin small letter a with breve and tilde>
+Dead<combining tilde> Dead<combining acute accent> <O> <latin capital letter o with tilde and acute>
+Dead<combining tilde> Dead<combining acute accent> <U> <latin capital letter u with tilde and acute>
+Dead<combining tilde> Dead<combining acute accent> <o> <latin small letter o with tilde and acute>
+Dead<combining tilde> Dead<combining acute accent> <u> <latin small letter u with tilde and acute>
+Dead<combining tilde> Dead<combining circumflex accent> <A> <latin capital letter a with circumflex and tilde>
+Dead<combining tilde> Dead<combining circumflex accent> <E> <latin capital letter e with circumflex and tilde>
+Dead<combining tilde> Dead<combining circumflex accent> <O> <latin capital letter o with circumflex and tilde>
+Dead<combining tilde> Dead<combining circumflex accent> <a> <latin small letter a with circumflex and tilde>
+Dead<combining tilde> Dead<combining circumflex accent> <e> <latin small letter e with circumflex and tilde>
+Dead<combining tilde> Dead<combining circumflex accent> <o> <latin small letter o with circumflex and tilde>
+Dead<combining tilde> Dead<combining tilde> <~>
+Dead<combining tilde> Dead<combining macron> <O> <latin capital letter o with tilde and macron>
+Dead<combining tilde> Dead<combining macron> <o> <latin small letter o with tilde and macron>
+Dead<combining tilde> Dead<combining breve> <A> <latin capital letter a with breve and tilde>
+Dead<combining tilde> Dead<combining breve> <a> <latin small letter a with breve and tilde>
+Dead<combining tilde> Dead<combining diaeresis> <O> <latin capital letter o with tilde and diaeresis>
+Dead<combining tilde> Dead<combining diaeresis> <o> <latin small letter o with tilde and diaeresis>
+Dead<combining tilde> Dead<combining diaeresis> <greek small letter iota> <greek small letter iota with dialytika and perispomeni>
+Dead<combining tilde> Dead<combining diaeresis> <greek small letter upsilon> <greek small letter upsilon with dialytika and perispomeni>
+Dead<combining tilde> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and perispomeni>
+Dead<combining tilde> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and perispomeni>
+Dead<combining tilde> Dead<combining comma above> <greek capital letter iota> <greek capital letter iota with psili and perispomeni>
+Dead<combining tilde> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and perispomeni>
+Dead<combining tilde> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and perispomeni>
+Dead<combining tilde> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and perispomeni>
+Dead<combining tilde> Dead<combining comma above> <greek small letter iota> <greek small letter iota with psili and perispomeni>
+Dead<combining tilde> Dead<combining comma above> <greek small letter upsilon> <greek small letter upsilon with psili and perispomeni>
+Dead<combining tilde> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and perispomeni>
+Dead<combining tilde> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and perispomeni>
+Dead<combining tilde> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and perispomeni>
+Dead<combining tilde> Dead<combining reversed comma above> <greek capital letter iota> <greek capital letter iota with dasia and perispomeni>
+Dead<combining tilde> Dead<combining reversed comma above> <greek capital letter upsilon> <greek capital letter upsilon with dasia and perispomeni>
+Dead<combining tilde> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and perispomeni>
+Dead<combining tilde> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and perispomeni>
+Dead<combining tilde> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and perispomeni>
+Dead<combining tilde> Dead<combining reversed comma above> <greek small letter iota> <greek small letter iota with dasia and perispomeni>
+Dead<combining tilde> Dead<combining reversed comma above> <greek small letter upsilon> <greek small letter upsilon with dasia and perispomeni>
+Dead<combining tilde> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and perispomeni>
+Dead<combining tilde> Dead<combining horn> <O> <latin capital letter o with horn and tilde>
+Dead<combining tilde> Dead<combining horn> <U> <latin capital letter u with horn and tilde>
+Dead<combining tilde> Dead<combining horn> <o> <latin small letter o with horn and tilde>
+Dead<combining tilde> Dead<combining horn> <u> <latin small letter u with horn and tilde>
+Dead<combining tilde> <space> <~>
+Dead<combining tilde> '<' <less-than or equivalent to>
+Dead<combining tilde> <=> <asymptotically equal to>
+Dead<combining tilde> '>' <greater-than or equivalent to>
+Dead<combining tilde> <A> <latin capital letter a with tilde>
+Dead<combining tilde> <E> <latin capital letter e with tilde>
+Dead<combining tilde> <I> <latin capital letter i with tilde>
+Dead<combining tilde> <N> <latin capital letter n with tilde>
+Dead<combining tilde> <O> <latin capital letter o with tilde>
+Dead<combining tilde> <U> <latin capital letter u with tilde>
+Dead<combining tilde> <V> <latin capital letter v with tilde>
+Dead<combining tilde> <Y> <latin capital letter y with tilde>
+Dead<combining tilde> <a> <latin small letter a with tilde>
+Dead<combining tilde> <e> <latin small letter e with tilde>
+Dead<combining tilde> <i> <latin small letter i with tilde>
+Dead<combining tilde> <n> <latin small letter n with tilde>
+Dead<combining tilde> <o> <latin small letter o with tilde>
+Dead<combining tilde> <u> <latin small letter u with tilde>
+Dead<combining tilde> <v> <latin small letter v with tilde>
+Dead<combining tilde> <y> <latin small letter y with tilde>
+Dead<combining tilde> <no-break space> <combining tilde>
+Dead<combining tilde> <latin capital letter a with circumflex> <latin capital letter a with circumflex and tilde>
+Dead<combining tilde> <latin capital letter e with circumflex> <latin capital letter e with circumflex and tilde>
+Dead<combining tilde> <latin capital letter o with acute> <latin capital letter o with tilde and acute>
+Dead<combining tilde> <latin capital letter o with circumflex> <latin capital letter o with circumflex and tilde>
+Dead<combining tilde> <latin capital letter o with diaeresis> <latin capital letter o with tilde and diaeresis>
+Dead<combining tilde> <latin capital letter u with acute> <latin capital letter u with tilde and acute>
+Dead<combining tilde> <latin small letter a with circumflex> <latin small letter a with circumflex and tilde>
+Dead<combining tilde> <latin small letter e with circumflex> <latin small letter e with circumflex and tilde>
+Dead<combining tilde> <latin small letter o with acute> <latin small letter o with tilde and acute>
+Dead<combining tilde> <latin small letter o with circumflex> <latin small letter o with circumflex and tilde>
+Dead<combining tilde> <latin small letter o with diaeresis> <latin small letter o with tilde and diaeresis>
+Dead<combining tilde> <latin small letter u with acute> <latin small letter u with tilde and acute>
+Dead<combining tilde> <latin capital letter a with breve> <latin capital letter a with breve and tilde>
+Dead<combining tilde> <latin small letter a with breve> <latin small letter a with breve and tilde>
+Dead<combining tilde> <latin capital letter a with ogonek> <latin small letter o with horn and tilde>
+Dead<combining tilde> <latin capital letter o with macron> <latin capital letter o with tilde and macron>
+Dead<combining tilde> <latin small letter o with macron> <latin small letter o with tilde and macron>
+Dead<combining tilde> <latin capital letter z with dot above> <latin capital letter u with horn and tilde>
+Dead<combining tilde> <latin capital letter o with horn> <latin capital letter o with horn and tilde>
+Dead<combining tilde> <latin small letter u with horn> <latin small letter u with horn and tilde>
+Dead<combining tilde> <greek small letter alpha> <greek small letter alpha with perispomeni>
+Dead<combining tilde> <greek small letter eta> <greek small letter eta with perispomeni>
+Dead<combining tilde> <greek small letter iota> <greek small letter iota with perispomeni>
+Dead<combining tilde> <greek small letter upsilon> <greek small letter upsilon with perispomeni>
+Dead<combining tilde> <greek small letter omega> <greek small letter omega with perispomeni>
+Dead<combining tilde> <greek small letter iota with dialytika> <greek small letter iota with dialytika and perispomeni>
+Dead<combining tilde> <greek small letter upsilon with dialytika> <greek small letter upsilon with dialytika and perispomeni>
+Dead<combining tilde> <greek small letter alpha with psili> <greek small letter alpha with psili and perispomeni>
+Dead<combining tilde> <greek small letter alpha with dasia> <greek small letter alpha with dasia and perispomeni>
+Dead<combining tilde> <greek capital letter alpha with psili> <greek capital letter alpha with psili and perispomeni>
+Dead<combining tilde> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and perispomeni>
+Dead<combining tilde> <greek small letter eta with psili> <greek small letter eta with psili and perispomeni>
+Dead<combining tilde> <greek small letter eta with dasia> <greek small letter eta with dasia and perispomeni>
+Dead<combining tilde> <greek capital letter eta with psili> <greek capital letter eta with psili and perispomeni>
+Dead<combining tilde> <greek capital letter eta with dasia> <greek capital letter eta with dasia and perispomeni>
+Dead<combining tilde> <greek small letter iota with psili> <greek small letter iota with psili and perispomeni>
+Dead<combining tilde> <greek small letter iota with dasia> <greek small letter iota with dasia and perispomeni>
+Dead<combining tilde> <greek capital letter iota with psili> <greek capital letter iota with psili and perispomeni>
+Dead<combining tilde> <greek capital letter iota with dasia> <greek capital letter iota with dasia and perispomeni>
+Dead<combining tilde> <greek small letter upsilon with psili> <greek small letter upsilon with psili and perispomeni>
+Dead<combining tilde> <greek small letter upsilon with dasia> <greek small letter upsilon with dasia and perispomeni>
+Dead<combining tilde> <greek capital letter upsilon with dasia> <greek capital letter upsilon with dasia and perispomeni>
+Dead<combining tilde> <greek small letter omega with psili> <greek small letter omega with psili and perispomeni>
+Dead<combining tilde> <greek small letter omega with dasia> <greek small letter omega with dasia and perispomeni>
+Dead<combining tilde> <greek capital letter omega with psili> <greek capital letter omega with psili and perispomeni>
+Dead<combining tilde> <greek capital letter omega with dasia> <greek capital letter omega with dasia and perispomeni>
+Dead<combining macron> Compose <!> <L> <latin capital letter l with dot below and macron>
+Dead<combining macron> Compose <!> <R> <latin capital letter r with dot below and macron>
+Dead<combining macron> Compose <!> <l> <latin small letter l with dot below and macron>
+Dead<combining macron> Compose <!> <r> <latin small letter r with dot below and macron>
+Dead<combining macron> Compose <"> <A> <latin capital letter a with diaeresis and macron>
+Dead<combining macron> Compose <"> <O> <latin capital letter o with diaeresis and macron>
+Dead<combining macron> Compose <"> <U> <latin capital letter u with diaeresis and macron>
+Dead<combining macron> Compose <"> <a> <latin small letter a with diaeresis and macron>
+Dead<combining macron> Compose <"> <o> <latin small letter o with diaeresis and macron>
+Dead<combining macron> Compose <"> <u> <latin small letter u with diaeresis and macron>
+Dead<combining macron> Compose <.> <A> <latin capital letter a with dot above and macron>
+Dead<combining macron> Compose <.> <O> <latin capital letter o with dot above and macron>
+Dead<combining macron> Compose <.> <a> <latin small letter a with dot above and macron>
+Dead<combining macron> Compose <.> <o> <latin small letter o with dot above and macron>
+Dead<combining macron> Compose <;> <O> <latin capital letter o with ogonek and macron>
+Dead<combining macron> Compose <;> <o> <latin small letter o with ogonek and macron>
+Dead<combining macron> Compose <~> <O> <latin capital letter o with tilde and macron>
+Dead<combining macron> Compose <~> <o> <latin small letter o with tilde and macron>
+Dead<combining macron> Dead<combining grave accent> <E> <latin capital letter e with macron and grave>
+Dead<combining macron> Dead<combining grave accent> <O> <latin capital letter o with macron and grave>
+Dead<combining macron> Dead<combining grave accent> <e> <latin small letter e with macron and grave>
+Dead<combining macron> Dead<combining grave accent> <o> <latin small letter o with macron and grave>
+Dead<combining macron> Dead<combining acute accent> <E> <latin capital letter e with macron and acute>
+Dead<combining macron> Dead<combining acute accent> <O> <latin capital letter o with macron and acute>
+Dead<combining macron> Dead<combining acute accent> <e> <latin small letter e with macron and acute>
+Dead<combining macron> Dead<combining acute accent> <o> <latin small letter o with macron and acute>
+Dead<combining macron> Dead<combining tilde> <O> <latin capital letter o with tilde and macron>
+Dead<combining macron> Dead<combining tilde> <o> <latin small letter o with tilde and macron>
+Dead<combining macron> Dead<combining macron> <macron>
+Dead<combining macron> Dead<combining dot above> <A> <latin capital letter a with dot above and macron>
+Dead<combining macron> Dead<combining dot above> <O> <latin capital letter o with dot above and macron>
+Dead<combining macron> Dead<combining dot above> <a> <latin small letter a with dot above and macron>
+Dead<combining macron> Dead<combining dot above> <o> <latin small letter o with dot above and macron>
+Dead<combining macron> Dead<combining diaeresis> <A> <latin capital letter a with diaeresis and macron>
+Dead<combining macron> Dead<combining diaeresis> <O> <latin capital letter o with diaeresis and macron>
+Dead<combining macron> Dead<combining diaeresis> <U> <latin capital letter u with diaeresis and macron>
+Dead<combining macron> Dead<combining diaeresis> <a> <latin small letter a with diaeresis and macron>
+Dead<combining macron> Dead<combining diaeresis> <o> <latin small letter o with diaeresis and macron>
+Dead<combining macron> Dead<combining diaeresis> <u> <latin small letter u with diaeresis and macron>
+Dead<combining macron> Dead<combining dot below> <L> <latin capital letter l with dot below and macron>
+Dead<combining macron> Dead<combining dot below> <R> <latin capital letter r with dot below and macron>
+Dead<combining macron> Dead<combining dot below> <l> <latin small letter l with dot below and macron>
+Dead<combining macron> Dead<combining dot below> <r> <latin small letter r with dot below and macron>
+Dead<combining macron> Dead<combining ogonek> <O> <latin capital letter o with ogonek and macron>
+Dead<combining macron> Dead<combining ogonek> <o> <latin small letter o with ogonek and macron>
+Dead<combining macron> <space> <macron>
+Dead<combining macron> <A> <latin capital letter a with macron>
+Dead<combining macron> <E> <latin capital letter e with macron>
+Dead<combining macron> <G> <latin capital letter g with macron>
+Dead<combining macron> <I> <latin capital letter i with macron>
+Dead<combining macron> <O> <latin capital letter o with macron>
+Dead<combining macron> <U> <latin capital letter u with macron>
+Dead<combining macron> <V> <latin capital letter u with diaeresis and macron>
+Dead<combining macron> <Y> <latin capital letter y with macron>
+Dead<combining macron> <a> <latin small letter a with macron>
+Dead<combining macron> <e> <latin small letter e with macron>
+Dead<combining macron> <g> <latin small letter g with macron>
+Dead<combining macron> <i> <latin small letter i with macron>
+Dead<combining macron> <o> <latin small letter o with macron>
+Dead<combining macron> <u> <latin small letter u with macron>
+Dead<combining macron> <v> <latin small letter u with diaeresis and macron>
+Dead<combining macron> <y> <latin small letter y with macron>
+Dead<combining macron> <no-break space> <combining macron>
+Dead<combining macron> <latin capital letter a with diaeresis> <latin capital letter a with diaeresis and macron>
+Dead<combining macron> <latin capital letter ae> <latin capital letter ae with macron>
+Dead<combining macron> <latin capital letter e with grave> <latin capital letter e with macron and grave>
+Dead<combining macron> <latin capital letter e with acute> <latin capital letter e with macron and acute>
+Dead<combining macron> <latin capital letter o with grave> <latin capital letter o with macron and grave>
+Dead<combining macron> <latin capital letter o with acute> <latin capital letter o with macron and acute>
+Dead<combining macron> <latin capital letter o with tilde> <latin capital letter o with tilde and macron>
+Dead<combining macron> <latin capital letter o with diaeresis> <latin capital letter o with diaeresis and macron>
+Dead<combining macron> <latin capital letter u with diaeresis> <latin capital letter u with diaeresis and macron>
+Dead<combining macron> <latin small letter a with diaeresis> <latin small letter a with diaeresis and macron>
+Dead<combining macron> <latin small letter ae> <latin small letter ae with macron>
+Dead<combining macron> <latin small letter e with grave> <latin small letter e with macron and grave>
+Dead<combining macron> <latin small letter e with acute> <latin small letter e with macron and acute>
+Dead<combining macron> <latin small letter o with grave> <latin small letter o with macron and grave>
+Dead<combining macron> <latin small letter o with acute> <latin small letter o with macron and acute>
+Dead<combining macron> <latin small letter o with tilde> <latin small letter o with tilde and macron>
+Dead<combining macron> <latin small letter o with diaeresis> <latin small letter o with diaeresis and macron>
+Dead<combining macron> <latin small letter u with diaeresis> <latin small letter u with diaeresis and macron>
+Dead<combining macron> <latin small letter e with ogonek> <latin capital letter o with ogonek and macron>
+Dead<combining macron> <latin small letter o with ogonek> <latin small letter o with ogonek and macron>
+Dead<combining macron> <latin capital letter a with dot above> <latin capital letter a with dot above and macron>
+Dead<combining macron> <latin small letter a with dot above> <latin small letter a with dot above and macron>
+Dead<combining macron> <latin capital letter o with dot above> <latin capital letter o with dot above and macron>
+Dead<combining macron> <latin small letter o with dot above> <latin small letter o with dot above and macron>
+Dead<combining macron> <greek capital letter alpha> <greek capital letter alpha with macron>
+Dead<combining macron> <greek capital letter iota> <greek capital letter iota with macron>
+Dead<combining macron> <greek capital letter upsilon> <greek capital letter upsilon with macron>
+Dead<combining macron> <greek small letter alpha> <greek small letter alpha with macron>
+Dead<combining macron> <greek small letter iota> <greek small letter iota with macron>
+Dead<combining macron> <greek small letter upsilon> <greek small letter upsilon with macron>
+Dead<combining macron> <cyrillic capital letter i> <cyrillic capital letter i with macron>
+Dead<combining macron> <cyrillic capital letter u> <cyrillic capital letter u with macron>
+Dead<combining macron> <cyrillic small letter i> <cyrillic small letter i with macron>
+Dead<combining macron> <cyrillic small letter u> <cyrillic small letter u with macron>
+Dead<combining macron> <latin capital letter l with dot below> <latin capital letter l with dot below and macron>
+Dead<combining macron> <latin small letter l with dot below> <latin small letter l with dot below and macron>
+Dead<combining macron> <latin capital letter r with dot below> <latin capital letter r with dot below and macron>
+Dead<combining macron> <latin small letter r with dot below> <latin small letter r with dot below and macron>
+Dead<combining breve> Compose <!> <A> <latin capital letter a with breve and dot below>
+Dead<combining breve> Compose <!> <a> <latin small letter a with breve and dot below>
+Dead<combining breve> Compose <,> <E> <latin capital letter e with cedilla and breve>
+Dead<combining breve> Compose <,> <e> <latin small letter e with cedilla and breve>
+Dead<combining breve> Compose <cedilla> <E> <latin capital letter e with cedilla and breve>
+Dead<combining breve> Compose <cedilla> <e> <latin small letter e with cedilla and breve>
+Dead<combining breve> Dead<combining grave accent> <A> <latin capital letter a with breve and grave>
+Dead<combining breve> Dead<combining grave accent> <a> <latin small letter a with breve and grave>
+Dead<combining breve> Dead<combining acute accent> <A> <latin capital letter a with breve and acute>
+Dead<combining breve> Dead<combining acute accent> <a> <latin small letter a with breve and acute>
+Dead<combining breve> Dead<combining tilde> <A> <latin capital letter a with breve and tilde>
+Dead<combining breve> Dead<combining tilde> <a> <latin small letter a with breve and tilde>
+Dead<combining breve> Dead<combining breve> <breve>
+Dead<combining breve> Dead<combining hook above> <A> <latin capital letter a with breve and hook above>
+Dead<combining breve> Dead<combining hook above> <a> <latin small letter a with breve and hook above>
+Dead<combining breve> Dead<combining dot below> <A> <latin capital letter a with breve and dot below>
+Dead<combining breve> Dead<combining dot below> <a> <latin small letter a with breve and dot below>
+Dead<combining breve> Dead<combining cedilla> <E> <latin capital letter e with cedilla and breve>
+Dead<combining breve> Dead<combining cedilla> <e> <latin small letter e with cedilla and breve>
+Dead<combining breve> <space> <breve>
+Dead<combining breve> <A> <latin capital letter a with breve>
+Dead<combining breve> <E> <latin capital letter e with breve>
+Dead<combining breve> <G> <latin capital letter g with breve>
+Dead<combining breve> <I> <latin capital letter i with breve>
+Dead<combining breve> <O> <latin capital letter o with breve>
+Dead<combining breve> <U> <latin capital letter u with breve>
+Dead<combining breve> <a> <latin small letter a with breve>
+Dead<combining breve> <e> <latin small letter e with breve>
+Dead<combining breve> <g> <latin small letter g with breve>
+Dead<combining breve> <i> <latin small letter i with breve>
+Dead<combining breve> <o> <latin small letter o with breve>
+Dead<combining breve> <u> <latin small letter u with breve>
+Dead<combining breve> <no-break space> <combining breve>
+Dead<combining breve> <latin capital letter a with grave> <latin capital letter a with breve and grave>
+Dead<combining breve> <latin capital letter a with acute> <latin capital letter a with breve and acute>
+Dead<combining breve> <latin capital letter a with tilde> <latin capital letter a with breve and tilde>
+Dead<combining breve> <latin small letter a with grave> <latin small letter a with breve and grave>
+Dead<combining breve> <latin small letter a with acute> <latin small letter a with breve and acute>
+Dead<combining breve> <latin small letter a with tilde> <latin small letter a with breve and tilde>
+Dead<combining breve> <latin capital letter e with cedilla> <latin capital letter e with cedilla and breve>
+Dead<combining breve> <latin small letter e with cedilla> <latin small letter e with cedilla and breve>
+Dead<combining breve> <greek capital letter alpha> <greek capital letter alpha with vrachy>
+Dead<combining breve> <greek capital letter iota> <greek capital letter iota with vrachy>
+Dead<combining breve> <greek capital letter upsilon> <greek capital letter upsilon with vrachy>
+Dead<combining breve> <greek small letter alpha> <greek small letter alpha with vrachy>
+Dead<combining breve> <greek small letter iota> <greek small letter iota with vrachy>
+Dead<combining breve> <greek small letter upsilon> <greek small letter upsilon with vrachy>
+Dead<combining breve> <cyrillic capital letter a> <cyrillic capital letter a with breve>
+Dead<combining breve> <cyrillic capital letter ie> <cyrillic capital letter ie with breve>
+Dead<combining breve> <cyrillic capital letter zhe> <cyrillic capital letter zhe with breve>
+Dead<combining breve> <cyrillic capital letter i> <cyrillic capital letter short i>
+Dead<combining breve> <cyrillic capital letter u> <cyrillic capital letter short u>
+Dead<combining breve> <cyrillic small letter a> <cyrillic small letter a with breve>
+Dead<combining breve> <cyrillic small letter ie> <cyrillic small letter ie with breve>
+Dead<combining breve> <cyrillic small letter zhe> <cyrillic small letter zhe with breve>
+Dead<combining breve> <cyrillic small letter i> <cyrillic small letter short i>
+Dead<combining breve> <cyrillic small letter u> <cyrillic small letter short u>
+Dead<combining breve> <latin capital letter a with dot below> <latin capital letter a with breve and dot below>
+Dead<combining breve> <latin small letter a with dot below> <latin small letter a with breve and dot below>
+Dead<combining dot above> Compose <!> <S> <latin capital letter s with dot below and dot above>
+Dead<combining dot above> Compose <!> <s> <latin small letter s with dot below and dot above>
+Dead<combining dot above> Compose <'> <S> <latin capital letter s with acute and dot above>
+Dead<combining dot above> Compose <'> <s> <latin small letter s with acute and dot above>
+Dead<combining dot above> Compose <c> <S> <latin capital letter s with caron and dot above>
+Dead<combining dot above> Compose <c> <s> <latin small letter s with caron and dot above>
+Dead<combining dot above> Compose <acute accent> <S> <latin capital letter s with acute and dot above>
+Dead<combining dot above> Compose <acute accent> <s> <latin small letter s with acute and dot above>
+Dead<combining dot above> Dead<combining acute accent> <S> <latin capital letter s with acute and dot above>
+Dead<combining dot above> Dead<combining acute accent> <s> <latin small letter s with acute and dot above>
+Dead<combining dot above> Dead<combining macron> <A> <latin capital letter a with dot above and macron>
+Dead<combining dot above> Dead<combining macron> <O> <latin capital letter o with dot above and macron>
+Dead<combining dot above> Dead<combining macron> <a> <latin small letter a with dot above and macron>
+Dead<combining dot above> Dead<combining macron> <o> <latin small letter o with dot above and macron>
+Dead<combining dot above> Dead<combining dot above> <dot above>
+Dead<combining dot above> Dead<combining caron> <S> <latin capital letter s with caron and dot above>
+Dead<combining dot above> Dead<combining caron> <s> <latin small letter s with caron and dot above>
+Dead<combining dot above> Dead<combining dot below> <S> <latin capital letter s with dot below and dot above>
+Dead<combining dot above> Dead<combining dot below> <s> <latin small letter s with dot below and dot above>
+Dead<combining dot above> Dead<combining long solidus overlay> <j> <latin small letter dotless j with stroke>
+Dead<combining dot above> <space> <dot above>
+Dead<combining dot above> <A> <latin capital letter a with dot above>
+Dead<combining dot above> <B> <latin capital letter b with dot above>
+Dead<combining dot above> <C> <latin capital letter c with dot above>
+Dead<combining dot above> <D> <latin capital letter d with dot above>
+Dead<combining dot above> <E> <latin capital letter e with dot above>
+Dead<combining dot above> <F> <latin capital letter f with dot above>
+Dead<combining dot above> <G> <latin capital letter g with dot above>
+Dead<combining dot above> <H> <latin capital letter h with dot above>
+Dead<combining dot above> <I> <latin capital letter i with dot above>
+Dead<combining dot above> <L> <latin capital letter l with middle dot>
+Dead<combining dot above> <M> <latin capital letter m with dot above>
+Dead<combining dot above> <N> <latin capital letter n with dot above>
+Dead<combining dot above> <O> <latin capital letter o with dot above>
+Dead<combining dot above> <P> <latin capital letter p with dot above>
+Dead<combining dot above> <R> <latin capital letter r with dot above>
+Dead<combining dot above> <S> <latin capital letter s with dot above>
+Dead<combining dot above> <T> <latin capital letter t with dot above>
+Dead<combining dot above> <W> <latin capital letter w with dot above>
+Dead<combining dot above> <X> <latin capital letter x with dot above>
+Dead<combining dot above> <Y> <latin capital letter y with dot above>
+Dead<combining dot above> <Z> <latin capital letter z with dot above>
+Dead<combining dot above> <a> <latin small letter a with dot above>
+Dead<combining dot above> <b> <latin small letter b with dot above>
+Dead<combining dot above> <c> <latin small letter c with dot above>
+Dead<combining dot above> <d> <latin small letter d with dot above>
+Dead<combining dot above> <e> <latin small letter e with dot above>
+Dead<combining dot above> <f> <latin small letter f with dot above>
+Dead<combining dot above> <g> <latin small letter g with dot above>
+Dead<combining dot above> <h> <latin small letter h with dot above>
+Dead<combining dot above> <i> <latin small letter dotless i>
+Dead<combining dot above> <j> <latin small letter dotless j>
+Dead<combining dot above> <l> <latin small letter l with middle dot>
+Dead<combining dot above> <m> <latin small letter m with dot above>
+Dead<combining dot above> <n> <latin small letter n with dot above>
+Dead<combining dot above> <o> <latin small letter o with dot above>
+Dead<combining dot above> <p> <latin small letter p with dot above>
+Dead<combining dot above> <r> <latin small letter r with dot above>
+Dead<combining dot above> <s> <latin small letter s with dot above>
+Dead<combining dot above> <t> <latin small letter t with dot above>
+Dead<combining dot above> <w> <latin small letter w with dot above>
+Dead<combining dot above> <x> <latin small letter x with dot above>
+Dead<combining dot above> <y> <latin small letter y with dot above>
+Dead<combining dot above> <z> <latin small letter z with dot above>
+Dead<combining dot above> <no-break space> <combining dot above>
+Dead<combining dot above> <latin capital letter a with macron> <latin capital letter a with dot above and macron>
+Dead<combining dot above> <latin small letter a with macron> <latin small letter a with dot above and macron>
+Dead<combining dot above> <latin capital letter o with macron> <latin capital letter o with dot above and macron>
+Dead<combining dot above> <latin small letter o with macron> <latin small letter o with dot above and macron>
+Dead<combining dot above> <latin capital letter s with acute> <latin capital letter s with acute and dot above>
+Dead<combining dot above> <latin small letter s with acute> <latin small letter s with acute and dot above>
+Dead<combining dot above> <latin capital letter s with caron> <latin capital letter s with caron and dot above>
+Dead<combining dot above> <latin small letter s with caron> <latin small letter s with caron and dot above>
+Dead<combining dot above> <latin small letter long s> <latin small letter long s with dot above>
+Dead<combining dot above> <latin capital letter s with dot below> <latin capital letter s with dot below and dot above>
+Dead<combining dot above> <latin small letter s with dot below> <latin small letter s with dot below and dot above>
+Dead<combining diaeresis> Compose <_> <U> <latin capital letter u with macron and diaeresis>
+Dead<combining diaeresis> Compose <_> <u> <latin small letter u with macron and diaeresis>
+Dead<combining diaeresis> Compose <~> <O> <latin capital letter o with tilde and diaeresis>
+Dead<combining diaeresis> Compose <~> <o> <latin small letter o with tilde and diaeresis>
+Dead<combining diaeresis> Compose <macron> <U> <latin capital letter u with macron and diaeresis>
+Dead<combining diaeresis> Compose <macron> <u> <latin small letter u with macron and diaeresis>
+Dead<combining diaeresis> Dead<combining grave accent> <U> <latin capital letter u with diaeresis and grave>
+Dead<combining diaeresis> Dead<combining grave accent> <u> <latin small letter u with diaeresis and grave>
+Dead<combining diaeresis> Dead<combining acute accent> <space> <greek dialytika tonos>
+Dead<combining diaeresis> Dead<combining acute accent> <I> <latin capital letter i with diaeresis and acute>
+Dead<combining diaeresis> Dead<combining acute accent> <U> <latin capital letter u with diaeresis and acute>
+Dead<combining diaeresis> Dead<combining acute accent> <i> <latin small letter i with diaeresis and acute>
+Dead<combining diaeresis> Dead<combining acute accent> <u> <latin small letter u with diaeresis and acute>
+Dead<combining diaeresis> Dead<combining acute accent> <greek small letter iota> <greek small letter iota with dialytika and tonos>
+Dead<combining diaeresis> Dead<combining acute accent> <greek small letter upsilon> <greek small letter upsilon with dialytika and tonos>
+Dead<combining diaeresis> Dead<combining tilde> <O> <latin capital letter o with tilde and diaeresis>
+Dead<combining diaeresis> Dead<combining tilde> <o> <latin small letter o with tilde and diaeresis>
+Dead<combining diaeresis> Dead<combining macron> <A> <latin capital letter a with diaeresis and macron>
+Dead<combining diaeresis> Dead<combining macron> <O> <latin capital letter o with diaeresis and macron>
+Dead<combining diaeresis> Dead<combining macron> <U> <latin capital letter u with macron and diaeresis>
+Dead<combining diaeresis> Dead<combining macron> <a> <latin small letter a with diaeresis and macron>
+Dead<combining diaeresis> Dead<combining macron> <o> <latin small letter o with diaeresis and macron>
+Dead<combining diaeresis> Dead<combining macron> <u> <latin small letter u with macron and diaeresis>
+Dead<combining diaeresis> Dead<combining diaeresis> <diaeresis>
+Dead<combining diaeresis> Dead<combining caron> <U> <latin capital letter u with diaeresis and caron>
+Dead<combining diaeresis> Dead<combining caron> <u> <latin small letter u with diaeresis and caron>
+Dead<combining diaeresis> <space> <">
+Dead<combining diaeresis> <'> <combining greek dialytika tonos>
+Dead<combining diaeresis> <A> <latin capital letter a with diaeresis>
+Dead<combining diaeresis> <E> <latin capital letter e with diaeresis>
+Dead<combining diaeresis> <H> <latin capital letter h with diaeresis>
+Dead<combining diaeresis> <I> <latin capital letter i with diaeresis>
+Dead<combining diaeresis> <O> <latin capital letter o with diaeresis>
+Dead<combining diaeresis> <U> <latin capital letter u with diaeresis>
+Dead<combining diaeresis> <W> <latin capital letter w with diaeresis>
+Dead<combining diaeresis> <X> <latin capital letter x with diaeresis>
+Dead<combining diaeresis> <Y> <latin capital letter y with diaeresis>
+Dead<combining diaeresis> <a> <latin small letter a with diaeresis>
+Dead<combining diaeresis> <e> <latin small letter e with diaeresis>
+Dead<combining diaeresis> <h> <latin small letter h with diaeresis>
+Dead<combining diaeresis> <i> <latin small letter i with diaeresis>
+Dead<combining diaeresis> <o> <latin small letter o with diaeresis>
+Dead<combining diaeresis> <t> <latin small letter t with diaeresis>
+Dead<combining diaeresis> <u> <latin small letter u with diaeresis>
+Dead<combining diaeresis> <w> <latin small letter w with diaeresis>
+Dead<combining diaeresis> <x> <latin small letter x with diaeresis>
+Dead<combining diaeresis> <y> <latin small letter y with diaeresis>
+Dead<combining diaeresis> <no-break space> <combining diaeresis>
+Dead<combining diaeresis> <acute accent> <combining greek dialytika tonos>
+Dead<combining diaeresis> <latin capital letter i with acute> <latin capital letter i with diaeresis and acute>
+Dead<combining diaeresis> <latin capital letter o with tilde> <latin capital letter o with tilde and diaeresis>
+Dead<combining diaeresis> <latin capital letter u with grave> <latin capital letter u with diaeresis and grave>
+Dead<combining diaeresis> <latin capital letter u with acute> <latin capital letter u with diaeresis and acute>
+Dead<combining diaeresis> <latin small letter i with acute> <latin small letter i with diaeresis and acute>
+Dead<combining diaeresis> <latin small letter o with tilde> <latin small letter o with tilde and diaeresis>
+Dead<combining diaeresis> <latin small letter u with grave> <latin small letter u with diaeresis and grave>
+Dead<combining diaeresis> <latin small letter u with acute> <latin small letter u with diaeresis and acute>
+Dead<combining diaeresis> <latin capital letter a with macron> <latin capital letter a with diaeresis and macron>
+Dead<combining diaeresis> <latin small letter a with macron> <latin small letter a with diaeresis and macron>
+Dead<combining diaeresis> <latin capital letter o with macron> <latin capital letter o with diaeresis and macron>
+Dead<combining diaeresis> <latin small letter o with macron> <latin small letter o with diaeresis and macron>
+Dead<combining diaeresis> <latin capital letter u with macron> <latin capital letter u with macron and diaeresis>
+Dead<combining diaeresis> <latin small letter u with macron> <latin small letter u with macron and diaeresis>
+Dead<combining diaeresis> <latin capital letter u with caron> <latin capital letter u with diaeresis and caron>
+Dead<combining diaeresis> <latin small letter u with caron> <latin small letter u with diaeresis and caron>
+Dead<combining diaeresis> <greek capital letter iota> <greek capital letter iota with dialytika>
+Dead<combining diaeresis> <greek capital letter upsilon> <greek capital letter upsilon with dialytika>
+Dead<combining diaeresis> <greek small letter iota> <greek small letter iota with dialytika>
+Dead<combining diaeresis> <greek small letter upsilon> <greek small letter upsilon with dialytika>
+Dead<combining diaeresis> <cyrillic capital letter byelorussian-ukrainian i> <cyrillic capital letter yi>
+Dead<combining diaeresis> <cyrillic capital letter a> <cyrillic capital letter a with diaeresis>
+Dead<combining diaeresis> <cyrillic capital letter ie> <cyrillic capital letter io>
+Dead<combining diaeresis> <cyrillic capital letter zhe> <cyrillic capital letter zhe with diaeresis>
+Dead<combining diaeresis> <cyrillic capital letter ze> <cyrillic capital letter ze with diaeresis>
+Dead<combining diaeresis> <cyrillic capital letter i> <cyrillic capital letter i with diaeresis>
+Dead<combining diaeresis> <cyrillic capital letter o> <cyrillic capital letter o with diaeresis>
+Dead<combining diaeresis> <cyrillic capital letter u> <cyrillic capital letter u with diaeresis>
+Dead<combining diaeresis> <cyrillic capital letter che> <cyrillic capital letter che with diaeresis>
+Dead<combining diaeresis> <cyrillic capital letter yeru> <cyrillic capital letter yeru with diaeresis>
+Dead<combining diaeresis> <cyrillic capital letter e> <cyrillic capital letter e with diaeresis>
+Dead<combining diaeresis> <cyrillic small letter a> <cyrillic small letter a with diaeresis>
+Dead<combining diaeresis> <cyrillic small letter ie> <cyrillic small letter io>
+Dead<combining diaeresis> <cyrillic small letter zhe> <cyrillic small letter zhe with diaeresis>
+Dead<combining diaeresis> <cyrillic small letter ze> <cyrillic small letter ze with diaeresis>
+Dead<combining diaeresis> <cyrillic small letter i> <cyrillic small letter i with diaeresis>
+Dead<combining diaeresis> <cyrillic small letter o> <cyrillic small letter o with diaeresis>
+Dead<combining diaeresis> <cyrillic small letter u> <cyrillic small letter u with diaeresis>
+Dead<combining diaeresis> <cyrillic small letter che> <cyrillic small letter che with diaeresis>
+Dead<combining diaeresis> <cyrillic small letter yeru> <cyrillic small letter yeru with diaeresis>
+Dead<combining diaeresis> <cyrillic small letter e> <cyrillic small letter e with diaeresis>
+Dead<combining diaeresis> <cyrillic small letter byelorussian-ukrainian i> <cyrillic small letter yi>
+Dead<combining diaeresis> <cyrillic capital letter barred o> <cyrillic capital letter barred o with diaeresis>
+Dead<combining diaeresis> <cyrillic small letter barred o> <cyrillic small letter barred o with diaeresis>
+Dead<combining diaeresis> <katakana letter ri> <cyrillic capital letter schwa with diaeresis>
+Dead<combining diaeresis> <katakana letter ru> <cyrillic small letter schwa with diaeresis>
+Dead<combining hook above> Compose <+> <O> <latin capital letter o with horn and hook above>
+Dead<combining hook above> Compose <+> <U> <latin capital letter u with horn and hook above>
+Dead<combining hook above> Compose <+> <o> <latin small letter o with horn and hook above>
+Dead<combining hook above> Compose <+> <u> <latin small letter u with horn and hook above>
+Dead<combining hook above> Compose <U> <A> <latin capital letter a with breve and hook above>
+Dead<combining hook above> Compose <U> <a> <latin small letter a with breve and hook above>
+Dead<combining hook above> Compose <^> <A> <latin capital letter a with circumflex and hook above>
+Dead<combining hook above> Compose <^> <E> <latin capital letter e with circumflex and hook above>
+Dead<combining hook above> Compose <^> <O> <latin capital letter o with circumflex and hook above>
+Dead<combining hook above> Compose <^> <a> <latin small letter a with circumflex and hook above>
+Dead<combining hook above> Compose <^> <e> <latin small letter e with circumflex and hook above>
+Dead<combining hook above> Compose <^> <o> <latin small letter o with circumflex and hook above>
+Dead<combining hook above> Compose <b> <A> <latin capital letter a with breve and hook above>
+Dead<combining hook above> Compose <b> <a> <latin small letter a with breve and hook above>
+Dead<combining hook above> Dead<combining circumflex accent> <A> <latin capital letter a with circumflex and hook above>
+Dead<combining hook above> Dead<combining circumflex accent> <E> <latin capital letter e with circumflex and hook above>
+Dead<combining hook above> Dead<combining circumflex accent> <O> <latin capital letter o with circumflex and hook above>
+Dead<combining hook above> Dead<combining circumflex accent> <a> <latin small letter a with circumflex and hook above>
+Dead<combining hook above> Dead<combining circumflex accent> <e> <latin small letter e with circumflex and hook above>
+Dead<combining hook above> Dead<combining circumflex accent> <o> <latin small letter o with circumflex and hook above>
+Dead<combining hook above> Dead<combining breve> <A> <latin capital letter a with breve and hook above>
+Dead<combining hook above> Dead<combining breve> <a> <latin small letter a with breve and hook above>
+Dead<combining hook above> Dead<combining hook above> <combining hook above>
+Dead<combining hook above> Dead<combining horn> <O> <latin capital letter o with horn and hook above>
+Dead<combining hook above> Dead<combining horn> <U> <latin capital letter u with horn and hook above>
+Dead<combining hook above> Dead<combining horn> <o> <latin small letter o with horn and hook above>
+Dead<combining hook above> Dead<combining horn> <u> <latin small letter u with horn and hook above>
+Dead<combining hook above> <space> <combining hook above>
+Dead<combining hook above> <A> <latin capital letter a with hook above>
+Dead<combining hook above> <B> <latin capital letter b with hook>
+Dead<combining hook above> <C> <latin capital letter c with hook>
+Dead<combining hook above> <D> <latin capital letter d with hook>
+Dead<combining hook above> <E> <latin capital letter e with hook above>
+Dead<combining hook above> <F> <latin capital letter f with hook>
+Dead<combining hook above> <G> <latin capital letter g with hook>
+Dead<combining hook above> <I> <latin capital letter i with hook above>
+Dead<combining hook above> <K> <latin capital letter k with hook>
+Dead<combining hook above> <M> <latin capital letter m with hook>
+Dead<combining hook above> <N> <latin capital letter n with left hook>
+Dead<combining hook above> <O> <latin capital letter o with hook above>
+Dead<combining hook above> <P> <latin capital letter p with hook>
+Dead<combining hook above> <T> <latin capital letter t with hook>
+Dead<combining hook above> <U> <latin capital letter u with hook above>
+Dead<combining hook above> <V> <latin capital letter v with hook>
+Dead<combining hook above> <W> <latin capital letter w with hook>
+Dead<combining hook above> <Y> <latin capital letter y with hook above>
+Dead<combining hook above> <Z> <latin capital letter z with hook>
+Dead<combining hook above> <a> <latin small letter a with hook above>
+Dead<combining hook above> <b> <latin small letter b with hook>
+Dead<combining hook above> <c> <latin small letter c with hook>
+Dead<combining hook above> <d> <latin small letter d with hook>
+Dead<combining hook above> <e> <latin small letter e with hook above>
+Dead<combining hook above> <f> <latin small letter f with hook>
+Dead<combining hook above> <g> <latin small letter g with hook>
+Dead<combining hook above> <h> <latin small letter h with hook>
+Dead<combining hook above> <i> <latin small letter i with hook above>
+Dead<combining hook above> <k> <latin small letter k with hook>
+Dead<combining hook above> <m> <latin small letter m with hook>
+Dead<combining hook above> <n> <latin small letter n with left hook>
+Dead<combining hook above> <o> <latin small letter o with hook above>
+Dead<combining hook above> <p> <latin small letter p with hook>
+Dead<combining hook above> <q> <latin small letter q with hook>
+Dead<combining hook above> <s> <latin small letter s with hook>
+Dead<combining hook above> <t> <latin small letter t with hook>
+Dead<combining hook above> <u> <latin small letter u with hook above>
+Dead<combining hook above> <v> <latin small letter v with hook>
+Dead<combining hook above> <w> <latin small letter w with hook>
+Dead<combining hook above> <y> <latin small letter y with hook above>
+Dead<combining hook above> <z> <latin small letter z with hook>
+Dead<combining hook above> <no-break space> <combining hook above>
+Dead<combining hook above> <latin capital letter a with circumflex> <latin capital letter a with circumflex and hook above>
+Dead<combining hook above> <latin capital letter e with circumflex> <latin capital letter e with circumflex and hook above>
+Dead<combining hook above> <latin capital letter o with circumflex> <latin capital letter o with circumflex and hook above>
+Dead<combining hook above> <latin small letter a with circumflex> <latin small letter a with circumflex and hook above>
+Dead<combining hook above> <latin small letter e with circumflex> <latin small letter e with circumflex and hook above>
+Dead<combining hook above> <latin small letter o with circumflex> <latin small letter o with circumflex and hook above>
+Dead<combining hook above> <latin capital letter a with breve> <latin capital letter a with breve and hook above>
+Dead<combining hook above> <latin small letter a with breve> <latin small letter a with breve and hook above>
+Dead<combining hook above> <latin capital letter a with ogonek> <latin small letter o with horn and hook above>
+Dead<combining hook above> <latin capital letter z with dot above> <latin capital letter u with horn and hook above>
+Dead<combining hook above> <latin capital letter o with horn> <latin capital letter o with horn and hook above>
+Dead<combining hook above> <latin small letter u with horn> <latin small letter u with horn and hook above>
+Dead<combining hook above> <latin small letter d with tail> <latin small letter d with hook and tail>
+Dead<combining hook above> <latin small letter reversed open e> <latin small letter reversed open e with hook>
+Dead<combining hook above> <latin small letter dotless j with stroke> <latin small letter dotless j with stroke and hook>
+Dead<combining hook above> <latin small letter turned r> <latin small letter turned r with hook>
+Dead<combining ring above> Dead<combining acute accent> <A> <latin capital letter a with ring above and acute>
+Dead<combining ring above> Dead<combining acute accent> <a> <latin small letter a with ring above and acute>
+Dead<combining ring above> Dead<combining ring above> <degree sign>
+Dead<combining ring above> <space> <degree sign>
+Dead<combining ring above> <A> <latin capital letter a with ring above>
+Dead<combining ring above> <U> <latin capital letter u with ring above>
+Dead<combining ring above> <a> <latin small letter a with ring above>
+Dead<combining ring above> <u> <latin small letter u with ring above>
+Dead<combining ring above> <w> <latin small letter w with ring above>
+Dead<combining ring above> <y> <latin small letter y with ring above>
+Dead<combining ring above> <no-break space> <combining ring above>
+Dead<combining ring above> <latin capital letter a with acute> <latin capital letter a with ring above and acute>
+Dead<combining ring above> <latin small letter a with acute> <latin small letter a with ring above and acute>
+Dead<combining double acute accent> Dead<combining double acute accent> <double acute accent>
+Dead<combining double acute accent> <space> <double acute accent>
+Dead<combining double acute accent> <O> <latin capital letter o with double acute>
+Dead<combining double acute accent> <U> <latin capital letter u with double acute>
+Dead<combining double acute accent> <o> <latin small letter o with double acute>
+Dead<combining double acute accent> <u> <latin small letter u with double acute>
+Dead<combining double acute accent> <no-break space> <combining double acute accent>
+Dead<combining double acute accent> <cyrillic capital letter u> <cyrillic capital letter u with double acute>
+Dead<combining double acute accent> <cyrillic small letter u> <cyrillic small letter u with double acute>
+Dead<combining caron> Compose <"> <U> <latin capital letter u with diaeresis and caron>
+Dead<combining caron> Compose <"> <u> <latin small letter u with diaeresis and caron>
+Dead<combining caron> Dead<combining dot above> <S> <latin capital letter s with caron and dot above>
+Dead<combining caron> Dead<combining dot above> <s> <latin small letter s with caron and dot above>
+Dead<combining caron> Dead<combining diaeresis> <U> <latin capital letter u with diaeresis and caron>
+Dead<combining caron> Dead<combining diaeresis> <u> <latin small letter u with diaeresis and caron>
+Dead<combining caron> Dead<combining caron> <caron>
+Dead<combining caron> <space> <caron>
+Dead<combining caron> <(> <subscript left parenthesis>
+Dead<combining caron> <)> <subscript right parenthesis>
+Dead<combining caron> <+> <subscript plus sign>
+Dead<combining caron> <-> <subscript minus>
+Dead<combining caron> <0> <subscript zero>
+Dead<combining caron> <1> <subscript one>
+Dead<combining caron> <2> <subscript two>
+Dead<combining caron> <3> <subscript three>
+Dead<combining caron> <4> <subscript four>
+Dead<combining caron> <5> <subscript five>
+Dead<combining caron> <6> <subscript six>
+Dead<combining caron> <7> <subscript seven>
+Dead<combining caron> <8> <subscript eight>
+Dead<combining caron> <9> <subscript nine>
+Dead<combining caron> <=> <subscript equals sign>
+Dead<combining caron> <A> <latin capital letter a with caron>
+Dead<combining caron> <C> <latin capital letter c with caron>
+Dead<combining caron> <D> <latin capital letter d with caron>
+Dead<combining caron> <E> <latin capital letter e with caron>
+Dead<combining caron> <G> <latin capital letter g with caron>
+Dead<combining caron> <H> <latin capital letter h with caron>
+Dead<combining caron> <I> <latin capital letter i with caron>
+Dead<combining caron> <K> <latin capital letter k with caron>
+Dead<combining caron> <L> <latin capital letter l with caron>
+Dead<combining caron> <N> <latin capital letter n with caron>
+Dead<combining caron> <O> <latin capital letter o with caron>
+Dead<combining caron> <R> <latin capital letter r with caron>
+Dead<combining caron> <S> <latin capital letter s with caron>
+Dead<combining caron> <T> <latin capital letter t with caron>
+Dead<combining caron> <U> <latin capital letter u with caron>
+Dead<combining caron> <V> <latin capital letter u with diaeresis and caron>
+Dead<combining caron> <Z> <latin capital letter z with caron>
+Dead<combining caron> <a> <latin small letter a with caron>
+Dead<combining caron> <c> <latin small letter c with caron>
+Dead<combining caron> <d> <latin small letter d with caron>
+Dead<combining caron> <e> <latin small letter e with caron>
+Dead<combining caron> <g> <latin small letter g with caron>
+Dead<combining caron> <h> <latin small letter h with caron>
+Dead<combining caron> <i> <latin small letter i with caron>
+Dead<combining caron> <j> <latin small letter j with caron>
+Dead<combining caron> <k> <latin small letter k with caron>
+Dead<combining caron> <l> <latin small letter l with caron>
+Dead<combining caron> <n> <latin small letter n with caron>
+Dead<combining caron> <o> <latin small letter o with caron>
+Dead<combining caron> <r> <latin small letter r with caron>
+Dead<combining caron> <s> <latin small letter s with caron>
+Dead<combining caron> <t> <latin small letter t with caron>
+Dead<combining caron> <u> <latin small letter u with caron>
+Dead<combining caron> <v> <latin small letter u with diaeresis and caron>
+Dead<combining caron> <z> <latin small letter z with caron>
+Dead<combining caron> <no-break space> <combining caron>
+Dead<combining caron> <latin capital letter u with diaeresis> <latin capital letter u with diaeresis and caron>
+Dead<combining caron> <latin small letter u with diaeresis> <latin small letter u with diaeresis and caron>
+Dead<combining caron> <latin small letter n with caron> <latin capital letter d with small letter z with caron>
+Dead<combining caron> <latin small letter ezh> <latin small letter ezh with caron>
+Dead<combining caron> <caron> <latin capital letter ezh with caron>
+Dead<combining double grave accent> <A> <latin capital letter a with double grave>
+Dead<combining double grave accent> <E> <latin capital letter e with double grave>
+Dead<combining double grave accent> <I> <latin capital letter i with double grave>
+Dead<combining double grave accent> <O> <latin capital letter o with double grave>
+Dead<combining double grave accent> <R> <latin capital letter r with double grave>
+Dead<combining double grave accent> <U> <latin capital letter u with double grave>
+Dead<combining double grave accent> <a> <latin small letter a with double grave>
+Dead<combining double grave accent> <e> <latin small letter e with double grave>
+Dead<combining double grave accent> <i> <latin small letter i with double grave>
+Dead<combining double grave accent> <o> <latin small letter o with double grave>
+Dead<combining double grave accent> <r> <latin small letter r with double grave>
+Dead<combining double grave accent> <u> <latin small letter u with double grave>
+Dead<combining double grave accent> <cyrillic capital letter izhitsa> <cyrillic capital letter izhitsa with double grave accent>
+Dead<combining double grave accent> <cyrillic small letter izhitsa> <cyrillic small letter izhitsa with double grave accent>
+Dead<combining inverted breve> <A> <latin capital letter a with inverted breve>
+Dead<combining inverted breve> <E> <latin capital letter e with inverted breve>
+Dead<combining inverted breve> <I> <latin capital letter i with inverted breve>
+Dead<combining inverted breve> <O> <latin capital letter o with inverted breve>
+Dead<combining inverted breve> <R> <latin capital letter r with inverted breve>
+Dead<combining inverted breve> <U> <latin capital letter u with inverted breve>
+Dead<combining inverted breve> <a> <latin small letter a with inverted breve>
+Dead<combining inverted breve> <e> <latin small letter e with inverted breve>
+Dead<combining inverted breve> <i> <latin small letter i with inverted breve>
+Dead<combining inverted breve> <o> <latin small letter o with inverted breve>
+Dead<combining inverted breve> <r> <latin small letter r with inverted breve>
+Dead<combining inverted breve> <u> <latin small letter u with inverted breve>
+Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili>
+Dead<combining comma above> <greek capital letter epsilon> <greek capital letter epsilon with psili>
+Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili>
+Dead<combining comma above> <greek capital letter iota> <greek capital letter iota with psili>
+Dead<combining comma above> <greek capital letter omicron> <greek capital letter omicron with psili>
+Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili>
+Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili>
+Dead<combining comma above> <greek small letter epsilon> <greek small letter epsilon with psili>
+Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili>
+Dead<combining comma above> <greek small letter iota> <greek small letter iota with psili>
+Dead<combining comma above> <greek small letter omicron> <greek small letter omicron with psili>
+Dead<combining comma above> <greek small letter rho> <greek small letter rho with psili>
+Dead<combining comma above> <greek small letter upsilon> <greek small letter upsilon with psili>
+Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili>
+Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia>
+Dead<combining reversed comma above> <greek capital letter epsilon> <greek capital letter epsilon with dasia>
+Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia>
+Dead<combining reversed comma above> <greek capital letter iota> <greek capital letter iota with dasia>
+Dead<combining reversed comma above> <greek capital letter omicron> <greek capital letter omicron with dasia>
+Dead<combining reversed comma above> <greek capital letter rho> <greek capital letter rho with dasia>
+Dead<combining reversed comma above> <greek capital letter upsilon> <greek capital letter upsilon with dasia>
+Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia>
+Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia>
+Dead<combining reversed comma above> <greek small letter epsilon> <greek small letter epsilon with dasia>
+Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia>
+Dead<combining reversed comma above> <greek small letter iota> <greek small letter iota with dasia>
+Dead<combining reversed comma above> <greek small letter omicron> <greek small letter omicron with dasia>
+Dead<combining reversed comma above> <greek small letter rho> <greek small letter rho with dasia>
+Dead<combining reversed comma above> <greek small letter upsilon> <greek small letter upsilon with dasia>
+Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia>
+Dead<combining horn> Dead<combining grave accent> <O> <latin capital letter o with horn and grave>
+Dead<combining horn> Dead<combining grave accent> <U> <latin capital letter u with horn and grave>
+Dead<combining horn> Dead<combining grave accent> <o> <latin small letter o with horn and grave>
+Dead<combining horn> Dead<combining grave accent> <u> <latin small letter u with horn and grave>
+Dead<combining horn> Dead<combining acute accent> <O> <latin capital letter o with horn and acute>
+Dead<combining horn> Dead<combining acute accent> <U> <latin capital letter u with horn and acute>
+Dead<combining horn> Dead<combining acute accent> <o> <latin small letter o with horn and acute>
+Dead<combining horn> Dead<combining acute accent> <u> <latin small letter u with horn and acute>
+Dead<combining horn> Dead<combining tilde> <O> <latin capital letter o with horn and tilde>
+Dead<combining horn> Dead<combining tilde> <U> <latin capital letter u with horn and tilde>
+Dead<combining horn> Dead<combining tilde> <o> <latin small letter o with horn and tilde>
+Dead<combining horn> Dead<combining tilde> <u> <latin small letter u with horn and tilde>
+Dead<combining horn> Dead<combining hook above> <O> <latin capital letter o with horn and hook above>
+Dead<combining horn> Dead<combining hook above> <U> <latin capital letter u with horn and hook above>
+Dead<combining horn> Dead<combining hook above> <o> <latin small letter o with horn and hook above>
+Dead<combining horn> Dead<combining hook above> <u> <latin small letter u with horn and hook above>
+Dead<combining horn> Dead<combining horn> <combining horn>
+Dead<combining horn> Dead<combining dot below> <O> <latin capital letter o with horn and dot below>
+Dead<combining horn> Dead<combining dot below> <U> <latin capital letter u with horn and dot below>
+Dead<combining horn> Dead<combining dot below> <o> <latin small letter o with horn and dot below>
+Dead<combining horn> Dead<combining dot below> <u> <latin small letter u with horn and dot below>
+Dead<combining horn> <space> <combining horn>
+Dead<combining horn> <O> <latin capital letter o with horn>
+Dead<combining horn> <U> <latin capital letter u with horn>
+Dead<combining horn> <o> <latin small letter o with horn>
+Dead<combining horn> <u> <latin small letter u with horn>
+Dead<combining horn> <no-break space> <combining horn>
+Dead<combining horn> <latin capital letter o with grave> <latin capital letter o with horn and grave>
+Dead<combining horn> <latin capital letter o with acute> <latin capital letter o with horn and acute>
+Dead<combining horn> <latin capital letter o with tilde> <latin capital letter o with horn and tilde>
+Dead<combining horn> <latin capital letter u with grave> <latin capital letter u with horn and grave>
+Dead<combining horn> <latin capital letter u with acute> <latin capital letter u with horn and acute>
+Dead<combining horn> <latin small letter o with grave> <latin small letter o with horn and grave>
+Dead<combining horn> <latin small letter o with acute> <latin small letter o with horn and acute>
+Dead<combining horn> <latin small letter o with tilde> <latin small letter o with horn and tilde>
+Dead<combining horn> <latin small letter u with grave> <latin small letter u with horn and grave>
+Dead<combining horn> <latin small letter u with acute> <latin small letter u with horn and acute>
+Dead<combining horn> <latin capital letter u with tilde> <latin capital letter u with horn and tilde>
+Dead<combining horn> <latin small letter u with tilde> <latin small letter u with horn and tilde>
+Dead<combining dot below> Compose <+> <O> <latin capital letter o with horn and dot below>
+Dead<combining dot below> Compose <+> <U> <latin capital letter u with horn and dot below>
+Dead<combining dot below> Compose <+> <o> <latin small letter o with horn and dot below>
+Dead<combining dot below> Compose <+> <u> <latin small letter u with horn and dot below>
+Dead<combining dot below> Dead<combining circumflex accent> <A> <latin capital letter a with circumflex and dot below>
+Dead<combining dot below> Dead<combining circumflex accent> <E> <latin capital letter e with circumflex and dot below>
+Dead<combining dot below> Dead<combining circumflex accent> <O> <latin capital letter o with circumflex and dot below>
+Dead<combining dot below> Dead<combining circumflex accent> <a> <latin small letter a with circumflex and dot below>
+Dead<combining dot below> Dead<combining circumflex accent> <e> <latin small letter e with circumflex and dot below>
+Dead<combining dot below> Dead<combining circumflex accent> <o> <latin small letter o with circumflex and dot below>
+Dead<combining dot below> Dead<combining macron> <L> <latin capital letter l with dot below and macron>
+Dead<combining dot below> Dead<combining macron> <R> <latin capital letter r with dot below and macron>
+Dead<combining dot below> Dead<combining macron> <l> <latin small letter l with dot below and macron>
+Dead<combining dot below> Dead<combining macron> <r> <latin small letter r with dot below and macron>
+Dead<combining dot below> Dead<combining breve> <A> <latin capital letter a with breve and dot below>
+Dead<combining dot below> Dead<combining breve> <a> <latin small letter a with breve and dot below>
+Dead<combining dot below> Dead<combining dot above> <S> <latin capital letter s with dot below and dot above>
+Dead<combining dot below> Dead<combining dot above> <s> <latin small letter s with dot below and dot above>
+Dead<combining dot below> Dead<combining horn> <O> <latin capital letter o with horn and dot below>
+Dead<combining dot below> Dead<combining horn> <U> <latin capital letter u with horn and dot below>
+Dead<combining dot below> Dead<combining horn> <o> <latin small letter o with horn and dot below>
+Dead<combining dot below> Dead<combining horn> <u> <latin small letter u with horn and dot below>
+Dead<combining dot below> Dead<combining dot below> <combining dot below>
+Dead<combining dot below> <space> <combining dot below>
+Dead<combining dot below> <+> <plus sign with dot below>
+Dead<combining dot below> <-> <minus sign with dot below>
+Dead<combining dot below> <=> <equals sign with dot below>
+Dead<combining dot below> <A> <latin capital letter a with dot below>
+Dead<combining dot below> <B> <latin capital letter b with dot below>
+Dead<combining dot below> <D> <latin capital letter d with dot below>
+Dead<combining dot below> <E> <latin capital letter e with dot below>
+Dead<combining dot below> <H> <latin capital letter h with dot below>
+Dead<combining dot below> <I> <latin capital letter i with dot below>
+Dead<combining dot below> <K> <latin capital letter k with dot below>
+Dead<combining dot below> <L> <latin capital letter l with dot below>
+Dead<combining dot below> <M> <latin capital letter m with dot below>
+Dead<combining dot below> <N> <latin capital letter n with dot below>
+Dead<combining dot below> <O> <latin capital letter o with dot below>
+Dead<combining dot below> <R> <latin capital letter r with dot below>
+Dead<combining dot below> <S> <latin capital letter s with dot below>
+Dead<combining dot below> <T> <latin capital letter t with dot below>
+Dead<combining dot below> <U> <latin capital letter u with dot below>
+Dead<combining dot below> <V> <latin capital letter v with dot below>
+Dead<combining dot below> <W> <latin capital letter w with dot below>
+Dead<combining dot below> <Y> <latin capital letter y with dot below>
+Dead<combining dot below> <Z> <latin capital letter z with dot below>
+Dead<combining dot below> <a> <latin small letter a with dot below>
+Dead<combining dot below> <b> <latin small letter b with dot below>
+Dead<combining dot below> <d> <latin small letter d with dot below>
+Dead<combining dot below> <e> <latin small letter e with dot below>
+Dead<combining dot below> <h> <latin small letter h with dot below>
+Dead<combining dot below> <i> <latin small letter i with dot below>
+Dead<combining dot below> <k> <latin small letter k with dot below>
+Dead<combining dot below> <l> <latin small letter l with dot below>
+Dead<combining dot below> <m> <latin small letter m with dot below>
+Dead<combining dot below> <n> <latin small letter n with dot below>
+Dead<combining dot below> <o> <latin small letter o with dot below>
+Dead<combining dot below> <r> <latin small letter r with dot below>
+Dead<combining dot below> <s> <latin small letter s with dot below>
+Dead<combining dot below> <t> <latin small letter t with dot below>
+Dead<combining dot below> <u> <latin small letter u with dot below>
+Dead<combining dot below> <v> <latin small letter v with dot below>
+Dead<combining dot below> <w> <latin small letter w with dot below>
+Dead<combining dot below> <y> <latin small letter y with dot below>
+Dead<combining dot below> <z> <latin small letter z with dot below>
+Dead<combining dot below> <no-break space> <combining dot below>
+Dead<combining dot below> <latin capital letter a with circumflex> <latin capital letter a with circumflex and dot below>
+Dead<combining dot below> <latin capital letter e with circumflex> <latin capital letter e with circumflex and dot below>
+Dead<combining dot below> <latin capital letter o with circumflex> <latin capital letter o with circumflex and dot below>
+Dead<combining dot below> <latin small letter a with circumflex> <latin small letter a with circumflex and dot below>
+Dead<combining dot below> <latin small letter e with circumflex> <latin small letter e with circumflex and dot below>
+Dead<combining dot below> <latin small letter o with circumflex> <latin small letter o with circumflex and dot below>
+Dead<combining dot below> <latin capital letter a with breve> <latin capital letter a with breve and dot below>
+Dead<combining dot below> <latin small letter a with breve> <latin small letter a with breve and dot below>
+Dead<combining dot below> <latin capital letter a with ogonek> <latin small letter o with horn and dot below>
+Dead<combining dot below> <latin capital letter z with dot above> <latin capital letter u with horn and dot below>
+Dead<combining dot below> <latin capital letter o with horn> <latin capital letter o with horn and dot below>
+Dead<combining dot below> <latin small letter u with horn> <latin small letter u with horn and dot below>
+Dead<combining cedilla> Dead<combining acute accent> <C> <latin capital letter c with cedilla and acute>
+Dead<combining cedilla> Dead<combining acute accent> <c> <latin small letter c with cedilla and acute>
+Dead<combining cedilla> Dead<combining breve> <E> <latin capital letter e with cedilla and breve>
+Dead<combining cedilla> Dead<combining breve> <e> <latin small letter e with cedilla and breve>
+Dead<combining cedilla> Dead<combining cedilla> <cedilla>
+Dead<combining cedilla> <space> <cedilla>
+Dead<combining cedilla> <C> <latin capital letter c with cedilla>
+Dead<combining cedilla> <D> <latin capital letter d with cedilla>
+Dead<combining cedilla> <E> <latin capital letter e with cedilla>
+Dead<combining cedilla> <G> <latin capital letter g with cedilla>
+Dead<combining cedilla> <H> <latin capital letter h with cedilla>
+Dead<combining cedilla> <K> <latin capital letter k with cedilla>
+Dead<combining cedilla> <L> <latin capital letter l with cedilla>
+Dead<combining cedilla> <N> <latin capital letter n with cedilla>
+Dead<combining cedilla> <R> <latin capital letter r with cedilla>
+Dead<combining cedilla> <S> <latin capital letter s with cedilla>
+Dead<combining cedilla> <T> <latin capital letter t with cedilla>
+Dead<combining cedilla> <c> <latin small letter c with cedilla>
+Dead<combining cedilla> <d> <latin small letter d with cedilla>
+Dead<combining cedilla> <e> <latin small letter e with cedilla>
+Dead<combining cedilla> <g> <latin small letter g with cedilla>
+Dead<combining cedilla> <h> <latin small letter h with cedilla>
+Dead<combining cedilla> <k> <latin small letter k with cedilla>
+Dead<combining cedilla> <l> <latin small letter l with cedilla>
+Dead<combining cedilla> <n> <latin small letter n with cedilla>
+Dead<combining cedilla> <r> <latin small letter r with cedilla>
+Dead<combining cedilla> <s> <latin small letter s with cedilla>
+Dead<combining cedilla> <t> <latin small letter t with cedilla>
+Dead<combining cedilla> <no-break space> <combining cedilla>
+Dead<combining cedilla> <cent sign> <cedi sign>
+Dead<combining cedilla> <latin capital letter c with acute> <latin capital letter c with cedilla and acute>
+Dead<combining cedilla> <latin small letter c with acute> <latin small letter c with cedilla and acute>
+Dead<combining cedilla> <latin capital letter e with breve> <latin capital letter e with cedilla and breve>
+Dead<combining cedilla> <latin small letter e with breve> <latin small letter e with cedilla and breve>
+Dead<combining ogonek> Dead<combining macron> <O> <latin capital letter o with ogonek and macron>
+Dead<combining ogonek> Dead<combining macron> <o> <latin small letter o with ogonek and macron>
+Dead<combining ogonek> Dead<combining ogonek> <ogonek>
+Dead<combining ogonek> <space> <ogonek>
+Dead<combining ogonek> <A> <latin capital letter a with ogonek>
+Dead<combining ogonek> <E> <latin capital letter e with ogonek>
+Dead<combining ogonek> <I> <latin capital letter i with ogonek>
+Dead<combining ogonek> <O> <latin capital letter o with ogonek>
+Dead<combining ogonek> <U> <latin capital letter u with ogonek>
+Dead<combining ogonek> <a> <latin small letter a with ogonek>
+Dead<combining ogonek> <e> <latin small letter e with ogonek>
+Dead<combining ogonek> <i> <latin small letter i with ogonek>
+Dead<combining ogonek> <o> <latin small letter o with ogonek>
+Dead<combining ogonek> <u> <latin small letter u with ogonek>
+Dead<combining ogonek> <no-break space> <combining ogonek>
+Dead<combining ogonek> <latin capital letter o with macron> <latin capital letter o with ogonek and macron>
+Dead<combining ogonek> <latin small letter o with macron> <latin small letter o with ogonek and macron>
+Dead<combining long solidus overlay> Dead<combining acute accent> <O> <latin capital letter o with stroke and acute>
+Dead<combining long solidus overlay> Dead<combining acute accent> <o> <latin small letter o with stroke and acute>
+Dead<combining long solidus overlay> Dead<combining dot above> <j> <latin small letter dotless j with stroke>
+Dead<combining long solidus overlay> Dead<combining long solidus overlay> </>
+Dead<combining long solidus overlay> <space> </>
+Dead<combining long solidus overlay> <2> <latin letter two with stroke>
+Dead<combining long solidus overlay> '<' <not less-than>
+Dead<combining long solidus overlay> <=> <not equal to>
+Dead<combining long solidus overlay> '>' <not greater-than>
+Dead<combining long solidus overlay> <A> <latin capital letter a with stroke>
+Dead<combining long solidus overlay> <B> <latin capital letter b with stroke>
+Dead<combining long solidus overlay> <C> <latin capital letter c with stroke>
+Dead<combining long solidus overlay> <D> <latin capital letter d with stroke>
+Dead<combining long solidus overlay> <E> <latin capital letter e with stroke>
+Dead<combining long solidus overlay> <G> <latin capital letter g with stroke>
+Dead<combining long solidus overlay> <H> <latin capital letter h with stroke>
+Dead<combining long solidus overlay> <I> <latin capital letter i with stroke>
+Dead<combining long solidus overlay> <J> <latin capital letter j with stroke>
+Dead<combining long solidus overlay> <L> <latin capital letter l with stroke>
+Dead<combining long solidus overlay> <O> <latin capital letter o with stroke>
+Dead<combining long solidus overlay> <P> <latin capital letter p with stroke>
+Dead<combining long solidus overlay> <R> <latin capital letter r with stroke>
+Dead<combining long solidus overlay> <T> <latin capital letter t with stroke>
+Dead<combining long solidus overlay> <U> <latin capital letter u bar>
+Dead<combining long solidus overlay> <Y> <latin capital letter y with stroke>
+Dead<combining long solidus overlay> <Z> <latin capital letter z with stroke>
+Dead<combining long solidus overlay> <a> <latin small letter a with stroke>
+Dead<combining long solidus overlay> <b> <latin small letter b with stroke>
+Dead<combining long solidus overlay> <c> <latin small letter c with stroke>
+Dead<combining long solidus overlay> <d> <latin small letter d with stroke>
+Dead<combining long solidus overlay> <e> <latin small letter e with stroke>
+Dead<combining long solidus overlay> <g> <latin small letter g with stroke>
+Dead<combining long solidus overlay> <h> <latin small letter h with stroke>
+Dead<combining long solidus overlay> <i> <latin small letter i with stroke>
+Dead<combining long solidus overlay> <j> <latin small letter j with stroke>
+Dead<combining long solidus overlay> <l> <latin small letter l with stroke>
+Dead<combining long solidus overlay> <o> <latin small letter o with stroke>
+Dead<combining long solidus overlay> <p> <latin small letter p with stroke>
+Dead<combining long solidus overlay> <r> <latin small letter r with stroke>
+Dead<combining long solidus overlay> <t> <latin small letter t with stroke>
+Dead<combining long solidus overlay> <u> <latin small letter u bar>
+Dead<combining long solidus overlay> <y> <latin small letter y with stroke>
+Dead<combining long solidus overlay> <z> <latin small letter z with stroke>
+Dead<combining long solidus overlay> <no-break space> <combining long solidus overlay>
+Dead<combining long solidus overlay> <latin capital letter o with acute> <latin capital letter o with stroke and acute>
+Dead<combining long solidus overlay> <latin small letter o with acute> <latin small letter o with stroke and acute>
+Dead<combining long solidus overlay> <latin small letter dotless j> <latin small letter dotless j with stroke>
+Dead<combining long solidus overlay> <latin small letter iota> <latin small letter iota with stroke>
+Dead<combining long solidus overlay> <less-than or equal to> <neither less-than nor equal to>
+Dead<combining long solidus overlay> <greater-than or equal to> <neither greater-than nor equal to>
+Dead<combining greek ypogegrammeni> Compose <'> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <(> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <(> <greek capital letter eta> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <(> <greek capital letter omega> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <(> <greek small letter alpha> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <(> <greek small letter eta> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <(> <greek small letter omega> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <)> <greek capital letter alpha> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <)> <greek capital letter eta> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <)> <greek capital letter omega> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <)> <greek small letter alpha> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <)> <greek small letter eta> <greek small letter eta with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <)> <greek small letter omega> <greek small letter omega with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <greek small letter alpha> <greek small letter alpha with oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <greek small letter eta> <greek small letter eta with oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <greek small letter omega> <greek small letter omega with oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <greek small letter alpha with psili> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <greek small letter alpha with dasia> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <greek capital letter alpha with psili> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <greek small letter eta with psili> <greek small letter eta with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <greek small letter eta with dasia> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <greek capital letter eta with psili> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <greek capital letter eta with dasia> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <greek small letter omega with psili> <greek small letter omega with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <greek small letter omega with dasia> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <greek capital letter omega with psili> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <'> <greek capital letter omega with dasia> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <(> <greek capital letter alpha> <greek capital letter alpha with dasia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <(> <greek capital letter eta> <greek capital letter eta with dasia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <(> <greek capital letter omega> <greek capital letter omega with dasia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <(> <greek small letter alpha> <greek small letter alpha with dasia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <(> <greek small letter eta> <greek small letter eta with dasia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <(> <greek small letter omega> <greek small letter omega with dasia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <)> <greek capital letter alpha> <greek capital letter alpha with psili and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <)> <greek capital letter eta> <greek capital letter eta with psili and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <)> <greek capital letter omega> <greek capital letter omega with psili and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <)> <greek small letter alpha> <greek small letter alpha with psili and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <)> <greek small letter eta> <greek small letter eta with psili and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <)> <greek small letter omega> <greek small letter omega with psili and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <(> <greek capital letter alpha> <greek capital letter alpha with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <(> <greek capital letter eta> <greek capital letter eta with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <(> <greek capital letter omega> <greek capital letter omega with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <(> <greek small letter alpha> <greek small letter alpha with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <(> <greek small letter eta> <greek small letter eta with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <(> <greek small letter omega> <greek small letter omega with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <)> <greek capital letter alpha> <greek capital letter alpha with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <)> <greek capital letter eta> <greek capital letter eta with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <)> <greek capital letter omega> <greek capital letter omega with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <)> <greek small letter alpha> <greek small letter alpha with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <)> <greek small letter eta> <greek small letter eta with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <)> <greek small letter omega> <greek small letter omega with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <greek small letter alpha> <greek small letter alpha with varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <greek small letter eta> <greek small letter eta with varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <greek small letter omega> <greek small letter omega with varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <greek small letter alpha with psili> <greek small letter alpha with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <greek small letter alpha with dasia> <greek small letter alpha with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <greek capital letter alpha with psili> <greek capital letter alpha with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <greek small letter eta with psili> <greek small letter eta with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <greek small letter eta with dasia> <greek small letter eta with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <greek capital letter eta with psili> <greek capital letter eta with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <greek capital letter eta with dasia> <greek capital letter eta with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <greek small letter omega with psili> <greek small letter omega with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <greek small letter omega with dasia> <greek small letter omega with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <greek capital letter omega with psili> <greek capital letter omega with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <`> <greek capital letter omega with dasia> <greek capital letter omega with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <(> <greek capital letter alpha> <greek capital letter alpha with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <(> <greek capital letter eta> <greek capital letter eta with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <(> <greek capital letter omega> <greek capital letter omega with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <(> <greek small letter alpha> <greek small letter alpha with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <(> <greek small letter eta> <greek small letter eta with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <(> <greek small letter omega> <greek small letter omega with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <)> <greek capital letter alpha> <greek capital letter alpha with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <)> <greek capital letter eta> <greek capital letter eta with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <)> <greek capital letter omega> <greek capital letter omega with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <)> <greek small letter alpha> <greek small letter alpha with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <)> <greek small letter eta> <greek small letter eta with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <)> <greek small letter omega> <greek small letter omega with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <greek small letter alpha> <greek small letter alpha with perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <greek small letter eta> <greek small letter eta with perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <greek small letter omega> <greek small letter omega with perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <greek small letter alpha with psili> <greek small letter alpha with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <greek small letter alpha with dasia> <greek small letter alpha with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <greek capital letter alpha with psili> <greek capital letter alpha with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <greek small letter eta with psili> <greek small letter eta with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <greek small letter eta with dasia> <greek small letter eta with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <greek capital letter eta with psili> <greek capital letter eta with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <greek capital letter eta with dasia> <greek capital letter eta with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <greek small letter omega with psili> <greek small letter omega with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <greek small letter omega with dasia> <greek small letter omega with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <greek capital letter omega with psili> <greek capital letter omega with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <~> <greek capital letter omega with dasia> <greek capital letter omega with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <(> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <(> <greek capital letter eta> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <(> <greek capital letter omega> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <(> <greek small letter alpha> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <(> <greek small letter eta> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <(> <greek small letter omega> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <)> <greek capital letter alpha> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <)> <greek capital letter eta> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <)> <greek capital letter omega> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <)> <greek small letter alpha> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <)> <greek small letter eta> <greek small letter eta with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <)> <greek small letter omega> <greek small letter omega with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <greek small letter alpha> <greek small letter alpha with oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <greek small letter eta> <greek small letter eta with oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <greek small letter omega> <greek small letter omega with oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <greek small letter alpha with psili> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <greek small letter alpha with dasia> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <greek capital letter alpha with psili> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <greek small letter eta with psili> <greek small letter eta with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <greek small letter eta with dasia> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <greek capital letter eta with psili> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <greek capital letter eta with dasia> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <greek small letter omega with psili> <greek small letter omega with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <greek small letter omega with dasia> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <greek capital letter omega with psili> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Compose <acute accent> <greek capital letter omega with dasia> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Compose <(> <greek capital letter alpha> <greek capital letter alpha with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Compose <(> <greek capital letter eta> <greek capital letter eta with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Compose <(> <greek capital letter omega> <greek capital letter omega with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Compose <(> <greek small letter alpha> <greek small letter alpha with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Compose <(> <greek small letter eta> <greek small letter eta with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Compose <(> <greek small letter omega> <greek small letter omega with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Compose <)> <greek capital letter alpha> <greek capital letter alpha with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Compose <)> <greek capital letter eta> <greek capital letter eta with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Compose <)> <greek capital letter omega> <greek capital letter omega with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Compose <)> <greek small letter alpha> <greek small letter alpha with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Compose <)> <greek small letter eta> <greek small letter eta with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Compose <)> <greek small letter omega> <greek small letter omega with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> <greek small letter alpha> <greek small letter alpha with varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> <greek small letter eta> <greek small letter eta with varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> <greek small letter omega> <greek small letter omega with varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> <greek small letter alpha with psili> <greek small letter alpha with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> <greek small letter alpha with dasia> <greek small letter alpha with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> <greek capital letter alpha with psili> <greek capital letter alpha with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> <greek small letter eta with psili> <greek small letter eta with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> <greek small letter eta with dasia> <greek small letter eta with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> <greek capital letter eta with psili> <greek capital letter eta with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> <greek capital letter eta with dasia> <greek capital letter eta with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> <greek small letter omega with psili> <greek small letter omega with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> <greek small letter omega with dasia> <greek small letter omega with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> <greek capital letter omega with psili> <greek capital letter omega with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining grave accent> <greek capital letter omega with dasia> <greek capital letter omega with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Compose <(> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Compose <(> <greek capital letter eta> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Compose <(> <greek capital letter omega> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Compose <(> <greek small letter alpha> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Compose <(> <greek small letter eta> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Compose <(> <greek small letter omega> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Compose <)> <greek capital letter alpha> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Compose <)> <greek capital letter eta> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Compose <)> <greek capital letter omega> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Compose <)> <greek small letter alpha> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Compose <)> <greek small letter eta> <greek small letter eta with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Compose <)> <greek small letter omega> <greek small letter omega with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> <greek small letter alpha> <greek small letter alpha with oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> <greek small letter eta> <greek small letter eta with oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> <greek small letter omega> <greek small letter omega with oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> <greek small letter alpha with psili> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> <greek small letter alpha with dasia> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> <greek capital letter alpha with psili> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> <greek small letter eta with psili> <greek small letter eta with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> <greek small letter eta with dasia> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> <greek capital letter eta with psili> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> <greek capital letter eta with dasia> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> <greek small letter omega with psili> <greek small letter omega with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> <greek small letter omega with dasia> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> <greek capital letter omega with psili> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining acute accent> <greek capital letter omega with dasia> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Compose <(> <greek capital letter alpha> <greek capital letter alpha with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Compose <(> <greek capital letter eta> <greek capital letter eta with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Compose <(> <greek capital letter omega> <greek capital letter omega with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Compose <(> <greek small letter alpha> <greek small letter alpha with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Compose <(> <greek small letter eta> <greek small letter eta with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Compose <(> <greek small letter omega> <greek small letter omega with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Compose <)> <greek capital letter alpha> <greek capital letter alpha with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Compose <)> <greek capital letter eta> <greek capital letter eta with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Compose <)> <greek capital letter omega> <greek capital letter omega with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Compose <)> <greek small letter alpha> <greek small letter alpha with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Compose <)> <greek small letter eta> <greek small letter eta with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Compose <)> <greek small letter omega> <greek small letter omega with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> <greek small letter alpha> <greek small letter alpha with perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> <greek small letter eta> <greek small letter eta with perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> <greek small letter omega> <greek small letter omega with perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> <greek small letter alpha with psili> <greek small letter alpha with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> <greek small letter alpha with dasia> <greek small letter alpha with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> <greek capital letter alpha with psili> <greek capital letter alpha with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> <greek small letter eta with psili> <greek small letter eta with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> <greek small letter eta with dasia> <greek small letter eta with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> <greek capital letter eta with psili> <greek capital letter eta with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> <greek capital letter eta with dasia> <greek capital letter eta with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> <greek small letter omega with psili> <greek small letter omega with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> <greek small letter omega with dasia> <greek small letter omega with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> <greek capital letter omega with psili> <greek capital letter omega with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining tilde> <greek capital letter omega with dasia> <greek capital letter omega with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining comma above> <greek capital letter alpha> <greek capital letter alpha with psili and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining comma above> <greek capital letter eta> <greek capital letter eta with psili and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining comma above> <greek capital letter omega> <greek capital letter omega with psili and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining comma above> <greek small letter alpha> <greek small letter alpha with psili and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining comma above> <greek small letter eta> <greek small letter eta with psili and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining comma above> <greek small letter omega> <greek small letter omega with psili and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining reversed comma above> <greek capital letter alpha> <greek capital letter alpha with dasia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining reversed comma above> <greek capital letter eta> <greek capital letter eta with dasia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining reversed comma above> <greek capital letter omega> <greek capital letter omega with dasia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining reversed comma above> <greek small letter alpha> <greek small letter alpha with dasia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining reversed comma above> <greek small letter eta> <greek small letter eta with dasia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining reversed comma above> <greek small letter omega> <greek small letter omega with dasia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> Dead<combining greek ypogegrammeni> <greek ypogegrammeni>
+Dead<combining greek ypogegrammeni> <space> <greek ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter alpha> <greek capital letter alpha with prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter eta> <greek capital letter eta with prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter omega> <greek capital letter omega with prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter alpha with tonos> <greek small letter alpha with oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter eta with tonos> <greek small letter eta with oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter alpha> <greek small letter alpha with ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter eta> <greek small letter eta with ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter omega> <greek small letter omega with ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter omega with tonos> <greek small letter omega with oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter alpha with psili> <greek small letter alpha with psili and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter alpha with dasia> <greek small letter alpha with dasia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter alpha with psili and varia> <greek small letter alpha with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter alpha with dasia and varia> <greek small letter alpha with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter alpha with psili and oxia> <greek small letter alpha with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter alpha with dasia and oxia> <greek small letter alpha with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter alpha with psili and perispomeni> <greek small letter alpha with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter alpha with dasia and perispomeni> <greek small letter alpha with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter alpha with psili> <greek capital letter alpha with psili and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter alpha with dasia> <greek capital letter alpha with dasia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter alpha with psili and varia> <greek capital letter alpha with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter alpha with dasia and varia> <greek capital letter alpha with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter alpha with psili and oxia> <greek capital letter alpha with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter alpha with dasia and oxia> <greek capital letter alpha with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter alpha with psili and perispomeni> <greek capital letter alpha with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter alpha with dasia and perispomeni> <greek capital letter alpha with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter eta with psili> <greek small letter eta with psili and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter eta with dasia> <greek small letter eta with dasia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter eta with psili and varia> <greek small letter eta with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter eta with dasia and varia> <greek small letter eta with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter eta with psili and oxia> <greek small letter eta with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter eta with dasia and oxia> <greek small letter eta with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter eta with psili and perispomeni> <greek small letter eta with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter eta with dasia and perispomeni> <greek small letter eta with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter eta with psili> <greek capital letter eta with psili and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter eta with dasia> <greek capital letter eta with dasia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter eta with psili and varia> <greek capital letter eta with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter eta with dasia and varia> <greek capital letter eta with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter eta with psili and oxia> <greek capital letter eta with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter eta with dasia and oxia> <greek capital letter eta with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter eta with psili and perispomeni> <greek capital letter eta with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter eta with dasia and perispomeni> <greek capital letter eta with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter omega with psili> <greek small letter omega with psili and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter omega with dasia> <greek small letter omega with dasia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter omega with psili and varia> <greek small letter omega with psili and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter omega with dasia and varia> <greek small letter omega with dasia and varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter omega with psili and oxia> <greek small letter omega with psili and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter omega with dasia and oxia> <greek small letter omega with dasia and oxia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter omega with psili and perispomeni> <greek small letter omega with psili and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter omega with dasia and perispomeni> <greek small letter omega with dasia and perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter omega with psili> <greek capital letter omega with psili and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter omega with dasia> <greek capital letter omega with dasia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter omega with psili and varia> <greek capital letter omega with psili and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter omega with dasia and varia> <greek capital letter omega with dasia and varia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter omega with psili and oxia> <greek capital letter omega with psili and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter omega with dasia and oxia> <greek capital letter omega with dasia and oxia and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter omega with psili and perispomeni> <greek capital letter omega with psili and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek capital letter omega with dasia and perispomeni> <greek capital letter omega with dasia and perispomeni and prosgegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter alpha with varia> <greek small letter alpha with varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter eta with varia> <greek small letter eta with varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter omega with varia> <greek small letter omega with varia and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter alpha with perispomeni> <greek small letter alpha with perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter eta with perispomeni> <greek small letter eta with perispomeni and ypogegrammeni>
+Dead<combining greek ypogegrammeni> <greek small letter omega with perispomeni> <greek small letter omega with perispomeni and ypogegrammeni>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter u> <hiragana letter vu>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter ka> <hiragana letter ga>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter ki> <hiragana letter gi>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter ku> <hiragana letter gu>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter ke> <hiragana letter ge>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter ko> <hiragana letter go>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter sa> <hiragana letter za>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter si> <hiragana letter zi>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter su> <hiragana letter zu>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter se> <hiragana letter ze>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter so> <hiragana letter zo>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter ta> <hiragana letter da>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter ti> <hiragana letter di>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter tu> <hiragana letter du>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter te> <hiragana letter de>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter to> <hiragana letter do>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter ha> <hiragana letter ba>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter hi> <hiragana letter bi>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter hu> <hiragana letter bu>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter he> <hiragana letter be>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana letter ho> <hiragana letter bo>
+Dead<combining katakana-hiragana voiced sound mark> <hiragana iteration mark> <hiragana voiced iteration mark>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter u> <katakana letter vu>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter ka> <katakana letter ga>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter ki> <katakana letter gi>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter ku> <katakana letter gu>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter ke> <katakana letter ge>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter ko> <katakana letter go>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter sa> <katakana letter za>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter si> <katakana letter zi>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter su> <katakana letter zu>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter se> <katakana letter ze>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter so> <katakana letter zo>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter ta> <katakana letter da>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter ti> <katakana letter di>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter tu> <katakana letter du>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter te> <katakana letter de>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter to> <katakana letter do>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter ha> <katakana letter ba>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter hi> <katakana letter bi>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter hu> <katakana letter bu>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter he> <katakana letter be>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter ho> <katakana letter bo>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter wa> <katakana letter va>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter wi> <katakana letter vi>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter we> <katakana letter ve>
+Dead<combining katakana-hiragana voiced sound mark> <katakana letter wo> <katakana letter vo>
+Dead<combining katakana-hiragana voiced sound mark> <katakana iteration mark> <katakana voiced iteration mark>
+Dead<combining katakana-hiragana semi-voiced sound mark> <hiragana letter ha> <hiragana letter pa>
+Dead<combining katakana-hiragana semi-voiced sound mark> <hiragana letter hi> <hiragana letter pi>
+Dead<combining katakana-hiragana semi-voiced sound mark> <hiragana letter hu> <hiragana letter pu>
+Dead<combining katakana-hiragana semi-voiced sound mark> <hiragana letter he> <hiragana letter pe>
+Dead<combining katakana-hiragana semi-voiced sound mark> <hiragana letter ho> <hiragana letter po>
+Dead<combining katakana-hiragana semi-voiced sound mark> <katakana letter ha> <katakana letter pa>
+Dead<combining katakana-hiragana semi-voiced sound mark> <katakana letter hi> <katakana letter pi>
+Dead<combining katakana-hiragana semi-voiced sound mark> <katakana letter hu> <katakana letter pu>
+Dead<combining katakana-hiragana semi-voiced sound mark> <katakana letter he> <katakana letter pe>
+Dead<combining katakana-hiragana semi-voiced sound mark> <katakana letter ho> <katakana letter po>
+
+# Windows-style combinations.
+# Reference:
+# https://support.microsoft.com/en-ca/help/97738/using-us-int-l-keyboard-layout-to-type-accented-characters
+# Mappings for ~a and `a are not in the reference but are reported to be
+# active on current Windows systems.
+
+Dead<'> <space>  <'>
+Dead<'> <A>      <latin capital letter a with acute>
+Dead<'> <C>      <latin capital letter c with cedilla>
+Dead<'> <E>      <latin capital letter e with acute>
+Dead<'> <I>      <latin capital letter i with acute>
+Dead<'> <O>      <latin capital letter o with acute>
+Dead<'> <U>      <latin capital letter u with acute>
+Dead<'> <Y>      <latin capital letter y with acute>
+Dead<'> <a>      <latin small letter a with acute>
+Dead<'> <c>      <latin small letter c with cedilla>
+Dead<'> <e>      <latin small letter e with acute>
+Dead<'> <i>      <latin small letter i with acute>
+Dead<'> <o>      <latin small letter o with acute>
+Dead<'> <u>      <latin small letter u with acute>
+Dead<'> <y>      <latin small letter y with acute>
+
+Dead<"> <space>  <">
+Dead<"> <A>      <latin capital letter a with diaeresis>
+Dead<"> <E>      <latin capital letter e with diaeresis>
+Dead<"> <I>      <latin capital letter i with diaeresis>
+Dead<"> <O>      <latin capital letter o with diaeresis>
+Dead<"> <U>      <latin capital letter u with diaeresis>
+Dead<"> <a>      <latin small letter a with diaeresis>
+Dead<"> <e>      <latin small letter e with diaeresis>
+Dead<"> <i>      <latin small letter i with diaeresis>
+Dead<"> <o>      <latin small letter o with diaeresis>
+Dead<"> <u>      <latin small letter u with diaeresis>
+
+Dead<`> <space>  <`>
+Dead<`> <A>      <latin capital letter a with grave>
+Dead<`> <E>      <latin capital letter e with grave>
+Dead<`> <I>      <latin capital letter i with grave>
+Dead<`> <O>      <latin capital letter o with grave>
+Dead<`> <U>      <latin capital letter u with grave>
+Dead<`> <a>      <latin small letter a with grave>
+Dead<`> <e>      <latin small letter e with grave>
+Dead<`> <i>      <latin small letter i with grave>
+Dead<`> <o>      <latin small letter o with grave>
+Dead<`> <u>      <latin small letter u with grave>
+
+Dead<~> <space>  <~>
+Dead<~> <A>      <latin capital letter a with tilde>
+Dead<~> <N>      <latin capital letter n with tilde>
+Dead<~> <O>      <latin capital letter o with tilde>
+Dead<~> <a>      <latin small letter a with tilde>
+Dead<~> <n>      <latin small letter n with tilde>
+Dead<~> <o>      <latin small letter o with tilde>
+
+Dead<^> <space>  <^>
+Dead<^> <A>      <latin capital letter a with circumflex>
+Dead<^> <E>      <latin capital letter e with circumflex>
+Dead<^> <I>      <latin capital letter i with circumflex>
+Dead<^> <O>      <latin capital letter o with circumflex>
+Dead<^> <U>      <latin capital letter u with circumflex>
+Dead<^> <a>      <latin small letter a with circumflex>
+Dead<^> <e>      <latin small letter e with circumflex>
+Dead<^> <i>      <latin small letter i with circumflex>
+Dead<^> <o>      <latin small letter o with circumflex>
+Dead<^> <u>      <latin small letter u with circumflex>
+
--- a/ui/base/ime/character_composer_unittest.cc	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/base/ime/character_composer_unittest.cc	2019-05-17 18:57:25.676000000 +0300
@@ -0,0 +1,538 @@
+// Copyright 2013 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "ui/base/ime/character_composer.h"
+
+#include <stdint.h>
+
+#include <memory>
+
+#include "base/stl_util.h"
+#include "base/strings/utf_string_conversions.h"
+#include "testing/gtest/include/gtest/gtest.h"
+#include "ui/events/event.h"
+#include "ui/events/event_constants.h"
+#include "ui/events/event_utils.h"
+#include "ui/events/keycodes/dom/dom_code.h"
+#include "ui/events/keycodes/dom/dom_key.h"
+#include "ui/events/keycodes/keyboard_code_conversion.h"
+#include "ui/events/keycodes/keyboard_codes.h"
+
+using base::ASCIIToUTF16;
+
+namespace ui {
+
+namespace {
+
+const base::char16 kCombiningGrave = 0x0300;
+const base::char16 kCombiningAcute = 0x0301;
+const base::char16 kCombiningCircumflex = 0x0302;
+const base::char16 kCombiningHorn = 0x031B;
+
+}  // namespace
+
+class CharacterComposerTest : public testing::Test {
+ protected:
+  // Returns a |KeyEvent| for a dead key press.
+  KeyEvent* DeadKeyPress(base::char16 combining_character) const {
+    KeyEvent* event =
+        new KeyEvent(ET_KEY_PRESSED, VKEY_UNKNOWN, DomCode::NONE, EF_NONE,
+                     DomKey::DeadKeyFromCombiningCharacter(combining_character),
+                     EventTimeForNow());
+    return event;
+  }
+
+  // Expects key is filtered and no character is composed.
+  void ExpectDeadKeyFiltered(base::char16 combining_character) {
+    std::unique_ptr<KeyEvent> event(DeadKeyPress(combining_character));
+    EXPECT_TRUE(character_composer_.FilterKeyPress(*event));
+    EXPECT_TRUE(character_composer_.composed_character().empty());
+  }
+
+  // Expects key is filtered and the given character is composed.
+  void ExpectDeadKeyComposed(base::char16 combining_character,
+                             const base::string16& expected_character) {
+    std::unique_ptr<KeyEvent> event(DeadKeyPress(combining_character));
+    EXPECT_TRUE(character_composer_.FilterKeyPress(*event));
+    EXPECT_EQ(expected_character, character_composer_.composed_character());
+  }
+
+  // Returns a |KeyEvent| for a character key press.
+  KeyEvent* UnicodeKeyPress(KeyboardCode vkey,
+                            DomCode code,
+                            int flags,
+                            base::char16 character) const {
+    KeyEvent* event =
+        new KeyEvent(ET_KEY_PRESSED, vkey, code, flags,
+                     DomKey::FromCharacter(character), EventTimeForNow());
+    return event;
+  }
+
+  // Expects key is not filtered and no character is composed.
+  void ExpectUnicodeKeyNotFiltered(KeyboardCode vkey,
+                                   DomCode code,
+                                   int flags,
+                                   base::char16 character) {
+    std::unique_ptr<KeyEvent> event(
+        UnicodeKeyPress(vkey, code, flags, character));
+    EXPECT_FALSE(character_composer_.FilterKeyPress(*event));
+    EXPECT_TRUE(character_composer_.composed_character().empty());
+  }
+
+  // Expects key is filtered and no character is composed.
+  void ExpectUnicodeKeyFiltered(KeyboardCode vkey,
+                                DomCode code,
+                                int flags,
+                                base::char16 character) {
+    std::unique_ptr<KeyEvent> event(
+        UnicodeKeyPress(vkey, code, flags, character));
+    EXPECT_TRUE(character_composer_.FilterKeyPress(*event));
+    EXPECT_TRUE(character_composer_.composed_character().empty());
+  }
+
+  // Expects key is filtered and the given character is composed.
+  void ExpectUnicodeKeyComposed(KeyboardCode vkey,
+                                DomCode code,
+                                int flags,
+                                base::char16 character,
+                                const base::string16& expected_character) {
+    std::unique_ptr<KeyEvent> event(
+        UnicodeKeyPress(vkey, code, flags, character));
+    EXPECT_TRUE(character_composer_.FilterKeyPress(*event));
+    EXPECT_EQ(expected_character, character_composer_.composed_character());
+  }
+
+  CharacterComposer character_composer_;
+};
+
+TEST_F(CharacterComposerTest, InitialState) {
+  EXPECT_TRUE(character_composer_.composed_character().empty());
+}
+
+TEST_F(CharacterComposerTest, NormalKeyIsNotFiltered) {
+  ExpectUnicodeKeyNotFiltered(VKEY_B, DomCode::US_B, EF_NONE, 'B');
+  ExpectUnicodeKeyNotFiltered(VKEY_Z, DomCode::US_Z, EF_NONE, 'Z');
+  ExpectUnicodeKeyNotFiltered(VKEY_C, DomCode::US_C, EF_NONE, 'c');
+  ExpectUnicodeKeyNotFiltered(VKEY_M, DomCode::US_M, EF_NONE, 'm');
+  ExpectUnicodeKeyNotFiltered(VKEY_0, DomCode::DIGIT0, EF_NONE, '0');
+  ExpectUnicodeKeyNotFiltered(VKEY_1, DomCode::DIGIT1, EF_NONE, '1');
+  ExpectUnicodeKeyNotFiltered(VKEY_8, DomCode::DIGIT8, EF_NONE, '8');
+}
+
+TEST_F(CharacterComposerTest, PartiallyMatchingSequence) {
+  // Composition with sequence ['dead acute', '1'] will fail.
+  ExpectDeadKeyFiltered(kCombiningAcute);
+  ExpectUnicodeKeyFiltered(VKEY_1, DomCode::DIGIT1, 0, '1');
+
+  // Composition with sequence ['dead acute', 'dead circumflex', '1'] will fail.
+  ExpectDeadKeyFiltered(kCombiningAcute);
+  ExpectDeadKeyFiltered(kCombiningCircumflex);
+  ExpectUnicodeKeyFiltered(VKEY_1, DomCode::DIGIT1, 0, '1');
+}
+
+TEST_F(CharacterComposerTest, FullyMatchingSequences) {
+  // LATIN SMALL LETTER A WITH ACUTE
+  ExpectDeadKeyFiltered(kCombiningAcute);
+  ExpectUnicodeKeyComposed(VKEY_A, DomCode::US_A, EF_NONE, 'a',
+                           base::string16(1, 0x00E1));
+  // LATIN CAPITAL LETTER A WITH ACUTE
+  ExpectDeadKeyFiltered(kCombiningAcute);
+  ExpectUnicodeKeyComposed(VKEY_A, DomCode::US_A, EF_NONE, 'A',
+                           base::string16(1, 0x00C1));
+  // GRAVE ACCENT
+  ExpectDeadKeyFiltered(kCombiningGrave);
+  ExpectDeadKeyComposed(kCombiningGrave, base::string16(1, 0x0060));
+  // LATIN SMALL LETTER A WITH CIRCUMFLEX AND ACUTE
+  ExpectDeadKeyFiltered(kCombiningAcute);
+  ExpectDeadKeyFiltered(kCombiningCircumflex);
+  ExpectUnicodeKeyComposed(VKEY_A, DomCode::US_A, EF_NONE, 'a',
+                           base::string16(1, 0x1EA5));
+  // LATIN CAPITAL LETTER U WITH HORN AND GRAVE
+  ExpectDeadKeyFiltered(kCombiningGrave);
+  ExpectDeadKeyFiltered(kCombiningHorn);
+  ExpectUnicodeKeyComposed(VKEY_U, DomCode::US_U, EF_NONE, 'U',
+                           base::string16(1, 0x1EEA));
+  // LATIN CAPITAL LETTER C WITH CEDILLA
+  ExpectDeadKeyFiltered(kCombiningAcute);
+  ExpectUnicodeKeyComposed(VKEY_C, DomCode::US_C, EF_NONE, 'C',
+                           base::string16(1, 0x00C7));
+  // LATIN SMALL LETTER C WITH CEDILLA
+  ExpectDeadKeyFiltered(kCombiningAcute);
+  ExpectUnicodeKeyComposed(VKEY_C, DomCode::US_C, EF_NONE, 'c',
+                           base::string16(1, 0x00E7));
+  // GREEK SMALL LETTER EPSILON WITH TONOS
+  ExpectDeadKeyFiltered(kCombiningAcute);
+  ExpectUnicodeKeyComposed(VKEY_E, DomCode::US_E, EF_NONE, 0x03B5,
+                           base::string16(1, 0x03AD));
+
+  // Windows-style sequences.
+  // LATIN SMALL LETTER A WITH ACUTE
+  ExpectDeadKeyFiltered('\'');
+  ExpectUnicodeKeyComposed(VKEY_A, DomCode::US_A, EF_NONE, 'a',
+                           base::string16(1, 0x00E1));
+  // LATIN SMALL LETTER C WITH CEDILLA
+  ExpectDeadKeyFiltered('\'');
+  ExpectUnicodeKeyComposed(VKEY_C, DomCode::US_C, EF_NONE, 'c',
+                           base::string16(1, 0x00E7));
+  // APOSTROPHE
+  ExpectDeadKeyFiltered('\'');
+  ExpectUnicodeKeyComposed(VKEY_SPACE, DomCode::SPACE, EF_NONE, ' ',
+                           base::string16(1, '\''));
+  // Unmatched composition with printable character.
+  static constexpr base::char16 kApostropheS[] = {'\'', 's'};
+  ExpectDeadKeyFiltered('\'');
+  ExpectUnicodeKeyComposed(VKEY_S, DomCode::US_S, EF_NONE, 's',
+                           base::string16(kApostropheS, 2));
+  // Unmatched composition with dead key.
+  static constexpr base::char16 kApostropheApostrophe[] = {'\'', '\''};
+  ExpectDeadKeyFiltered('\'');
+  ExpectDeadKeyComposed('\'', base::string16(kApostropheApostrophe, 2));
+}
+
+TEST_F(CharacterComposerTest, FullyMatchingSequencesAfterMatchingFailure) {
+  // Composition with sequence ['dead acute', 'dead circumflex', '1'] will fail.
+  ExpectDeadKeyFiltered(kCombiningAcute);
+  ExpectDeadKeyFiltered(kCombiningCircumflex);
+  ExpectUnicodeKeyFiltered(VKEY_1, DomCode::DIGIT1, 0, '1');
+  // LATIN SMALL LETTER A WITH CIRCUMFLEX AND ACUTE
+  ExpectDeadKeyFiltered(kCombiningAcute);
+  ExpectDeadKeyFiltered(kCombiningCircumflex);
+  ExpectUnicodeKeyComposed(VKEY_A, DomCode::US_A, EF_NONE, 'a',
+                           base::string16(1, 0x1EA5));
+}
+
+TEST_F(CharacterComposerTest, ComposedCharacterIsClearedAfterReset) {
+  ExpectDeadKeyFiltered(kCombiningAcute);
+  ExpectUnicodeKeyComposed(VKEY_A, DomCode::US_A, EF_NONE, 'a',
+                           base::string16(1, 0x00E1));
+  character_composer_.Reset();
+  EXPECT_TRUE(character_composer_.composed_character().empty());
+}
+
+TEST_F(CharacterComposerTest, CompositionStateIsClearedAfterReset) {
+  // Even though sequence ['dead acute', 'a'] will compose 'a with acute',
+  // no character is composed here because of reset.
+  ExpectDeadKeyFiltered(kCombiningAcute);
+  character_composer_.Reset();
+  ExpectUnicodeKeyNotFiltered(VKEY_A, DomCode::US_A, EF_NONE, 'a');
+}
+
+TEST_F(CharacterComposerTest, KeySequenceCompositionPreedit) {
+  // LATIN SMALL LETTER A WITH ACUTE
+  // preedit_string() is always empty in key sequence composition mode.
+  ExpectDeadKeyFiltered(kCombiningAcute);
+  EXPECT_TRUE(character_composer_.preedit_string().empty());
+  ExpectUnicodeKeyComposed(VKEY_A, DomCode::US_A, EF_NONE, 'a',
+                           base::string16(1, 0x00E1));
+  EXPECT_TRUE(character_composer_.preedit_string().empty());
+}
+
+// Verify the structure of the primary |TreeComposeChecker| table.
+TEST_F(CharacterComposerTest, MainTableIsCorrectlyOrdered) {
+// This file is included here intentionally, instead of the top of the file,
+// because including this file at the top of the file will define a
+// global constant and contaminate the global namespace.
+#include "ui/base/ime/character_composer_data.h"
+  const int kTypes = 2;
+
+  // Record the subtree locations and check subtable sizes.
+  std::vector<uint16_t> subtrees;
+  uint16_t index = 0;
+  while (index < kCompositions.tree_entries) {
+    // Record the start of the subtree.
+    SCOPED_TRACE(index);
+    subtrees.push_back(index);
+    for (int t = 0; t < kTypes; ++t) {
+      // Skip the internal table and verify the next index is within the data.
+      index += 1 + 2 * kCompositions.tree[index];
+      EXPECT_GT(kCompositions.tree_entries, index);
+      // Skip the leaf table and verify that the next index is not past the
+      // end of the data.
+      index += 1 + 2 * kCompositions.tree[index];
+      EXPECT_GE(kCompositions.tree_entries, index);
+    }
+  }
+  // We should end up at the end of the data.
+  EXPECT_EQ(kCompositions.tree_entries, index);
+
+  // Check subtable structure.
+  index = 0;
+  while (index < kCompositions.tree_entries) {
+    SCOPED_TRACE(index);
+    for (int t = 0; t < kTypes; ++t) {
+      // Check the internal subtable.
+      uint16_t previous_key = 0;
+      uint16_t size = kCompositions.tree[index++];
+      for (uint16_t i = 0; i < size; ++i) {
+        // Verify that the subtable is sorted.
+        uint16_t key = kCompositions.tree[index];
+        uint16_t value = kCompositions.tree[index + 1];
+        if (i)
+          EXPECT_LT(previous_key, key) << index;
+        previous_key = key;
+        // Verify that the internal link is valid.
+        EXPECT_TRUE(base::ContainsValue(subtrees, value)) << index;
+        index += 2;
+      }
+      // Check the leaf subtable.
+      previous_key = 0;
+      size = kCompositions.tree[index++];
+      for (uint16_t i = 0; i < size; ++i) {
+        // Verify that the subtable is sorted.
+        uint16_t key = kCompositions.tree[index];
+        if (i)
+          EXPECT_LT(previous_key, key) << index;
+        previous_key = key;
+        index += 2;
+      }
+    }
+  }
+}
+
+TEST_F(CharacterComposerTest, HexadecimalComposition) {
+  // HIRAGANA LETTER A (U+3042)
+  ExpectUnicodeKeyFiltered(VKEY_U, DomCode::US_U,
+                           EF_SHIFT_DOWN | EF_CONTROL_DOWN, 'U');
+  ExpectUnicodeKeyFiltered(VKEY_3, DomCode::DIGIT3, EF_NONE, '3');
+  ExpectUnicodeKeyFiltered(VKEY_0, DomCode::DIGIT0, EF_NONE, '0');
+  ExpectUnicodeKeyFiltered(VKEY_4, DomCode::DIGIT4, EF_NONE, '4');
+  ExpectUnicodeKeyFiltered(VKEY_2, DomCode::DIGIT2, EF_NONE, '2');
+  ExpectUnicodeKeyComposed(VKEY_SPACE, DomCode::SPACE, EF_NONE, ' ',
+                           base::string16(1, 0x3042));
+  // MUSICAL KEYBOARD (U+1F3B9)
+  const base::char16 kMusicalKeyboard[] = {0xd83c, 0xdfb9};
+  ExpectUnicodeKeyFiltered(VKEY_U, DomCode::US_U,
+                           EF_SHIFT_DOWN | EF_CONTROL_DOWN, 'U');
+  ExpectUnicodeKeyFiltered(VKEY_1, DomCode::DIGIT1, EF_NONE, '1');
+  ExpectUnicodeKeyFiltered(VKEY_F, DomCode::US_F, EF_NONE, 'f');
+  ExpectUnicodeKeyFiltered(VKEY_3, DomCode::DIGIT3, EF_NONE, '3');
+  ExpectUnicodeKeyFiltered(VKEY_B, DomCode::US_B, EF_NONE, 'b');
+  ExpectUnicodeKeyFiltered(VKEY_9, DomCode::DIGIT9, EF_NONE, '9');
+  ExpectUnicodeKeyComposed(
+      VKEY_RETURN, DomCode::ENTER, EF_NONE, '\r',
+      base::string16(kMusicalKeyboard,
+                     kMusicalKeyboard + base::size(kMusicalKeyboard)));
+}
+
+TEST_F(CharacterComposerTest, HexadecimalCompositionPreedit) {
+  // HIRAGANA LETTER A (U+3042)
+  ExpectUnicodeKeyFiltered(VKEY_U, DomCode::US_U,
+                           EF_SHIFT_DOWN | EF_CONTROL_DOWN, 'U');
+  EXPECT_EQ(ASCIIToUTF16("u"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(VKEY_3, DomCode::DIGIT3, 0, '3');
+  EXPECT_EQ(ASCIIToUTF16("u3"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(VKEY_0, DomCode::DIGIT0, 0, '0');
+  EXPECT_EQ(ASCIIToUTF16("u30"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(VKEY_4, DomCode::DIGIT4, 0, '4');
+  EXPECT_EQ(ASCIIToUTF16("u304"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(VKEY_A, DomCode::US_A, 0, 'a');
+  EXPECT_EQ(ASCIIToUTF16("u304a"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(VKEY_BACK, DomCode::BACKSPACE, EF_NONE, '\b');
+  EXPECT_EQ(ASCIIToUTF16("u304"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(VKEY_2, DomCode::DIGIT2, EF_NONE, '2');
+  ExpectUnicodeKeyComposed(VKEY_RETURN, DomCode::ENTER, EF_NONE, '\r',
+                           base::string16(1, 0x3042));
+  EXPECT_EQ(ASCIIToUTF16(""), character_composer_.preedit_string());
+
+  // Sequence with an ignored character ('x') and Escape.
+  ExpectUnicodeKeyFiltered(VKEY_U, DomCode::US_U,
+                           EF_SHIFT_DOWN | EF_CONTROL_DOWN, 'U');
+  EXPECT_EQ(ASCIIToUTF16("u"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(VKEY_3, DomCode::DIGIT3, 0, '3');
+  EXPECT_EQ(ASCIIToUTF16("u3"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(VKEY_0, DomCode::DIGIT0, 0, '0');
+  EXPECT_EQ(ASCIIToUTF16("u30"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(VKEY_X, DomCode::US_X, 0, 'x');
+  EXPECT_EQ(ASCIIToUTF16("u30"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(VKEY_4, DomCode::DIGIT4, 0, '4');
+  EXPECT_EQ(ASCIIToUTF16("u304"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(VKEY_2, DomCode::DIGIT2, 0, '2');
+  EXPECT_EQ(ASCIIToUTF16("u3042"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(VKEY_ESCAPE, DomCode::ESCAPE, EF_NONE, 0x1B);
+  EXPECT_EQ(ASCIIToUTF16(""), character_composer_.preedit_string());
+}
+
+TEST_F(CharacterComposerTest, HexadecimalCompositionWithNonHexKey) {
+  // Sequence [Ctrl+Shift+U, x, space] does not compose a character.
+  ExpectUnicodeKeyFiltered(VKEY_U, DomCode::US_U,
+                           EF_SHIFT_DOWN | EF_CONTROL_DOWN, 0x15);
+  ExpectUnicodeKeyFiltered(VKEY_X, DomCode::US_X, 0, 'x');
+  ExpectUnicodeKeyFiltered(VKEY_SPACE, DomCode::SPACE, EF_NONE, ' ');
+  EXPECT_TRUE(character_composer_.composed_character().empty());
+
+  // HIRAGANA LETTER A (U+3042) with a sequence [3, 0, x, 4, 2].
+  ExpectUnicodeKeyFiltered(VKEY_U, DomCode::US_U,
+                           EF_SHIFT_DOWN | EF_CONTROL_DOWN, 0x15);
+  ExpectUnicodeKeyFiltered(VKEY_3, DomCode::DIGIT3, EF_NONE, '3');
+  ExpectUnicodeKeyFiltered(VKEY_0, DomCode::DIGIT0, EF_NONE, '0');
+  ExpectUnicodeKeyFiltered(VKEY_X, DomCode::US_X, EF_NONE, 'x');
+  ExpectUnicodeKeyFiltered(VKEY_4, DomCode::DIGIT4, EF_NONE, '4');
+  ExpectUnicodeKeyFiltered(VKEY_2, DomCode::DIGIT2, EF_NONE, '2');
+  ExpectUnicodeKeyComposed(VKEY_SPACE, DomCode::SPACE, EF_NONE, ' ',
+                           base::string16(1, 0x3042));
+}
+
+TEST_F(CharacterComposerTest, HexadecimalCompositionWithAdditionalModifiers) {
+  // Ctrl+Shift+Alt+U
+  // HIRAGANA LETTER A (U+3042)
+  ExpectUnicodeKeyFiltered(VKEY_U, DomCode::US_U,
+                           EF_SHIFT_DOWN | EF_CONTROL_DOWN | EF_ALT_DOWN, 0x15);
+  ExpectUnicodeKeyFiltered(VKEY_3, DomCode::DIGIT3, EF_NONE, '3');
+  ExpectUnicodeKeyFiltered(VKEY_0, DomCode::DIGIT0, EF_NONE, '0');
+  ExpectUnicodeKeyFiltered(VKEY_4, DomCode::DIGIT4, EF_NONE, '4');
+  ExpectUnicodeKeyFiltered(VKEY_2, DomCode::DIGIT2, EF_NONE, '2');
+  ExpectUnicodeKeyComposed(VKEY_SPACE, DomCode::SPACE, EF_NONE, ' ',
+                           base::string16(1, 0x3042));
+
+  // Ctrl+Shift+u (CapsLock enabled)
+  ExpectUnicodeKeyNotFiltered(VKEY_U, DomCode::US_U,
+                              EF_SHIFT_DOWN | EF_CONTROL_DOWN | EF_CAPS_LOCK_ON,
+                              'u');
+}
+
+TEST_F(CharacterComposerTest, CancelHexadecimalComposition) {
+  // Cancel composition with ESC.
+  ExpectUnicodeKeyFiltered(VKEY_U, DomCode::US_U,
+                           EF_SHIFT_DOWN | EF_CONTROL_DOWN, 0x15);
+  ExpectUnicodeKeyFiltered(VKEY_1, DomCode::DIGIT1, 0, '1');
+  ExpectUnicodeKeyFiltered(VKEY_ESCAPE, DomCode::ESCAPE, EF_NONE, 0x1B);
+
+  // Now we can start composition again since the last composition was
+  // cancelled.
+  // HIRAGANA LETTER A (U+3042)
+  ExpectUnicodeKeyFiltered(VKEY_U, DomCode::US_U,
+                           EF_SHIFT_DOWN | EF_CONTROL_DOWN, 0x15);
+  ExpectUnicodeKeyFiltered(VKEY_3, DomCode::DIGIT3, EF_NONE, '3');
+  ExpectUnicodeKeyFiltered(VKEY_0, DomCode::DIGIT0, EF_NONE, '0');
+  ExpectUnicodeKeyFiltered(VKEY_4, DomCode::DIGIT4, EF_NONE, '4');
+  ExpectUnicodeKeyFiltered(VKEY_2, DomCode::DIGIT2, EF_NONE, '2');
+  ExpectUnicodeKeyComposed(VKEY_SPACE, DomCode::SPACE, EF_NONE, ' ',
+                           base::string16(1, 0x3042));
+}
+
+TEST_F(CharacterComposerTest, HexadecimalCompositionWithBackspace) {
+  // HIRAGANA LETTER A (U+3042)
+  ExpectUnicodeKeyFiltered(VKEY_U, DomCode::US_U,
+                           EF_SHIFT_DOWN | EF_CONTROL_DOWN, 0x15);
+  ExpectUnicodeKeyFiltered(VKEY_3, DomCode::DIGIT3, 0, '3');
+  ExpectUnicodeKeyFiltered(VKEY_0, DomCode::DIGIT0, 0, '0');
+  ExpectUnicodeKeyFiltered(VKEY_F, DomCode::US_F, 0, 'f');
+  ExpectUnicodeKeyFiltered(VKEY_BACK, DomCode::BACKSPACE, EF_NONE, '\b');
+  ExpectUnicodeKeyFiltered(VKEY_4, DomCode::DIGIT4, EF_NONE, '4');
+  ExpectUnicodeKeyFiltered(VKEY_2, DomCode::DIGIT2, EF_NONE, '2');
+  ExpectUnicodeKeyComposed(VKEY_SPACE, DomCode::SPACE, EF_NONE, ' ',
+                           base::string16(1, 0x3042));
+}
+
+TEST_F(CharacterComposerTest, CancelHexadecimalCompositionWithBackspace) {
+  // Backspace just after Ctrl+Shift+U.
+  ExpectUnicodeKeyFiltered(VKEY_U, DomCode::US_U,
+                           EF_SHIFT_DOWN | EF_CONTROL_DOWN, 0x15);
+  ExpectUnicodeKeyFiltered(VKEY_BACK, DomCode::BACKSPACE, EF_NONE, '\b');
+  ExpectUnicodeKeyNotFiltered(VKEY_3, DomCode::DIGIT3, EF_NONE, '3');
+
+  // Backspace twice after Ctrl+Shift+U and 3.
+  ExpectUnicodeKeyFiltered(VKEY_U, DomCode::US_U,
+                           EF_SHIFT_DOWN | EF_CONTROL_DOWN, 0x15);
+  ExpectUnicodeKeyFiltered(VKEY_3, DomCode::DIGIT3, 0, '3');
+  ExpectUnicodeKeyFiltered(VKEY_BACK, DomCode::BACKSPACE, EF_NONE, '\b');
+  ExpectUnicodeKeyFiltered(VKEY_BACK, DomCode::BACKSPACE, EF_NONE, '\b');
+  ExpectUnicodeKeyNotFiltered(VKEY_3, DomCode::DIGIT3, EF_NONE, '3');
+}
+
+TEST_F(CharacterComposerTest,
+       HexadecimalCompositionPreeditWithModifierPressed) {
+  // This test case supposes X Window System uses 101 keyboard layout.
+  const int kControlShift = EF_CONTROL_DOWN | EF_SHIFT_DOWN;
+  // HIRAGANA LETTER A (U+3042)
+  ExpectUnicodeKeyFiltered(ui::VKEY_U, DomCode::US_U, kControlShift, 0x15);
+  EXPECT_EQ(ASCIIToUTF16("u"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(ui::VKEY_3, DomCode::DIGIT3, kControlShift, '#');
+  EXPECT_EQ(ASCIIToUTF16("u3"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(ui::VKEY_0, DomCode::DIGIT0, kControlShift, ')');
+  EXPECT_EQ(ASCIIToUTF16("u30"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(ui::VKEY_4, DomCode::DIGIT4, kControlShift, '$');
+  EXPECT_EQ(ASCIIToUTF16("u304"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(ui::VKEY_A, DomCode::US_A, kControlShift, 0x01);
+  EXPECT_EQ(ASCIIToUTF16("u304a"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(ui::VKEY_BACK, DomCode::BACKSPACE, kControlShift,
+                           '\b');
+  EXPECT_EQ(ASCIIToUTF16("u304"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(ui::VKEY_2, DomCode::DIGIT2, kControlShift, 0);
+  EXPECT_EQ(ASCIIToUTF16("u3042"), character_composer_.preedit_string());
+  ExpectUnicodeKeyComposed(VKEY_RETURN, DomCode::ENTER, kControlShift, '\r',
+                           base::string16(1, 0x3042));
+  EXPECT_EQ(ASCIIToUTF16(""), character_composer_.preedit_string());
+
+  // Sequence with an ignored character (control + shift + 'x') and Escape.
+  ExpectUnicodeKeyFiltered(ui::VKEY_U, DomCode::US_U, kControlShift, 'U');
+  EXPECT_EQ(ASCIIToUTF16("u"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(ui::VKEY_3, DomCode::DIGIT3, kControlShift, '#');
+  EXPECT_EQ(ASCIIToUTF16("u3"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(ui::VKEY_0, DomCode::DIGIT0, kControlShift, ')');
+  EXPECT_EQ(ASCIIToUTF16("u30"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(ui::VKEY_X, DomCode::US_X, kControlShift, 'X');
+  EXPECT_EQ(ASCIIToUTF16("u30"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(ui::VKEY_4, DomCode::DIGIT4, kControlShift, '$');
+  EXPECT_EQ(ASCIIToUTF16("u304"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(ui::VKEY_2, DomCode::DIGIT2, kControlShift, 0);
+  EXPECT_EQ(ASCIIToUTF16("u3042"), character_composer_.preedit_string());
+  ExpectUnicodeKeyFiltered(ui::VKEY_ESCAPE, DomCode::ESCAPE, kControlShift,
+                           0x1B);
+  EXPECT_EQ(ASCIIToUTF16(""), character_composer_.preedit_string());
+}
+
+TEST_F(CharacterComposerTest, InvalidHexadecimalSequence) {
+  // U+FFFFFFFF
+  ExpectUnicodeKeyFiltered(VKEY_U, DomCode::US_U,
+                           EF_SHIFT_DOWN | EF_CONTROL_DOWN, 0x15);
+  for (int i = 0; i < 8; ++i)
+    ExpectUnicodeKeyFiltered(VKEY_F, DomCode::US_F, 0, 'f');
+  ExpectUnicodeKeyFiltered(VKEY_SPACE, DomCode::SPACE, EF_NONE, ' ');
+
+  // U+0000 (Actually, this is a valid unicode character, but we don't
+  // compose a string with a character '\0')
+  ExpectUnicodeKeyFiltered(VKEY_U, DomCode::US_U,
+                           EF_SHIFT_DOWN | EF_CONTROL_DOWN, 0x15);
+  for (int i = 0; i < 4; ++i)
+    ExpectUnicodeKeyFiltered(VKEY_0, DomCode::DIGIT0, 0, '0');
+  ExpectUnicodeKeyFiltered(VKEY_SPACE, DomCode::SPACE, EF_NONE, ' ');
+
+  // U+10FFFF
+  ExpectUnicodeKeyFiltered(VKEY_U, DomCode::US_U,
+                           EF_SHIFT_DOWN | EF_CONTROL_DOWN, 0x15);
+  ExpectUnicodeKeyFiltered(VKEY_1, DomCode::DIGIT1, 0, '1');
+  ExpectUnicodeKeyFiltered(VKEY_0, DomCode::DIGIT0, 0, '0');
+  for (int i = 0; i < 4; ++i)
+    ExpectUnicodeKeyFiltered(VKEY_F, DomCode::US_F, 0, 'f');
+  ExpectUnicodeKeyFiltered(VKEY_SPACE, DomCode::SPACE, EF_NONE, ' ');
+
+  // U+110000
+  ExpectUnicodeKeyFiltered(VKEY_U, DomCode::US_U,
+                           EF_SHIFT_DOWN | EF_CONTROL_DOWN, 0x15);
+  ExpectUnicodeKeyFiltered(VKEY_1, DomCode::DIGIT1, 0, '1');
+  ExpectUnicodeKeyFiltered(VKEY_1, DomCode::DIGIT1, 0, '1');
+  for (int i = 0; i < 4; ++i)
+    ExpectUnicodeKeyFiltered(VKEY_0, DomCode::DIGIT0, 0, '0');
+  ExpectUnicodeKeyFiltered(VKEY_SPACE, DomCode::SPACE, EF_NONE, ' ');
+}
+
+TEST_F(CharacterComposerTest, HexadecimalSequenceAndDeadKey) {
+  // LATIN SMALL LETTER A WITH ACUTE
+  ExpectDeadKeyFiltered(kCombiningAcute);
+  ExpectUnicodeKeyComposed(VKEY_A, DomCode::US_A, EF_NONE, 'a',
+                           base::string16(1, 0x00E1));
+  // HIRAGANA LETTER A (U+3042) with dead_acute ignored.
+  ExpectUnicodeKeyFiltered(VKEY_U, DomCode::US_U,
+                           EF_SHIFT_DOWN | EF_CONTROL_DOWN, 0x15);
+  ExpectUnicodeKeyFiltered(VKEY_3, DomCode::DIGIT3, EF_NONE, '3');
+  ExpectUnicodeKeyFiltered(VKEY_0, DomCode::DIGIT0, EF_NONE, '0');
+  ExpectDeadKeyFiltered(kCombiningAcute);
+  ExpectUnicodeKeyFiltered(VKEY_4, DomCode::DIGIT4, EF_NONE, '4');
+  ExpectUnicodeKeyFiltered(VKEY_2, DomCode::DIGIT2, EF_NONE, '2');
+  ExpectUnicodeKeyComposed(VKEY_SPACE, DomCode::SPACE, EF_NONE, ' ',
+                           base::string16(1, 0x3042));
+}
+
+}  // namespace ui
--- a/ui/base/ime/generate_character_composer_data.py	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/base/ime/generate_character_composer_data.py	2019-05-17 18:57:25.684000000 +0300
@@ -0,0 +1,440 @@
+#!/usr/bin/env python
+# Copyright 2015 The Chromium Authors. All rights reserved.
+# Use of this source code is governed by a BSD-style license that can be
+# found in the LICENSE file.
+
+"""Generate a compact character composition table.
+
+Normal use:
+  ./generate_character_composer_data.py \
+      --output character_composer_data.h \
+      character_composer_sequences.txt
+
+Run this script with --help for a description of arguments.
+
+Input file format:
+
+  Comments begin with '#' and extend to the end of the line.
+
+  Each non-comment line is a sequence of two or more keys, separated by
+  space, the last of which is the result of composing the initial part.
+  A sequence must begin with a dead key or Compose, and the result must
+  be a character key.
+
+  Each key can either be a character key, a dead key, or the compose key.
+
+  A character key is written as one of the following inside matched delimiters:
+  - a single printable ASCII character;
+  - a Unicode character name;
+  - 'U+' followed by one or more hexadecimal digits.
+  Delimiter pairs are any of '' "" () <> [] or {}.
+
+  A dead key is written as the word 'Dead' followed (immediately, without space)
+  by the combining character written in the same form as a character key.
+
+  A compose key is written as the word 'Compose'.
+
+Output file format:
+
+  The output file is a C++ header containing a small header structure
+  |ui::TreeComposeChecker::CompositionData| and a tree of composition sequences.
+
+  For space efficiency, the tree is stored in a single array of 16-bit values,
+  which represent either characters (printable or dead-key) or subtree array
+  indices.
+
+  Each tree level consists for four tables: two key kinds (character or dead)
+  by two node types (internal or leaf), in the order:
+  - character internal
+  - character leaf
+  - dead-key internal
+  - dead-key leaf
+  This order is used because character key entries are more common than dead-key
+  entries, and internal entries are more common than leaf entries.
+
+  Each table consists of a word containing the number of table entries |n|,
+  followed immediately by |n| key-value pairs of words, ordered by key.
+  For internal edges, the value is the array index of the resulting subtree.
+  For leaf edges, the value is the unicode character code of the composition
+  result.
+"""
+
+import argparse
+import codecs
+import collections
+import sys
+import unicodedata
+
+# Global error counter.
+g_fail = 0
+
+class Key(str):
+  """Represents an element of a composition sequence.
+
+  Supports only Compose, dead keys, and BMP unicode characters.
+  Based on |str| for easy comparison and sorting.
+  The representation is 'C' (for unicode characters) or 'D' (for dead keys)
+  followed by 4 hex digits for the character value. The Compose key is
+  represented as dead key with combining character 0.
+  """
+  _kinds = ['character', 'dead_key']
+
+  def __new__(cls, key, character, location=None):
+    """Construct a Key.
+    Call as:
+    - Key(None, character_code)
+    - Key('Dead', combining_character_code)
+    - Key('Compose', 0)
+    """
+    global g_fail
+    if character > 0xFFFF:
+      print '{}: unsupported non-BMP character {}'.format(location, character)
+      g_fail += 1
+      s = 'ERROR'
+    elif key is None:
+      s = 'C{:04X}'.format(character)
+    elif key.lower() == 'dead':
+      s = 'D{:04X}'.format(character)
+    elif key.lower() == 'compose':
+      s = 'D0000'
+    else:
+      print '{}: unexpected combination {}<{}>'.format(location, key, character)
+      g_fail += 1
+      s = 'ERROR'
+    return str.__new__(cls, s)
+
+  def Kind(self):
+    return {'C': 'character', 'D': 'dead_key'}[self[0]]
+
+  def CharacterCode(self):
+    return int(self[1:], 16)
+
+  def UnicodeName(self):
+    v = self.CharacterCode()
+    try:
+      return unicodedata.name(unichr(v)).lower()
+    except ValueError:
+      return 'U+{:04X}'.format(v)
+
+  def ShorterUnicodeName(self):
+    s = self.UnicodeName()
+    if s.startswith('latin ') or s.startswith('greek '):
+      s = s[6:]
+    if s.startswith('small '):
+      s = s[6:]
+    return s.replace(' letter ', ' ')
+
+  def Pretty(self):
+    if self == 'D0000':
+      return 'Compose'
+    return ('Dead' if self[0] == 'D' else '') + '<' + self.UnicodeName() + '>'
+
+
+class Input:
+  """
+  Takes a sequences of file names and presents them as a single input stream,
+  with location reporting for error messages.
+  """
+  def __init__(self, filenames):
+    self._pending = filenames
+    self._filename = None
+    self._file = None
+    self._line = None
+    self._lineno = 0
+    self._column = 0
+
+  def Where(self):
+    """Report the current input location, for error messages."""
+    if self._file:
+      return '{}:{}:{}'.format(self._filename, self._lineno, self._column)
+    if self._pending:
+      return '<before>'
+    return '<eof>'
+
+  def Get(self):
+    """Return the next input character, or None when inputs are exhausted."""
+    if self._line is None:
+      if self._file is None:
+        if not self._pending:
+          return None
+        self._filename = self._pending[0]
+        self._pending = self._pending[1:]
+        self._file = codecs.open(self._filename, mode='rb', encoding='utf-8')
+        self._lineno = 0
+      self._lineno += 1
+      self._line = self._file.readline()
+      if not self._line:
+        self._file = None
+        self._filename = None
+        return self.Get()
+      self._column = 0
+    if self._column >= len(self._line):
+      self._line = None
+      return self.Get()
+    c = self._line[self._column]
+    self._column += 1
+    return c
+
+
+class Lexer:
+  """
+  Breaks the input stream into a sequence of tokens, each of which is either
+  a Key or the string 'EOL'.
+  """
+  def __init__(self, compose_input):
+    self._input = compose_input
+
+  _delimiters = {
+      '"': '"',
+      "'": "'",
+      '<': '>',
+      '(': ')',
+      '[': ']',
+      '{': '}',
+  }
+
+  def GetUntilDelimiter(self, e):
+    text = ''
+    c = self._input.Get()
+    while c and c != e:
+      text += c
+      c = self._input.Get()
+    return text
+
+  def Get(self):
+    global g_fail
+    c = ' '
+    while c and c.isspace() and c != '\n':
+      c = self._input.Get()
+    if not c:
+      return None
+    location = self._input.Where()
+    if c == '\n':
+      return 'EOL'
+    if c == '#':
+      self.GetUntilDelimiter('\n')
+      return 'EOL'
+    if c == '\\':
+      self.GetUntilDelimiter('\n')
+      return self.Get()
+    key = None
+    character = None
+    if c.isalnum():
+      key = ''
+      while c and c.isalnum():
+        key += c
+        c = self._input.Get()
+    if c in Lexer._delimiters:
+      s = self.GetUntilDelimiter(Lexer._delimiters[c])
+      if len(s) == 1:
+        character = ord(s)
+      elif s.startswith('U+'):
+        character = int(s[2:], 16)
+      else:
+        try:
+          character = ord(unicodedata.lookup(s.upper()))
+        except KeyError:
+          g_fail += 1
+          character = None
+          print '{}: unknown character name "{}"'.format(location,
+                                                         s.encode('utf-8'))
+    return Key(key, character, location)
+
+  def Where(self):
+    return self._input.Where()
+
+
+class Parser:
+  """
+  Takes a sequence of tokens from a Lexer and returns a tree of
+  composition sequences, represented as nested dictionaries where each
+  composition source element key is a dictionary key, and the final
+  composition result has a dictionary key of |None|.
+  """
+  def __init__(self, lexer):
+    self._lexer = lexer
+    self._trie = {}
+
+  def Parse(self):
+    global g_fail
+    self._trie = {}
+    while True:
+      seq = []
+      t = self._lexer.Get()
+      if not t:
+        break
+      if t and t != 'EOL' and t.Kind() != 'dead_key':
+        g_fail += 1
+        print ('{}: sequence does not begin with Compose or Dead key'
+               .format(self._lexer.Where()))
+        break
+      while t and t != 'EOL':
+        seq.append(t)
+        t = self._lexer.Get()
+      if not seq:
+        continue
+      self.AddToSimpleTree(self._trie, seq)
+    return self._trie
+
+  def AddToSimpleTree(self, tree, seq):
+    first = seq[0]
+    rest = seq[1:]
+    if first not in tree:
+      tree[first] = {}
+    if len(rest) == 1:
+      # Leaf
+      tree[first][None] = rest[0]
+    else:
+      self.AddToSimpleTree(tree[first], rest)
+
+
+class GroupedTree:
+  """
+  Represents composition sequences in a manner close to the output format.
+
+  The core of the representation is the |_tables| dictionary, which has
+  an entry for each kind of |Key|, each of which is a dictionary with
+  two entries, 'internal' and 'leaf', for the output tables, each being
+  a dictionary indexed by a composition sequence |Key|. For 'internal'
+  tables the dictionary values are |GroupedTree|s at the next level;
+  for 'leaf' tables the dictionary values are |Key| composition results.
+  """
+  _key_kinds = Key._kinds
+  _sub_parts = ['internal', 'leaf']
+
+  def __init__(self, simple_trie, path=None):
+    if path is None:
+      path = []
+    self.path = path
+    self.depth = len(path)
+    self.height = 0
+    self.empty = True
+    self.location = -1
+
+    # Initialize |_tables|.
+    self._tables = {}
+    for k in self._key_kinds:
+      self._tables[k] = {}
+      for p in self._sub_parts:
+        self._tables[k][p] = {}
+
+    # Build the tables.
+    for key in simple_trie:
+      if key is not None:
+        # Leaf table entry.
+        if None in simple_trie[key]:
+          self.empty = False
+          self._tables[key.Kind()]['leaf'][key] = simple_trie[key][None]
+        # Internal subtree entries.
+        v = GroupedTree(simple_trie[key], path + [key])
+        if not v.empty:
+          self.empty = False
+          self._tables[key.Kind()]['internal'][key] = v
+          if self.height < v.height:
+            self.height = v.height
+    self.height += 1
+
+  def SubTrees(self):
+    """Returns a list of all sub-|GroupedTree|s of the current GroupTree."""
+    r = []
+    for k in self._key_kinds:
+      for key in sorted(self._tables[k]['internal']):
+        r.append(self._tables[k]['internal'][key])
+    return r
+
+
+class Assembler:
+  """Convert a parse tree via a GroupedTree to a C++ header."""
+
+  def __init__(self, args, dtree):
+    self._name = args.data_name
+    self._type = args.type_name
+    self._gtree = GroupedTree(dtree)
+
+  def Write(self, out):
+    # First pass: determine table sizes and locations.
+    self.Pass(None, self._gtree)
+
+    # Second pass: write the array.
+    out.write('\nstatic const uint16_t {}Tree[] = {{\n'.format(self._name))
+    end = self.Pass(out, self._gtree)
+    out.write('};\n\n')
+
+    # Write the description structure.
+    out.write('static const {} {} = {{\n'
+              .format(self._type, self._name))
+    out.write('  {}, // maximum sequence length\n'.format(self._gtree.height))
+    out.write('  {}, // tree array entries\n'.format(end))
+    out.write('  {}Tree\n'.format(self._name))
+    out.write('};\n\n')
+
+  def Pass(self, out, gtree, location=0):
+    gtree.location = location
+
+    # Write tree header.
+    if out:
+      out.write('\n    // offset 0x{:04X}:\n'.format(location))
+      if gtree.path:
+        out.write('    //   prefix:\n')
+        for key in gtree.path:
+          out.write('    //     {}\n'.format(key.Pretty()))
+
+    # Write tables.
+    for k in gtree._key_kinds:
+      for p in gtree._sub_parts:
+        # Write table size.
+        location += 1
+        if out:
+          out.write('    //   {} {} table\n'.format(p, k))
+          out.write('    0x{:04X},          // number of entries\n'
+                    .format(len(gtree._tables[k][p])))
+        # Write table body.
+        for key in sorted(gtree._tables[k][p]):
+          location += 2
+          if out:
+            out.write('    0x{:04X},  // {}\n'
+                      .format(key.CharacterCode(), key.ShorterUnicodeName()))
+            result = gtree._tables[k][p][key]
+            if p == 'internal':
+              out.write('    0x{:04X},\n'.format(result.location))
+            else:
+              out.write('    0x{:04X},  // -> {}\n'
+                        .format(result.CharacterCode(),
+                                result.ShorterUnicodeName()))
+
+    # Assemble subtrees of the current tree.
+    for t in gtree.SubTrees():
+      location = self.Pass(out, t, location)
+
+    return location
+
+
+def main(argv):
+  parser = argparse.ArgumentParser()
+  parser.add_argument('--type_name',
+                      default='ui::TreeComposeChecker::CompositionData')
+  parser.add_argument('--data_name', default='kCompositions')
+  parser.add_argument('--output', default='character_composer_data.h')
+  parser.add_argument('--guard', default=None)
+  parser.add_argument('inputs', nargs='*')
+  args = parser.parse_args(argv[1:])
+
+  parse_tree = Parser(Lexer(Input(args.inputs))).Parse()
+
+  with (sys.stdout if args.output == '-' else open(args.output, 'wb')) as out:
+    out.write('// Copyright 2015 The Chromium Authors. All rights reserved.\n')
+    out.write('// Use of this source code is governed by a BSD-style license')
+    out.write(' that can be\n// found in the LICENSE file.\n\n')
+    out.write('// DO NOT EDIT.\n')
+    out.write('//   GENERATED BY {}\n'.format(sys.argv[0]))
+    out.write('//   FROM {}\n\n'.format(' '.join(args.inputs)))
+    guard = args.guard if args.guard else args.output
+    guard = ''.join([c.upper() if c.isalpha() else '_' for c in guard])
+    out.write('#ifndef {0}_\n#define {0}_\n'.format(guard))
+    Assembler(args, parse_tree).Write(out)
+    out.write('#endif  // {}_\n'.format(guard))
+
+  return g_fail
+
+if __name__ == '__main__':
+  sys.exit(main(sys.argv))
--- a/ui/base/ime/PRESUBMIT.py	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/base/ime/PRESUBMIT.py	2019-05-17 18:57:25.672000000 +0300
@@ -0,0 +1,62 @@
+# Copyright 2015 The Chromium Authors. All rights reserved.
+# Use of this source code is governed by a BSD-style license that can be
+# found in the LICENSE file.
+
+"""Presubmit script for ui/base/ime
+
+See http://dev.chromium.org/developers/how-tos/depottools/presubmit-scripts
+for more details about the presubmit API built into depot_tools.
+"""
+
+import filecmp
+import os
+
+CHARACTER_COMPOSER_DATA_SOURCES=['character_composer_sequences.txt']
+CHARACTER_COMPOSER_DATA_HEADER='character_composer_data.h'
+CHARACTER_COMPOSER_DATA_GENERATOR='generate_character_composer_data.py'
+
+def CheckCharacterComposerData(input_api, output_api):
+  results = []
+  whereami = input_api.PresubmitLocalPath()
+  files = map(lambda x: input_api.os_path.join(whereami, x),
+              (CHARACTER_COMPOSER_DATA_SOURCES +
+               [CHARACTER_COMPOSER_DATA_HEADER,
+                CHARACTER_COMPOSER_DATA_GENERATOR]))
+
+  if not input_api.AffectedFiles(
+    file_filter=lambda x: x.AbsoluteLocalPath() in files):
+    return results
+
+  # Generate a copy of the data header and compare it with the current file,
+  # to ensure that it is not hand-editied and stays in sync with the sources.
+  (tempfd, tempname) = input_api.tempfile.mkstemp()
+  os.close(tempfd)
+  generator = [input_api.python_executable,
+               CHARACTER_COMPOSER_DATA_GENERATOR,
+               '--output',
+               tempname,
+               '--guard',
+               CHARACTER_COMPOSER_DATA_HEADER] + CHARACTER_COMPOSER_DATA_SOURCES
+  print(generator)
+  generate = input_api.subprocess.Popen(generator,
+                                        cwd=whereami,
+                                        stdout=input_api.subprocess.PIPE)
+  errors = generate.communicate()[0].strip()
+  if errors:
+    results += [output_api.PresubmitPromptOrNotify(
+      'compose data generator failed.',
+      errors.splitlines())]
+  elif not filecmp.cmp(tempname, CHARACTER_COMPOSER_DATA_HEADER):
+    results += [output_api.PresubmitPromptOrNotify(
+      'Generated compose data does not match "' +
+      CHARACTER_COMPOSER_DATA_HEADER + '".')]
+    print(tempname)
+  else:
+    os.remove(tempname)
+  return results
+
+def CheckChangeOnCommit(input_api, output_api):
+  return CheckCharacterComposerData(input_api, output_api)
+
+def CheckChangeOnUpload(input_api, output_api):
+  return CheckCharacterComposerData(input_api, output_api)
--- a/ui/ozone/platform/wayland/gpu/wayland_canvas_surface.cc	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/ozone/platform/wayland/gpu/wayland_canvas_surface.cc	2019-05-17 18:57:26.184000000 +0300
@@ -0,0 +1,93 @@
+// Copyright 2019 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "ui/ozone/platform/wayland/gpu/wayland_canvas_surface.h"
+
+#include <utility>
+
+#include "base/files/scoped_file.h"
+#include "base/macros.h"
+#include "base/memory/shared_memory.h"
+#include "base/posix/eintr_wrapper.h"
+#include "ui/gfx/vsync_provider.h"
+#include "ui/ozone/platform/wayland/gpu/wayland_connection_proxy.h"
+
+namespace ui {
+
+namespace {
+
+void DeleteSharedMemory(void* pixels, void* context) {
+  delete static_cast<base::SharedMemory*>(context);
+}
+
+}  // namespace
+
+WaylandCanvasSurface::WaylandCanvasSurface(WaylandConnectionProxy* connection,
+                                           gfx::AcceleratedWidget widget)
+    : connection_(connection), widget_(widget) {}
+
+WaylandCanvasSurface::~WaylandCanvasSurface() {
+  if (sk_surface_)
+    connection_->DestroyShmBuffer(widget_);
+}
+
+sk_sp<SkSurface> WaylandCanvasSurface::GetSurface() {
+  if (sk_surface_)
+    return sk_surface_;
+  DCHECK(!size_.IsEmpty());
+
+  size_t length = size_.width() * size_.height() * 4;
+  auto shared_memory = std::make_unique<base::SharedMemory>();
+  if (!shared_memory->CreateAndMapAnonymous(length)) {
+    return nullptr;
+  }
+
+  base::ScopedFD fd(HANDLE_EINTR(dup(shared_memory->handle().GetHandle())));
+  if (!fd.is_valid()) {
+    PLOG(FATAL) << "dup";
+    return nullptr;
+  }
+
+  base::File file(fd.release());
+  connection_->CreateShmBufferForWidget(widget_, std::move(file), length,
+                                        size_);
+
+  sk_surface_ = SkSurface::MakeRasterDirectReleaseProc(
+      SkImageInfo::MakeN32Premul(size_.width(), size_.height()),
+      shared_memory->memory(), size_.width() * 4, &DeleteSharedMemory,
+      shared_memory.get(), nullptr);
+  if (!sk_surface_)
+    return nullptr;
+
+  ignore_result(shared_memory.release());
+  return sk_surface_;
+}
+
+void WaylandCanvasSurface::ResizeCanvas(const gfx::Size& viewport_size) {
+  if (size_ == viewport_size)
+    return;
+  // TODO(https://crbug.com/930667): We could implement more efficient resizes
+  // by allocating buffers rounded up to larger sizes, and then reusing them if
+  // the new size still fits (but still reallocate if the new size is much
+  // smaller than the old size).
+  if (sk_surface_) {
+    sk_surface_.reset();
+    connection_->DestroyShmBuffer(widget_);
+  }
+  size_ = viewport_size;
+}
+
+void WaylandCanvasSurface::PresentCanvas(const gfx::Rect& damage) {
+  connection_->PresentShmBufferForWidget(widget_, damage);
+}
+
+std::unique_ptr<gfx::VSyncProvider>
+WaylandCanvasSurface::CreateVSyncProvider() {
+  // TODO(https://crbug.com/930662): This can be implemented with information
+  // from frame callbacks, and possibly output refresh rate.
+  NOTIMPLEMENTED_LOG_ONCE();
+  return nullptr;
+}
+
+}  // namespace ui
--- a/ui/ozone/platform/wayland/gpu/wayland_canvas_surface.h	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/ozone/platform/wayland/gpu/wayland_canvas_surface.h	2019-05-17 18:57:26.184000000 +0300
@@ -0,0 +1,47 @@
+// Copyright 2019 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#ifndef UI_OZONE_PLATFORM_WAYLAND_GPU_WAYLAND_CANVAS_SURFACE_H_
+#define UI_OZONE_PLATFORM_WAYLAND_GPU_WAYLAND_CANVAS_SURFACE_H_
+
+#include <memory>
+
+#include "base/macros.h"
+#include "third_party/skia/include/core/SkRefCnt.h"
+#include "third_party/skia/include/core/SkSurface.h"
+#include "ui/gfx/geometry/size.h"
+#include "ui/gfx/native_widget_types.h"
+#include "ui/ozone/public/surface_ozone_canvas.h"
+
+namespace ui {
+
+class WaylandConnectionProxy;
+
+class WaylandCanvasSurface : public SurfaceOzoneCanvas {
+ public:
+  WaylandCanvasSurface(WaylandConnectionProxy* connection,
+                       gfx::AcceleratedWidget widget);
+  ~WaylandCanvasSurface() override;
+
+  // SurfaceOzoneCanvas
+  sk_sp<SkSurface> GetSurface() override;
+  void ResizeCanvas(const gfx::Size& viewport_size) override;
+  void PresentCanvas(const gfx::Rect& damage) override;
+  std::unique_ptr<gfx::VSyncProvider> CreateVSyncProvider() override;
+
+ private:
+  void OnGetSizeForWidget(const gfx::Size& widget_size) { size_ = widget_size; }
+
+  WaylandConnectionProxy* const connection_;
+  const gfx::AcceleratedWidget widget_;
+
+  gfx::Size size_;
+  sk_sp<SkSurface> sk_surface_;
+
+  DISALLOW_COPY_AND_ASSIGN(WaylandCanvasSurface);
+};
+
+}  // namespace ui
+
+#endif  // UI_OZONE_PLATFORM_WAYLAND_GPU_WAYLAND_CANVAS_SURFACE_H_
diff -BbuN a/ui/ozone/platform/wayland/test/mock_pointer.cc b/ui/ozone/platform/wayland/test/mock_pointer.cc
--- a/ui/ozone/platform/wayland/test/mock_pointer.cc	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/ozone/platform/wayland/test/mock_pointer.cc	2019-05-17 18:57:26.184000000 +0300
@@ -0,0 +1,32 @@
+// Copyright 2019 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "ui/ozone/platform/wayland/test/mock_pointer.h"
+
+namespace wl {
+
+namespace {
+
+void SetCursor(wl_client* client,
+               wl_resource* pointer_resource,
+               uint32_t serial,
+               wl_resource* surface_resource,
+               int32_t hotspot_x,
+               int32_t hotspot_y) {
+  GetUserDataAs<MockPointer>(pointer_resource)
+      ->SetCursor(surface_resource, hotspot_x, hotspot_y);
+}
+
+}  // namespace
+
+const struct wl_pointer_interface kMockPointerImpl = {
+    &SetCursor,        // set_cursor
+    &DestroyResource,  // release
+};
+
+MockPointer::MockPointer(wl_resource* resource) : ServerObject(resource) {}
+
+MockPointer::~MockPointer() = default;
+
+}  // namespace wl
diff -BbuN a/ui/ozone/platform/wayland/test/mock_pointer.h b/ui/ozone/platform/wayland/test/mock_pointer.h
--- a/ui/ozone/platform/wayland/test/mock_pointer.h	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/ozone/platform/wayland/test/mock_pointer.h	2019-05-17 18:57:26.184000000 +0300
@@ -0,0 +1,36 @@
+// Copyright 2019 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#ifndef UI_OZONE_PLATFORM_WAYLAND_TEST_MOCK_POINTER_H_
+#define UI_OZONE_PLATFORM_WAYLAND_TEST_MOCK_POINTER_H_
+
+#include <wayland-server-protocol.h>
+
+#include "base/macros.h"
+#include "testing/gmock/include/gmock/gmock.h"
+#include "ui/ozone/platform/wayland/test/server_object.h"
+
+struct wl_resource;
+
+namespace wl {
+
+extern const struct wl_pointer_interface kMockPointerImpl;
+
+class MockPointer : public ServerObject {
+ public:
+  explicit MockPointer(wl_resource* resource);
+  ~MockPointer() override;
+
+  MOCK_METHOD3(SetCursor,
+               void(wl_resource* surface_resource,
+                    int32_t hotspot_x,
+                    int32_t hotspot_y));
+
+ private:
+  DISALLOW_COPY_AND_ASSIGN(MockPointer);
+};
+
+}  // namespace wl
+
+#endif  // UI_OZONE_PLATFORM_WAYLAND_TEST_MOCK_POINTER_H_
--- a/ui/ozone/platform/wayland/wayland_buffer_fuzzer.cc	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_buffer_fuzzer.cc	2019-05-17 18:57:26.184000000 +0300
@@ -0,0 +1,141 @@
+// Copyright 2019 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+// This fuzzer tests browser-side implementation of
+// ozone::mojom::WaylandConnection.
+
+#include <drm_fourcc.h>
+#include <stddef.h>
+#include <stdint.h>
+
+#include <memory>
+#include <vector>
+
+#include "base/files/file_path.h"
+#include "base/files/file_util.h"
+#include "base/message_loop/message_loop.h"
+#include "base/test/fuzzed_data_provider.h"
+#include "testing/gmock/include/gmock/gmock.h"
+#include "ui/gfx/geometry/rect.h"
+#include "ui/ozone/platform/wayland/test/test_wayland_server_thread.h"
+#include "ui/ozone/platform/wayland/wayland_connection.h"
+#include "ui/ozone/platform/wayland/wayland_window.h"
+#include "ui/platform_window/platform_window_delegate.h"
+#include "ui/platform_window/platform_window_init_properties.h"
+
+using testing::_;
+
+namespace {
+
+// Off-class equivalent of WaylandTest::Sync.
+void Sync(wl::TestWaylandServerThread* server) {
+  DCHECK(server);
+
+  server->Resume();
+  base::RunLoop().RunUntilIdle();
+  server->Pause();
+}
+
+// Copied from ui/ozone/test/mock_platform_window_delegate.h to avoid
+// dependency from the whole library (it causes link problems).
+class MockPlatformWindowDelegate : public ui::PlatformWindowDelegate {
+ public:
+  MockPlatformWindowDelegate() = default;
+  ~MockPlatformWindowDelegate() = default;
+
+  MOCK_METHOD1(OnBoundsChanged, void(const gfx::Rect& new_bounds));
+  MOCK_METHOD1(OnDamageRect, void(const gfx::Rect& damaged_region));
+  MOCK_METHOD1(DispatchEvent, void(ui::Event* event));
+  MOCK_METHOD0(OnCloseRequest, void());
+  MOCK_METHOD0(OnClosed, void());
+  MOCK_METHOD1(OnWindowStateChanged, void(ui::PlatformWindowState new_state));
+  MOCK_METHOD0(OnLostCapture, void());
+  MOCK_METHOD1(OnAcceleratedWidgetAvailable,
+               void(gfx::AcceleratedWidget widget));
+  MOCK_METHOD0(OnAcceleratedWidgetDestroyed, void());
+  MOCK_METHOD1(OnActivationChanged, void(bool active));
+
+ private:
+  DISALLOW_COPY_AND_ASSIGN(MockPlatformWindowDelegate);
+};
+
+}  // namespace
+
+extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
+  base::FuzzedDataProvider data_provider(data, size);
+
+  std::vector<uint32_t> known_fourccs{
+      DRM_FORMAT_R8,          DRM_FORMAT_GR88,        DRM_FORMAT_ABGR8888,
+      DRM_FORMAT_XBGR8888,    DRM_FORMAT_ARGB8888,    DRM_FORMAT_XRGB8888,
+      DRM_FORMAT_XRGB2101010, DRM_FORMAT_XBGR2101010, DRM_FORMAT_RGB565,
+      DRM_FORMAT_UYVY,        DRM_FORMAT_NV12,        DRM_FORMAT_YVU420};
+
+  base::MessageLoopForUI message_loop;
+
+  MockPlatformWindowDelegate delegate;
+  std::unique_ptr<ui::WaylandConnection> connection =
+      std::make_unique<ui::WaylandConnection>();
+  std::unique_ptr<ui::WaylandWindow> window =
+      std::make_unique<ui::WaylandWindow>(&delegate, connection.get());
+  gfx::AcceleratedWidget widget = gfx::kNullAcceleratedWidget;
+
+  wl::TestWaylandServerThread server;
+  CHECK(server.Start(6));
+  CHECK(connection->Initialize());
+
+  EXPECT_CALL(delegate, OnAcceleratedWidgetAvailable(_))
+      .WillOnce(testing::SaveArg<0>(&widget));
+  ui::PlatformWindowInitProperties properties;
+  properties.bounds = gfx::Rect(0, 0, 800, 600);
+  properties.type = ui::PlatformWindowType::kWindow;
+  CHECK(window->Initialize(std::move(properties)));
+  CHECK_NE(widget, gfx::kNullAcceleratedWidget);
+
+  base::RunLoop().RunUntilIdle();
+  server.Pause();
+
+  base::FilePath temp_path;
+  EXPECT_TRUE(base::CreateTemporaryFile(&temp_path));
+  base::File temp(temp_path,
+                  base::File::FLAG_WRITE | base::File::FLAG_CREATE_ALWAYS);
+
+  // 10K screens are reality these days.
+  const uint32_t kWidth = data_provider.ConsumeIntegralInRange(1U, 20000U);
+  const uint32_t kHeight = data_provider.ConsumeIntegralInRange(1U, 20000U);
+  // The buffer manager opens a file descriptor for each plane so |plane_count|
+  // cannot be really large.  Technically, the maximum is |ulimit| minus number
+  // of file descriptors opened by this process already (which is 17 at the time
+  // of writing) but there is little sense in having more than a few planes in a
+  // real system so here is a hard limit of 500.
+  const uint32_t kPlaneCount = data_provider.ConsumeIntegralInRange(1U, 500U);
+  const uint32_t kFormat = known_fourccs[data_provider.ConsumeIntegralInRange(
+      0UL, known_fourccs.size() - 1)];
+
+  std::vector<uint32_t> strides(kPlaneCount);
+  std::vector<uint32_t> offsets(kPlaneCount);
+  std::vector<uint64_t> modifiers(kPlaneCount);
+  for (uint32_t i = 0; i < kPlaneCount; ++i) {
+    strides[i] = data_provider.ConsumeIntegralInRange(1U, UINT_MAX);
+    offsets[i] = data_provider.ConsumeIntegralInRange(0U, UINT_MAX);
+    modifiers[i] =
+        data_provider.ConsumeIntegralInRange(uint64_t(0), UINT64_MAX);
+  }
+
+  const uint32_t kBufferId = 1;
+
+  EXPECT_CALL(*server.zwp_linux_dmabuf_v1(), CreateParams(_, _, _));
+
+  connection->CreateZwpLinuxDmabuf(std::move(temp), kWidth, kHeight, strides,
+                                   offsets, kFormat, modifiers, kPlaneCount,
+                                   kBufferId);
+
+  Sync(&server);
+  Sync(&server);
+
+  connection->DestroyZwpLinuxDmabuf(kBufferId);
+
+  Sync(&server);
+
+  return 0;
+}
--- a/ui/ozone/platform/wayland/wayland_cursor_position.cc	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_cursor_position.cc	2019-05-17 18:57:26.184000000 +0300
@@ -0,0 +1,24 @@
+// Copyright 2019 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "ui/ozone/platform/wayland/wayland_cursor_position.h"
+
+#include "ui/ozone/platform/wayland/wayland_connection.h"
+
+namespace ui {
+
+WaylandCursorPosition::WaylandCursorPosition() = default;
+
+WaylandCursorPosition::~WaylandCursorPosition() = default;
+
+void WaylandCursorPosition::OnCursorPositionChanged(
+    const gfx::Point& cursor_position) {
+  cursor_surface_point_ = cursor_position;
+}
+
+gfx::Point WaylandCursorPosition::GetCursorSurfacePoint() const {
+  return cursor_surface_point_;
+}
+
+}  // namespace ui
--- a/ui/ozone/platform/wayland/wayland_cursor_position.h	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_cursor_position.h	2019-05-17 18:57:26.184000000 +0300
@@ -0,0 +1,34 @@
+// Copyright 2019 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#ifndef UI_OZONE_PLATFORM_WAYLAND_WAYLAND_CURSOR_POSITION_H_
+#define UI_OZONE_PLATFORM_WAYLAND_WAYLAND_CURSOR_POSITION_H_
+
+#include "base/macros.h"
+#include "ui/gfx/geometry/point.h"
+
+namespace ui {
+
+// Stores last known cursor pointer position in regards to top-level windows'
+// coordinates and returns it on request.
+class WaylandCursorPosition {
+ public:
+  WaylandCursorPosition();
+  ~WaylandCursorPosition();
+
+  void OnCursorPositionChanged(const gfx::Point& cursor_position);
+
+  // Returns last known cursor position in regards to top-level surface local
+  // coordinates. It is unknown what surface receives that cursor position.
+  gfx::Point GetCursorSurfacePoint() const;
+
+ private:
+  gfx::Point cursor_surface_point_;
+
+  DISALLOW_COPY_AND_ASSIGN(WaylandCursorPosition);
+};
+
+}  // namespace ui
+
+#endif  // UI_OZONE_PLATFORM_WAYLAND_WAYLAND_CURSOR_POSITION_H_
--- a/ui/ozone/platform/wayland/wayland_shared_memory_buffer_manager.cc	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_shared_memory_buffer_manager.cc	2019-05-17 18:57:26.188000000 +0300
@@ -0,0 +1,96 @@
+// Copyright 2019 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "ui/ozone/platform/wayland/wayland_shared_memory_buffer_manager.h"
+
+#include <utility>
+
+#include "base/trace_event/trace_event.h"
+#include "ui/ozone/platform/wayland/wayland_connection.h"
+#include "ui/ozone/platform/wayland/wayland_window.h"
+
+namespace ui {
+
+WaylandShmBufferManager::ShmBuffer::ShmBuffer() = default;
+
+WaylandShmBufferManager::ShmBuffer::ShmBuffer(
+    wl::Object<struct wl_buffer> buffer,
+    wl::Object<struct wl_shm_pool> pool)
+    : shm_buffer(std::move(buffer)), shm_pool(std::move(pool)) {}
+
+WaylandShmBufferManager::ShmBuffer::~ShmBuffer() = default;
+
+WaylandShmBufferManager::WaylandShmBufferManager(WaylandConnection* connection)
+    : connection_(connection) {}
+
+WaylandShmBufferManager::~WaylandShmBufferManager() {
+  DCHECK(shm_buffers_.empty());
+}
+
+bool WaylandShmBufferManager::CreateBufferForWidget(
+    gfx::AcceleratedWidget widget,
+    base::File file,
+    size_t length,
+    const gfx::Size& size) {
+  base::ScopedFD fd(file.TakePlatformFile());
+  if (!fd.is_valid() || length == 0 || size.IsEmpty() ||
+      widget == gfx::kNullAcceleratedWidget) {
+    return false;
+  }
+
+  auto it = shm_buffers_.find(widget);
+  if (it != shm_buffers_.end())
+    return false;
+
+  wl::Object<wl_shm_pool> pool(
+      wl_shm_create_pool(connection_->shm(), fd.get(), length));
+  if (!pool)
+    return false;
+
+  wl::Object<wl_buffer> shm_buffer(
+      wl_shm_pool_create_buffer(pool.get(), 0, size.width(), size.height(),
+                                size.width() * 4, WL_SHM_FORMAT_ARGB8888));
+  if (!shm_buffer)
+    return false;
+
+  shm_buffers_.insert(std::make_pair(
+      widget,
+      std::make_unique<ShmBuffer>(std::move(shm_buffer), std::move(pool))));
+
+  connection_->ScheduleFlush();
+  return true;
+}
+
+bool WaylandShmBufferManager::PresentBufferForWidget(
+    gfx::AcceleratedWidget widget,
+    const gfx::Rect& damage) {
+  auto it = shm_buffers_.find(widget);
+  if (it == shm_buffers_.end())
+    return false;
+
+  // TODO(https://crbug.com/930662): This is just a naive implementation that
+  // allows chromium to draw to the buffer at any time, even if it is being used
+  // by the Wayland compositor. Instead, we should track buffer releases and
+  // frame callbacks from Wayland to ensure perfect frames (while minimizing
+  // copies).
+  wl_surface* surface = connection_->GetWindow(widget)->surface();
+  wl_surface_damage(surface, damage.x(), damage.y(), damage.width(),
+                    damage.height());
+  wl_surface_attach(surface, it->second->shm_buffer.get(), 0, 0);
+  wl_surface_commit(surface);
+  connection_->ScheduleFlush();
+  return true;
+}
+
+bool WaylandShmBufferManager::DestroyBuffer(gfx::AcceleratedWidget widget) {
+  auto it = shm_buffers_.find(widget);
+  if (it == shm_buffers_.end())
+    return false;
+
+  shm_buffers_.erase(it);
+  connection_->ScheduleFlush();
+  return true;
+}
+
+}  // namespace ui
--- a/ui/ozone/platform/wayland/wayland_shared_memory_buffer_manager.h	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/ozone/platform/wayland/wayland_shared_memory_buffer_manager.h	2019-05-17 18:57:26.188000000 +0300
@@ -0,0 +1,76 @@
+// Copyright 2019 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#ifndef UI_OZONE_PLATFORM_WAYLAND_WAYLAND_SHARED_MEMORY_BUFFER_MANAGER_H_
+#define UI_OZONE_PLATFORM_WAYLAND_WAYLAND_SHARED_MEMORY_BUFFER_MANAGER_H_
+
+#include <map>
+#include <memory>
+#include <vector>
+
+#include "base/containers/flat_map.h"
+#include "base/files/file.h"
+#include "base/macros.h"
+#include "ui/gfx/geometry/rect.h"
+#include "ui/gfx/native_widget_types.h"
+#include "ui/ozone/platform/wayland/wayland_object.h"
+#include "ui/ozone/platform/wayland/wayland_util.h"
+
+namespace ui {
+
+class WaylandConnection;
+
+// Manages shared memory buffers, which are created by the GPU on the GPU
+// process/thread side, when software rendering is used.
+class WaylandShmBufferManager {
+ public:
+  explicit WaylandShmBufferManager(WaylandConnection* connection);
+  ~WaylandShmBufferManager();
+
+  // Creates a wl_buffer based on shared memory handle for the specified
+  // |widget|.
+  bool CreateBufferForWidget(gfx::AcceleratedWidget widget,
+                             base::File file,
+                             size_t length,
+                             const gfx::Size& size);
+
+  // Attaches and commits a |wl_buffer| created for the |widget| in the Create
+  // method.
+  bool PresentBufferForWidget(gfx::AcceleratedWidget widget,
+                              const gfx::Rect& damage);
+
+  // Destroyes a |wl_buffer|, which was created for the |widget| in the Create
+  // method.
+  bool DestroyBuffer(gfx::AcceleratedWidget widget);
+
+ private:
+  // Internal representation of a shared memory buffer.
+  struct ShmBuffer {
+    ShmBuffer();
+    ShmBuffer(wl::Object<struct wl_buffer> buffer,
+              wl::Object<struct wl_shm_pool> pool);
+    ~ShmBuffer();
+
+    // A wl_buffer backed by a shared memory handle passed from the gpu process.
+    wl::Object<struct wl_buffer> shm_buffer;
+
+    // Is used to create shared memory based buffer objects.
+    wl::Object<struct wl_shm_pool> shm_pool;
+
+    DISALLOW_COPY_AND_ASSIGN(ShmBuffer);
+  };
+
+  // A container of created buffers.
+  base::flat_map<gfx::AcceleratedWidget, std::unique_ptr<ShmBuffer>>
+      shm_buffers_;
+
+  // Non-owned pointer to the main connection.
+  WaylandConnection* connection_ = nullptr;
+
+  DISALLOW_COPY_AND_ASSIGN(WaylandShmBufferManager);
+};
+
+}  // namespace ui
+
+#endif  // UI_OZONE_PLATFORM_WAYLAND_WAYLAND_SHARED_MEMORY_BUFFER_MANAGER_H_
--- a/ui/platform_window/platform_window_handler/wm_drop_handler.cc	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/platform_window/platform_window_handler/wm_drop_handler.cc	2019-05-17 18:57:26.204000000 +0300
@@ -0,0 +1,25 @@
+// Copyright 2019 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "ui/platform_window/platform_window_handler/wm_drop_handler.h"
+
+#include "ui/base/class_property.h"
+#include "ui/platform_window/platform_window.h"
+
+DEFINE_UI_CLASS_PROPERTY_TYPE(ui::WmDropHandler*)
+
+namespace ui {
+
+DEFINE_UI_CLASS_PROPERTY_KEY(WmDropHandler*, kWmDropHandlerKey, nullptr);
+
+void SetWmDropHandler(PlatformWindow* platform_window,
+                      WmDropHandler* drop_handler) {
+  platform_window->SetProperty(kWmDropHandlerKey, drop_handler);
+}
+
+WmDropHandler* GetWmDropHandler(const PlatformWindow& platform_window) {
+  return platform_window.GetProperty(kWmDropHandlerKey);
+}
+
+}  // namespace ui
--- a/ui/platform_window/platform_window_handler/wm_drop_handler.h	1970-01-01 03:00:00.000000000 +0300
+++ b/ui/platform_window/platform_window_handler/wm_drop_handler.h	2019-05-17 18:57:26.204000000 +0300
@@ -0,0 +1,55 @@
+// Copyright 2019 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#ifndef UI_PLATFORM_WINDOW_PLATFORM_WINDOW_HANDLER_WM_DROP_HANDLER_H_
+#define UI_PLATFORM_WINDOW_PLATFORM_WINDOW_HANDLER_WM_DROP_HANDLER_H_
+
+#include <memory>
+
+#include "ui/gfx/native_widget_types.h"
+#include "ui/platform_window/platform_window_handler/wm_platform_export.h"
+
+namespace gfx {
+class PointF;
+}
+
+namespace ui {
+class OSExchangeData;
+class PlatformWindow;
+
+class WM_PLATFORM_EXPORT WmDropHandler {
+ public:
+  // Notifies that dragging is entered to the window. |point| is in the
+  // coordinate space of the PlatformWindow.
+  virtual void OnDragEnter(const gfx::PointF& point,
+                           std::unique_ptr<OSExchangeData> data,
+                           int operation) = 0;
+
+  // Notifies that dragging is moved. |widget_out| will be set with the
+  // widget located at |point|. |point| is in the coordinate space of the
+  // PlatformWindow. It returns the operation selected by client and the
+  // returned value should be from ui::DragDropTypes.
+  virtual int OnDragMotion(const gfx::PointF& point, int operation) = 0;
+
+  // Notifies that dragged data is dropped. When it doesn't deliver
+  // the dragged data on OnDragEnter, it should put it to |data|. The location
+  // of the drop is the location of the latest DragEnter/DragMotion. If
+  // OSExchangeData is provided on OnDragEnter, the |data| should be same as it.
+  virtual void OnDragDrop(std::unique_ptr<ui::OSExchangeData> data) = 0;
+
+  // Notifies that dragging is left.
+  virtual void OnDragLeave() = 0;
+
+ protected:
+  virtual ~WmDropHandler() {}
+};
+
+WM_PLATFORM_EXPORT void SetWmDropHandler(PlatformWindow* platform_window,
+                                         WmDropHandler* drop_handler);
+WM_PLATFORM_EXPORT WmDropHandler* GetWmDropHandler(
+    const PlatformWindow& platform_window);
+
+}  // namespace ui
+
+#endif  // UI_PLATFORM_WINDOW_PLATFORM_WINDOW_HANDLER_WM_DROP_HANDLER_H_
