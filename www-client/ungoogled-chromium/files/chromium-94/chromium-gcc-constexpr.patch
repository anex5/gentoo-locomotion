--- chromium-70.0.3534.4/third_party/blink/renderer/core/animation/animation_time_delta.h.gcc8	2018-08-28 06:11:07.000000000 +0200
+++ chromium-70.0.3534.4/third_party/blink/renderer/core/animation/animation_time_delta.h	2018-09-03 01:38:14.169583523 +0200
@@ -53,7 +53,7 @@
     return AnimationTimeDelta(std::numeric_limits<double>::infinity());
   }
 
-  double InSecondsF() const { return delta_; }
+  constexpr double InSecondsF() const { return delta_; }
   double InMillisecondsF() const { return delta_ * 1000; }
 
   bool is_max() const {
--- chromium-84.0.4147.89/third_party/blink/renderer/core/geometry/dom_rect_read_only.h.gcc10	2020-07-13 20:40:42.000000000 +0200
+++ chromium-84.0.4147.89/third_party/blink/renderer/core/geometry/dom_rect_read_only.h	2020-07-21 11:31:14.373939459 +0200
@@ -31,10 +31,10 @@ class CORE_EXPORT DOMRectReadOnly : publ
 
   DOMRectReadOnly(double x, double y, double width, double height);
 
-  double x() const { return x_; }
-  double y() const { return y_; }
-  double width() const { return width_; }
-  double height() const { return height_; }
+  constexpr double x() const { return x_; }
+  constexpr double y() const { return y_; }
+  constexpr double width() const { return width_; }
+  constexpr double height() const { return height_; }
 
   double top() const { return geometry_util::NanSafeMin(y_, y_ + height_); }
   double right() const { return geometry_util::NanSafeMax(x_, x_ + width_); }
--- chromium-89.0.4389.58/content/browser/web_package/signed_exchange_prologue.cc.gcc10	2021-02-17 21:33:23.000000000 +0100
+++ chromium-89.0.4389.58/content/browser/web_package/signed_exchange_prologue.cc	2021-02-20 13:20:49.623538084 +0100
@@ -30,7 +30,7 @@ constexpr size_t kMaximumCBORHeaderLengt
 
 namespace signed_exchange_prologue {
 
-constexpr size_t BeforeFallbackUrl::kEncodedSizeInBytes =
+const size_t BeforeFallbackUrl::kEncodedSizeInBytes =
     sizeof(kSignedExchangeMagic) + kFallbackUrlLengthFieldSizeInBytes;
 
 size_t Parse2BytesEncodedLength(base::span<const uint8_t> input) {
--- chromium-89.0.4389.58/device/bluetooth/bluetooth_adapter.cc.gcc10	2021-02-17 21:33:24.000000000 +0100
+++ chromium-89.0.4389.58/device/bluetooth/bluetooth_adapter.cc	2021-02-20 17:11:45.870078577 +0100
@@ -641,7 +641,7 @@ void BluetoothAdapter::RemoveTimedOutDev
 }
 
 // static
-constexpr base::TimeDelta BluetoothAdapter::timeoutSec =
+const base::TimeDelta BluetoothAdapter::timeoutSec =
     base::TimeDelta::FromSeconds(180);
 
 }  // namespace device
