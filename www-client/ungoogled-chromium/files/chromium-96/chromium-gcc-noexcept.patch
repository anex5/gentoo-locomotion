--- chromium-73.0.3683.75/media/learning/common/labelled_example.cc.gcc8	2019-03-11 23:00:59.000000000 +0100
+++ chromium-73.0.3683.75/media/learning/common/labelled_example.cc	2019-03-16 22:24:12.068011327 +0100
@@ -17,7 +17,7 @@ LabelledExample::LabelledExample(std::in
 
 LabelledExample::LabelledExample(const LabelledExample& rhs) = default;
 
-LabelledExample::LabelledExample(LabelledExample&& rhs) noexcept = default;
+LabelledExample::LabelledExample(LabelledExample&& rhs) = default;
 
 LabelledExample::~LabelledExample() = default;
 
--- chromium-76.0.3809.46/cc/trees/layer_tree_host_impl.cc.gcc8	2019-07-02 03:01:14.954915412 +0200
+++ chromium-76.0.3809.46/cc/trees/layer_tree_host_impl.cc	2019-07-02 03:01:27.344698437 +0200
@@ -290,7 +290,7 @@ LayerTreeHostImpl::FrameData::FrameData(
 LayerTreeHostImpl::FrameData::~FrameData() = default;
 LayerTreeHostImpl::UIResourceData::UIResourceData() = default;
 LayerTreeHostImpl::UIResourceData::~UIResourceData() = default;
-LayerTreeHostImpl::UIResourceData::UIResourceData(UIResourceData&&) noexcept =
+LayerTreeHostImpl::UIResourceData::UIResourceData(UIResourceData&&) =
     default;
 LayerTreeHostImpl::UIResourceData& LayerTreeHostImpl::UIResourceData::operator=(
     UIResourceData&&) = default;
--- chromium-76.0.3809.46/components/signin/public/identity_manager/account_info.cc.gcc8	2019-06-27 23:59:19.000000000 +0200
+++ chromium-76.0.3809.46/components/signin/public/identity_manager/account_info.cc	2019-07-02 08:38:27.491124480 +0200
@@ -47,12 +47,12 @@ CoreAccountInfo::~CoreAccountInfo() = de
 
 CoreAccountInfo::CoreAccountInfo(const CoreAccountInfo& other) = default;
 
-CoreAccountInfo::CoreAccountInfo(CoreAccountInfo&& other) noexcept = default;
+CoreAccountInfo::CoreAccountInfo(CoreAccountInfo&& other) = default;
 
 CoreAccountInfo& CoreAccountInfo::operator=(const CoreAccountInfo& other) =
     default;
 
-CoreAccountInfo& CoreAccountInfo::operator=(CoreAccountInfo&& other) noexcept =
+CoreAccountInfo& CoreAccountInfo::operator=(CoreAccountInfo&& other) =
     default;
 
 bool CoreAccountInfo::IsEmpty() const {
@@ -69,7 +69,7 @@ AccountInfo::AccountInfo(AccountInfo&& o
 
 AccountInfo& AccountInfo::operator=(const AccountInfo& other) = default;
 
-AccountInfo& AccountInfo::operator=(AccountInfo&& other) noexcept = default;
+AccountInfo& AccountInfo::operator=(AccountInfo&& other) = default;
 
 bool AccountInfo::IsEmpty() const {
   return CoreAccountInfo::IsEmpty() && hosted_domain.empty() &&
--- chromium-76.0.3809.46/components/history/core/browser/history_types.cc.gcc8	2019-06-27 23:59:17.000000000 +0200
+++ chromium-76.0.3809.46/components/history/core/browser/history_types.cc	2019-07-02 08:51:00.016826460 +0200
@@ -186,7 +186,7 @@ QueryURLResult::QueryURLResult(QueryURLR
 
 QueryURLResult& QueryURLResult::operator=(const QueryURLResult&) = default;
 
-QueryURLResult& QueryURLResult::operator=(QueryURLResult&&) noexcept = default;
+QueryURLResult& QueryURLResult::operator=(QueryURLResult&&) = default;
 
 // MostVisitedURL --------------------------------------------------------------
 
--- chromium-76.0.3809.46/components/services/storage/indexed_db/scopes/disjoint_range_lock_manager.cc.gcc8	2019-07-06 18:14:35.649597261 +0200
+++ chromium-76.0.3809.46/components/services/storage/indexed_db/scopes/disjoint_range_lock_manager.cc	2019-07-06 18:14:48.023380822 +0200
@@ -19,7 +19,7 @@ DisjointRangeLockManager::LockRequest::L
     : requested_type(type),
       locks_holder(std::move(locks_holder)),
       acquired_callback(std::move(acquired_callback)) {}
-DisjointRangeLockManager::LockRequest::LockRequest(LockRequest&&) noexcept =
+DisjointRangeLockManager::LockRequest::LockRequest(LockRequest&&) =
     default;
 DisjointRangeLockManager::LockRequest::~LockRequest() = default;
 DisjointRangeLockManager::Lock::Lock() = default;
--- chromium-83.0.4103.7/ui/color/color_set.cc.gcc9	2020-04-09 00:28:21.000000000 +0200
+++ chromium-83.0.4103.7/ui/color/color_set.cc	2020-04-18 16:25:40.479974664 +0200
@@ -11,7 +11,7 @@ ColorSet::ColorSet(ColorSetId id, ColorM
 
 ColorSet::ColorSet(ColorSet&&) noexcept = default;
 
-ColorSet& ColorSet::operator=(ColorSet&&) noexcept = default;
+ColorSet& ColorSet::operator=(ColorSet&&) = default;
 
 ColorSet::~ColorSet() = default;
 
--- chromium-94.0.4606.71/ui/color/color_set.h.noexcept	2021-10-01 03:37:23.000000000 +0200
+++ chromium-94.0.4606.71/ui/color/color_set.h	2021-10-05 09:52:39.382700418 +0200
@@ -29,7 +29,7 @@ struct COMPONENT_EXPORT(COLOR) ColorSet
 
   ColorSet(ColorSetId id, ColorMap&& colors);
   ColorSet(ColorSet&&) noexcept;
-  ColorSet& operator=(ColorSet&&) noexcept;
+  ColorSet& operator=(ColorSet&&);
   ~ColorSet();
 
   ColorSetId id;
--- chromium-83.0.4103.14/third_party/blink/public/platform/cross_variant_mojo_util.h.gcc9	2020-04-14 23:55:33.000000000 +0200
+++ chromium-83.0.4103.14/third_party/blink/public/platform/cross_variant_mojo_util.h	2020-04-19 19:01:19.508892556 +0200
@@ -63,8 +63,8 @@ class CrossVariantMojoReceiver {
   CrossVariantMojoReceiver() = default;
   ~CrossVariantMojoReceiver() = default;
 
-  CrossVariantMojoReceiver(CrossVariantMojoReceiver&&) noexcept = default;
-  CrossVariantMojoReceiver& operator=(CrossVariantMojoReceiver&&) noexcept =
+  CrossVariantMojoReceiver(CrossVariantMojoReceiver&&) = default;
+  CrossVariantMojoReceiver& operator=(CrossVariantMojoReceiver&&) =
       default;
 
   CrossVariantMojoReceiver(const CrossVariantMojoReceiver&) = delete;
@@ -94,8 +94,8 @@ class CrossVariantMojoRemote {
   CrossVariantMojoRemote() = default;
   ~CrossVariantMojoRemote() = default;
 
-  CrossVariantMojoRemote(CrossVariantMojoRemote&&) noexcept = default;
-  CrossVariantMojoRemote& operator=(CrossVariantMojoRemote&&) noexcept =
+  CrossVariantMojoRemote(CrossVariantMojoRemote&&) = default;
+  CrossVariantMojoRemote& operator=(CrossVariantMojoRemote&&) =
       default;
 
   CrossVariantMojoRemote(const CrossVariantMojoRemote&) = delete;
