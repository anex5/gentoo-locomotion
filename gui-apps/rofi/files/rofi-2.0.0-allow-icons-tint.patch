From 3fa53908b39205b903732d8ab69679d41a94b7b5 Mon Sep 17 00:00:00 2001
From: Dave Davenport <DaveDavenport@users.noreply.github.com>
Date: Thu, 18 Sep 2025 09:15:55 +0200
Subject: [PATCH] [icon] Allow icons to be greyscaled and tinted with color
 (#2193)

* [icon] Allow icons to be greyscaled and tinted with color

Issue: #2175

* only create pattern when needed, and cleanup after use
---
 doc/rofi-theme.5.markdown | 3 +++
 include/theme.h           | 4 +++-
 source/theme.c            | 5 +++--
 source/widgets/icon.c     | 9 +++++++++
 4 files changed, 18 insertions(+), 3 deletions(-)

diff --git a/doc/rofi-theme.5.markdown b/doc/rofi-theme.5.markdown
index 10d6c5760..6309b3102 100644
--- a/doc/rofi-theme.5.markdown
+++ b/doc/rofi-theme.5.markdown
@@ -1307,6 +1307,9 @@ a list).
 If the `squared` property is set to **false** the widget height and width are
 not forced to be equal.
 
+If the `tint`  property is set with a white, the icons is greyscale. If
+another color is set, the icon is tinted to that color.
+
 Example:
 
 ```css
diff --git a/include/theme.h b/include/theme.h
index cc04904e7..f03a12400 100644
--- a/include/theme.h
+++ b/include/theme.h
@@ -250,12 +250,14 @@ gboolean rofi_theme_get_image(const widget *widget, const char *property,
 
 /**
  * @param widget   The widget to query
+ * @param type  The type to check
  * @param property The property to query.
  *
  * Check if a rofi theme has a property set.
  *
  */
-gboolean rofi_theme_has_property(const widget *widget, const char *property);
+gboolean rofi_theme_has_property(const widget *widget, const PropertyType type,
+                                 const char *property);
 
 /**
  * @param widget   The widget to query
diff --git a/source/theme.c b/source/theme.c
index 2b3d68b52..e3b87976f 100644
--- a/source/theme.c
+++ b/source/theme.c
@@ -1652,9 +1652,10 @@ static gboolean rofi_theme_has_property_inside(Property *p,
   }
   return FALSE;
 }
-gboolean rofi_theme_has_property(const widget *wid_in, const char *property) {
+gboolean rofi_theme_has_property(const widget *wid_in, const PropertyType type,
+                                 const char *property) {
   ThemeWidget *wid = rofi_theme_find_widget(wid_in->name, wid_in->state, FALSE);
-  Property *p = rofi_theme_find_property(wid, P_STRING, property, FALSE);
+  Property *p = rofi_theme_find_property(wid, type, property, FALSE);
   return rofi_theme_has_property_inside(p, wid_in, property);
 }
 
diff --git a/source/widgets/icon.c b/source/widgets/icon.c
index f98fa2e72..ca292819f 100644
--- a/source/widgets/icon.c
+++ b/source/widgets/icon.c
@@ -26,6 +26,7 @@
  */
 
 /** The log domain of this widget. */
+#include "cairo.h"
 #define G_LOG_DOMAIN "Widgets.Icon"
 #include "config.h"
 
@@ -112,6 +113,14 @@ static void icon_draw(widget *wid, cairo_t *draw) {
       draw, lpad + (b->widget.w - iconw * scale - lpad - rpad) * b->xalign,
       tpad + (b->widget.h - iconh * scale - tpad - bpad) * b->yalign);
   cairo_scale(draw, scale, scale);
+  if (rofi_theme_has_property(WIDGET(wid), P_COLOR, "tint")) {
+    cairo_pattern_t *pat = cairo_pattern_create_for_surface(b->icon);
+    cairo_set_source_rgb(draw, 0, 0, 0);
+    rofi_theme_get_color(WIDGET(wid), "tint", draw);
+    cairo_mask(draw, pat);
+    cairo_set_operator(draw, CAIRO_OPERATOR_HSL_LUMINOSITY);
+    cairo_pattern_destroy(pat);
+  }
   cairo_set_source_surface(draw, b->icon, 0, 0);
   cairo_paint(draw);
   cairo_restore(draw);
