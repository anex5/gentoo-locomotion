From 493e886d6dae2ed7bdc12ed03f717ee0e98dfe09 Mon Sep 17 00:00:00 2001
From: Naveen Saini <naveen.kumar.saini@intel.com>
Date: Thu, 24 Feb 2022 20:01:11 +0530
Subject: [PATCH] cmake: don't build for 32-bit targets

Error log:
| tmp/work/corei7-64-poky-linux/ispc/1.16.0-r0/recipe-sysroot/usr/include/bits/long-double.h:23:10: fatal error: 'bits/long-double-32.h' file not found
| #include <bits/long-double-32.h>
|          ^~~~~~~~~~~~~~~~~~~~~~~
| 1 error generated.

Remove SYSTEM include search path and set -isysroot dir path
for root dir for cross compilation.

Upstream-Status: Inappropriate

Signed-off-by: Naveen Saini <naveen.kumar.saini@intel.com>
---
 cmake/GenerateBuiltins.cmake | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/cmake/GenerateBuiltins.cmake b/cmake/GenerateBuiltins.cmake
index fa228247..7adc7e52 100644
--- a/cmake/GenerateBuiltins.cmake
+++ b/cmake/GenerateBuiltins.cmake
@@ -272,7 +272,7 @@ function(builtin_to_cpp bit os_name arch supported_archs supported_oses resultFi
             #   In this case headers will be installed in /usr/arm-linux-gnueabihf/include and will not be picked up
             #   by clang by default. So the following line adds such path explicitly. If this path doesn't exist and
             #   the headers can be found in other locations, this should not be a problem.
-            set(includePath -isystem/usr/${debian_triple}/include)
+            set(includePath -isystem/usr/include)
         endif()
     endif()
 
@@ -354,7 +354,7 @@ function (generate_target_builtins resultList)
     set(regular_targets ${ARGN})
     list(FILTER regular_targets EXCLUDE REGEX wasm)
     foreach (ispc_target ${regular_targets})
-        foreach (bit 32 64)
+        foreach (bit 64)
             foreach (os_name ${TARGET_OS_LIST_FOR_LL})
                 target_ll_to_cpp(target-${ispc_target} ${bit} ${os_name} output${os_name}${bit})
                 list(APPEND tmpList ${output${os_name}${bit}})
@@ -415,7 +415,7 @@ function (generate_common_builtins resultList)
     endif()
 
     message (STATUS "ISPC will be built with support of ${supported_oses} for ${supported_archs}")
-    foreach (bit 32 64)
+    foreach (bit 64)
         foreach (os_name "windows" "linux" "freebsd" "macos" "android" "ios" "ps4" "web")
             foreach (arch "x86" "arm" "wasm32")
                 builtin_to_cpp(${bit} ${os_name} ${arch} "${supported_archs}" "${supported_oses}" res${bit}${os_name}${arch})
-- 
2.17.1

